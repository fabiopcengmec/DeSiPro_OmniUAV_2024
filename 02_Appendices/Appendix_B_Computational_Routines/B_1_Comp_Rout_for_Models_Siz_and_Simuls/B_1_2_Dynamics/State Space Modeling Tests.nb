(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   2723080,      54966]
NotebookOptionsPosition[   2637346,      53569]
NotebookOutlinePosition[   2638783,      53610]
CellTagsIndexPosition[   2638655,      53604]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"concatena2matrizes", "[", "matrizes_", "]"}], ":=", 
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"matrizes", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"0", " ", 
         RowBox[{"matrizes", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0", " ", 
         RowBox[{"matrizes", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ",", 
        RowBox[{"matrizes", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "4"}], "}"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"concatena3matrizes", "[", "matrizes_", "]"}], ":=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"matrizes", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"0", " ", 
          RowBox[{"matrizes", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{"0", " ", 
          RowBox[{"matrizes", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"0", " ", 
          RowBox[{"matrizes", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{"matrizes", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", 
         RowBox[{"0", " ", 
          RowBox[{"matrizes", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"0", " ", 
          RowBox[{"matrizes", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{"0", " ", 
          RowBox[{"matrizes", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{"matrizes", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "4"}], "}"}]}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"concatena2matrizes", "[", 
     RowBox[{"{", 
      RowBox[{"u", ",", "v"}], "}"}], "]"}], "//", "MatrixForm"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"concatena3matrizes", "[", 
     RowBox[{"{", 
      RowBox[{"u", ",", "v", ",", "w"}], "}"}], "]"}], "//", "MatrixForm"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"criavetordevetores", "[", "vetores_", "]"}], ":=", 
  RowBox[{"Flatten", "[", 
   RowBox[{"{", "vetores", "}"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"til", "[", "vector_", "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"-", 
       RowBox[{"vector", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], ",", 
      RowBox[{"vector", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"vector", "[", 
       RowBox[{"[", "3", "]"}], "]"}], ",", "0", ",", 
      RowBox[{"-", 
       RowBox[{"vector", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"vector", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ",", 
      RowBox[{"vector", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", "0"}], "}"}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vector", "[", "til_", "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"til", "[", 
     RowBox[{"[", 
      RowBox[{"3", ",", "2"}], "]"}], "]"}], ",", 
    RowBox[{"til", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "3"}], "]"}], "]"}], ",", 
    RowBox[{"til", "[", 
     RowBox[{"[", 
      RowBox[{"2", ",", "1"}], "]"}], "]"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   UnderscriptBox["a", "_"], "[", "sr_", "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    SubscriptBox["a", 
     SubscriptBox["x", "sr"]], ",", 
    SubscriptBox["a", 
     SubscriptBox["y", "sr"]], ",", 
    SubscriptBox["a", 
     SubscriptBox["z", "sr"]]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   UnderscriptBox["\[Xi]", "_"], "[", "sr_", "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    SubscriptBox["\[Xi]", 
     SubscriptBox["x", "sr"]], ",", 
    SubscriptBox["\[Xi]", 
     SubscriptBox["y", "sr"]], ",", 
    SubscriptBox["\[Xi]", 
     SubscriptBox["z", "sr"]]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   UnderscriptBox["\[Omega]", "_"], "[", "sr_", "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    SubscriptBox["\[Omega]", 
     SubscriptBox["x", "sr"]], ",", 
    SubscriptBox["\[Omega]", 
     SubscriptBox["y", "sr"]], ",", 
    SubscriptBox["\[Omega]", 
     SubscriptBox["z", "sr"]]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   UnderscriptBox["F", "_"], "[", "sr_", "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    SubscriptBox["F", 
     SubscriptBox["x", "sr"]], ",", 
    SubscriptBox["F", 
     SubscriptBox["y", "sr"]], ",", 
    SubscriptBox["F", 
     SubscriptBox["z", "sr"]]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   UnderscriptBox["M", "_"], "[", "sr_", "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    SubscriptBox["M", 
     SubscriptBox["x", "sr"]], ",", 
    SubscriptBox["M", 
     SubscriptBox["y", "sr"]], ",", 
    SubscriptBox["M", 
     SubscriptBox["z", "sr"]]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    UnderscriptBox["r", "_"], "[", "sr_", "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["r", 
      SubscriptBox["x", "sr"]], ",", 
     SubscriptBox["r", 
      SubscriptBox["y", "sr"]], ",", 
     SubscriptBox["r", 
      SubscriptBox["z", "sr"]]}], "}"}]}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"s", "[", "w_", "]"}], ":=", 
     RowBox[{"Sin", "[", "w", "]"}]}], ";", 
    RowBox[{
     RowBox[{"c", "[", "w_", "]"}], ":=", 
     RowBox[{"Cos", "[", "w", "]"}]}], ";", 
    RowBox[{
     RowBox[{"tg", "[", "w_", "]"}], ":=", 
     RowBox[{"Tan", "[", "w", "]"}]}], ";"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["s", "t_"], ":=", 
   RowBox[{"Sin", "[", "t", "]"}]}], ";", 
  RowBox[{
   SubscriptBox["c", "t_"], ":=", 
   RowBox[{"Cos", "[", "t", "]"}]}], ";", 
  RowBox[{
   SubscriptBox["t", "t_"], ":=", 
   RowBox[{"Tan", "[", "t", "]"}]}], ";", 
  RowBox[{
   SubscriptBox["sc", "t_"], ":=", 
   RowBox[{"Sec", "[", "t", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rotx", "[", "x_", "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      SubscriptBox["c", "x"], ",", 
      RowBox[{"-", 
       SubscriptBox["s", "x"]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      SubscriptBox["s", "x"], ",", 
      SubscriptBox["c", "x"]}], "}"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"roty", "[", "x_", "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["c", "x"], ",", "0", ",", 
      SubscriptBox["s", "x"]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", 
       SubscriptBox["s", "x"]}], ",", "0", ",", 
      SubscriptBox["c", "x"]}], "}"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rotz", "[", "x_", "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["c", "x"], ",", 
      RowBox[{"-", 
       SubscriptBox["s", "x"]}], ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["s", "x"], ",", 
      SubscriptBox["c", "x"], ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ravx", "[", "x_", "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      SubscriptBox["c", "x"], ",", 
      SubscriptBox["s", "x"]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"-", 
       SubscriptBox["s", "x"]}], ",", 
      SubscriptBox["c", "x"]}], "}"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ravy", "[", "x_", "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["c", "x"], ",", "0", ",", 
      RowBox[{"-", 
       SubscriptBox["s", "x"]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["s", "x"], ",", "0", ",", 
      SubscriptBox["c", "x"]}], "}"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ravz", "[", "x_", "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["c", "x"], ",", 
      SubscriptBox["s", "x"], ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", 
       SubscriptBox["s", "x"]}], ",", 
      SubscriptBox["c", "x"], ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQA2IQzdBgN485/ZUjA0PyRjDdIPwUQvtD6dWpbGD6Zg2Y
ZqhphPA72iD86V0Q+nAfhD49HSIfMAvCnzEPQqssgIjH7oHwpfdD+CcvcoFp
+xtgmoHjOYSfw8ENpr2kwTSDrSKEX6IK4QsYQmgzXwg9OxBC94dD1BVFgWiR
1pwXm2JfO05q3/ISRK8Mdf8GoiWs34NpY97gvyA6x4qbYTOQtpx6Sg1EFyle
UgfRc8rS/KfGvXbkd+8E0+eezozSFHvjGCZ2IQ5ER6h9WD1F4o3jD+7ANSD6
7LyHCVOBdNq1b2B694GX22cA6VVbFu4B0V6PT34E0dp/Zb6B6Oayyk+zgPSx
+DNfQXRDGLfLbCC9LvmCO4i+ME/ZB0TvyZ3sC6J3LY1sANFXbqt0gegf72fN
AdFxhr/AdBCva6e25BtHI4FtYBoAGCXQMw==
  "],
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[1]:=",ExpressionUUID->"e5175111-b4f6-43af-98c2-4b9e07d7670b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"pp", "=", 
   RowBox[{"{", 
    RowBox[{
     OverscriptBox["\[Phi]", "."], ",", "0", ",", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"qq", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     OverscriptBox["\[Theta]", "."], ",", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rr", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     OverscriptBox["\[Psi]", "."]}], "}"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.7697572898965707`*^9, {3.770947980764452*^9, 3.7709480298738165`*^9}, {
   3.770992117906348*^9, 3.7709921573961105`*^9}, {3.770992225438816*^9, 
   3.770992234676175*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[19]:=",ExpressionUUID->"1c6c3068-55dd-4196-98b5-cebfed487cb7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Phi]\[Theta]\[Psi]", "=", 
    RowBox[{"pp", "+", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"rotx", "[", "\[Phi]\[Phi]", "]"}], ".", "qq"}], ")"}], "+", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"rotx", "[", "\[Phi]\[Phi]", "]"}], ".", 
       RowBox[{"roty", "[", "\[Theta]\[Theta]", "]"}], ".", "rr"}], ")"}]}]}],
    ";"}], 
  RowBox[{"(*", 
   RowBox[{"Para", " ", "corpos", " ", "em", " ", "geral"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"\[Phi]\[Theta]\[Psi]", "//", "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Phi]\[Theta]\[Psi]1", "=", 
    RowBox[{"pp", "+", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"ravx", "[", "\[Phi]\[Phi]", "]"}], ".", "qq"}], ")"}], "+", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"ravx", "[", "\[Phi]\[Phi]", "]"}], ".", 
       RowBox[{"ravy", "[", "\[Theta]\[Theta]", "]"}], ".", "rr"}], ")"}]}]}],
    ";"}], 
  RowBox[{"(*", 
   RowBox[{"Para", " ", "avi\[OTilde]es"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"\[Phi]\[Theta]\[Psi]1", "//", "MatrixForm"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.54368552496875*^9, 3.54368553003125*^9}, {
   3.543685608015625*^9, 3.54368571440625*^9}, {3.54368578375*^9, 
   3.5436858104375*^9}, {3.673004068511627*^9, 3.673004121574428*^9}, {
   3.673004314996214*^9, 3.6730043202099295`*^9}, {3.6730043578817725`*^9, 
   3.673004366359812*^9}, 3.7697572898965707`*^9, {3.7709921350728283`*^9, 
   3.7709921443788333`*^9}, {3.770992238658536*^9, 3.7709922476205893`*^9}, {
   3.770997626164319*^9, 3.7709976459336004`*^9}, {3.770997856393749*^9, 
   3.7709979121814585`*^9}, {3.771324384477765*^9, 3.7713244144184227`*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[22]:=",ExpressionUUID->"7cc81b72-fddc-4cc9-9cb6-cc24cb0a6074"]
}, Open  ]],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{
        OverscriptBox["\[Phi]", "."], "+", 
        RowBox[{
         OverscriptBox["\[Psi]", "."], " ", 
         RowBox[{"Sin", "[", "\[Theta]\[Theta]", "]"}]}]}]},
      {
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "\[Phi]\[Phi]", "]"}], " ", 
         OverscriptBox["\[Theta]", "."]}], "-", 
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]\[Theta]", "]"}], " ", 
         OverscriptBox["\[Psi]", "."], " ", 
         RowBox[{"Sin", "[", "\[Phi]\[Phi]", "]"}]}]}]},
      {
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]\[Theta]", "]"}], " ", 
         RowBox[{"Cos", "[", "\[Phi]\[Phi]", "]"}], " ", 
         OverscriptBox["\[Psi]", "."]}], "+", 
        RowBox[{
         OverscriptBox["\[Theta]", "."], " ", 
         RowBox[{"Sin", "[", "\[Phi]\[Phi]", "]"}]}]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.771536658953459*^9, 3.77156098922283*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->
  "Out[23]//MatrixForm=",ExpressionUUID->"46273c7b-d007-4816-bfd3-\
6f547a18318c"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{
        OverscriptBox["\[Phi]", "."], "-", 
        RowBox[{
         OverscriptBox["\[Psi]", "."], " ", 
         RowBox[{"Sin", "[", "\[Theta]\[Theta]", "]"}]}]}]},
      {
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "\[Phi]\[Phi]", "]"}], " ", 
         OverscriptBox["\[Theta]", "."]}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]\[Theta]", "]"}], " ", 
         OverscriptBox["\[Psi]", "."], " ", 
         RowBox[{"Sin", "[", "\[Phi]\[Phi]", "]"}]}]}]},
      {
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]\[Theta]", "]"}], " ", 
         RowBox[{"Cos", "[", "\[Phi]\[Phi]", "]"}], " ", 
         OverscriptBox["\[Psi]", "."]}], "-", 
        RowBox[{
         OverscriptBox["\[Theta]", "."], " ", 
         RowBox[{"Sin", "[", "\[Phi]\[Phi]", "]"}]}]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.771536658953459*^9, 3.7715609892347975`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->
  "Out[25]//MatrixForm=",ExpressionUUID->"6336fc61-d06e-4155-a317-\
e4bc2e19162c"],

Cell[BoxData[
 RowBox[{"\[Phi]\[Theta]\[Psi]1", "//", "MatrixForm"}]], "Input",
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[26]:=",ExpressionUUID->"a8f98229-57c0-456a-b0af-dd112daa74d5"],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{
        OverscriptBox["\[Phi]", "."], "-", 
        RowBox[{
         OverscriptBox["\[Psi]", "."], " ", 
         RowBox[{"Sin", "[", "\[Theta]\[Theta]", "]"}]}]}]},
      {
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "\[Phi]\[Phi]", "]"}], " ", 
         OverscriptBox["\[Theta]", "."]}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]\[Theta]", "]"}], " ", 
         OverscriptBox["\[Psi]", "."], " ", 
         RowBox[{"Sin", "[", "\[Phi]\[Phi]", "]"}]}]}]},
      {
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]\[Theta]", "]"}], " ", 
         RowBox[{"Cos", "[", "\[Phi]\[Phi]", "]"}], " ", 
         OverscriptBox["\[Psi]", "."]}], "-", 
        RowBox[{
         OverscriptBox["\[Theta]", "."], " ", 
         RowBox[{"Sin", "[", "\[Phi]\[Phi]", "]"}]}]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.6730043051201773`*^9, 3.67300432080135*^9}, {
   3.6730043674425955`*^9, 3.673004372018838*^9}, 3.6738143723342237`*^9, 
   3.7697572898965707`*^9, 3.7709468553486795`*^9, 3.770948034811482*^9, 
   3.7709840052014*^9, 3.7709926487002153`*^9, 3.7709975961056833`*^9, 
   3.7709979191752815`*^9, 3.770997996466525*^9, 3.771282339144441*^9, 
   3.7713231589952803`*^9, 3.7713233770327263`*^9, 3.771325185766241*^9, 
   3.7713267664245167`*^9, 3.771332161887308*^9, 3.77135755034391*^9, 
   3.771420532719219*^9, 3.771487274063204*^9, 3.7714970300879555`*^9, 
   3.7715014303868184`*^9, 3.7715061793022246`*^9, 3.771536658989337*^9, 
   3.7715609892597313`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->
  "Out[26]//MatrixForm=",ExpressionUUID->"1cb8c47c-e995-4781-97b9-\
f0ef14aec284"],

Cell[BoxData[
 RowBox[{"solu1", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Phi]\[Theta]\[Psi]1", "\[Equal]", 
       RowBox[{"{", 
        RowBox[{"ppp", ",", "qqq", ",", "rrr"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       OverscriptBox["\[Phi]", "."], ",", " ", 
       OverscriptBox["\[Theta]", "."], ",", 
       OverscriptBox["\[Psi]", "."]}], "}"}]}], "]"}], "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.54368552496875*^9, 3.54368553003125*^9}, {
   3.543685608015625*^9, 3.54368571440625*^9}, {3.54368578375*^9, 
   3.5436858104375*^9}, {3.673004068511627*^9, 3.673004121574428*^9}, {
   3.673004314996214*^9, 3.6730043202099295`*^9}, {3.6730043578817725`*^9, 
   3.673004366359812*^9}, 3.7697572898965707`*^9, {3.7709921350728283`*^9, 
   3.7709921443788333`*^9}, {3.770992238658536*^9, 3.7709922476205893`*^9}, {
   3.770997626164319*^9, 3.7709976459336004`*^9}, {3.770997856393749*^9, 
   3.7709979121814585`*^9}, {3.770998778548088*^9, 3.7709988510394273`*^9}, {
   3.770998899225148*^9, 3.77099890111148*^9}, {3.770999011168754*^9, 
   3.770999053753581*^9}, {3.770999121952656*^9, 3.770999129281535*^9}, {
   3.7713024002155247`*^9, 3.771302412032168*^9}, {3.7715171811445084`*^9, 
   3.7715171860215044`*^9}, {3.771560926618087*^9, 3.7715609394707155`*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[28]:=",ExpressionUUID->"042ae2f9-face-43d8-9363-10ea66c5413c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     OverscriptBox["\[Phi]", "."], "\[Rule]", 
     RowBox[{"ppp", "+", 
      RowBox[{"rrr", " ", 
       RowBox[{"Cos", "[", "\[Phi]\[Phi]", "]"}], " ", 
       RowBox[{"Tan", "[", "\[Theta]\[Theta]", "]"}]}], "+", 
      RowBox[{"qqq", " ", 
       RowBox[{"Sin", "[", "\[Phi]\[Phi]", "]"}], " ", 
       RowBox[{"Tan", "[", "\[Theta]\[Theta]", "]"}]}]}]}], ",", 
    RowBox[{
     OverscriptBox["\[Theta]", "."], "\[Rule]", 
     RowBox[{
      RowBox[{"qqq", " ", 
       RowBox[{"Cos", "[", "\[Phi]\[Phi]", "]"}]}], "-", 
      RowBox[{"rrr", " ", 
       RowBox[{"Sin", "[", "\[Phi]\[Phi]", "]"}]}]}]}], ",", 
    RowBox[{
     OverscriptBox["\[Psi]", "."], "\[Rule]", 
     RowBox[{
      RowBox[{"Sec", "[", "\[Theta]\[Theta]", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"rrr", " ", 
         RowBox[{"Cos", "[", "\[Phi]\[Phi]", "]"}]}], "+", 
        RowBox[{"qqq", " ", 
         RowBox[{"Sin", "[", "\[Phi]\[Phi]", "]"}]}]}], ")"}]}]}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.7709988838377886`*^9, 3.7709990895154095`*^9, 
  3.770999130925071*^9, 3.7712823404220543`*^9, 3.771302413070388*^9, 
  3.771323159077062*^9, 3.77132337709157*^9, 3.7713251858300714`*^9, 
  3.7713267664773755`*^9, 3.771332161962107*^9, 3.7713575504207044`*^9, 
  3.771420532828041*^9, 3.771487274443159*^9, 3.771497030173725*^9, 
  3.7715014304436665`*^9, 3.7715061793909864`*^9, 3.771536659047213*^9, 
  3.7715609896497855`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[28]=",ExpressionUUID->"5fe5f463-b4a2-4f01-9034-270dd16ff11f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"J", "=", 
   RowBox[{"Inverse", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", 
        RowBox[{"-", 
         SubscriptBox["s", "\[Theta]\[Theta]"]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        SubscriptBox["c", "\[Phi]\[Phi]"], ",", 
        RowBox[{
         SubscriptBox["s", "\[Phi]\[Phi]"], " ", 
         SubscriptBox["c", "\[Theta]\[Theta]"]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"-", 
         SubscriptBox["s", "\[Phi]\[Phi]"]}], ",", 
        RowBox[{
         SubscriptBox["c", "\[Phi]\[Phi]"], " ", 
         SubscriptBox["c", "\[Theta]\[Theta]"]}]}], "}"}]}], "}"}], "]"}]}], 
  ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.543754181140625*^9, 3.543754350375*^9}, {
   3.55627444296875*^9, 3.556274449796875*^9}, 3.7697572898975706`*^9, {
   3.7709840533714185`*^9, 3.7709840931402807`*^9}, {3.7709841245941668`*^9, 
   3.7709842019241314`*^9}, {3.7709844008013067`*^9, 
   3.7709844137566347`*^9}, {3.7713233275062137`*^9, 3.771323349527271*^9}, {
   3.7714253036082835`*^9, 3.7714253258444996`*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[29]:=",ExpressionUUID->"28b700f1-9e8d-440d-b689-f6bc26f9f499"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FullSimplify", "[", "J", "]"}], "//", "MatrixForm"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.54375435925*^9, 3.54375440509375*^9}, 
   3.7697572898975706`*^9, {3.7709844207702923`*^9, 3.7709844216619267`*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[30]:=",ExpressionUUID->"ec172ce2-2b5c-4e90-805b-1beaa4d98c72"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", 
      RowBox[{
       RowBox[{"Sin", "[", "\[Phi]\[Phi]", "]"}], " ", 
       RowBox[{"Tan", "[", "\[Theta]\[Theta]", "]"}]}], 
      RowBox[{
       RowBox[{"Cos", "[", "\[Phi]\[Phi]", "]"}], " ", 
       RowBox[{"Tan", "[", "\[Theta]\[Theta]", "]"}]}]},
     {"0", 
      RowBox[{"Cos", "[", "\[Phi]\[Phi]", "]"}], 
      RowBox[{"-", 
       RowBox[{"Sin", "[", "\[Phi]\[Phi]", "]"}]}]},
     {"0", 
      RowBox[{
       RowBox[{"Sec", "[", "\[Theta]\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Phi]\[Phi]", "]"}]}], 
      RowBox[{
       RowBox[{"Cos", "[", "\[Phi]\[Phi]", "]"}], " ", 
       RowBox[{"Sec", "[", "\[Theta]\[Theta]", "]"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.54375436825*^9, 3.54375440853125*^9}, 
   3.673814372797126*^9, 3.7697572898975706`*^9, 3.770984022542281*^9, 
   3.7709842082251368`*^9, 3.770984422607051*^9, 3.770996562589121*^9, 
   3.7712823405796022`*^9, 3.7713231594739995`*^9, 3.771323385507061*^9, 
   3.771325185934791*^9, 3.7713267665880785`*^9, 3.771332162110711*^9, 
   3.7713575511367893`*^9, 3.771420533671991*^9, 3.7714253320265584`*^9, 
   3.77148727504358*^9, 3.7714970304061036`*^9, 3.771501430536419*^9, 
   3.7715061795026875`*^9, 3.7715366591538963`*^9, 3.7715609897284775`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->
  "Out[30]//MatrixForm=",ExpressionUUID->"48d012ab-d4fd-428b-8415-\
46d15ca18826"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["T", "BtoF"], "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{
     RowBox[{"ravx", "[", "\[Phi]\[Phi]", "]"}], ".", 
     RowBox[{"ravy", "[", "\[Theta]\[Theta]", "]"}], ".", 
     RowBox[{"ravz", "[", "\[Psi]\[Psi]", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"J\[CapitalTheta]", "=", 
   RowBox[{"concatena2matrizes", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{
        RowBox[{"ravx", "[", "\[Phi]\[Phi]", "]"}], ".", 
        RowBox[{"ravy", "[", "\[Theta]\[Theta]", "]"}], ".", 
        RowBox[{"ravz", "[", "\[Psi]\[Psi]", "]"}]}], "]"}], ",", "J"}], 
     "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"J\[CapitalTheta]", "//", "MatrixForm"}], "//", 
  "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.770979440380336*^9, 3.7709794405177255`*^9}, {
   3.770979489395253*^9, 3.770979540121945*^9}, {3.770983843052696*^9, 
   3.7709839024143353`*^9}, {3.770984238735178*^9, 3.770984268052229*^9}, {
   3.770984458342168*^9, 3.770984462415319*^9}, 3.7709846359728003`*^9, {
   3.770992342429035*^9, 3.7709923510894127`*^9}, 3.7712880036180687`*^9, {
   3.7713504145132427`*^9, 3.771350494636636*^9}, {3.7714253371033287`*^9, 
   3.7714253626989026`*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[31]:=",ExpressionUUID->"11d48c8b-afcf-4d87-aca5-57f97d976ae3"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"Cos", "[", "\[Theta]\[Theta]", "]"}], " ", 
       RowBox[{"Cos", "[", "\[Psi]\[Psi]", "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", "\[Psi]\[Psi]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]\[Theta]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]\[Phi]", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Phi]\[Phi]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Psi]\[Psi]", "]"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", "\[Phi]\[Phi]", "]"}], " ", 
        RowBox[{"Cos", "[", "\[Psi]\[Psi]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]\[Theta]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Sin", "[", "\[Phi]\[Phi]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Psi]\[Psi]", "]"}]}]}], "0", "0", "0"},
     {
      RowBox[{
       RowBox[{"Cos", "[", "\[Theta]\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Psi]\[Psi]", "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", "\[Phi]\[Phi]", "]"}], " ", 
        RowBox[{"Cos", "[", "\[Psi]\[Psi]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Sin", "[", "\[Theta]\[Theta]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]\[Phi]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Psi]\[Psi]", "]"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Cos", "[", "\[Psi]\[Psi]", "]"}]}], " ", 
        RowBox[{"Sin", "[", "\[Phi]\[Phi]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Phi]\[Phi]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]\[Theta]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Psi]\[Psi]", "]"}]}]}], "0", "0", "0"},
     {
      RowBox[{"-", 
       RowBox[{"Sin", "[", "\[Theta]\[Theta]", "]"}]}], 
      RowBox[{
       RowBox[{"Cos", "[", "\[Theta]\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Phi]\[Phi]", "]"}]}], 
      RowBox[{
       RowBox[{"Cos", "[", "\[Theta]\[Theta]", "]"}], " ", 
       RowBox[{"Cos", "[", "\[Phi]\[Phi]", "]"}]}], "0", "0", "0"},
     {"0", "0", "0", "1", 
      RowBox[{
       RowBox[{"Sin", "[", "\[Phi]\[Phi]", "]"}], " ", 
       RowBox[{"Tan", "[", "\[Theta]\[Theta]", "]"}]}], 
      RowBox[{
       RowBox[{"Cos", "[", "\[Phi]\[Phi]", "]"}], " ", 
       RowBox[{"Tan", "[", "\[Theta]\[Theta]", "]"}]}]},
     {"0", "0", "0", "0", 
      RowBox[{"Cos", "[", "\[Phi]\[Phi]", "]"}], 
      RowBox[{"-", 
       RowBox[{"Sin", "[", "\[Phi]\[Phi]", "]"}]}]},
     {"0", "0", "0", "0", 
      RowBox[{
       RowBox[{"Sec", "[", "\[Theta]\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Phi]\[Phi]", "]"}]}], 
      RowBox[{
       RowBox[{"Cos", "[", "\[Phi]\[Phi]", "]"}], " ", 
       RowBox[{"Sec", "[", "\[Theta]\[Theta]", "]"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.771288005492056*^9, 3.7713231597233353`*^9, 
  3.7713233857165008`*^9, 3.771325186148255*^9, 3.7713267667875457`*^9, 
  3.7713321624348445`*^9, 3.771350504443555*^9, 3.771357551675349*^9, 
  3.771420533971819*^9, 3.7714253649815273`*^9, 3.7714872752908926`*^9, 
  3.7714970305965967`*^9, 3.7715014307249146`*^9, 3.771506179690218*^9, 
  3.771536659347411*^9, 3.7715609899249525`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->
  "Out[33]//MatrixForm=",ExpressionUUID->"9e140e29-03cc-458e-aaca-\
7bd7a8455ed1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox[
    UnderscriptBox["\[CapitalGamma]", "_"], "inE"], "=", 
   RowBox[{"{", 
    RowBox[{"X", ",", "Y", ",", "Z"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox[
    UnderscriptBox["\[CapitalTheta]", "_"], "inE"], "=", 
   RowBox[{"{", 
    RowBox[{"\[Phi]", ",", "\[Theta]", ",", "\[Psi]"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   UnderscriptBox["\[Xi]", "_"], "=", 
   RowBox[{"criavetordevetores", "[", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["\[CapitalGamma]", "inE"], ",", 
      SubscriptBox["\[CapitalTheta]", "inE"]}], "}"}], "]"}]}], 
  ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.562937968890625*^9, 3.6730065498089385`*^9, 3.7697572898985662`*^9, {
   3.7709846620210934`*^9, 3.7709846803980265`*^9}, {3.7709847111537013`*^9, 
   3.770984816516079*^9}, {3.770984885686054*^9, 3.770984890581314*^9}, {
   3.7709850514269357`*^9, 3.7709850585648603`*^9}, {3.770985325982859*^9, 
   3.770985339758895*^9}, {3.770985419076959*^9, 3.7709855181495495`*^9}, {
   3.7709855631595526`*^9, 3.7709855754217873`*^9}, {3.770985641174193*^9, 
   3.7709856427740064`*^9}, 3.771286819168709*^9, {3.771293298224018*^9, 
   3.771293307442546*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[34]:=",ExpressionUUID->"9cc320ad-e126-4757-a32b-5d74622ee67e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox[
    UnderscriptBox["V", "_"], "inB"], "=", 
   RowBox[{"{", 
    RowBox[{"uu", ",", "vv", ",", "ww"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox[
    UnderscriptBox["\[Omega]", "_"], "inB"], "=", 
   RowBox[{"{", 
    RowBox[{"p", ",", "q", ",", "r"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   UnderscriptBox["\[Nu]", "_"], "=", 
   RowBox[{"criavetordevetores", "[", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox[
       UnderscriptBox["V", "_"], "inB"], ",", 
      SubscriptBox[
       UnderscriptBox["\[Omega]", "_"], "inB"]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   UnderscriptBox[
    OverscriptBox["\[Xi]", "."], "_"], "=", 
   RowBox[{"J\[CapitalTheta]", ".", 
    UnderscriptBox["\[Nu]", "_"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   UnderscriptBox[
    OverscriptBox["\[Xi]", "."], "_"], "//", "MatrixForm"}], "//", 
  "FullSimplify"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.562937968890625*^9, 3.6730065498089385`*^9, 3.7697572898985662`*^9, {
   3.7709846620210934`*^9, 3.7709846803980265`*^9}, {3.7709847111537013`*^9, 
   3.770984816516079*^9}, {3.770984885686054*^9, 3.770984890581314*^9}, {
   3.7709850514269357`*^9, 3.7709850585648603`*^9}, {3.770985325982859*^9, 
   3.770985339758895*^9}, {3.770985419076959*^9, 3.7709855181495495`*^9}, {
   3.7709855631595526`*^9, 3.770985590045808*^9}, {3.7709856458702126`*^9, 
   3.770985774493843*^9}, 3.7709858288492484`*^9, {3.770985879654805*^9, 
   3.770985913531265*^9}, {3.770992310453986*^9, 3.770992313530769*^9}, 
   3.771282372651828*^9, {3.771286904627987*^9, 3.7712869085574794`*^9}, 
   3.7712869752472987`*^9, {3.7712932863432755`*^9, 3.7712933211483984`*^9}, 
   3.7713234281558228`*^9, {3.7713234682284665`*^9, 3.7713234742084756`*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[37]:=",ExpressionUUID->"b1d4feab-3bd2-4ebb-b1a9-00caa40d6878"]
}, Open  ]],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{
        RowBox[{"uu", " ", 
         RowBox[{"Cos", "[", "\[Theta]\[Theta]", "]"}], " ", 
         RowBox[{"Cos", "[", "\[Psi]\[Psi]", "]"}]}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", "\[Psi]\[Psi]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]\[Theta]", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"ww", " ", 
            RowBox[{"Cos", "[", "\[Phi]\[Phi]", "]"}]}], "+", 
           RowBox[{"vv", " ", 
            RowBox[{"Sin", "[", "\[Phi]\[Phi]", "]"}]}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "vv"}], " ", 
            RowBox[{"Cos", "[", "\[Phi]\[Phi]", "]"}]}], "+", 
           RowBox[{"ww", " ", 
            RowBox[{"Sin", "[", "\[Phi]\[Phi]", "]"}]}]}], ")"}], " ", 
         RowBox[{"Sin", "[", "\[Psi]\[Psi]", "]"}]}]}]},
      {
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "\[Psi]\[Psi]", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"vv", " ", 
            RowBox[{"Cos", "[", "\[Phi]\[Phi]", "]"}]}], "-", 
           RowBox[{"ww", " ", 
            RowBox[{"Sin", "[", "\[Phi]\[Phi]", "]"}]}]}], ")"}]}], "+", 
        RowBox[{"uu", " ", 
         RowBox[{"Cos", "[", "\[Theta]\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Psi]\[Psi]", "]"}]}], "+", 
        RowBox[{
         RowBox[{"Sin", "[", "\[Theta]\[Theta]", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"ww", " ", 
            RowBox[{"Cos", "[", "\[Phi]\[Phi]", "]"}]}], "+", 
           RowBox[{"vv", " ", 
            RowBox[{"Sin", "[", "\[Phi]\[Phi]", "]"}]}]}], ")"}], " ", 
         RowBox[{"Sin", "[", "\[Psi]\[Psi]", "]"}]}]}]},
      {
       RowBox[{
        RowBox[{
         RowBox[{"-", "uu"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]\[Theta]", "]"}]}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]\[Theta]", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"ww", " ", 
            RowBox[{"Cos", "[", "\[Phi]\[Phi]", "]"}]}], "+", 
           RowBox[{"vv", " ", 
            RowBox[{"Sin", "[", "\[Phi]\[Phi]", "]"}]}]}], ")"}]}]}]},
      {
       RowBox[{"p", "+", 
        RowBox[{"r", " ", 
         RowBox[{"Cos", "[", "\[Phi]\[Phi]", "]"}], " ", 
         RowBox[{"Tan", "[", "\[Theta]\[Theta]", "]"}]}], "+", 
        RowBox[{"q", " ", 
         RowBox[{"Sin", "[", "\[Phi]\[Phi]", "]"}], " ", 
         RowBox[{"Tan", "[", "\[Theta]\[Theta]", "]"}]}]}]},
      {
       RowBox[{
        RowBox[{"q", " ", 
         RowBox[{"Cos", "[", "\[Phi]\[Phi]", "]"}]}], "-", 
        RowBox[{"r", " ", 
         RowBox[{"Sin", "[", "\[Phi]\[Phi]", "]"}]}]}]},
      {
       RowBox[{
        RowBox[{"Sec", "[", "\[Theta]\[Theta]", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"r", " ", 
           RowBox[{"Cos", "[", "\[Phi]\[Phi]", "]"}]}], "+", 
          RowBox[{"q", " ", 
           RowBox[{"Sin", "[", "\[Phi]\[Phi]", "]"}]}]}], ")"}]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7709857685357647`*^9, 3.7709857797329607`*^9}, {
   3.770985884841281*^9, 3.7709859158603554`*^9}, 3.7712823526607637`*^9, 
   3.771286912478531*^9, 3.771286978912034*^9, 3.771288017031679*^9, 
   3.771293326030341*^9, 3.7713231597901554`*^9, 3.771323385752405*^9, 
   3.7713234293336344`*^9, 3.7713234767407246`*^9, 3.771325187273212*^9, 
   3.7713267732460365`*^9, 3.771332163940816*^9, 3.77135755336483*^9, 
   3.7714205352640204`*^9, 3.7714253828485703`*^9, 3.7714872765369244`*^9, 
   3.7714970315919657`*^9, 3.77150143174419*^9, 3.771506180700669*^9, 
   3.771536660396575*^9, 3.771560990928301*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->
  "Out[41]//MatrixForm=",ExpressionUUID->"eadaec26-6c03-4a43-82dc-\
2ac1af2dd9e2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"II", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Ixx", ",", "Ixy", ",", "Ixz"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Iyx", ",", "Iyy", ",", "Iyz"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Izx", ",", "Izy", ",", "Izz"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"IM", "=", 
   RowBox[{"concatena2matrizes", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"m", " ", 
       RowBox[{"IdentityMatrix", "[", "3", "]"}]}], ",", "II"}], "}"}], 
    "]"}]}], ";", 
  RowBox[{"IM", "//", "MatrixForm"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox[
    UnderscriptBox[
     OverscriptBox["V", "."], "_"], "inB"], "=", 
   RowBox[{"{", 
    RowBox[{
     OverscriptBox["uu", "."], ",", 
     OverscriptBox["vv", "."], ",", 
     OverscriptBox["ww", "."]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox[
    OverscriptBox[
     UnderscriptBox["\[Omega]", "_"], "."], "inB"], "=", 
   RowBox[{"{", 
    RowBox[{
     OverscriptBox["p", "."], ",", 
     OverscriptBox["q", "."], ",", 
     OverscriptBox["r", "."]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   OverscriptBox[
    UnderscriptBox["\[Nu]", "_"], "."], "=", 
   RowBox[{"criavetordevetores", "[", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox[
       UnderscriptBox[
        OverscriptBox["V", "."], "_"], "inB"], ",", 
      SubscriptBox[
       OverscriptBox[
        UnderscriptBox["\[Omega]", "_"], "."], "inB"]}], "}"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7712893020910945`*^9, 3.7712893022596436`*^9}, {
   3.7712899606257176`*^9, 3.7712900654020586`*^9}, 3.771291314201203*^9, {
   3.7712913756493998`*^9, 3.7712913784519053`*^9}, {3.771291783467602*^9, 
   3.771291789629324*^9}, {3.7712918197097263`*^9, 3.7712919115191846`*^9}, {
   3.771291973637504*^9, 3.7712920689138308`*^9}, {3.7712921041386986`*^9, 
   3.7712921340496826`*^9}, 3.771292181349583*^9, {3.7712922157411737`*^9, 
   3.771292216586914*^9}, {3.7712930532874055`*^9, 3.771293104954712*^9}, {
   3.771293224462527*^9, 3.7712932261520076`*^9}, {3.771293333640912*^9, 
   3.771293359630046*^9}, 3.771295270588025*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[42]:=",ExpressionUUID->"3c719bd5-1aa6-4481-a9b0-1ab5801171db"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"m", "0", "0", "0", "0", "0"},
     {"0", "m", "0", "0", "0", "0"},
     {"0", "0", "m", "0", "0", "0"},
     {"0", "0", "0", "Ixx", "Ixy", "Ixz"},
     {"0", "0", "0", "Iyx", "Iyy", "Iyz"},
     {"0", "0", "0", "Izx", "Izy", "Izz"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.771293390212282*^9, {3.77129522227813*^9, 3.7712952720261784`*^9}, 
   3.7713231598878927`*^9, 3.771323491072668*^9, 3.771325187352*^9, 
   3.7713267733726993`*^9, 3.771332164027584*^9, 3.771357553463567*^9, 
   3.771420535326898*^9, 3.7714253829293537`*^9, 3.7714872766084023`*^9, 
   3.771497031659752*^9, 3.771501431816029*^9, 3.771506180762865*^9, 
   3.7715366605072803`*^9, 3.771560991010051*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->
  "Out[43]//MatrixForm=",ExpressionUUID->"97bfffa1-4886-4398-a9e9-\
9bf6e6feda45"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"til", "[", 
   SubscriptBox[
    UnderscriptBox["\[Omega]", "_"], "inB"], "]"}], ".", "II", ".", 
  SubscriptBox[
   UnderscriptBox["\[Omega]", "_"], "inB"]}]], "Input",
 CellChangeTimes->{{3.7712947407796774`*^9, 3.7712947858147526`*^9}, 
   3.7712948800650587`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[47]:=",ExpressionUUID->"4a99c67a-9426-40a6-b29e-f9e600e2a014"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"p", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Izx", " ", "q"}], "-", 
       RowBox[{"Iyx", " ", "r"}]}], ")"}]}], "+", 
    RowBox[{"q", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Izy", " ", "q"}], "-", 
       RowBox[{"Iyy", " ", "r"}]}], ")"}]}], "+", 
    RowBox[{"r", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Izz", " ", "q"}], "-", 
       RowBox[{"Iyz", " ", "r"}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{"p", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "Izx"}], " ", "p"}], "+", 
       RowBox[{"Ixx", " ", "r"}]}], ")"}]}], "+", 
    RowBox[{"q", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "Izy"}], " ", "p"}], "+", 
       RowBox[{"Ixy", " ", "r"}]}], ")"}]}], "+", 
    RowBox[{"r", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "Izz"}], " ", "p"}], "+", 
       RowBox[{"Ixz", " ", "r"}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{"p", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Iyx", " ", "p"}], "-", 
       RowBox[{"Ixx", " ", "q"}]}], ")"}]}], "+", 
    RowBox[{"q", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Iyy", " ", "p"}], "-", 
       RowBox[{"Ixy", " ", "q"}]}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Iyz", " ", "p"}], "-", 
       RowBox[{"Ixz", " ", "q"}]}], ")"}], " ", "r"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.771294730825365*^9, 3.771294787064409*^9}, 
   3.771294881310271*^9, 3.7712952815366063`*^9, 3.7713231599168158`*^9, 
   3.771323557528613*^9, 3.771325187376934*^9, 3.771326773401621*^9, 
   3.7713321640594983`*^9, 3.7713575534934874`*^9, 3.771420535354824*^9, 
   3.7714253829587855`*^9, 3.7714872766263237`*^9, 3.771497031681697*^9, 
   3.771501431834953*^9, 3.771506180781783*^9, 3.7715366605362005`*^9, 
   3.7715609910380077`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[47]=",ExpressionUUID->"9229b6cc-c64f-439c-8a0e-7c906ac72568"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  OverscriptBox[
   UnderscriptBox["\[Nu]", "_"], "."], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{
  3.7712947037528777`*^9, 3.77129490968388*^9, {3.7712951819722004`*^9, 
   3.7712951987538514`*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[48]:=",ExpressionUUID->"9e64d1da-7e48-4194-92cb-015a1df9f6c1"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       OverscriptBox["uu", "."]},
      {
       OverscriptBox["vv", "."]},
      {
       OverscriptBox["ww", "."]},
      {
       OverscriptBox["p", "."]},
      {
       OverscriptBox["q", "."]},
      {
       OverscriptBox["r", "."]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.771294690206765*^9, 3.7712947051979837`*^9}, 
   3.771294910205682*^9, {3.7712951834851522`*^9, 3.7712952460920105`*^9}, 
   3.7712952772676673`*^9, 3.771323159942746*^9, 3.7713235576153812`*^9, 
   3.7713251874018936`*^9, 3.7713267734325395`*^9, 3.77133216409241*^9, 
   3.7713575535273952`*^9, 3.7714205353872485`*^9, 3.7714253829876814`*^9, 
   3.7714872766433077`*^9, 3.771497031701641*^9, 3.7715014318529015`*^9, 
   3.77150618079877*^9, 3.7715366605661545`*^9, 3.771560991064904*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->
  "Out[48]//MatrixForm=",ExpressionUUID->"d1adcbff-08c3-43cd-b82b-\
cedda25f94a9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   UnderscriptBox["F", "_"], "=", 
   RowBox[{"m", " ", 
    RowBox[{
     RowBox[{"til", "[", 
      SubscriptBox[
       UnderscriptBox["\[Omega]", "_"], "inB"], "]"}], ".", 
     SubscriptBox[
      UnderscriptBox["V", "_"], "inB"]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   UnderscriptBox["Mt", "_"], "=", 
   RowBox[{
    RowBox[{"til", "[", 
     SubscriptBox[
      UnderscriptBox["\[Omega]", "_"], "inB"], "]"}], ".", "II", ".", 
    SubscriptBox[
     UnderscriptBox["\[Omega]", "_"], "inB"]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   UnderscriptBox["FG", "_"], "=", 
   RowBox[{"criavetordevetores", "[", 
    RowBox[{"{", 
     RowBox[{
      UnderscriptBox["F", "_"], ",", 
      UnderscriptBox["Mt", "_"]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   UnderscriptBox["FT", "_"], "=", 
   RowBox[{
    UnderscriptBox["FG", "_"], "+", 
    RowBox[{"IM", ".", 
     OverscriptBox[
      UnderscriptBox["\[Nu]", "_"], "."]}]}]}], ";", 
  RowBox[{
   UnderscriptBox["FT", "_"], "//", "MatrixForm"}]}]}], "Input",
 CellChangeTimes->{{3.7712940641662245`*^9, 3.7712941386887264`*^9}, {
   3.771294175588278*^9, 3.771294223800717*^9}, {3.7712943269153824`*^9, 
   3.771294333172887*^9}, {3.7712943669695*^9, 3.7712944117931795`*^9}, 
   3.7712944420176535`*^9, {3.7712944744768753`*^9, 3.771294528902403*^9}, {
   3.77129457502359*^9, 3.7712946602069135`*^9}, {3.771294827168337*^9, 
   3.7712948917581873`*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[49]:=",ExpressionUUID->"cd0e738a-b744-4cb9-abc2-c308aa075c5e"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{
        RowBox[{"m", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "r"}], " ", "vv"}], "+", 
           RowBox[{"q", " ", "ww"}]}], ")"}]}], "+", 
        RowBox[{"m", " ", 
         OverscriptBox["uu", "."]}]}]},
      {
       RowBox[{
        RowBox[{"m", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"r", " ", "uu"}], "-", 
           RowBox[{"p", " ", "ww"}]}], ")"}]}], "+", 
        RowBox[{"m", " ", 
         OverscriptBox["vv", "."]}]}]},
      {
       RowBox[{
        RowBox[{"m", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "q"}], " ", "uu"}], "+", 
           RowBox[{"p", " ", "vv"}]}], ")"}]}], "+", 
        RowBox[{"m", " ", 
         OverscriptBox["ww", "."]}]}]},
      {
       RowBox[{
        RowBox[{"p", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Izx", " ", "q"}], "-", 
           RowBox[{"Iyx", " ", "r"}]}], ")"}]}], "+", 
        RowBox[{"q", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Izy", " ", "q"}], "-", 
           RowBox[{"Iyy", " ", "r"}]}], ")"}]}], "+", 
        RowBox[{"r", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Izz", " ", "q"}], "-", 
           RowBox[{"Iyz", " ", "r"}]}], ")"}]}], "+", 
        RowBox[{"Ixx", " ", 
         OverscriptBox["p", "."]}], "+", 
        RowBox[{"Ixy", " ", 
         OverscriptBox["q", "."]}], "+", 
        RowBox[{"Ixz", " ", 
         OverscriptBox["r", "."]}]}]},
      {
       RowBox[{
        RowBox[{"p", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "Izx"}], " ", "p"}], "+", 
           RowBox[{"Ixx", " ", "r"}]}], ")"}]}], "+", 
        RowBox[{"q", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "Izy"}], " ", "p"}], "+", 
           RowBox[{"Ixy", " ", "r"}]}], ")"}]}], "+", 
        RowBox[{"r", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "Izz"}], " ", "p"}], "+", 
           RowBox[{"Ixz", " ", "r"}]}], ")"}]}], "+", 
        RowBox[{"Iyx", " ", 
         OverscriptBox["p", "."]}], "+", 
        RowBox[{"Iyy", " ", 
         OverscriptBox["q", "."]}], "+", 
        RowBox[{"Iyz", " ", 
         OverscriptBox["r", "."]}]}]},
      {
       RowBox[{
        RowBox[{"p", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Iyx", " ", "p"}], "-", 
           RowBox[{"Ixx", " ", "q"}]}], ")"}]}], "+", 
        RowBox[{"q", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Iyy", " ", "p"}], "-", 
           RowBox[{"Ixy", " ", "q"}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Iyz", " ", "p"}], "-", 
           RowBox[{"Ixz", " ", "q"}]}], ")"}], " ", "r"}], "+", 
        RowBox[{"Izx", " ", 
         OverscriptBox["p", "."]}], "+", 
        RowBox[{"Izy", " ", 
         OverscriptBox["q", "."]}], "+", 
        RowBox[{"Izz", " ", 
         OverscriptBox["r", "."]}]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.771294534276028*^9, 3.7712945870005574`*^9, 3.7712946198359475`*^9, 
   3.7712946614655466`*^9, {3.771294828968522*^9, 3.771294857323876*^9}, 
   3.7712948930487614`*^9, 3.7712952882381945`*^9, 3.7713231599716687`*^9, 
   3.77132355764231*^9, 3.771325187433812*^9, 3.7713267734694395`*^9, 
   3.771332164128315*^9, 3.771357553575268*^9, 3.771420535428471*^9, 
   3.7714253830325155`*^9, 3.7714872766692095`*^9, 3.771497031727603*^9, 
   3.7715014318818226`*^9, 3.771506180825694*^9, 3.771536660601061*^9, 
   3.7715609910968204`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->
  "Out[52]//MatrixForm=",ExpressionUUID->"24a6072b-8a6b-4c1a-8f28-\
f72305cbcdea"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"criavetordevetores", "[", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox[
      UnderscriptBox["V", "_"], "inB"], ",", 
     SubscriptBox[
      UnderscriptBox["\[Omega]", "_"], "inB"]}], "}"}], "]"}], ";", 
  RowBox[{
   UnderscriptBox["FG", "_"], "//", "MatrixForm"}]}]], "Input",
 CellChangeTimes->{3.771323579549061*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[53]:=",ExpressionUUID->"1dddfb8d-2d99-4ee9-a4b4-c78d8406d66b"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{"m", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "r"}], " ", "vv"}], "+", 
          RowBox[{"q", " ", "ww"}]}], ")"}]}]},
      {
       RowBox[{"m", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"r", " ", "uu"}], "-", 
          RowBox[{"p", " ", "ww"}]}], ")"}]}]},
      {
       RowBox[{"m", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "q"}], " ", "uu"}], "+", 
          RowBox[{"p", " ", "vv"}]}], ")"}]}]},
      {
       RowBox[{
        RowBox[{"p", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Izx", " ", "q"}], "-", 
           RowBox[{"Iyx", " ", "r"}]}], ")"}]}], "+", 
        RowBox[{"q", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Izy", " ", "q"}], "-", 
           RowBox[{"Iyy", " ", "r"}]}], ")"}]}], "+", 
        RowBox[{"r", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Izz", " ", "q"}], "-", 
           RowBox[{"Iyz", " ", "r"}]}], ")"}]}]}]},
      {
       RowBox[{
        RowBox[{"p", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "Izx"}], " ", "p"}], "+", 
           RowBox[{"Ixx", " ", "r"}]}], ")"}]}], "+", 
        RowBox[{"q", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "Izy"}], " ", "p"}], "+", 
           RowBox[{"Ixy", " ", "r"}]}], ")"}]}], "+", 
        RowBox[{"r", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "Izz"}], " ", "p"}], "+", 
           RowBox[{"Ixz", " ", "r"}]}], ")"}]}]}]},
      {
       RowBox[{
        RowBox[{"p", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Iyx", " ", "p"}], "-", 
           RowBox[{"Ixx", " ", "q"}]}], ")"}]}], "+", 
        RowBox[{"q", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Iyy", " ", "p"}], "-", 
           RowBox[{"Ixy", " ", "q"}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Iyz", " ", "p"}], "-", 
           RowBox[{"Ixz", " ", "q"}]}], ")"}], " ", "r"}]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.771293020467786*^9, 3.771323159998597*^9, {3.7713235604159164`*^9, 
   3.77132358049955*^9}, 3.771325187462735*^9, 3.7713267735003557`*^9, 
   3.771332164165215*^9, 3.771357553614195*^9, 3.7714205354573965`*^9, 
   3.7714253831868153`*^9, 3.771487276692148*^9, 3.7714970317505107`*^9, 
   3.7715014319047613`*^9, 3.771506180848605*^9, 3.771536660632943*^9, 
   3.7715609911267385`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->
  "Out[53]//MatrixForm=",ExpressionUUID->"8e81ab53-ac89-4381-b768-\
1660a995fa30"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{
      OverscriptBox["X", "\[DoubleDot]"], "[", "t_", "]"}], "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SubscriptBox["s", "\[Psi]"], " ", 
         SubscriptBox["s", "\[Phi]"]}], "+", 
        RowBox[{
         SubscriptBox["c", "\[Psi]"], " ", 
         SubscriptBox["s", "\[Theta]"], " ", 
         SubscriptBox["c", "\[Phi]"]}]}], ")"}], " ", 
      FractionBox[
       RowBox[{"U1", "[", "t", "]"}], "m"]}]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      OverscriptBox["Y", "\[DoubleDot]"], "[", "t_", "]"}], "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          SubscriptBox["c", "\[Psi]"]}], " ", 
         SubscriptBox["s", "\[Phi]"]}], "+", 
        RowBox[{
         SubscriptBox["s", "\[Psi]"], " ", 
         SubscriptBox["s", "\[Theta]"], " ", 
         SubscriptBox["c", "\[Phi]"]}]}], ")"}], " ", 
      FractionBox[
       RowBox[{"U1", "[", "t", "]"}], "m"]}]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      OverscriptBox["Z", "\[DoubleDot]"], "[", "t_", "]"}], "=", 
     RowBox[{
      RowBox[{"-", "g"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["c", "\[Theta]"], " ", 
         SubscriptBox["c", "\[Phi]"]}], ")"}], " ", 
       FractionBox[
        RowBox[{"U1", "[", "t", "]"}], "m"]}]}]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      OverscriptBox["\[Phi]", "."], "[", "t_", "]"}], "=", 
     RowBox[{"-", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"Cot", "[", "\[Phi]\[Phi]", "]"}], "2"]}]], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "ppp"}], "-", 
         RowBox[{"ppp", " ", 
          SuperscriptBox[
           RowBox[{"Cot", "[", "\[Phi]\[Phi]", "]"}], "2"]}], "-", 
         RowBox[{"qqq", " ", 
          RowBox[{"Csc", "[", "\[Phi]\[Phi]", "]"}], " ", 
          RowBox[{"Tan", "[", "\[Theta]\[Theta]", "]"}]}], "-", 
         RowBox[{"rrr", " ", 
          RowBox[{"Cot", "[", "\[Phi]\[Phi]", "]"}], " ", 
          RowBox[{"Csc", "[", "\[Phi]\[Phi]", "]"}], " ", 
          RowBox[{"Tan", "[", "\[Theta]\[Theta]", "]"}]}]}], ")"}]}]}]}], ",",
     "\[IndentingNewLine]", 
    RowBox[{"optional1", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"Flatten", "[", "solu1", "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      OverscriptBox["\[Theta]", "."], "[", "t_", "]"}], "=", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", "qqq"}], " ", 
         RowBox[{"Cos", "[", "\[Phi]\[Phi]", "]"}]}], "+", 
        RowBox[{"rrr", " ", 
         RowBox[{"Sin", "[", "\[Phi]\[Phi]", "]"}]}]}], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Phi]\[Phi]", "]"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Phi]\[Phi]", "]"}], "2"]}]]}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"optional2", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"Flatten", "[", "solu1", "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      OverscriptBox["\[Psi]", "."], "[", "t_", "]"}], "=", 
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "qqq"}], " ", 
           RowBox[{"Csc", "[", "\[Phi]\[Phi]", "]"}], " ", 
           RowBox[{"Sec", "[", "\[Theta]\[Theta]", "]"}]}], "-", 
          RowBox[{"rrr", " ", 
           RowBox[{"Cot", "[", "\[Phi]\[Phi]", "]"}], " ", 
           RowBox[{"Csc", "[", "\[Phi]\[Phi]", "]"}], " ", 
           RowBox[{"Sec", "[", "\[Theta]\[Theta]", "]"}]}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox[
           RowBox[{"Cot", "[", "\[Phi]\[Phi]", "]"}], "2"]}], ")"}]}], 
       ")"}]}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"optional3", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"Flatten", "[", "solu1", "]"}], "[", 
       RowBox[{"[", "3", "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      OverscriptBox["p", "."], "[", "t_", "]"}], "=", 
     RowBox[{
      RowBox[{
       FractionBox[
        RowBox[{
         SubscriptBox["II", "YY"], "-", 
         SubscriptBox["II", "ZZ"]}], 
        SubscriptBox["II", "XX"]], " ", "q", " ", "r"}], "-", 
      RowBox[{
       FractionBox[
        SubscriptBox["JJ", "TP"], 
        SubscriptBox["II", "XX"]], " ", "q", " ", "\[CapitalOmega]"}], "+", 
      FractionBox[
       RowBox[{"U2", "[", "t", "]"}], "m"]}]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      OverscriptBox["q", "."], "[", "t_", "]"}], "=", 
     RowBox[{
      RowBox[{
       FractionBox[
        RowBox[{
         SubscriptBox["II", "ZZ"], "-", 
         SubscriptBox["II", "XX"]}], 
        SubscriptBox["II", "YY"]], " ", "p", " ", "r"}], "-", 
      RowBox[{
       FractionBox[
        SubscriptBox["JJ", "TP"], 
        SubscriptBox["II", "YY"]], " ", "p", " ", "\[CapitalOmega]"}], "+", 
      FractionBox[
       RowBox[{"U3", "[", "t", "]"}], "m"]}]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      OverscriptBox["r", "."], "[", "t_", "]"}], "=", 
     RowBox[{
      RowBox[{
       FractionBox[
        RowBox[{
         SubscriptBox["II", "XX"], "-", 
         SubscriptBox["II", "YY"]}], 
        SubscriptBox["II", "ZZ"]], " ", "p", " ", "q", " ", 
       "\[CapitalOmega]"}], "+", 
      FractionBox[
       RowBox[{"U4", "[", "t", "]"}], 
       SubscriptBox["II", "ZZ"]]}]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      OverscriptBox["u", "."], "[", "t_", "]"}], "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"v", " ", "r"}], "-", 
        RowBox[{"w", " ", "q"}]}], ")"}], "+", 
      RowBox[{"g", " ", 
       SubscriptBox["s", "\[Theta]"]}]}]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      OverscriptBox["v", "."], "[", "t_", "]"}], "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"w", " ", "r"}], "-", 
        RowBox[{"u", " ", "r"}]}], ")"}], "-", 
      RowBox[{"g", " ", 
       SubscriptBox["c", "\[Theta]"], " ", 
       SubscriptBox["s", "\[Phi]"]}]}]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      OverscriptBox["w", "."], "[", "t_", "]"}], "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"u", " ", "q"}], "-", 
        RowBox[{"v", " ", "p"}]}], ")"}], "-", 
      RowBox[{"g", " ", 
       SubscriptBox["c", "\[Theta]"], " ", 
       SubscriptBox["s", "\[Phi]"], 
       FractionBox[
        RowBox[{"U1", "[", "t", "]"}], "m"]}]}]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"U1", "[", "t_", "]"}], "=", 
     RowBox[{"b", " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[CapitalOmega]1", "2"], "+", 
        SuperscriptBox["\[CapitalOmega]2", "2"], "+", 
        SuperscriptBox["\[CapitalOmega]3", "2"], "+", 
        SuperscriptBox["\[CapitalOmega]4", "2"]}], ")"}]}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"U2", "[", "t_", "]"}], "=", 
     RowBox[{"l", " ", "b", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["\[CapitalOmega]2", "2"]}], "+", 
        SuperscriptBox["\[CapitalOmega]4", "2"]}], ")"}]}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"U3", "[", "t_", "]"}], "=", 
     RowBox[{"l", " ", "b", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
        SuperscriptBox["\[CapitalOmega]3", "2"]}], ")"}]}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"U4", "[", "t_", "]"}], "=", 
     RowBox[{"d", " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[CapitalOmega]1", "2"], "+", 
        SuperscriptBox["\[CapitalOmega]2", "2"], "+", 
        SuperscriptBox["\[CapitalOmega]3", "2"], "+", 
        SuperscriptBox["\[CapitalOmega]4", "2"]}], ")"}]}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\[CapitalOmega]", "=", 
     RowBox[{
      RowBox[{"-", "\[CapitalOmega]1"}], "+", "\[CapitalOmega]2", "+", 
      "\[CapitalOmega]3", "+", "\[CapitalOmega]4"}]}]}], "}"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"ppp", "\[Rule]", 
     RowBox[{"p", "[", "t", "]"}]}], ",", 
    RowBox[{"qqq", "\[Rule]", 
     RowBox[{"q", "[", "t", "]"}]}], ",", 
    RowBox[{"rrr", "\[Rule]", 
     RowBox[{"r", "[", "t", "]"}]}], ",", 
    RowBox[{"\[Theta]", "\[Rule]", 
     RowBox[{"\[Theta]", "[", "t", "]"}]}], ",", 
    RowBox[{"\[Psi]", "\[Rule]", 
     RowBox[{"\[Psi]", "[", "t", "]"}]}], ",", 
    RowBox[{"\[Phi]", "\[Rule]", 
     RowBox[{"\[Phi]", "[", "t", "]"}]}]}], "}"}]}]], "Text",
 CellChangeTimes->{{3.771093626116*^9, 3.7710936672633085`*^9}, {
   3.771094337921509*^9, 3.7710946007877474`*^9}, {3.7710946591864514`*^9, 
   3.771094968445501*^9}, 3.771095264881524*^9, {3.771096000297496*^9, 
   3.7710960248384104`*^9}, {3.7710961972772384`*^9, 3.7710962417756248`*^9}, 
   3.771096326022598*^9, {3.771096867938862*^9, 3.771097062707467*^9}, {
   3.77109709645461*^9, 3.771097243283868*^9}, {3.7710972903092384`*^9, 
   3.7710973037957296`*^9}, {3.7710973553288875`*^9, 
   3.7710973897372103`*^9}, {3.7710974323273745`*^9, 3.7710974591911173`*^9}, 
   3.771097945926637*^9, {3.771097983498045*^9, 3.7710980346002793`*^9}, {
   3.7713218612558985`*^9, 3.771321931760805*^9}, {3.771322007576578*^9, 
   3.7713220134689655`*^9}, {3.7713222308106594`*^9, 3.771322244888733*^9}, {
   3.7713222981621757`*^9, 3.771322390158583*^9}, 3.7713227326325417`*^9, 
   3.771325175005024*^9, {3.7713266214365797`*^9, 3.7713267313084135`*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,ExpressionUUID->"1dbd2348-29d6-436d-a2bc-ccceb257c5f8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"uvw", "=", 
   RowBox[{
    SubscriptBox["T", "BtoF"], ".", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"u", "[", "t", "]"}], ",", 
      RowBox[{"v", "[", "t", "]"}], ",", 
      RowBox[{"w", "[", "t", "]"}]}], "}"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7713505542564673`*^9, 3.7713506089957604`*^9}, {
  3.7715269792369623`*^9, 3.7715269902135797`*^9}, {3.771527661093864*^9, 
  3.771527663693971*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[60]:=",ExpressionUUID->"571463b3-11f4-4e14-ab00-a991f074569d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"velocityfix", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"dxx", ",", "dyy", ",", "dzz"}], "}"}], "\[Equal]", "uvw"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"dxx", ",", "dyy", ",", "dzz"}], "}"}]}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7713506223051667`*^9, 3.771350659090042*^9}, {
   3.771350696684633*^9, 3.771350765920086*^9}, {3.771350802048924*^9, 
   3.771350978536967*^9}, 3.7713511882556877`*^9, {3.771527104097865*^9, 
   3.7715271381003633`*^9}, {3.771527640042747*^9, 3.7715276415258265`*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[61]:=",ExpressionUUID->"40c8c312-a0d3-476a-a403-7ae87033f4a8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"eqssys", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       OverscriptBox["u", "."], "[", "t", "]"}], "==", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"vvv", " ", "rrr"}], "-", 
         RowBox[{"www", " ", "qqq"}]}], ")"}], "+", 
       RowBox[{"g", " ", 
        SubscriptBox["s", "\[Theta]\[Theta]"]}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       OverscriptBox["v", "."], "[", "t", "]"}], "==", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"www", " ", "ppp"}], "-", 
         RowBox[{"uuu", " ", "rrr"}]}], ")"}], "-", 
       RowBox[{"g", " ", 
        SubscriptBox["c", "\[Theta]\[Theta]"], " ", 
        SubscriptBox["s", "\[Phi]\[Phi]"]}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       OverscriptBox["w", "."], "[", "t", "]"}], "==", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"uuu", " ", "qqq"}], "-", 
         RowBox[{"vvv", " ", "ppp"}]}], ")"}], "-", 
       RowBox[{"g", " ", 
        SubscriptBox["c", "\[Theta]\[Theta]"], " ", 
        SubscriptBox["s", "\[Phi]\[Phi]"], 
        FractionBox[
         RowBox[{"U1", "[", "t", "]"}], "m"]}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       OverscriptBox["p", "."], "[", "t", "]"}], "==", 
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{"Iyy", "-", "Izz"}], "Ixx"], " ", "qqq", " ", "rrr"}], "-", 
       RowBox[{
        FractionBox[
         SubscriptBox["JJ", "TP"], "Ixx"], " ", "qqq", " ", 
        "\[CapitalOmega]"}], "+", 
       FractionBox[
        RowBox[{"U2", "[", "t", "]"}], "Ixx"]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       OverscriptBox["q", "."], "[", "t", "]"}], "==", 
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{"Izz", "-", "Ixx"}], "Iyy"], " ", "ppp", " ", "rrr"}], "+", 
       RowBox[{
        FractionBox[
         SubscriptBox["JJ", "TP"], "Iyy"], " ", "ppp", " ", 
        "\[CapitalOmega]"}], "+", 
       FractionBox[
        RowBox[{"U3", "[", "t", "]"}], "Iyy"]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       OverscriptBox["r", "."], "[", "t", "]"}], "==", 
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{"Ixx", "-", "Iyy"}], "Izz"], " ", "ppp", " ", "qqq"}], "+", 
       FractionBox[
        RowBox[{"U4", "[", "t", "]"}], "Izz"]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       OverscriptBox["X", "."], "[", "t", "]"}], "==", 
      RowBox[{
       RowBox[{"velocityfix", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       OverscriptBox["Y", "."], "[", "t", "]"}], "==", 
      RowBox[{
       RowBox[{"velocityfix", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       OverscriptBox["Z", "."], "[", "t", "]"}], "==", 
      RowBox[{
       RowBox[{"velocityfix", "[", 
        RowBox[{"[", "3", "]"}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       OverscriptBox["\[Phi]", "."], "[", "t", "]"}], "==", 
      RowBox[{
       RowBox[{
        RowBox[{"Flatten", "[", "solu1", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       OverscriptBox["\[Theta]", "."], "[", "t", "]"}], "==", 
      RowBox[{
       RowBox[{
        RowBox[{"Flatten", "[", "solu1", "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       OverscriptBox["\[Psi]", "."], "[", "t", "]"}], "==", 
      RowBox[{
       RowBox[{
        RowBox[{"Flatten", "[", "solu1", "]"}], "[", 
        RowBox[{"[", "3", "]"}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
        RowBox[{"u", "[", "t", "]"}], "==", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"vvv", " ", "rrr"}], "-", 
           RowBox[{"www", " ", "qqq"}]}], ")"}], "+", 
         RowBox[{"g", " ", 
          SubscriptBox["s", "\[Theta]\[Theta]"]}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"v", "[", "t", "]"}], "==", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"www", " ", "ppp"}], "-", 
           RowBox[{"uuu", " ", "rrr"}]}], ")"}], "-", 
         RowBox[{"g", " ", 
          SubscriptBox["c", "\[Theta]\[Theta]"], " ", 
          SubscriptBox["s", "\[Phi]\[Phi]"]}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"w", "[", "t", "]"}], "==", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"uuu", " ", "qqq"}], "-", 
           RowBox[{"vvv", " ", "ppp"}]}], ")"}], "-", 
         RowBox[{"g", " ", 
          SubscriptBox["c", "\[Theta]\[Theta]"], " ", 
          SubscriptBox["s", "\[Phi]\[Phi]"], 
          FractionBox[
           RowBox[{"U1", "[", "t", "]"}], "m"]}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"p", "[", "t", "]"}], "==", 
        RowBox[{
         RowBox[{
          FractionBox[
           RowBox[{"Iyy", "-", "Izz"}], "Ixx"], " ", "qqq", " ", "rrr"}], "-", 
         RowBox[{
          FractionBox[
           SubscriptBox["JJ", "TP"], "Ixx"], " ", "qqq", " ", 
          "\[CapitalOmega]"}], "+", 
         FractionBox[
          RowBox[{"U2", "[", "t", "]"}], "Ixx"]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"q", "[", "t", "]"}], "==", 
        RowBox[{
         RowBox[{
          FractionBox[
           RowBox[{"Izz", "-", "Ixx"}], "Iyy"], " ", "ppp", " ", "rrr"}], "+", 
         RowBox[{
          FractionBox[
           SubscriptBox["JJ", "TP"], "Iyy"], " ", "ppp", " ", 
          "\[CapitalOmega]"}], "+", 
         FractionBox[
          RowBox[{"U3", "[", "t", "]"}], "Iyy"]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"r", "[", "t", "]"}], "==", 
        RowBox[{
         RowBox[{
          FractionBox[
           RowBox[{"Ixx", "-", "Iyy"}], "Izz"], " ", "ppp", " ", "qqq"}], "+", 
         FractionBox[
          RowBox[{"U4", "[", "t", "]"}], "Izz"]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         OverscriptBox["X", "\[DoubleDot]"], "[", "t", "]"}], "==", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["s", "\[Psi]\[Psi]"], " ", 
            SubscriptBox["s", "\[Phi]\[Phi]"]}], "+", 
           RowBox[{
            SubscriptBox["c", "\[Psi]\[Psi]"], " ", 
            SubscriptBox["s", "\[Theta]\[Theta]"], " ", 
            SubscriptBox["c", "\[Phi]\[Phi]"]}]}], ")"}], " ", 
         FractionBox[
          RowBox[{"U1", "[", "t", "]"}], "m"]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         OverscriptBox["Y", "\[DoubleDot]"], "[", "t", "]"}], "==", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             SubscriptBox["c", "\[Psi]\[Psi]"]}], " ", 
            SubscriptBox["s", "\[Phi]\[Phi]"]}], "+", 
           RowBox[{
            SubscriptBox["s", "\[Psi]\[Psi]"], " ", 
            SubscriptBox["s", "\[Theta]\[Theta]"], " ", 
            SubscriptBox["c", "\[Phi]\[Phi]"]}]}], ")"}], " ", 
         FractionBox[
          RowBox[{"U1", "[", "t", "]"}], "m"]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         OverscriptBox["Z", "\[DoubleDot]"], "[", "t", "]"}], "==", 
        RowBox[{
         RowBox[{"-", "g"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["c", "\[Theta]\[Theta]"], " ", 
            SubscriptBox["c", "\[Phi]\[Phi]"]}], ")"}], " ", 
          FractionBox[
           RowBox[{"U1", "[", "t", "]"}], "m"]}]}]}], ","}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"U1", "[", "t", "]"}], "==", 
      RowBox[{"b", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[CapitalOmega]1", "2"], "+", 
         SuperscriptBox["\[CapitalOmega]2", "2"], "+", 
         SuperscriptBox["\[CapitalOmega]3", "2"], "+", 
         SuperscriptBox["\[CapitalOmega]4", "2"]}], ")"}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"U2", "[", "t", "]"}], "==", 
      RowBox[{"l", " ", "b", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[CapitalOmega]2", "2"]}], "+", 
         SuperscriptBox["\[CapitalOmega]4", "2"]}], ")"}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"U3", "[", "t", "]"}], "==", 
      RowBox[{"l", " ", "b", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
         SuperscriptBox["\[CapitalOmega]3", "2"]}], ")"}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"U4", "[", "t", "]"}], "==", 
      RowBox[{"d", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
         SuperscriptBox["\[CapitalOmega]2", "2"], "-", 
         SuperscriptBox["\[CapitalOmega]3", "2"], "+", 
         SuperscriptBox["\[CapitalOmega]4", "2"]}], ")"}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\[CapitalOmega]", "==", 
      RowBox[{
       RowBox[{"-", "\[CapitalOmega]1"}], "+", "\[CapitalOmega]2", "-", 
       "\[CapitalOmega]3", "+", "\[CapitalOmega]4"}]}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7713227410699754`*^9, 3.7713228646931562`*^9}, {
   3.771322943674247*^9, 3.7713230361980085`*^9}, {3.771323148605034*^9, 
   3.7713231717250195`*^9}, {3.7713232085638056`*^9, 3.771323211270564*^9}, 
   3.7713236686755924`*^9, {3.7713242909197917`*^9, 3.7713243403057656`*^9}, 
   3.7713251089367895`*^9, {3.7713263727926016`*^9, 3.771326500256378*^9}, {
   3.771326822499893*^9, 3.7713268457656236`*^9}, {3.7713318836821613`*^9, 
   3.771331893166272*^9}, {3.7713379702935815`*^9, 3.7713380050847836`*^9}, {
   3.771351041178975*^9, 3.7713511140471735`*^9}, {3.771358393520465*^9, 
   3.771358406820388*^9}, {3.771428912433713*^9, 3.771428917953986*^9}, {
   3.771448142802117*^9, 3.771448167858138*^9}, 3.7714892084738855`*^9, {
   3.771489249477784*^9, 3.771489266044959*^9}, {3.771489419467988*^9, 
   3.7714894199447365`*^9}, {3.77150050632776*^9, 3.771500515576231*^9}, {
   3.7715005606319036`*^9, 3.771500619571719*^9}, {3.771500954387558*^9, 
   3.771500993358346*^9}, {3.771501383089319*^9, 3.771501398733981*^9}, {
   3.77152689393423*^9, 3.7715269567603226`*^9}, {3.7715294143150263`*^9, 
   3.771529416495197*^9}, {3.7715295601152716`*^9, 3.7715295679954505`*^9}, {
   3.7715319674732523`*^9, 3.7715319749652767`*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[62]:=",ExpressionUUID->"75dceaa4-49b7-4f03-89a4-6a4aeb4d571c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"eqssys", "//", "MatrixForm"}], "//", "TraditionalForm"}]], "Input",
 CellChangeTimes->{{3.771326777554514*^9, 3.7713267779225287`*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[63]:=",ExpressionUUID->"914c1752-c4d2-4a13-8390-90b658af601b"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", 
    TagBox[GridBox[{
       {
        RowBox[{
         RowBox[{
          OverscriptBox["u", "."], "(", "t", ")"}], "\[LongEqual]", 
         RowBox[{
          RowBox[{"g", " ", 
           RowBox[{"sin", "(", "\[Theta]\[Theta]", ")"}]}], "-", 
          RowBox[{"qqq", " ", "www"}], "+", 
          RowBox[{"rrr", " ", "vvv"}]}]}]},
       {
        RowBox[{
         RowBox[{
          OverscriptBox["v", "."], "(", "t", ")"}], "\[LongEqual]", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"g", " ", 
            RowBox[{"cos", "(", "\[Theta]\[Theta]", ")"}], " ", 
            RowBox[{"sin", "(", "\[Phi]\[Phi]", ")"}]}]}], "+", 
          RowBox[{"ppp", " ", "www"}], "-", 
          RowBox[{"rrr", " ", "uuu"}]}]}]},
       {
        RowBox[{
         RowBox[{
          OverscriptBox["w", "."], "(", "t", ")"}], "\[LongEqual]", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{"g", " ", 
             RowBox[{"cos", "(", "\[Theta]\[Theta]", ")"}], " ", 
             RowBox[{"U1", "(", "t", ")"}], " ", 
             RowBox[{"sin", "(", "\[Phi]\[Phi]", ")"}]}], "m"]}], "-", 
          RowBox[{"ppp", " ", "vvv"}], "+", 
          RowBox[{"qqq", " ", "uuu"}]}]}]},
       {
        RowBox[{
         RowBox[{
          OverscriptBox["p", "."], "(", "t", ")"}], "\[LongEqual]", 
         RowBox[{
          FractionBox[
           RowBox[{"qqq", " ", "rrr", " ", 
            RowBox[{"(", 
             RowBox[{"Iyy", "-", "Izz"}], ")"}]}], "Ixx"], "-", 
          FractionBox[
           RowBox[{"qqq", " ", "\[CapitalOmega]", " ", 
            SubscriptBox["JJ", "TP"]}], "Ixx"], "+", 
          FractionBox[
           RowBox[{"U2", "(", "t", ")"}], "Ixx"]}]}]},
       {
        RowBox[{
         RowBox[{
          OverscriptBox["q", "."], "(", "t", ")"}], "\[LongEqual]", 
         RowBox[{
          FractionBox[
           RowBox[{"ppp", " ", "rrr", " ", 
            RowBox[{"(", 
             RowBox[{"Izz", "-", "Ixx"}], ")"}]}], "Iyy"], "+", 
          FractionBox[
           RowBox[{"ppp", " ", "\[CapitalOmega]", " ", 
            SubscriptBox["JJ", "TP"]}], "Iyy"], "+", 
          FractionBox[
           RowBox[{"U3", "(", "t", ")"}], "Iyy"]}]}]},
       {
        RowBox[{
         RowBox[{
          OverscriptBox["r", "."], "(", "t", ")"}], "\[LongEqual]", 
         RowBox[{
          FractionBox[
           RowBox[{"ppp", " ", "qqq", " ", 
            RowBox[{"(", 
             RowBox[{"Ixx", "-", "Iyy"}], ")"}]}], "Izz"], "+", 
          FractionBox[
           RowBox[{"U4", "(", "t", ")"}], "Izz"]}]}]},
       {
        RowBox[{
         RowBox[{
          OverscriptBox["X", "."], "(", "t", ")"}], "\[LongEqual]", 
         RowBox[{
          RowBox[{
           RowBox[{"cos", "(", "\[Theta]\[Theta]", ")"}], " ", 
           RowBox[{"u", "(", "t", ")"}], " ", 
           RowBox[{"cos", "(", "\[Psi]\[Psi]", ")"}]}], "+", 
          RowBox[{
           RowBox[{"sin", "(", "\[Theta]\[Theta]", ")"}], " ", 
           RowBox[{"v", "(", "t", ")"}], " ", 
           RowBox[{"cos", "(", "\[Psi]\[Psi]", ")"}], " ", 
           RowBox[{"sin", "(", "\[Phi]\[Phi]", ")"}]}], "-", 
          RowBox[{
           RowBox[{"v", "(", "t", ")"}], " ", 
           RowBox[{"sin", "(", "\[Psi]\[Psi]", ")"}], " ", 
           RowBox[{"cos", "(", "\[Phi]\[Phi]", ")"}]}], "+", 
          RowBox[{
           RowBox[{"sin", "(", "\[Theta]\[Theta]", ")"}], " ", 
           RowBox[{"w", "(", "t", ")"}], " ", 
           RowBox[{"cos", "(", "\[Psi]\[Psi]", ")"}], " ", 
           RowBox[{"cos", "(", "\[Phi]\[Phi]", ")"}]}], "+", 
          RowBox[{
           RowBox[{"w", "(", "t", ")"}], " ", 
           RowBox[{"sin", "(", "\[Psi]\[Psi]", ")"}], " ", 
           RowBox[{"sin", "(", "\[Phi]\[Phi]", ")"}]}]}]}]},
       {
        RowBox[{
         RowBox[{
          OverscriptBox["Y", "."], "(", "t", ")"}], "\[LongEqual]", 
         RowBox[{
          RowBox[{
           RowBox[{"cos", "(", "\[Theta]\[Theta]", ")"}], " ", 
           RowBox[{"u", "(", "t", ")"}], " ", 
           RowBox[{"sin", "(", "\[Psi]\[Psi]", ")"}]}], "+", 
          RowBox[{
           RowBox[{"sin", "(", "\[Theta]\[Theta]", ")"}], " ", 
           RowBox[{"v", "(", "t", ")"}], " ", 
           RowBox[{"sin", "(", "\[Psi]\[Psi]", ")"}], " ", 
           RowBox[{"sin", "(", "\[Phi]\[Phi]", ")"}]}], "+", 
          RowBox[{
           RowBox[{"v", "(", "t", ")"}], " ", 
           RowBox[{"cos", "(", "\[Psi]\[Psi]", ")"}], " ", 
           RowBox[{"cos", "(", "\[Phi]\[Phi]", ")"}]}], "+", 
          RowBox[{
           RowBox[{"sin", "(", "\[Theta]\[Theta]", ")"}], " ", 
           RowBox[{"w", "(", "t", ")"}], " ", 
           RowBox[{"sin", "(", "\[Psi]\[Psi]", ")"}], " ", 
           RowBox[{"cos", "(", "\[Phi]\[Phi]", ")"}]}], "-", 
          RowBox[{
           RowBox[{"w", "(", "t", ")"}], " ", 
           RowBox[{"cos", "(", "\[Psi]\[Psi]", ")"}], " ", 
           RowBox[{"sin", "(", "\[Phi]\[Phi]", ")"}]}]}]}]},
       {
        RowBox[{
         RowBox[{
          OverscriptBox["Z", "."], "(", "t", ")"}], "\[LongEqual]", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{
            RowBox[{"sin", "(", "\[Theta]\[Theta]", ")"}], " ", 
            RowBox[{"u", "(", "t", ")"}]}]}], "+", 
          RowBox[{
           RowBox[{"cos", "(", "\[Theta]\[Theta]", ")"}], " ", 
           RowBox[{"v", "(", "t", ")"}], " ", 
           RowBox[{"sin", "(", "\[Phi]\[Phi]", ")"}]}], "+", 
          RowBox[{
           RowBox[{"cos", "(", "\[Theta]\[Theta]", ")"}], " ", 
           RowBox[{"w", "(", "t", ")"}], " ", 
           RowBox[{"cos", "(", "\[Phi]\[Phi]", ")"}]}]}]}]},
       {
        RowBox[{
         RowBox[{
          OverscriptBox["\[Phi]", "."], "(", "t", ")"}], "\[LongEqual]", 
         RowBox[{"ppp", "+", 
          RowBox[{"qqq", " ", 
           RowBox[{"tan", "(", "\[Theta]\[Theta]", ")"}], " ", 
           RowBox[{"sin", "(", "\[Phi]\[Phi]", ")"}]}], "+", 
          RowBox[{"rrr", " ", 
           RowBox[{"tan", "(", "\[Theta]\[Theta]", ")"}], " ", 
           RowBox[{"cos", "(", "\[Phi]\[Phi]", ")"}]}]}]}]},
       {
        RowBox[{
         RowBox[{
          OverscriptBox["\[Theta]", "."], "(", "t", ")"}], "\[LongEqual]", 
         RowBox[{
          RowBox[{"qqq", " ", 
           RowBox[{"cos", "(", "\[Phi]\[Phi]", ")"}]}], "-", 
          RowBox[{"rrr", " ", 
           RowBox[{"sin", "(", "\[Phi]\[Phi]", ")"}]}]}]}]},
       {
        RowBox[{
         RowBox[{
          OverscriptBox["\[Psi]", "."], "(", "t", ")"}], "\[LongEqual]", 
         RowBox[{
          RowBox[{"sec", "(", "\[Theta]\[Theta]", ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"qqq", " ", 
             RowBox[{"sin", "(", "\[Phi]\[Phi]", ")"}]}], "+", 
            RowBox[{"rrr", " ", 
             RowBox[{"cos", "(", "\[Phi]\[Phi]", ")"}]}]}], ")"}]}]}]},
       {
        RowBox[{
         RowBox[{"U1", "(", "t", ")"}], "\[LongEqual]", 
         RowBox[{"b", " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["\[CapitalOmega]1", "2"], "+", 
            SuperscriptBox["\[CapitalOmega]2", "2"], "+", 
            SuperscriptBox["\[CapitalOmega]3", "2"], "+", 
            SuperscriptBox["\[CapitalOmega]4", "2"]}], ")"}]}]}]},
       {
        RowBox[{
         RowBox[{"U2", "(", "t", ")"}], "\[LongEqual]", 
         RowBox[{"b", " ", "l", " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["\[CapitalOmega]4", "2"], "-", 
            SuperscriptBox["\[CapitalOmega]2", "2"]}], ")"}]}]}]},
       {
        RowBox[{
         RowBox[{"U3", "(", "t", ")"}], "\[LongEqual]", 
         RowBox[{"b", " ", "l", " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["\[CapitalOmega]3", "2"], "-", 
            SuperscriptBox["\[CapitalOmega]1", "2"]}], ")"}]}]}]},
       {
        RowBox[{
         RowBox[{"U4", "(", "t", ")"}], "\[LongEqual]", 
         RowBox[{"d", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
            SuperscriptBox["\[CapitalOmega]2", "2"], "-", 
            SuperscriptBox["\[CapitalOmega]3", "2"], "+", 
            SuperscriptBox["\[CapitalOmega]4", "2"]}], ")"}]}]}]},
       {
        RowBox[{"\[CapitalOmega]", "\[LongEqual]", 
         RowBox[{
          RowBox[{"-", "\[CapitalOmega]1"}], "+", "\[CapitalOmega]2", "-", 
          "\[CapitalOmega]3", "+", "\[CapitalOmega]4"}]}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     Column], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellChangeTimes->{3.7713267791622133`*^9, 3.77132713682407*^9, 
  3.771332164443472*^9, 3.771338044156871*^9, 3.771357553924334*^9, 
  3.7713584166104507`*^9, 3.771420535787425*^9, 3.771425407233554*^9, 
  3.7714481782440395`*^9, 3.7714872769774103`*^9, 3.7714894624957895`*^9, 
  3.771497032030761*^9, 3.7715014561535883`*^9, 3.771506185834272*^9, 
  3.7715319852802525`*^9, 3.7715366608783193`*^9, 3.771560991550607*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->
  "Out[63]//TraditionalForm=",ExpressionUUID->"c260e1dd-d1fa-4566-a2c0-\
14a0d0fae0fb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"substitutions1", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"uuu", "\[Rule]", 
      RowBox[{"u", "[", "t", "]"}]}], ",", 
     RowBox[{"vvv", "\[Rule]", 
      RowBox[{"v", "[", "t", "]"}]}], ",", 
     RowBox[{"www", "\[Rule]", 
      RowBox[{"w", "[", "t", "]"}]}], ",", 
     RowBox[{"ppp", "\[Rule]", 
      RowBox[{"p", "[", "t", "]"}]}], ",", 
     RowBox[{"qqq", "\[Rule]", 
      RowBox[{"q", "[", "t", "]"}]}], ",", 
     RowBox[{"rrr", "\[Rule]", 
      RowBox[{"r", "[", "t", "]"}]}], ",", 
     RowBox[{"\[Theta]\[Theta]", "\[Rule]", 
      RowBox[{"\[Theta]", "[", "t", "]"}]}], ",", 
     RowBox[{"\[Psi]\[Psi]", "\[Rule]", 
      RowBox[{"\[Psi]", "[", "t", "]"}]}], ",", 
     RowBox[{"\[Phi]\[Phi]", "\[Rule]", 
      RowBox[{"\[Phi]", "[", "t", "]"}]}], ",", 
     RowBox[{"\[CapitalOmega]1", "\[Rule]", " ", 
      RowBox[{"\[CapitalOmega]1", "[", "t", "]"}]}], ",", 
     RowBox[{"\[CapitalOmega]2", "\[Rule]", " ", 
      RowBox[{"\[CapitalOmega]2", "[", "t", "]"}]}], ",", 
     RowBox[{"\[CapitalOmega]3", "\[Rule]", " ", 
      RowBox[{"\[CapitalOmega]3", "[", "t", "]"}]}], ",", 
     RowBox[{"\[CapitalOmega]4", "\[Rule]", " ", 
      RowBox[{"\[CapitalOmega]4", "[", "t", "]"}]}], ",", 
     RowBox[{"\[CapitalOmega]", "\[Rule]", " ", 
      RowBox[{"\[CapitalOmega]", "[", "t", "]"}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eqssys", "/.", "substitutions1"}], "//", 
  "TraditionalForm"}]}], "Input",
 CellChangeTimes->{{3.771329819926384*^9, 3.771329820243537*^9}, {
   3.7714252301192207`*^9, 3.7714252379853053`*^9}, {3.771465456938182*^9, 
   3.7714654575922832`*^9}, 3.7714654895395803`*^9, {3.7714871805848365`*^9, 
   3.771487184703796*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[64]:=",ExpressionUUID->"f250e479-9ca0-4c62-81a9-e019afc18d56"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{
      OverscriptBox["u", "."], "(", "t", ")"}], "\[LongEqual]", 
     RowBox[{
      RowBox[{"g", " ", 
       RowBox[{"sin", "(", 
        RowBox[{"\[Theta]", "(", "t", ")"}], ")"}]}], "-", 
      RowBox[{
       RowBox[{"q", "(", "t", ")"}], " ", 
       RowBox[{"w", "(", "t", ")"}]}], "+", 
      RowBox[{
       RowBox[{"r", "(", "t", ")"}], " ", 
       RowBox[{"v", "(", "t", ")"}]}]}]}], ",", 
    RowBox[{
     RowBox[{
      OverscriptBox["v", "."], "(", "t", ")"}], "\[LongEqual]", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"g", " ", 
        RowBox[{"cos", "(", 
         RowBox[{"\[Theta]", "(", "t", ")"}], ")"}], " ", 
        RowBox[{"sin", "(", 
         RowBox[{"\[Phi]", "(", "t", ")"}], ")"}]}]}], "+", 
      RowBox[{
       RowBox[{"p", "(", "t", ")"}], " ", 
       RowBox[{"w", "(", "t", ")"}]}], "-", 
      RowBox[{
       RowBox[{"r", "(", "t", ")"}], " ", 
       RowBox[{"u", "(", "t", ")"}]}]}]}], ",", 
    RowBox[{
     RowBox[{
      OverscriptBox["w", "."], "(", "t", ")"}], "\[LongEqual]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"g", " ", 
         RowBox[{"U1", "(", "t", ")"}], " ", 
         RowBox[{"cos", "(", 
          RowBox[{"\[Theta]", "(", "t", ")"}], ")"}], " ", 
         RowBox[{"sin", "(", 
          RowBox[{"\[Phi]", "(", "t", ")"}], ")"}]}], "m"]}], "-", 
      RowBox[{
       RowBox[{"p", "(", "t", ")"}], " ", 
       RowBox[{"v", "(", "t", ")"}]}], "+", 
      RowBox[{
       RowBox[{"q", "(", "t", ")"}], " ", 
       RowBox[{"u", "(", "t", ")"}]}]}]}], ",", 
    RowBox[{
     RowBox[{
      OverscriptBox["p", "."], "(", "t", ")"}], "\[LongEqual]", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Iyy", "-", "Izz"}], ")"}], " ", 
        RowBox[{"q", "(", "t", ")"}], " ", 
        RowBox[{"r", "(", "t", ")"}]}], "Ixx"], "-", 
      FractionBox[
       RowBox[{
        SubscriptBox["JJ", "TP"], " ", 
        RowBox[{"q", "(", "t", ")"}], " ", 
        RowBox[{"\[CapitalOmega]", "(", "t", ")"}]}], "Ixx"], "+", 
      FractionBox[
       RowBox[{"U2", "(", "t", ")"}], "Ixx"]}]}], ",", 
    RowBox[{
     RowBox[{
      OverscriptBox["q", "."], "(", "t", ")"}], "\[LongEqual]", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Izz", "-", "Ixx"}], ")"}], " ", 
        RowBox[{"p", "(", "t", ")"}], " ", 
        RowBox[{"r", "(", "t", ")"}]}], "Iyy"], "+", 
      FractionBox[
       RowBox[{
        SubscriptBox["JJ", "TP"], " ", 
        RowBox[{"p", "(", "t", ")"}], " ", 
        RowBox[{"\[CapitalOmega]", "(", "t", ")"}]}], "Iyy"], "+", 
      FractionBox[
       RowBox[{"U3", "(", "t", ")"}], "Iyy"]}]}], ",", 
    RowBox[{
     RowBox[{
      OverscriptBox["r", "."], "(", "t", ")"}], "\[LongEqual]", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Ixx", "-", "Iyy"}], ")"}], " ", 
        RowBox[{"p", "(", "t", ")"}], " ", 
        RowBox[{"q", "(", "t", ")"}]}], "Izz"], "+", 
      FractionBox[
       RowBox[{"U4", "(", "t", ")"}], "Izz"]}]}], ",", 
    RowBox[{
     RowBox[{
      OverscriptBox["X", "."], "(", "t", ")"}], "\[LongEqual]", 
     RowBox[{
      RowBox[{
       RowBox[{"u", "(", "t", ")"}], " ", 
       RowBox[{"cos", "(", 
        RowBox[{"\[Theta]", "(", "t", ")"}], ")"}], " ", 
       RowBox[{"cos", "(", 
        RowBox[{"\[Psi]", "(", "t", ")"}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"v", "(", "t", ")"}], " ", 
       RowBox[{"sin", "(", 
        RowBox[{"\[Theta]", "(", "t", ")"}], ")"}], " ", 
       RowBox[{"cos", "(", 
        RowBox[{"\[Psi]", "(", "t", ")"}], ")"}], " ", 
       RowBox[{"sin", "(", 
        RowBox[{"\[Phi]", "(", "t", ")"}], ")"}]}], "-", 
      RowBox[{
       RowBox[{"v", "(", "t", ")"}], " ", 
       RowBox[{"sin", "(", 
        RowBox[{"\[Psi]", "(", "t", ")"}], ")"}], " ", 
       RowBox[{"cos", "(", 
        RowBox[{"\[Phi]", "(", "t", ")"}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"w", "(", "t", ")"}], " ", 
       RowBox[{"sin", "(", 
        RowBox[{"\[Theta]", "(", "t", ")"}], ")"}], " ", 
       RowBox[{"cos", "(", 
        RowBox[{"\[Psi]", "(", "t", ")"}], ")"}], " ", 
       RowBox[{"cos", "(", 
        RowBox[{"\[Phi]", "(", "t", ")"}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"w", "(", "t", ")"}], " ", 
       RowBox[{"sin", "(", 
        RowBox[{"\[Psi]", "(", "t", ")"}], ")"}], " ", 
       RowBox[{"sin", "(", 
        RowBox[{"\[Phi]", "(", "t", ")"}], ")"}]}]}]}], ",", 
    RowBox[{
     RowBox[{
      OverscriptBox["Y", "."], "(", "t", ")"}], "\[LongEqual]", 
     RowBox[{
      RowBox[{
       RowBox[{"u", "(", "t", ")"}], " ", 
       RowBox[{"cos", "(", 
        RowBox[{"\[Theta]", "(", "t", ")"}], ")"}], " ", 
       RowBox[{"sin", "(", 
        RowBox[{"\[Psi]", "(", "t", ")"}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"v", "(", "t", ")"}], " ", 
       RowBox[{"sin", "(", 
        RowBox[{"\[Theta]", "(", "t", ")"}], ")"}], " ", 
       RowBox[{"sin", "(", 
        RowBox[{"\[Psi]", "(", "t", ")"}], ")"}], " ", 
       RowBox[{"sin", "(", 
        RowBox[{"\[Phi]", "(", "t", ")"}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"v", "(", "t", ")"}], " ", 
       RowBox[{"cos", "(", 
        RowBox[{"\[Psi]", "(", "t", ")"}], ")"}], " ", 
       RowBox[{"cos", "(", 
        RowBox[{"\[Phi]", "(", "t", ")"}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"w", "(", "t", ")"}], " ", 
       RowBox[{"sin", "(", 
        RowBox[{"\[Theta]", "(", "t", ")"}], ")"}], " ", 
       RowBox[{"sin", "(", 
        RowBox[{"\[Psi]", "(", "t", ")"}], ")"}], " ", 
       RowBox[{"cos", "(", 
        RowBox[{"\[Phi]", "(", "t", ")"}], ")"}]}], "-", 
      RowBox[{
       RowBox[{"w", "(", "t", ")"}], " ", 
       RowBox[{"cos", "(", 
        RowBox[{"\[Psi]", "(", "t", ")"}], ")"}], " ", 
       RowBox[{"sin", "(", 
        RowBox[{"\[Phi]", "(", "t", ")"}], ")"}]}]}]}], ",", 
    RowBox[{
     RowBox[{
      OverscriptBox["Z", "."], "(", "t", ")"}], "\[LongEqual]", 
     RowBox[{
      RowBox[{
       RowBox[{"u", "(", "t", ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"-", 
         RowBox[{"sin", "(", 
          RowBox[{"\[Theta]", "(", "t", ")"}], ")"}]}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"v", "(", "t", ")"}], " ", 
       RowBox[{"cos", "(", 
        RowBox[{"\[Theta]", "(", "t", ")"}], ")"}], " ", 
       RowBox[{"sin", "(", 
        RowBox[{"\[Phi]", "(", "t", ")"}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"w", "(", "t", ")"}], " ", 
       RowBox[{"cos", "(", 
        RowBox[{"\[Theta]", "(", "t", ")"}], ")"}], " ", 
       RowBox[{"cos", "(", 
        RowBox[{"\[Phi]", "(", "t", ")"}], ")"}]}]}]}], ",", 
    RowBox[{
     RowBox[{
      OverscriptBox["\[Phi]", "."], "(", "t", ")"}], "\[LongEqual]", 
     RowBox[{
      RowBox[{"p", "(", "t", ")"}], "+", 
      RowBox[{
       RowBox[{"q", "(", "t", ")"}], " ", 
       RowBox[{"tan", "(", 
        RowBox[{"\[Theta]", "(", "t", ")"}], ")"}], " ", 
       RowBox[{"sin", "(", 
        RowBox[{"\[Phi]", "(", "t", ")"}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"r", "(", "t", ")"}], " ", 
       RowBox[{"tan", "(", 
        RowBox[{"\[Theta]", "(", "t", ")"}], ")"}], " ", 
       RowBox[{"cos", "(", 
        RowBox[{"\[Phi]", "(", "t", ")"}], ")"}]}]}]}], ",", 
    RowBox[{
     RowBox[{
      OverscriptBox["\[Theta]", "."], "(", "t", ")"}], "\[LongEqual]", 
     RowBox[{
      RowBox[{
       RowBox[{"q", "(", "t", ")"}], " ", 
       RowBox[{"cos", "(", 
        RowBox[{"\[Phi]", "(", "t", ")"}], ")"}]}], "-", 
      RowBox[{
       RowBox[{"r", "(", "t", ")"}], " ", 
       RowBox[{"sin", "(", 
        RowBox[{"\[Phi]", "(", "t", ")"}], ")"}]}]}]}], ",", 
    RowBox[{
     RowBox[{
      OverscriptBox["\[Psi]", "."], "(", "t", ")"}], "\[LongEqual]", 
     RowBox[{
      RowBox[{"sec", "(", 
       RowBox[{"\[Theta]", "(", "t", ")"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"q", "(", "t", ")"}], " ", 
         RowBox[{"sin", "(", 
          RowBox[{"\[Phi]", "(", "t", ")"}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"r", "(", "t", ")"}], " ", 
         RowBox[{"cos", "(", 
          RowBox[{"\[Phi]", "(", "t", ")"}], ")"}]}]}], ")"}]}]}], ",", 
    RowBox[{
     RowBox[{"U1", "(", "t", ")"}], "\[LongEqual]", 
     RowBox[{"b", " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"\[CapitalOmega]1", "(", "t", ")"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"\[CapitalOmega]2", "(", "t", ")"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"\[CapitalOmega]3", "(", "t", ")"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"\[CapitalOmega]4", "(", "t", ")"}], "2"]}], ")"}]}]}], ",", 
    RowBox[{
     RowBox[{"U2", "(", "t", ")"}], "\[LongEqual]", 
     RowBox[{"b", " ", "l", " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"\[CapitalOmega]4", "(", "t", ")"}], "2"], "-", 
        SuperscriptBox[
         RowBox[{"\[CapitalOmega]2", "(", "t", ")"}], "2"]}], ")"}]}]}], ",", 
    RowBox[{
     RowBox[{"U3", "(", "t", ")"}], "\[LongEqual]", 
     RowBox[{"b", " ", "l", " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"\[CapitalOmega]3", "(", "t", ")"}], "2"], "-", 
        SuperscriptBox[
         RowBox[{"\[CapitalOmega]1", "(", "t", ")"}], "2"]}], ")"}]}]}], ",", 
    RowBox[{
     RowBox[{"U4", "(", "t", ")"}], "\[LongEqual]", 
     RowBox[{"d", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox[
          RowBox[{"\[CapitalOmega]1", "(", "t", ")"}], "2"]}], "+", 
        SuperscriptBox[
         RowBox[{"\[CapitalOmega]2", "(", "t", ")"}], "2"], "-", 
        SuperscriptBox[
         RowBox[{"\[CapitalOmega]3", "(", "t", ")"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"\[CapitalOmega]4", "(", "t", ")"}], "2"]}], ")"}]}]}], ",", 
    RowBox[{
     RowBox[{"\[CapitalOmega]", "(", "t", ")"}], "\[LongEqual]", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"\[CapitalOmega]1", "(", "t", ")"}]}], "+", 
      RowBox[{"\[CapitalOmega]2", "(", "t", ")"}], "-", 
      RowBox[{"\[CapitalOmega]3", "(", "t", ")"}], "+", 
      RowBox[{"\[CapitalOmega]4", "(", "t", ")"}]}]}]}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.771448184520561*^9, 3.771487277095101*^9, 
  3.7714894760614915`*^9, 3.77149703214745*^9, 3.7715014651135855`*^9, 
  3.7715061860187817`*^9, 3.7715320006662264`*^9, 3.771536660991984*^9, 
  3.7715609989703865`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->
  "Out[65]//TraditionalForm=",ExpressionUUID->"cf2f89dd-cccd-4025-b268-\
12ca461b2a7b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"eqssysmod", "=", 
   RowBox[{"eqssys", "/.", "substitutions1"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eqssysmod", "//", "MatrixForm"}], "//", 
  "TraditionalForm"}]}], "Input",
 CellChangeTimes->{{3.7713251901126204`*^9, 3.771325215049923*^9}, {
   3.771326091944018*^9, 3.7713260973465967`*^9}, {3.77132615839811*^9, 
   3.771326253943466*^9}, {3.771326286379716*^9, 3.7713263376879563`*^9}, {
   3.771326562958495*^9, 3.771326585814821*^9}, 3.7713271911801705`*^9, 
   3.771327221902706*^9, {3.771327284784499*^9, 3.771327294597255*^9}, {
   3.771327333440183*^9, 3.771327335438882*^9}, 3.771327420967696*^9, {
   3.7713276696735945`*^9, 3.7713276981531897`*^9}, {3.7713279642865505`*^9, 
   3.771327974626139*^9}, {3.7713280120217657`*^9, 3.771328094775809*^9}, {
   3.7714872603855677`*^9, 3.77148726353911*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[66]:=",ExpressionUUID->"8d3b9bab-5b7c-4304-9bd9-29c2e0417cfa"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", 
    TagBox[GridBox[{
       {
        RowBox[{
         RowBox[{
          OverscriptBox["u", "."], "(", "t", ")"}], "\[LongEqual]", 
         RowBox[{
          RowBox[{"g", " ", 
           RowBox[{"sin", "(", 
            RowBox[{"\[Theta]", "(", "t", ")"}], ")"}]}], "-", 
          RowBox[{
           RowBox[{"q", "(", "t", ")"}], " ", 
           RowBox[{"w", "(", "t", ")"}]}], "+", 
          RowBox[{
           RowBox[{"r", "(", "t", ")"}], " ", 
           RowBox[{"v", "(", "t", ")"}]}]}]}]},
       {
        RowBox[{
         RowBox[{
          OverscriptBox["v", "."], "(", "t", ")"}], "\[LongEqual]", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"g", " ", 
            RowBox[{"cos", "(", 
             RowBox[{"\[Theta]", "(", "t", ")"}], ")"}], " ", 
            RowBox[{"sin", "(", 
             RowBox[{"\[Phi]", "(", "t", ")"}], ")"}]}]}], "+", 
          RowBox[{
           RowBox[{"p", "(", "t", ")"}], " ", 
           RowBox[{"w", "(", "t", ")"}]}], "-", 
          RowBox[{
           RowBox[{"r", "(", "t", ")"}], " ", 
           RowBox[{"u", "(", "t", ")"}]}]}]}]},
       {
        RowBox[{
         RowBox[{
          OverscriptBox["w", "."], "(", "t", ")"}], "\[LongEqual]", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{"g", " ", 
             RowBox[{"U1", "(", "t", ")"}], " ", 
             RowBox[{"cos", "(", 
              RowBox[{"\[Theta]", "(", "t", ")"}], ")"}], " ", 
             RowBox[{"sin", "(", 
              RowBox[{"\[Phi]", "(", "t", ")"}], ")"}]}], "m"]}], "-", 
          RowBox[{
           RowBox[{"p", "(", "t", ")"}], " ", 
           RowBox[{"v", "(", "t", ")"}]}], "+", 
          RowBox[{
           RowBox[{"q", "(", "t", ")"}], " ", 
           RowBox[{"u", "(", "t", ")"}]}]}]}]},
       {
        RowBox[{
         RowBox[{
          OverscriptBox["p", "."], "(", "t", ")"}], "\[LongEqual]", 
         RowBox[{
          FractionBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{"Iyy", "-", "Izz"}], ")"}], " ", 
            RowBox[{"q", "(", "t", ")"}], " ", 
            RowBox[{"r", "(", "t", ")"}]}], "Ixx"], "-", 
          FractionBox[
           RowBox[{
            SubscriptBox["JJ", "TP"], " ", 
            RowBox[{"q", "(", "t", ")"}], " ", 
            RowBox[{"\[CapitalOmega]", "(", "t", ")"}]}], "Ixx"], "+", 
          FractionBox[
           RowBox[{"U2", "(", "t", ")"}], "Ixx"]}]}]},
       {
        RowBox[{
         RowBox[{
          OverscriptBox["q", "."], "(", "t", ")"}], "\[LongEqual]", 
         RowBox[{
          FractionBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{"Izz", "-", "Ixx"}], ")"}], " ", 
            RowBox[{"p", "(", "t", ")"}], " ", 
            RowBox[{"r", "(", "t", ")"}]}], "Iyy"], "+", 
          FractionBox[
           RowBox[{
            SubscriptBox["JJ", "TP"], " ", 
            RowBox[{"p", "(", "t", ")"}], " ", 
            RowBox[{"\[CapitalOmega]", "(", "t", ")"}]}], "Iyy"], "+", 
          FractionBox[
           RowBox[{"U3", "(", "t", ")"}], "Iyy"]}]}]},
       {
        RowBox[{
         RowBox[{
          OverscriptBox["r", "."], "(", "t", ")"}], "\[LongEqual]", 
         RowBox[{
          FractionBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{"Ixx", "-", "Iyy"}], ")"}], " ", 
            RowBox[{"p", "(", "t", ")"}], " ", 
            RowBox[{"q", "(", "t", ")"}]}], "Izz"], "+", 
          FractionBox[
           RowBox[{"U4", "(", "t", ")"}], "Izz"]}]}]},
       {
        RowBox[{
         RowBox[{
          OverscriptBox["X", "."], "(", "t", ")"}], "\[LongEqual]", 
         RowBox[{
          RowBox[{
           RowBox[{"u", "(", "t", ")"}], " ", 
           RowBox[{"cos", "(", 
            RowBox[{"\[Theta]", "(", "t", ")"}], ")"}], " ", 
           RowBox[{"cos", "(", 
            RowBox[{"\[Psi]", "(", "t", ")"}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"v", "(", "t", ")"}], " ", 
           RowBox[{"sin", "(", 
            RowBox[{"\[Theta]", "(", "t", ")"}], ")"}], " ", 
           RowBox[{"cos", "(", 
            RowBox[{"\[Psi]", "(", "t", ")"}], ")"}], " ", 
           RowBox[{"sin", "(", 
            RowBox[{"\[Phi]", "(", "t", ")"}], ")"}]}], "-", 
          RowBox[{
           RowBox[{"v", "(", "t", ")"}], " ", 
           RowBox[{"sin", "(", 
            RowBox[{"\[Psi]", "(", "t", ")"}], ")"}], " ", 
           RowBox[{"cos", "(", 
            RowBox[{"\[Phi]", "(", "t", ")"}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"w", "(", "t", ")"}], " ", 
           RowBox[{"sin", "(", 
            RowBox[{"\[Theta]", "(", "t", ")"}], ")"}], " ", 
           RowBox[{"cos", "(", 
            RowBox[{"\[Psi]", "(", "t", ")"}], ")"}], " ", 
           RowBox[{"cos", "(", 
            RowBox[{"\[Phi]", "(", "t", ")"}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"w", "(", "t", ")"}], " ", 
           RowBox[{"sin", "(", 
            RowBox[{"\[Psi]", "(", "t", ")"}], ")"}], " ", 
           RowBox[{"sin", "(", 
            RowBox[{"\[Phi]", "(", "t", ")"}], ")"}]}]}]}]},
       {
        RowBox[{
         RowBox[{
          OverscriptBox["Y", "."], "(", "t", ")"}], "\[LongEqual]", 
         RowBox[{
          RowBox[{
           RowBox[{"u", "(", "t", ")"}], " ", 
           RowBox[{"cos", "(", 
            RowBox[{"\[Theta]", "(", "t", ")"}], ")"}], " ", 
           RowBox[{"sin", "(", 
            RowBox[{"\[Psi]", "(", "t", ")"}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"v", "(", "t", ")"}], " ", 
           RowBox[{"sin", "(", 
            RowBox[{"\[Theta]", "(", "t", ")"}], ")"}], " ", 
           RowBox[{"sin", "(", 
            RowBox[{"\[Psi]", "(", "t", ")"}], ")"}], " ", 
           RowBox[{"sin", "(", 
            RowBox[{"\[Phi]", "(", "t", ")"}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"v", "(", "t", ")"}], " ", 
           RowBox[{"cos", "(", 
            RowBox[{"\[Psi]", "(", "t", ")"}], ")"}], " ", 
           RowBox[{"cos", "(", 
            RowBox[{"\[Phi]", "(", "t", ")"}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"w", "(", "t", ")"}], " ", 
           RowBox[{"sin", "(", 
            RowBox[{"\[Theta]", "(", "t", ")"}], ")"}], " ", 
           RowBox[{"sin", "(", 
            RowBox[{"\[Psi]", "(", "t", ")"}], ")"}], " ", 
           RowBox[{"cos", "(", 
            RowBox[{"\[Phi]", "(", "t", ")"}], ")"}]}], "-", 
          RowBox[{
           RowBox[{"w", "(", "t", ")"}], " ", 
           RowBox[{"cos", "(", 
            RowBox[{"\[Psi]", "(", "t", ")"}], ")"}], " ", 
           RowBox[{"sin", "(", 
            RowBox[{"\[Phi]", "(", "t", ")"}], ")"}]}]}]}]},
       {
        RowBox[{
         RowBox[{
          OverscriptBox["Z", "."], "(", "t", ")"}], "\[LongEqual]", 
         RowBox[{
          RowBox[{
           RowBox[{"u", "(", "t", ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"-", 
             RowBox[{"sin", "(", 
              RowBox[{"\[Theta]", "(", "t", ")"}], ")"}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"v", "(", "t", ")"}], " ", 
           RowBox[{"cos", "(", 
            RowBox[{"\[Theta]", "(", "t", ")"}], ")"}], " ", 
           RowBox[{"sin", "(", 
            RowBox[{"\[Phi]", "(", "t", ")"}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"w", "(", "t", ")"}], " ", 
           RowBox[{"cos", "(", 
            RowBox[{"\[Theta]", "(", "t", ")"}], ")"}], " ", 
           RowBox[{"cos", "(", 
            RowBox[{"\[Phi]", "(", "t", ")"}], ")"}]}]}]}]},
       {
        RowBox[{
         RowBox[{
          OverscriptBox["\[Phi]", "."], "(", "t", ")"}], "\[LongEqual]", 
         RowBox[{
          RowBox[{"p", "(", "t", ")"}], "+", 
          RowBox[{
           RowBox[{"q", "(", "t", ")"}], " ", 
           RowBox[{"tan", "(", 
            RowBox[{"\[Theta]", "(", "t", ")"}], ")"}], " ", 
           RowBox[{"sin", "(", 
            RowBox[{"\[Phi]", "(", "t", ")"}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"r", "(", "t", ")"}], " ", 
           RowBox[{"tan", "(", 
            RowBox[{"\[Theta]", "(", "t", ")"}], ")"}], " ", 
           RowBox[{"cos", "(", 
            RowBox[{"\[Phi]", "(", "t", ")"}], ")"}]}]}]}]},
       {
        RowBox[{
         RowBox[{
          OverscriptBox["\[Theta]", "."], "(", "t", ")"}], "\[LongEqual]", 
         RowBox[{
          RowBox[{
           RowBox[{"q", "(", "t", ")"}], " ", 
           RowBox[{"cos", "(", 
            RowBox[{"\[Phi]", "(", "t", ")"}], ")"}]}], "-", 
          RowBox[{
           RowBox[{"r", "(", "t", ")"}], " ", 
           RowBox[{"sin", "(", 
            RowBox[{"\[Phi]", "(", "t", ")"}], ")"}]}]}]}]},
       {
        RowBox[{
         RowBox[{
          OverscriptBox["\[Psi]", "."], "(", "t", ")"}], "\[LongEqual]", 
         RowBox[{
          RowBox[{"sec", "(", 
           RowBox[{"\[Theta]", "(", "t", ")"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"q", "(", "t", ")"}], " ", 
             RowBox[{"sin", "(", 
              RowBox[{"\[Phi]", "(", "t", ")"}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"r", "(", "t", ")"}], " ", 
             RowBox[{"cos", "(", 
              RowBox[{"\[Phi]", "(", "t", ")"}], ")"}]}]}], ")"}]}]}]},
       {
        RowBox[{
         RowBox[{"U1", "(", "t", ")"}], "\[LongEqual]", 
         RowBox[{"b", " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"\[CapitalOmega]1", "(", "t", ")"}], "2"], "+", 
            SuperscriptBox[
             RowBox[{"\[CapitalOmega]2", "(", "t", ")"}], "2"], "+", 
            SuperscriptBox[
             RowBox[{"\[CapitalOmega]3", "(", "t", ")"}], "2"], "+", 
            SuperscriptBox[
             RowBox[{"\[CapitalOmega]4", "(", "t", ")"}], "2"]}], ")"}]}]}]},
       {
        RowBox[{
         RowBox[{"U2", "(", "t", ")"}], "\[LongEqual]", 
         RowBox[{"b", " ", "l", " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"\[CapitalOmega]4", "(", "t", ")"}], "2"], "-", 
            SuperscriptBox[
             RowBox[{"\[CapitalOmega]2", "(", "t", ")"}], "2"]}], ")"}]}]}]},
       {
        RowBox[{
         RowBox[{"U3", "(", "t", ")"}], "\[LongEqual]", 
         RowBox[{"b", " ", "l", " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"\[CapitalOmega]3", "(", "t", ")"}], "2"], "-", 
            SuperscriptBox[
             RowBox[{"\[CapitalOmega]1", "(", "t", ")"}], "2"]}], ")"}]}]}]},
       {
        RowBox[{
         RowBox[{"U4", "(", "t", ")"}], "\[LongEqual]", 
         RowBox[{"d", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox[
              RowBox[{"\[CapitalOmega]1", "(", "t", ")"}], "2"]}], "+", 
            SuperscriptBox[
             RowBox[{"\[CapitalOmega]2", "(", "t", ")"}], "2"], "-", 
            SuperscriptBox[
             RowBox[{"\[CapitalOmega]3", "(", "t", ")"}], "2"], "+", 
            SuperscriptBox[
             RowBox[{"\[CapitalOmega]4", "(", "t", ")"}], "2"]}], ")"}]}]}]},
       {
        RowBox[{
         RowBox[{"\[CapitalOmega]", "(", "t", ")"}], "\[LongEqual]", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"\[CapitalOmega]1", "(", "t", ")"}]}], "+", 
          RowBox[{"\[CapitalOmega]2", "(", "t", ")"}], "-", 
          RowBox[{"\[CapitalOmega]3", "(", "t", ")"}], "+", 
          RowBox[{"\[CapitalOmega]4", "(", "t", ")"}]}]}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     Column], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.7713228698834867`*^9, 3.7713230615044737`*^9, 3.7713231730836973`*^9, 
   3.77132321279452*^9, 3.7713236387654614`*^9, 3.771324218617916*^9, 
   3.7713252161811132`*^9, 3.771326098541134*^9, 3.7713262795539985`*^9, {
   3.7713272820956907`*^9, 3.7713272962782707`*^9}, 3.7713273361839333`*^9, 
   3.771327423526849*^9, {3.771327676764719*^9, 3.7713276997888155`*^9}, 
   3.7713279758269243`*^9, {3.7713280231871223`*^9, 3.77132809574225*^9}, 
   3.7713321727079906`*^9, 3.7713575588543797`*^9, 3.771358422300972*^9, 
   3.771420536093782*^9, 3.7714255098784637`*^9, 3.771448198222643*^9, 
   3.771487277229709*^9, 3.771489501840165*^9, 3.7714970322790985`*^9, 
   3.771501647461115*^9, 3.7715061861205072`*^9, 3.7715320075085206`*^9, 
   3.771536661114654*^9, 3.771553669777705*^9, 3.771561005122077*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->
  "Out[67]//TraditionalForm=",ExpressionUUID->"1f9b305b-61ff-4b67-b792-\
89964ac4083e"]
}, Open  ]],

Cell[BoxData[{
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3XnYndPZN/5mkHkUkZhjrphKSlFE1VCq1cZUFK95rKdFUG0NRamhRVSp
4UWpUmpo0NKUUlMlKqZEKqQRQ0QkIfP0/e31+r19n+Npq5Wd3Nd9Z38+x3k4
kL3XNe1/zqzvtdbqh/zXoCNaf+ITnzixQ+0fgw4+5XMnnHDwt/foUfuPvY4/
8egjjz/8sF2OP+nwIw8/YYtD2tT+54HtPvGJl7t94hPl3wMAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAwD+YOzfTpuXtt/Paaxk9+l/Wyy9n/PhMmpTp07NgQdUn
DQAAAM3GrFl577288UZeeeWjOuvan9Y+U/tk7fMAAAAAAAAAS4cPPsjYsXni
idxzT6677l/WjTfmt7/NM89kwoTMmVP1SQMAAECzMWlSXnopDz+c2277qM66
9qe1z7z4Yvk8AAAAAAAAwNLh3Xfz1FP5xS9yzjk5/PB/Wccemx/9KHffneef
z8yZVZ80AAAANBvjxmXYsPzsZzn11I/qrE85pXym9snXXqv6jAEAAAAAAAAW
kzfeyL335txzs/feWX/9f1mf/nQOOyxDhuTRR/P++1WfNAAAADQbL7yQm27K
4MHZcceP6qxrf3rSSeWTtc8DAAAAAAAAtFzz52fOnMyYUULFzz+fa6/NkUdm
k03yiU/8y+rUKdttl5NPzh13ZPz4fPBBWRu5NsiCBVVfDAAAADSthQszb15m
zcr06Zk2LQ8/nAsuyJ57ZtVVP6qzXmWV7LFHfvjDPPRQ+Vbtu7URauPURgMA
AAAAAABoQaZMKbvBPvNM/vCHXH992SL2y1/O2mt/1IRphw4lq7zffjn77Nx+
e1kb+fnn8/rrJZMMAAAADWXOnEycmJdfzlNP5Xe/y2WX5eijywu8ffp8VGe9
/PIZODBHHVU+X/tW7bu1EWrj1EYDAAAAAAAAaEHGj89jj+WXv8yFF+b44zNo
UDbfPCus8FETpssskzXWyLbbljTyySdnyJDcdVdGjMg771R9MQAAANC0ZszI
6NF58MGyzdBZZ+Www/KFL2SDDdKjx0d11t27l8/UPln7/Jlnlu8+8EBGjSrL
IwMAAAAAAAC0IC++mF/9qsyW7rNPtt66zISuskq6dfuoCdM2bbLssiWNvMkm
ZaGnQw/NxRfn/vvzt79VfTEAAADQtKZOzeOP55prcsIJJVq8+eZZd9307Vt2
FPro/YZqn6l9svb52rdq362NUBunNhoAAAAAAABAS7FwYZ58MpdeWtY3XnPN
dOyY9u3LosetW3/UhOmHaeTaxzp0SKdOGTAgxxyTG24oy0ABAABAQ5k0KUOH
5vTTs/POZSXkWmfdrl3atk2rVh/VVtf+tPaZ2idrn699a6ed8r3vlXFqowEA
AAAAAAC0FAsX5rHHctFF2WOPrLDCv4kf/6vq378sjHzttXnppaqvBwAAAJrW
O+/k7rtz6qkZOLC8tLsIbXXtW9tum1NOKePURgMAAAAAAABoKUSRAQAAoB6i
yAAAAAAAAEDDEkUGAACAeogiAwAAAAAAAA1LFBkAAADqIYoMAAAAAAAANJQF
CzJ7dj74IO+9l4kTM3Rozjwzu+2WPn0WMYq87rrZf/9cckn+9KdMmpSpUzNj
RubMKTlnAAAAWPrMm5eZMzNtWiZPzqhRufHGHH98ttxy0aPIte9+4xtlnJde
KmPWRq6NXzsKAAAAAAAAQHMza1beeCPPP59HHsldd+X883PwwWXSc9llFzGK
vMoq2XHHHHdcLr88996bJ57I6NFlHaf586u+VAAAAFgCpk3La69lxIg8+GDJ
D592WtlsaP3107btorTVbdqU7w4aVMa54YYyZm3k2vhTp1Z9nQAAAAAAAAD/
YNq0PPdcWQz5Jz/JySfn61/P5z6XddZJly6LGEVebrlstFF22SWHHpozzsh1
12XYsPz1r5k7t+pLBQAAgCXgzTfLe7i33poLLiirGQ8alC22KC/qtmmzKG11
69blu7URauPURquNWRu5Nn7tKAAAAAAAAADNzaRJeeihsoLxUUdlm22y8cZZ
ffUSJ27XbhGjyJ06pW/fEmYeMKAEkgcPzvXXZ/jwzJ5d9aUCAADAEvDKK2Wb
oXPOyb77lghx//4lS9y9e1q1WpS2uvat2ndrI9TGqY1WG7M2cm38v/616usE
AAAAAAAA+AdvvJHbb89JJ+Wzny1bx7ZpU9ZfWrTZ0r/PmdaqNkhtqOWWy267
lTnTYcMyY0bVlwoAAABLwMiRueqq/K//lU9+svTCi6Wz/rCtrtW665aRr7yy
HAUAAAAAAACgOZg+PW+/XVZtevbZDB2a887Lfvtlww0XfZL0X1WPHmVh5LPP
zu9/L4oMAADAUmL+/EydmgkTMmpUnn46N92UU07JrruWpYwXe2ddG7M2cm38
2lFqx6od8fXXy9Fr5wAAAAAAAABQibffzl/+kvvuy7XX5qyzyvJK222Xfv1E
kQEAAODfmz07r72Wxx/PHXfk8sszeHD22iubbZbevRd/Z73ccmXk2vi1o9SO
VTti7bi1o9fOAQAAAAAAAKASr7xScsiXXJJjjsmXvpSttso666RXL1FkAAAA
+PdqHe5f/pJbby0N7wEHZKedMmBAecO3S5fF31nXxqyNXBu/dpTasWpHrB23
dnRdNgAAAAAAAFCVZ58t6yEfe2y22CIrrlhCyF27pl07UWQAAAD496ZNy0MP
5aKLsu++5d3evn3Ts2c6d07btou/s66NWRu5Nn6fPuVYtSNeeGH+8IdyDgAA
AAAAAACV+POfc+ml+drXstpqi3+S9L9Xt2753Ody0km55ZaMGZO3385772X6
9MybV/UtAAAAgEU1dWrZbOh738sOO5Sc8BLtrP97deqUz3++HLd29ClTqr4L
AAAAAAAAQKNqsihy587ZZJPss0+++93ceGN+97sMH55x4/LBB1XfAgAAAFhU
osgAAAAAAABAI2uyKHL79unXL1tumUGDcuyxueCC3HZbnn46kyZVfQsAAABg
UYkiAwAAAAAAAI2syaLIbdqkR4+svHI++cl8+tPZf/+cf36ZMH399apvAQAA
ACwqUWQAAAAAAACg0SxcmAULMn9+5s3LE0/kxz/OPvtk1VWbbsK0VhtvnCOP
zPXXZ/Tocia186lV7cQAAACgmat1r3/vrN99N0OH5jvfKcHgTp2aNIq8/fbl
uL/5TTmHDzvrD08MAAAAAAAAYMmZO7fMUb76akaOzKOP5mc/y/HHlwnTPn2a
NIq81lr5ylfKnOktt5Q49IsvZvz4spaUOVMAAACauRkz8tZbGTMmw4eXRYkv
vDAHHVQ2AOrQoena6tqxBgwox73ggnIOtTOpnU/trGrnBgAAAAAAALDkzJhR
Zicffjg331xmS487Ll/+clmjuEePJo0ir7BCttiirMY8eHAuuyx33JEnnyxp
5AULqr5BAAAA8JHefbe83nv//bnmmpx5Zg45pLzhu9Zaadeu6drqZZYpR6wd
9+CDyznUzuS++8pZ1c4NAAAAAAAAYMmZOjVPPZUbbshpp2XQoAwcmA03zEor
pWPHJo0id++efv2y6abZYYcceGDOPbekkV94oWwpCwAAAM3Z+PF58MEMGVJe
791112y5ZdZdN717p02bpmura8eqHbF23C22KOdQO5Pa+dTOqnZuAAAAAAAA
AEvOpEll4aazzy6LIa+4Ynr2TJcuad++SSdMa9W2bQk/d+uWXr2y3noljXzZ
ZXn88cybV/UNAgAAgI/08stlp6FvfjNbb53llisv23buXJZEbtWq6drq2rFq
R6wdt3b02jl89rPlfG66qZwbAAAAAAAAwJLzzju5666cckq23bZs59qU8eN/
Vb17Z/fdc/75+eMfM3du1TcIAAAAPtJLL+Waa3Looenfv/qe+sNaa63stVd+
8IPy9vHYsXnjjUyenBkzsmBB1TcLAAAAAAAAWLqIIgMAAEA9mmEUecUVM3Bg
OaXzzsstt+T3v8/IkXnzTXsPAQAAAAAAAIuZKDIAAADUoxlGkXv2zCc/me22
yz775FvfypAhuffejBqVOXOqvlkAAAAAAADA0kUUGQAAAOrRDKPIHTpk2WWz
yipZd9189rM55phcdVWefDIzZ1Z9swAAAAAAAICWb8GCsiXr7NllCnLcuNx6
a044oUxNtm1b/Wzph1HkL34x3/9+fve7TJ1aTnLOnHLCCxdWfeMAAADg/5g/
v7w8O2tWZszI8OG54oocdFBZiLjynvofq3v37LJL6bIffDDTp1d94wAAAAAA
AICW7/338/rreeGF/OlP+dWvctZZZcPWDTdMmzbVz5DWqkePbLVVWU7q4otz
//156qmMHp233iozvAAAAFC5+fMzeXJefTXPPJOHHipLIp94Yon7rrZa9T21
KDIAAAAAAACwpL39dp5+OnfemSFDcvLJ2XffbL11mTBt3br6GdJade5cFpLa
ccccckjOOCNXX10CyS+8UFZIBgAAgMrNnVtyyI88kptvzg9/mOOOy+67Z9NN
yy4/lffUosgAAAAAAADAkjZ2bIYOzYUXlqzv9tuX2dI11kjPnmnVqvoZ0lq1
a5fll88662TzzbPzzjn++Pz0p3n44UycWPWNAwAAgGT27PzlLyWH/N3vZo89
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
dnr2rH6SsaVX27bp0yf9+2fbbfPVr+aEE3LllfnDHzJhQtWPHAAAgMVn2rQ8
/XR+8YuceWb22y877lgW71111XTuXH1nujRV69bp3Tuf/GS23jq7757jj8/l
l+eBBzJuXNW/AAAAAAAAAGhgCxdm+PBcdVWOOCIDBpTdY3v1SpcuZUXfyicZ
W3q1apUOHdKtW5kqXWmlbL99Bg/OL3+Zv/616qcOAADA4jN5cgnEnnde9twz
a6xRXkrt0SOdOpUXVCvvTJemqnXZ7duna9cst1xWXLHs6PTNb5YdiF58sepf
AAAAAAAAADSwhQvz2GO56KLssUfJIVc+sbgUV//+OfTQXHttXnqp6qcOAADA
4vPOO7n77px6agYOzDLLVN9+NkittVYOOCA//WmefbbqXwAAAAAAAAA0MFHk
JitRZAAAgKWSKHIlJYoMAAAAAAAAzYEocpOVKDIAAMBSSRS5khJFBgAAAAAA
gOZAFLnJShQZAABgqSSKXEmJIgMAAAAAAECFFi7MggWZPz/z5uWRR3LBBRk0
SBR5yVb//jnkkPzsZ3n++XLna1V7BLUHAQAAQItT6+b+3lm/9VbuvDMnn5xt
txVFbrpaa618/ev5yU8yYoQuGwAAAAAAAJrUnDmZNCljx5aFgx55JFdckWOO
KWs39epV/UziUlz9+mW33XLKKfn5z/P443nhhfztb5kypUyVAgAA0LJMn543
38zo0Xn66dxzT847L/vvn099Km3bVt9+NkittFJ23jknnpjrrsuf/pTnnsu4
cXnvvfLONQAAAAAAALBEffBBmS0dNqxkYs8/P0cfnS9+MRtskG7dqp9JXIqr
T59stln23DMnnJBLLsmvfpXHHivzpHPnVv2DAAAA4GOaODF/+UuGDs1VV+V7
38tBB2W77bLGGmnTpvr2s0GqV69summ++tX813/l4ovzy1+Wt63Hjs3s2VX/
OAAAAAAAAGBpN3lyCcFed13ZPXb33bPNNll//ay4Yjp0qH4mcSmurl2z2mrZ
ZJNsv3322y/f/35uvTUjR5okBQAAaHleey3331/eMz3qqOyySz7zmay9dgnH
tm5dffvZINW5c1ZZJRtvXELge++d00/PzTdnxIiyYDUAAAAAAACwRL31Vtk9
9vTTy2xp797p2TNduqR9exOmS7bati1h765ds+yyWWut7LtvWbXpkUcyc2bV
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
AAANSxQZAAAA6iGKDAAAAAAAADQsUWQAAACohygyAAAAAAAA0LBEkQEAAKAe
osgAAAAAAABAwxJFBgAAgHqIIgMAAAAAAAANSxQZAAAA6iGKDAAAAAAAADQs
UWQAAACohygyAAAAAAAA0LBEkQEAAKAeosgAAAAAAABAwxJFBgAAgHqIIgMA
AAAAAAANSxQZAAAA6iGKDAAAAAAAADQsUWQAAACohygyAAAAAAAA0LBEkQEA
AKAeosgAAAAAAABAwxJFBgAAgHqIIgMAAAAAAAANSxQZAAAA6iGKDAAAAAAA
ADQsUWQAAACohygyAAAAAAAA0LBEkQEAAKAeosgAAAAAAABAwxJFBgAAgHqI
IgMAAAAAAAANSxQZAAAA6iGKDAAAAAAAADQsUWQAAACohygyAAAAAAAA0LBE
kQEAAKAeosgAAAAAAABAwxJFBgAAgHqIIgMAAAAAAAANSxQZAAAA6iGKDAAA
AAAAADQsUWQAAACohygyAAAAAAAA0LBEkQEAAKAeosgAAAAAAABAwxJFBgAA
gHqIIgMAAAAAAAANSxQZAAAA6iGKDAAAAAAAADQsUWQAAACohygyAAAAAAAA
0LBEkQEAAKAeosgAAAAAAABAwxJFBgAAgHqIIgMAAAAAAAANSxQZAAAA6iGK
DAAAAAAAADQsUWQAAACohygyAAAAAAAA0LBEkQEAAKAeosgAAAAAAABAwxJF
BgAAgHqIIgMAAAAAAAANSxQZAAAA6iGKDAAAAAAAADQsUWQAAACohygyAAAA
AAAA0LBEkQEAAKAeosgAAAAAAABAwxJFBgAAgHqIIgMAAAAAAAANSxQZAAAA
6iGKDAAAAAAAADQsUWQAAACohygyAAAAAAAA0LBEkQEAAKAeosgAAAAAAABA
wxJFBgAAgHqIIgMAAAAAAAANSxQZAAAA6iGKDAAAAAAAADQsUWQAAACohygy
AAAAAAAA0LBEkQEAAKAeosgAAAAAAABAwxJFBgAAgHqIIgMAAAAAAAANSxQZ
AAAA6iGKDAAAAAAAADQsUWQAAACohygyAAAAAAAA0LBEkQEAAKAeosgAAAAA
AABAwxJFBgAAgHqIIgMAAAAAAAANSxQZAAAA6iGKDAAAAAAAADQsUWQAAACo
hygyAAAAAAAA0LBEkQEAAKAeosgAAAAAAABAwxJFBgAAgHqIIgMAAAAAAAAN
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
STExMaafYrViiCI3L/Rop8e8jIyMvLx8/eaOhobGuHHjdu7c+eDBg/z8fKbX
CQAAAAAAqE1kZORff/21dOlSMzMz0ZbVNAUFBVlZWSkpKXzCt5Ehity8iIuL
08OeHvz0FKjf3DExMXFwcPDw8AgODmZ6kQAAaBSC4rSyBP+CoBOZd9dE/Tnp
8ibrDTP6jOlv2E5TVbS7kRZGVUPJwEKp93Ql641Kk071+eXu/ONBh/0TAlKL
0igqh6KKhUdN/kAUmV9K5X2kkh5SEZ7Uy61vvRYdWzd+3ri+Jobtmb7VpqbR
Xt9o8KS+c7cN33Zr6plPzvezTgcXvkwqzymrbLxx3kIIhLHBfIrKqCiJSAs5
H3Zp3eNtIy9NV3e1UVpooTSii5Jhu0boEoMeSgN/Upq6VWnF5Q67g+zOR+0P
SAn4VFTOb0Xh8NJUKp1NxVylgt1Sb63x3jN9w9yhw8yNf6SRLAb+tHLq1vMr
LsfsDqLOR1EBKdSnIqp1NdLbdPaxmKvzgt263lqjtGe60tyhSrU3kppmux5D
J45asnvuocfOD4uOhFK346nQLCqn1m/pFHDyC2IeJD/Z+eH0uFc7NM4uUdow
UWmShZJxh4aO5TaqY2+lXlOUhqxVGn/UZOmt6QcD996P+TshP4WisoWfneEK
j1wHAAAAAABgHI/HKygoSE9Pj4+Pj/q+gICAQ4cOzZ8/v3fv3kw/ZYJ6QxS5
tWGxWObm5osWLfLw8Hj58mUtU/hrMTExnz9/zs3NLS8vr67GR6UBAAAAABqE
3lTTW2t6g01vs+nNdi1b8Vu3bm3fvn3SpEl6enpMFxNQb4gitzaampo2NjbO
zs6XLl2qY1n9L9HR0cnJyTk5OWVlZVVVSAEAQLMjKEoti3uU9/JwuveSDx6j
zv1q/stEoyHd1eWk2/bHlySkiHo3YjSB9FtDRh7tvNh7+uHA/Y9in6QUfR3u
+pEocgmV+4H6dI8KO0Y9Wx90fPbBFcN+su6iq6HA9K02NZacsprJQINRC3ot
OGC54+/ZR59tu8w++zDkxdv39NtmVFR8VFRyVFRaVFRWQmJBalZpbgmvRFDN
ER7sKWj5Z3vWVAmq+WVVnHxBSQavILkoKzEzJT4pISb6I71rCI+KCo6KehkV
9fTdm5t+V1yuu848scDU1VpyWR8yvhPppUlUZBqhS5R1iLEVGexIprgqLL0w
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
8qqy0oqSEvKEyAhP1P3BsLsiIZ0JGUyIvYTkyu6WB6as9d54NfRMYsGjMsFb
bmUiv6q4aaOfNdVV1QJuJa9EUJ7HK0rNjLj90fe3Vx5j7q1XPzabrB5BxvQg
Bho/dpNfzzFhC0nRXU+IvCRLSUZeVUFFQ0WrnbqwTbUa2vVf946KhrKCqpy0
0v/2jpTwd9c7Nq2k37Oj9eye8/ZZbr8/7c/wLT5xZ4PSX30qyizl53MEpRVV
vMrq6pqmzemKNor8T+r6PbqP/nnEquOzPN6u9y30eFV6L5r7IbuyVEDxqih+
9ZdMcotIJTddFJlTUBj3JOXp3qjzdq/36F9crbN1ms70oTq9u4ho7akrbeFE
oGeBhnY7VU16cVWQVZZiKYh9mXXSwsX3W7NAXDg/6DVMSlxCliWjKKugSr8D
qmjpqLXT0Wino6Xd5MuyyUCd/jN1bDbq2J80++XOPI9XBx7FPkrMT6OoHIoq
Fn5wprqpRhEAAAAAADQfxcXFiYmJISEhjx498v4+T0/P9evXT5w4sUuXLiIp
k1sWZWXlTp06mZubjxkzxr4JrVmz5sSJE0+fPk1LS2N6pDQKRJHrKDY29u7d
u25ubosWLRL5MBs5cqSZmZmenp6CQps7DUNaWtrU1HTatGlbt269cOFCLWug
v79/WFhYSkpKWVkZ08MBAAAAAJqXqqqqnJycmJiYV69e+fr61rKrPHjw4JIl
S6ytrXV0dJjeCzc1CQkJLS2trl27Dh48eOLEiSKva+po5cqVR48effz4cXJy
MtMDR2QQRa6LkpKSt2/fXrp0adu2bdOnTxftuJo8ebKVlVX37t21tbXb+JHL
9Eyn22Hq1KkbN248c+ZMLevhkydPQkND6ZlIdw3TowMAGFDPKDJLjshpEWVD
otFTumP/dj2sug4cNdBmvK2d3Th7e3p7Mdnefqpol/gm9tMM+/m/2K/Ya+98
xn7n3ytPvj54L9onPCMitzxPeCRyOUXxmyKKTL+XKRGiRYi+uISJipaZXtfB
PQePtpw4Zbi9/Wh7+3HCpm6WpgoHgq29/Uh7e+txo/oNMzPur9+up4KsESHt
CVETRmx/JOxK/3ddQnoRMlRccqp+v/VDFpycdeTJhueJHrEFPqmlIfncbF6T
fqamWsCpKE4ry4goSgjIjrj+3nf34+NzL2y0cJutvGYksetLLAwacsorPQHl
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
5JNwnJ1/J6okNI2bXdr4+4rGjSJLEiIrTK1qSMp2VjYeqzvsly5zPMw2PJpx
LHinb9z1iOwPhbw8YXNzGtRxjQtRZESRAQAAAACg+eNwOC9evDh06NDs2bNN
TEx0vk9DQ0NZWVlWVlZS8r98/VRzJiYmZm5uvmzZMi8vr/Dw8ExRy8vLKy4u
5nK5eOohWogiNwcCgYBeMYqKinJycuo3QYKDg0+cOLFgwQJTU1OmF4PGwmKx
5OTkVFRUtLS0allRzczMFi9efOrUqdDQUKY7FgDgW0JCvpyHvGgR1acPZWFB
LV/+5R00IoLpy2qYuDjqyhVq3bovASwTE2rOnC8R68BACkduAkCDpaWl+fj4
bN261dbWtpZNoLa2tpqamqKiorS0tLi4ONNb1/pTV1cfPXr0li1bbt26lZKS
ItqyOisrq6CgoLS0tKKiorq62X4/cIuEKDLjampq6IFdVlZGD3J6qNdvjjx8
+NDV1XXKlCkdOnRgejFoCpKSknSVraysrKmpWcsC27Nnz/nz53t4eAQFBeFT
DACtCaLITaTNRZEp4cHIVcLcJb9awOFzSrhFBWW5OcXpyYWJIXkxD3MiLma+
Pcw+/+s5p6m/jf4f9u47rKls6wPwhtB7R6kivYmogCAqNiyoCCr2OiD23hti
L6OiMoqiqNgbCooIWFCwIEhROkjvNdSEFPZ3Eue7g45kUCNBXO/DH/cZuSFn
n5O1105+2cfcpbucDUImCKl/Pf7XGh8iKSBBfSRig8TGKRsttZ1+fP7B0H1h
OTcK8JNynEjGRRTir3L/kJorMupSgysjvYruLok+4ei7asDS8fqDjOXlxZGU
KBITQkIC3xLTFRJDGubIYgoaux25XjHyCJnlG3UsJCEq6SPRsxcXlxUXVxYX
VxcX15ZXNFTXUuqaaE0MZjPGdPbI/ljU+tPZobPODr2J1lhLIVc1lJfVFhdW
F2dXFKeWFScWF79NeXPlxaWNAdvHnJmmvtMWzTdFQzWRtgwitX+lxcePBISQ
sDgSleaXUlIyH2E0ce2g9f7OpxNXBRWffFUVnlGfW/3z+4qfG0UmTjmJHUgW
4hOWF1SxEuk1Q2LIdunJ/jabHi3yi/WJyn1T3lCEcQXGdeyNkTsniCJDFBkA
AAAAAADQSbS0tFAoFDKZXFpampeXl9NKcnLypUuXVq1aNXjwYElJSS4tbHmA
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
JvVRdtipd2fXh3tMvvCH7UYH0wl9NAy6S/NxGpZP4V4phBQRUpNWGaA/bNHg
ZT5TTr5aFV51PKb2fmZTUgWticaNSCudguuLcMUHVpA1427mo6MhJ5efWDt+
hXOviTaqg4wVDNUk5aU4f/DHzw5OKyCkgZC+lOIA7T7OVuMXOyzZOWuPz2Lv
mxsuPd4dFHfsee61+LJnWTWpZY01TXQuPPPvRAwa8depGDdiXEepza3OjSmK
e5j55GLC7cPPz20JOrLosseUv1aOWD/VcvJg/X76ynJSIhwPv9Vp4+MXltGS
0hysaDpbzXar5XSfGTvue16Nu/au7E0VTq7F+U24moa5EiH/UodFkfkFkagC
ktFGyn2Qhp2qnavNgoNTDwVuCEz1jqkOSKuLLqIU1vHw/HICUWSIIgMAAAAA
AAA6CRqNFhsb6+fnt3LlyqFDh/ZppXfv3rq6uioqKlJSUiQS57tKdWqysrKD
Bw9etmyZr69vdHT0u7alpaUVFBTU1NTAbWR/IRBF7hqam5urqqry8/NTU1M5
vEi/cOvWrW3btjk6OmppafG60nCNoKAgUbXU1NT09fX7tNuECRO2b99++/bt
jIwMXp9MAMCvqboaR0Tg48exqytrx+M+fdr80dfHampYRoYVORISYu2NrK6O
DQy+/LUJE/D27fj2bczDukSn43fvWDsbr1qFhw3jdFBEK6CpieXlsYgIJpGw
lBRWUWGlrHv3/uzXiAchHop4QOJh6Z308xcAAE+Ul5c/fvz4yJEjc+fO/aJP
MzExIZpVJSWlX/pmQwTiKIjGm2i/iSacQ4uemJiYlZVVUlJSX1/f0tJJb+AL
/g2iyF1DY2MjUY6ys7M/fPjQ/pV1a/fu3du5c+ekSZP09PR4XXW4RkBAQFpa
WlVVlTgoc3Pzdq6yHRwcNm3adO3ateTkZF6fWADA10EUuYNAFPkfTMxsxoxG
TCPj5kpqcTw54W5p+NGcKyteHpzkvXDwHyOM+mgrcowiE0jsNDKxNJCU6GbS
Y9Csfq6HRx18Mud28e6Iypsf6uKLqQ00bnyhj9aAqzNxwQucegPHeiVcWXPR
w2X1VOuh5mr6qpLqCqLykkKiQpw/+ONn5xnV2MFGSwV1p94jVo9ddmLhXw92
Poz3fp56NTY3JLU0Oq82pawxr4ZS2Uij0nn7VUQm++VLI65aOrWWQi6pL/1Y
nfuhLCUq//WtzEfHk25ueuc79/KWMeunWo6y1FKR53wNt8LHTxLuLixlJqZo
L6k2S9dmy2h3v2XeEcci8u8X46hKnFKHS6mYK+ftSx0WRebjRwKiSFgGiSsj
KQ0Fs5HGE9cM3XBhmm/supDSU9HVYZn1WVXNnXOBB1FkiCIDAAAAAAAAfraW
lhYmk0mn05ubm6ltq6urCwsL27Vrl4ODg7y8PPdXr9zGz88vICAgKCgo3G5q
amqTJk06dOhQZGQkHUIjXQ5EkX9nKSkpfn5+7u7uZmZm7a8JrQkJCRH1hEQi
EbWF1+Xth+jo6MyYMePEiRMxMTEcaj6BRqMRlRB2qAMAfOl/CaRBg74zgfTF
j44OnjEDnziB377FVCqm0VjZ3Q4uPsQfjYjA+/bh8eOxoiIXDkpBAY8di3fv
xuHhrH2km5tZB8VgYMjaAdB1EStrBoNBdFCcV9Y5OTnXrl1bsWJF//79ed0Y
/jc+Pj6iASZW1kQz3P7OuXfv3kTjff78+RRYNXVFEEUGn2RlZV2+fHnZsmUW
Fhbft8omdI1VtoaGhouLy+HDh1++fAmrbAA6J4gidxCIIrelrhAXvcSp13D0
/uKAJQG7JqyfajnQVFWQhEj8iJ+P6Lr/Y64RU9Ls3t/JcMYu6+3B487nrA8u
uRBb/Ta/qb75B+eUFtYPldxSlsDMCGTGHGM8XhV1fOqfCwdNHKSr8h8nDrG3
buZj55AF+fiV+En6JAErAaFR6oaL7aYfn38obM/jvMv5OKwMJ5BxEeXnbAXM
XbQGXJmCsx/hhNP4xZZ3vvNOrrKfPdJET11OWJAkKMBP4ufj/4+zRfyrLEJa
n2KcippzrCbsn+YZuCUowzeLEVTIjK5syW1soTA/DT1XfV8UmTgcohPjJ65F
AT4ScYSs1kyAn0+AH5H42nVxSmmYaNjNMp1/ZODuZ1P9sz1Di28m1HwooTBa
MJP906lOO0SRIYoMAAAAAAAA+NmoVGp5eXlmZua7d++eti0sLOzo0aOurq42
NjbS0l9bmnQmxGpZVla2R48evXr1Gjhw4JD2cXJy2rJly9WrVxMTExlwK+0u
B6LIv7Pc3Nzg4OCDBw/OmTOnnQXhC0TpMzY2VldXl5KS4nWF+yFqamr29var
Vq06e/Ysh5r/4sULohLm5ORUV1dDPQQAfIbrUWRVVWxvz9pD+OxZ/Pw5TkjA
2dm4qqpDNxPmehRZRgbb2GA3N+zlxUojx8ay9nwuK8MUSscdFACgY9XX1xcV
FaWkpLx584ZDl3Xr1q0dO3a4uLgQvSWvG8P/JiIioqSkpKur27dv3/Z3znPn
ziUab6L9JppwXp8WwH0QRQafFBYWhoaGfnqr8PtW2QMGDDA1NdXQ0JCRkeH7
z5hLJ6asrDx06NClS5eeOnWKQ/1//vx5fHx8dnZ2ZWUlbIAAQAeDKHIHgShy
WxpLcUU8zn2Ik8+VP/YMPT7vwMIh0wZqGcgjTSmkJIYkhZAAx+/liChoKFiM
7+HiYbLh7sCTaUsC8nxel7/Mra+jfvc1+L9tganMphJKXmRtzPnKh1uKL065
v22Yx7TeYy3Uu8mKcjxxnzZtFideKnz8SmLSpvJqw9QMpularBw06c/ZW29t
v/TW721paCkruJhZjyuaMaNTZVK/ik5hBXqL3+DMQJxwJv2uR8Cff+xaOGra
cFMbExUTLQV1JUlpcWGOw0K0NJIIdUdIFyFzGZXxRsPWj1h2bs7Jl5vCS07F
VD7IrEusoFbTmFT26DO4GEj+jigy0YCJiCEpeaSohtR0hdS0pLt366YsraUg
rCuL1CSRvCgSF2QFkjkQV9ZV7uOoPXaj2YKLIz0jVpyPP/k452l6TVET66TX
0lmZ1c5z6iGKDFFkAAAAAAAAwM9WV1eXmpoaHh5+4cKFPW3buXOnq6urvb29
gYFB579drKCgoJaWlq2t7dSpU9esWbO5fYjDvHTp0vPnz3NycmCLkq4Hosi/
s7KyspiYmDt37nh5ebWzIHxh2bJlzs7OVlZWqqqqvK5wP0ReXt7c3NzR0ZE4
Ig41//Dhw9evX4+MjCTqIY1G4/UJBAB0JlyPIsvLY3Nz7OiIly3DBw/iK1dY
geSsLNYOyR2G61FkcXFsaIhHjsSurnjnTuznh0NDcXIyJpM77qAAAB2LaDjf
vXsXFBR08uRJDl3Whg0bpk+fTqxVNTQ0eN0Y/jdpaWkjIyN7e/t58+a1v3Mm
Wu6AgACi/SbGhNenBXAfRJHBJ5WVlXFxcYGBgSdOnPi+VfbKlSsnT55sbW1N
1EMSifNt3zs1GRmZXr16jR07dvHixRzq/8GDB69cuRIREZGVlUWBr6cB0LEg
itxBIIrcFmoVrs3AZa9wflBVzKmXF1ed3TB27Tg9B21ko4oM5VF3cSQiwGmM
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
raGioTS5JutZecLNnJd+8Y/9ngb5wdX9nS5e9bt+3y8gwu/BuwvhGfdjCl5l
VKSXN1TSGI0/fOUDADoShULJy8uLiYkJDg6+cOFC6xf64cOHFy9ebG9vr62t
zXHNzDNKSkomJiZDhw6dMmXKvPZZuHDhoUOH7t69+/79e9jPE3wCUWTwI2pq
aogSev369d27d7ezEBEmTpw4cOBAfX19OTk5XpfSbyMmJmZqaurk5LR27Vof
Hx8O3WJQUNCbN2+ys7PhBtwA/C4gigxRZAB+Y0RPmJ6eHhUVFRAQ8EVT5Onp
OXv2bBsbG2VlZV63cl8hIiKioaHRt2/f0aNHz5kzp53d7KdWMDw8PCcnh9dj
DzoLiCIDbqmrq4uPj79169b+/ftdXV3bWZcmT548ePBgIyMjBQUFXlfWbyMk
JEQ87XHjxq1atcrb25vDKvvevXsvX77MzMys7ci7hADQpUEUuYNAFLlNdPaH
6nUYV1NqkgqizydcXvzEw/LmNL7dI9Bsc9RfHcmJch4kbkeRaWTcmItrEnD5
s5qky7E3t1z3dN4zxXCeKZ+DNrLsjnpIIzGOtywQElOQUemnYjxRZ8CaPo7H
J665tc7n5anH2Y/yqDHVOL0el1A60V6434lSjaszcNFrnPWg6pVP1IXVvpvH
rp6oN9qUz7onK7/aTRqJcL6xg5AskjFFKqORjptwP89+8/zmHn78Z1h6aDEl
vhFnUXEZDTdyK2nxnVFkE9TfGTlvRMv8NNf7jNnksX7rgose4x9t7n9ilvEy
O/VR2jLaQiQl9gtVjJ1G/hfi2pVHSB0hfTGZQZqWrhYzDjnsCJp7Jd0zNN//
XXlkXn1B0z+RKt5eFBBFhigyAK0xaY0NJR8qku7lPz+cEbAk0s/txhG3o9vd
1q1w42DR8jVrdh/bdvru3oA4r8jKG4nkF9kNmZXNDc2/fXSONW9m4uI3+GNw
Tezl2CDvmz67921fy2k0f3OLVrit2e227bTbvgC3Y5G7biT6v8iOyKzMbmiu
ZjeOFHYT+X1a6NTm6pzG3Fe1H+5UvvR+H7j/wdntJ/et3bB6Ca8Pm9eWrnVb
f9DN47zbgQfLTr3+817Szej8N/k1JXRmDXvipH6tXaFU5VRnPi5+c+Zj8IbY
S25B3m4+u93g6v5Oi1e5rd3rtt3Xbd+9hSde7r39/vLLnMjsqrwmWjX7C5wU
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
rIMSFmYdlI4OnjEDHz+O37zh/kEBALghKyvrypUrK1as6N+//xftjaioKNH2
CAgIdJKbDREMDAzmzJnz119/xcbGcmg4GxsbiZU1jUaDLZHBD4IoMuCtlpaW
9qyyKyoqHjx4sG3bNnt7e2npryUsOjFiiiEmGmK6ISadL6YhW1vbNWvW3Lx5
M+9nfFMPgK4LosgdBKLI7dBJosj1he+KXv6Vem1m9H6du0sEdjmRplrym6hy
3MaIj4RkdVAPe9TbnXhRaM65PGH/Y8/ApKCMiiwGLmTiyhbc0IK76KbIRAtC
bWGWtjBSmbTXjOaQjy+OPDno5udsu11Ffj5Co9mpTeU2Bo6Y21k/gmL8PSxI
A+YKuhwSWhXc60jsgtvpfm9LUsoaufMMfzyKfDB6/o0U3zcFySW1TCq5Ifd1
ZfT5gsD1GWfGBW229pxmOMFKpcd/5Jf4WJF1fgHEL4hIwrJ6VtqjF1os9bH3
iv7jVuGh5xX3U+oyKngZLYEoMkSRAWgNoshcBlHkbwVRZJ6AKDLPQRQZgM6B
SqVWV1cXFBSkp6cntC0yMtLb29vNzc3KyoqHNx8k/rScnJy6urq+vr5Z2+zs
7FasWOHn5/fu3Ts6/TvfMAGg/SCKDDqturq6TwV8wYIFRAHnUDl1dXVVVVVl
ZGSEhIR4VeTbj3jCs2fPPnz4cHh4eOvZKjExMSsrq7i4uLa2Fuo/AL+G9HRW
anfLFjx2LDY2Zm2JrKTEiu9yPbXLz48lJLCyMmtjZBMT7OSEd+zAAQGsbZm5
rqiItd/y/v142jRWxFpbm9UfSElhAQHuR5HFxLCCAtbUxIaGePhwVv7Z3x8n
JHD/oAAAHDU2NpaXl+fm5iYnJ3NYWd+/f3/37t2TJ0/W09PjVR/Fx8cnLi6u
pKTUo0cPY2NjDv2hk5OTh4dHQEDAx59RKgH4F4gig18ChUJ58+bN6dOnFy9e
bGtry6GKEqVeTU1NVlb2l7hFkZGR0bRp0/bv3//w4cMvJq/MzMyioiIymUyj
8XKzQQA6J4gidxCIIreJSVyGxOxErEgoNZnFMVeSri2P3GUVOIfv4Bg0vx+y
0UTynFMhXIgit7BTFc0YNxEjWpPzIjv8z9hTk8PXaF6YjDbaoQnGyEAJcYoi
85NIioZChuNFbddKTDhjvOLBTO83f4ZlPsmtKWbHNurYR9hlo8isM1iNcT47
1RlTEOP3+tTKW/OHHe2luFoeTZZC/UWRqgDHkyggjLr3Qr1c0LDtaNpV/Y1P
Z52N947Iiymsa2APXTO7pHz/fkzciSKn+UYXJ5c2MGlN1NIPdSn3KqMOFwct
eX7M2XvZAPfRuja60ioSSEEUSQkhooJyvgWvpJqxivUU/cm7LFbfnXDk7cYb
aRdeFr3Jra9qxrV03MjAzcyOvmAgigxRZABagygyl0EU+VtBFJknIIrMcxBF
BqBzIJPJaWlpz58/v3nz5qm2HT58eMmSJaNHjzYwMOBhSk1WVtbQ0NDOzm7q
1KkL27Zu3TriOYeGhmZkZMC+TKADQBQZdFpNTU1JSUlBQUFeXl7Lly/nUDkn
Tpw4YMAAHR0dSUlJXhX59uvZs+fw4cMXLFiwf//+1rPV6dOn79279+bNm5yc
HAqFS3egAwD8VAUF+Plz1u7E27fjuXPxqFHY3Jw1m/LzczmyKyCA1dRYmyGP
GYPnz8eenvjSJdb8/TM2V6+sxDEx+MYNvG8fXrAAOzpiKytWylpEhPtRZEVF
bGrKCiHPmMEKb505g8PDf0q+GgDAUWlpaUJCArEIvXjxIoeVtaen55w5cwYN
GqSmpsarPoqfn7979+7m5uajRo2aO3cuh/6QeLaXLl2KioqC+1CAjgFRZPBL
aG5uTk1NDQ4O9vb2Xr16NYcqOnnyZKLg6+np/RKbJ2tqatrZ2c2fP3/37t1f
TF4BAQEvX778+PFjQ8OvkYwBoCNBFLmDQBS5TTT2QVQTK5KmqrjcSN+Y0+4P
V/S7OIJvmwWapocslJEs5y/EcCGKzGTHXWvZH+8XVaaHpN7b9XzvhNsz1b0G
oaW90GhNpMMxecXHTxJWMZHq46Iw2kN13nUbj+eLLiSeepH/qqCuiv24jezj
7Lp3NqWzkynl7DRyeknijXj/jQ/XjvIboexphOZqosEKSINztIckhOSMkNZ4
ZL4a2Z3UnX9v6p8vDz3MeNYqy03tNFHkFgaVVv2xMe9FbdLVqteH3l1dftVz
wo4ZfaZZKgxQRSaKSEMKyQgjfo5ZZFEFHXnDUeqDlupN9Bq8/PYCr+d/Bqbe
/1CZWsfKspZRcR0dMzr2ioEoMkSRAWgNoshcBlHkbwVRZJ6AKDLPQRQZgM6h
pKQkMjLy/PnzW7ZsmdW2KVOmDB061NTUtFu3bgICnL9/+xOpqqoOHjz4jz/+
2L9/v3/bbt68+fTp0w8fPpSWljKZXfer0qDTgCgy6LSam5sLCwvj4+PDwsKu
XLnCoXLu2LFj5syZ/fv3l5eX51WRbz9FRUUjIyNiRpg0aVLr2WrevHl79uwh
ZoG4uLi6ujpeDz8AoB2qq1kbI0dF4bt3sbc3XrmStT2yvj4mkbgc2RUWZu26
7OiI167FPj6siNKrVzgzE5PJ3D+ohgack4PfvsXBwdjPD2/ejF1cWBFrSUnu
R5G1tPCIEXjxYnzkCL51C0dE4ORkSF8B0PEyMzMfPnx4/Pjx5cuXc1hZT5gw
YcCAAXp6erKysrzqo0gkkoGBwdixY1euXOnt7c2hPwwMDHz16hVxaOSfUSoB
+BeIIoNfAp1OLy4uTkxMfPz48bVr1zhU0d27d8+dO9fW1lZZuY3bqncm8vLy
xOwwcOBAZ2fnLyYvT0/Pq1evvn37tppo3QEAn4MocgeBKHKbKOwcchHGWQ3l
zzPDjr04OO/GDHMvY76VWsixGzKTQtKcP9DjQhSZ8f9J2lyMU8uSbiVc2RKy
zuHcCFVPPTRPHQ2RR1ockyl8/CRxjd6KNrN6TDlgtObh6KNx6+9k+r8tjSth
fQem6cc39e3sPmW569iv/tKK1AcpATte7Bl7Z1Y3ryFoSW80sgfqyflbTfyC
SFwPKdojjQXIYG/PcRedt4btuv3hflZlOjvfXMG+1L//s1LuRpGZNEZjcXPV
h6bCZw1Zt9MfHwj9y9Vn+aCNI7vPMEIjeiAzJdRd/D+iyEKSahLdreX0Jnfr
u7rX+KMT19/a5PfG71Xh8wocT8YfG3BlM6Z17IfDEEWGKDIArUEUmcsgivyt
IIrMExBF5jmIIgPQOeTk5AQEBGzbts3BwUGnbT179lRRUZGVlRUVFeXj43xj
nJ+IeCYuLi779u179OhRZtuys7OLi4urq6ubmppaWrru+xOg04AoMui0mExm
Y2NjVVVVUVHRx48fOVTOT3PB2LFjiWrPqyLffiIiIjIyMt26devRo0fr2crQ
0HD69OmHDh16/PgxcdS8Hn4AQDtQqawwcGkpzs3F0dGskLC7O7a0ZG1izN3I
rqgotrHBS5ey5tq4OJyXh8vKcG0tbv4J6046HdfXsyJQ+fk4NRVfucLKPw8b
huXkuB9FNjXFs2fjo0dZIeScHFxSgmtqMGwLD0CHi4uLO3fu3JIlS2xsbDis
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
y+5jLod8XY4/Xn8h6tiDpDtR2W8zK3IoTVWMs3kb/60T+4M6WUXmE0QiCkha
FylZIA0bBbM/jWxmWU9fPGvFmqUuLstdXFa5uKzj9rD9qi17XNxOuXjcdDn5
bOvVj2eefH34KT8mv7qYRq9mBCf133Z5jVU5VRmvi2KuZT3fG+fv8tTb5eox
l8N7uvjSibFf4eKyyMVljouL41LikRk9cLyu2nBxEWOENBFSZGwe/nctw/iv
ZYj1KS9vP2klc40BtiY2M0fPWTVpqYvjCpcFq11WdvGDunmHyx4vl8N+Liee
bLz04XjQl4APuVHZlXmNNBYPAQCAhbq6utTU1NevX9+5c+dEe3v27Jk/f/7I
kSPV1NRYzf8cpqysbGZmZmdnt2zZMhbTg7u7+40bNyIjIwsKCrg9qAD8EKgi
g96ppaUlPT09NDTU29t7586dLCZ2IoNsbGz69+8vIyPDrQwSEBDQ1dUdP378
ihUrDh8+7OfnR1x5UlJSRUUFtwcSAPAfbK8iS0m19XWtrfHcudjVFZ8713Yk
MhG0XfkZBLZXkYWFsaYmHjECOzq2nYfs6Ynv3cOfPmGYzQBgk7KysoSEhGfP
nvn6+nbYWW/cuHHq1KnErpaLSxphYWFNTc0RI0Y4OjquW8fqtTzigh8+fBgX
Fwf3gwC/C6giA4AZ97Z7+fKlj4/Pnj2s3nlatGgRsb0dMGCAvLw8tyKJj49P
S0tr7NixS5cudXd3v3r16t+FZPgIDOhVoIrcRaCK/F/0ZtxYgauzcGk8zn9b
EHX9/Z19AX8t8FplucFBZ/oIlWH6MmpyrM+C4EFIjHEisRZCA6RV/zCeuHWi
q6+TX/S+D5U+ybVhuQ3fqpobf/gI3damOlpRLPVLQP0bj5ogp9fH/jjiNNRx
lGZfBZaPDkkcieogmVFIeQaflovxlBMz3AL33kvwT697U4UT63EuFdf2zj8D
WjluTMV1UbjqcVn8+ajL6/2WT9ptqj0HIVuETBmFY6GOo8nL6IHIIaSGkK6s
+sQBk7ZM3HJ96bU4t8han0RKWA41rYrW1NLZY5E5WkVuoWBqMa5Px9WxDdnP
05+feX3G5bbzRM8JWs6DlR30ZEyURKWFSax+Fr8IkuiLFM2Qxjje/nP6/rl9
xPqLM0+HbAr+euJj0b2UiujC+qJ6jvfaoYoMVWQAmEEVmc06V0UW64MUTVG/
CchoobzVhiHz987a5rX99JWzZPJFMtmHTL5OJt8h91AB98mBz8lP3pHDEsiv
M5/HFnzMqEgvq69oamlgtDGJXOz0R5Q6WUXmF0VSmqjPMKQzmcdkpabdlrHL
Dy7bf+bgFb9zZLI3mexLJt/k9rD9qntB5KAX5JAP5Bdf7kdmv0wsisupyq5q
qKG3NjDu0UD7t2GnUSoaylJrst+VJz/KiyEnvSG/e05+GtjFl06M/WUy+RSZ
/BeZ7Hbu0LJ9iyasHd5/lpwksf40Z7SRpf/lQRVg/NcqxPqTj2TeR+dP03Gr
JqxwX+hxdcN58t7LZC9f8pUuflDvPiQHhpKfRpHDEgPeZIbFF8ZkVmSUUyqb
//8z/18fAgAACxUVFVFRUdeuXdu1a9eM9uzs7IYOHaqjoyMt/W8zRFfR1dW1
t7ffuHHjhQsXWEwPwcHBHz58SE9Pr6qq4vagAvBDoIoMeic6nV5aWpqcnPzm
zZuHDx+ymNg9PT1XrFhhZWWloqLCrQwikUiKioqGhoajRo2aMmXK32EUHh6e
n5/P7YEEAPwH26vISkpt32rZMnzkCL57t60SnJjYdnpwcxcerMP2KrKEBB40
CM+Zg/fuxTdv4ufP8efPOCcH1/8eb1QA0P1lZ2c/f/78zJkzzs7OHXbWtra2
pqamffv2FRX9t2MAuoSEhMSgQYPmzJnj5uZ28yar1/LCwsLi4uLy8vLgHhDg
dwFVZAAI5eXlKSkpkZGRQUFBLCb5kydPrlmzhggmdXV1bkUSLy+vvLy8vr6+
paWlg4MDkZtEehIZSiQpt0cRgK4DVeQuAlXk/2qh4to8XPIZZz3HyTfTHh9+
dHLlkXUTl0w0tBmoYK4tpakkKi0mwHJYeBCSRUgbIQuExsmrLxsy5cjs/Q92
Pv7inUUJKmyMrmzKobRQ6T9aW6VTa5sKYurjb1W92FfqPzf0kO2hRWZTR/RV
k2e5aRKQRFJGSGUi0nUime83Wegz/2jokacpT/Pr4xpwOhWX0DCldxYF6JW4
OQNTYzAltOKrT7Tvljur/jhorrMUoT8QGoyQOuM22P/zmAowGubSCClKqQ3X
s101ct0Fx7NR656WnXhf/egb5UtpE7V7VpHpTZhWg6mluCG3qSSuMJqc6L//
9ZG599cM+mua7tIRKpba0griLJ/SfAJtd3uX6ItkDXlUhsgMn6s1223Qtuu2
56OWPUzzfJsf/K0yo7LxFx+WHxgkqCJDFRmAf0AVmc06U0Xmayu+9rVCxovQ
CDe1Wecn7grY4vvSLzIhKjf3U25uUm5uam5uTm4PlZefW1CcW1SeW1KdW1pf
XNVQWd9UR6U10VtbGFVM4quzy4LOVpEFJZH8AKT1BzJbyzPmqLGTz+y/gg7d
fxeUkPohNzcuNzc5NzeD28P2q/ILcgtKcosqcktq8ssppdWNVZRmSnNLcytu
+c+Y/++w01uaWqh1zZTypppCSmVuTVluOfHQFXTxpRNjH5+b+zY392lurv+H
R4fu7V108s/hW1Tk5jE+DTeAcTDy/xBCSAEhHYTM+fhtNE1XWi3wXHwkcO+T
5PPRuQFxuS+/5iZ08YPK9MzPKyOe+Y3EM7++qeW/z/x/fQgAACwUFRU9fvx4
//79Dg4Oau0pKyvLysqKiYkJCLB+CYKDeHh4zM3Nly9ffvHixZiYGBbTQ2Fh
YUVFRV1dXXNXtkQA+AVQRQa9U2trK5VKrampKSsrKyhgtSZ+8eLFkSNHZs6c
qaOjw8UYEhISkpCQkJeXV1FRsba2dnV1vXPnTmpqKrcHEgDwH2yvImtotGXz
oUP42TOcl9f2/aurcWMjpnfhu1lsryLLymJb27ZRCgjAmZm4uBhXVWEKBdM6
fUMtAEA7X758uX79+vr16/++rxAzRUVFKSkpEREREonloUycJCMjY2tru23b
toCAgMzMTBYLsJKSkqqqqoaGhpaWXv+GBfhNQBUZAEJTU1NtbW15eTnrXXZE
RMTx48fnz59vaGjIrUgidtmCgoLi4uJycnJ9+vQhcpNITz8/PyJJuT2KAHQd
qCJ3Eagi/xeNgitTcU54Wy/0/eF4vzVXtjusnmI+WF9JUUpQWoxfVIgkQOJl
OSzE/6rMqAKOJ0ZGWXOX1ewrq06En3iXHVzf8q6x5WsTvaSltfmH36SnU2sa
cj9Uf7pWGrI9z29K8N6R++cZOQxVUZVjWUcRkkEKZkh7GjLfTBp7ZtC6e8vO
R559nRFZ3pDRggvpuKoVU3tnUaC1GtNzMD0et0RUZtz8fHPnvXVTPAfprUPI
EaERjFPp/u3Ya17GPbIFiJEV79NfffQ8s2WeNh7h88j5+1+UkRNq4gobf/yk
6444WkVupePWZuJphFsotLrC6m8vCl6dTb21LtbT5qaL+ZbJOhNMFfpI/885
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
CLx8/KoDRg2evXWy+8PVD0oPv8e3k/G7AlxQx4GB/qUq8liE5guKbDO1Pjdv
Z/ChR0kPy+re0WhfaLQ8Gq2G1i1R62ilX2hpT2ifztNebvt8acG59Tbzxxnq
qEj/wiPG03ZgLA8vD0lARm+o1qRV5uu8bU58WhqQf+x1WfDX2ozOFgWa68vK
vwRlPNkWe270660CF+cj57ForAFSYn16rYQi0rdG1uvQvPOkLa9Gnfu8NTjj
YVJZSR0cZERllHGItWxeXUlkxqvTUecXBToPuDQebR2CHPWQiQISZ30Gtqw6
Mp6Ixm9Gi69K7nozwTt+3/Os0NTK7l9F7qA2LyY/8kzyrbnvD2veW827fzLv
LAseYxUe3rZn8///Yk2qj5ahzbyxLmfnX/y87SX9/OfWJxmtyeWtFFpb0Z29
Kw+oIkMVGQBmUEVmM6gidydQRe6JoIoMQM9Ho9EqKiqys7MTEhLevn0bwSQo
KOjQoUNz5swZOHAgp29ez4KoqKiysrKent6gQYNGtufk5HTy5MmwsLDi4mJu
DyQAXQSqyACwRVVV1Zs3by5cuLB27VorKyvmcBkyZIiBgYGKioqEhASnM05b
W9vBwWHnzp23b9+OaC82NjY9Pb20tJRK5cTNJgEAPywxse0M4V278JQpbYXk
vXvx3bs4JYXbl/VrsrLw48fYwwPPn48nTsSurm3nPMfE4MZGbl8ZAD0BnU4n
Vho5OTmJiYnv3r3z8/PbunWrnZ2dhoYGp5cW38PLyyslJdW3b18jI6Nhw4Yx
r3wmTpy4efNmX1/fjx8/NsIkAHoNqCIDwHZ1dXXv37+/fPnyhg0bbG1tmbNm
6NChhoaGampqkpKSnG4jq6urE5m7ZcsWIn877LI/ffqUlpZWXFzc0MCJc1QB
4DioInfvKrIYo/M2CKEJAoLzdM03j194bMWR6x5PQi9GRNyIiHgQEfE8olt6
GRbx+EYE+ViEj2vE6flXt07YNGPQhMH9VOXFO/tokZCAeNtB3BJ9eeUM+gxz
NJvvZrcvYOmt5H3hpX6x1W+yKfk1newAQxWZ3ZoZJc8qjEvqSz9mvz3/8cqy
p1tM/Kag3aPRLCNk3gdJCLIc255SRaaUfilNuJX1fGvS9QkvDhucdVJfZyNv
oymiyoMUGDVXYYRYT7VicuoaFlMGTd8/YcvjBWez9t4v9IuqfJtFKaTSaxkN
tCbG+dtsAVVkqCIDwAyqyGwGVeTuBKrIPRFUkQHo+RobGzMyMiIiIu7cuePp
6enBZPfu3QsWLBgzZky/fv14eVne3oiTFBQUTE1N7ezsli9fvrW906dPBwYG
xsXFVVVVcXsgAegiUEUGgC3q6+u/fPny5MmTCxcubN++nTlcVq9ePXnyZAsL
iz59WG4t2UFZWXno0KEzZ850dXX1aO/atWuhoaHJyck1NTXcHi0AerfsbBwR
ga9fbzs3+PBhfOtWWxLn5XH7sn5NSQmOjsYBAdjTE7u5YR+ftiOR09JwM7wN
BwAbNDc3Z2dnR0ZG+vv7nzhxYuPGjY6OjsTSgtjbcnpp8T38/Pzq6urDhw+f
Pn26i4sL88rHzc3Nx8cnLCwsLS2tqQlesAO9BVSRAWC7xsbGlJSU58+fe3t7
79q1izlr1q1bN3XqVGLzq6amxunzLoi0JTJ32rRpRP522GUTeffs2bPExMTK
ykpujxYAnQFV5O5dRRZGSBEhHYTMSPxWKtpTzayXTFy8adFe97UeHps8PHZ6
eBzw6JYOuXu4bfLYutTDZarHSqv1juZTRuqY6yrKSQp38tEiCSMxZSRrgFSG
82rbaU7aYL3+3JJzofvDsn3iq59m1MeXUEs7W3OCKjK70YgAZ/Q8qynlCXlR
l+Our3ixx5Q8Fx0Yh+aZIgs1JCnEcmx7ShWZWp1ZnRVSEns6J9w55vrk2zss
903Vn2cgN5in7bjzvgjJIMT6fGhhiT6KOrY6luvNpnnbrH29yivWMzAzKLH8
K4VWiHEFxnWM5g1bQBUZqsgAMIMqMptBFbk7gSpyTwRVZAB6vvr6+piYmJs3
b+7evXvGjBkOTCZMmDBkyBAdHR1ZWdkuuH3e9/Tr14+4kvXr158/f/5he69e
vUpISMjPz4ezLEDvAVVkANiCSqUWFRV9+fLlzZs3gYGBzOHi4+OzZcsWIgf1
9PQ4nXGSkpIaGhpmZmY2NjYO7W3atMnb2zsiIqIUmg0AcFdFRVtHNzoah4Tg
58/xx484IwP/7p+Dq61tq1jHxuIXL3BwMI6KajvnmZhtWnr9K40AsAOxzIiL
iyOTyfv27ZszZ461tbWJiYm6urq4eGcPFvtlgoKCAwcOJLb8e/bsIbb/zCuf
4ODgqKiolJQUYsnRApMA6DWgigwA2zU3N5eUlHz9+jUyMvLRo0fMWePn57dj
x45p06b179+fRCJxNPKItCUyl0heIn877LJdXFzOnz8fHh5eWFjI7dECoDOg
ity9q8j8xAyEkDxCarx8ulLyA9X0hhkOHTtkkv0oB4exDg7jHRzsHbqlP/9w
mDjWwXaYg5WJg6WulanaQC15NQVxMWH+Tj5aAuJIWgepjkR60/ksnPvP85x6
4O4O/4/XEkpCCxo+lTVl1dKqmzpZxoEqMrvRGW1kKsYNDRUpBR+vJd1Z/faQ
eaAT+utPtGgIGqqB/o9Oek+pItMaChsrPtbmPaj8djr95dZnx2efW2S5yaTv
FB40CiEjRiWGdSmbX0hBXGG4vNYCNZN9htbXpzqHbL/02fddXlRtUyrG+RhX
MgaaLaCKDFVkAJhBFZnNoIrcnUAVuSeCKjIAPV91dXVYWNjhw4enTZvWt29f
BSZycnKSkpIiIiL8/J19zYEdjIyMFi1adObMmQ8fPpS0V1lZWVdXR6VS4Q1T
0HtAFRkAtqDT6UR81NfXV1VVlZaWModLfHz8lStXVq5cOWjQIE5nHIlEEhYW
lpCQkJWVVWhv3LhxO3bsuH//ft7vfvgqAL+75mZMoRCLZlxe3vZVU4MbGjCN
xu3L+jXE9Tc2thWSKypwWVnbb1dfj5ua2tYZAIBf1tDQ8Pr1a09Pz1mzZmlr
a8vIyIiLiwsJCXG6fMUCsd4YNWrUxo0bb9++nZaWxrzyKSsrq66uJhZFTU1N
rTAJgF4DqsgAsB0RIkSU/Osu++vXr35+fs7OzsOHD+f068x8fHxE5hLJS+Rv
h132mDFjNm/eTCaTMzIyuD1aAHQGVJG7dxWZByES49hUIR4eEZKAuJCIlKik
jKScvLSCAjEfySooyCt0S/LyCnIyCrJSCjLiClIiMuJC4iICQgIkPt7OHk8k
JI0UTZHOFDRoA8n2pLkzecm5iJMvU18V1X2j0vOa6RUtrY30Tu47oIrMbq2M
Lzrx1ViZWfz51rf766K9Bj1zRseno2WWaLgWkmLZ9OkxVeRWehW9OYPW+LGZ
8qwszefjzS0Bzg5Hh+iv4eGZhtAIhLQQEmU5Ejy8MiSBAQLCdkLiK6WV3Uc4
XHNyD/d6nhpS1fgZ4zRGFY3SyUH530GCKjJUkQH4B1SR2QyqyN0JVJF7Iqgi
A9AzNTU11dTUlJSU5OTkfPr06fLly2vWrBk2bJiQEOvPdLITLy+viIiIjIxM
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
qP4nno1QRYYqMgDMoIrMZlBF7k6gitwTQRUZgG6hrKzs1atXZ8+eXbNmjVV7
w4YNMzQ0VFFRERcXZzXZsoOent7UqVN37959586dcCYvX7789OlTenp6aWlp
UxP8eQPAWVBFBqD7a2lpqayszMrKio+Pj4iIYA7NoKAgDw+P+fPnm5mZCQoK
cjS4hYWFlZSUdHV1LSwsOqwfFi1adPTo0eDg4OzsbG6PFgAAAMAFVVVVkZGR
ly5dcnFxsbW1ZU7J4cOHGxkZqampSUr+23tZbKWlpfXnn39u27bt+vXrb9++
TUhIyMnJIa6t9WfuzQoA6ASoIgPweyGSkchHIiWJrCQSk3mX/fTp02PHji1e
vHjIkCFiYqy7aL9KSEhIQUFBR0fH3Ny8wy577ty5hw4dCgwMTE9P5/ZogR4L
qshdpJNVZDFG580coXH8gnN1zDbazv/L6bDvwaCQc+Hh18LD74aHPwlnl2fh
4Y/Dw++Hh5Of3D998/i6MxsmuE/V3GiBZhmgUWpIWxqJ/Pj5B/xCSEkfGU1A
o1eiaR6aq678se/+tgsvrz+Ij3iT9SmhMCW7Mq+qoZLeWsto0TRxoUjTyniS
NmNMbarLK4m/++2h63uvkSFrBU46olWWaIwOUmT9BilUkb+rmTEHVBGr4/qy
mOy3F2KuLAvZauI3Fe0ejWYZIfM+bYdss9Irqsj/FLZptRl1KaFlLy/k3dqS
cmz67bXWrvYDbIxUZMVYDxPxBymKkAxCSnzC+hL9Jyv/sU3L5eqAk1Ez/FPc
X+cFpVTkVFN/ZpCgigxVZAD+AVVkNoMqcncCVeSeCKrIAHQLBQUF9+7d27Jl
y6hRowTbExAQ4Ofn5+Pj4+HhYTXZsoO5ufmaNWuuX7+emppKba+pqYlGo9Hp
dHjDFABOgyoyAL8FIhOJZGxubu6QmMXFxYGBgdu3b7eyshIRYblR+mXE2oBY
IZBIJGK10GH9YGJisnLlyqtXr379+pXbQwUAAABwQVlZ2aNHj3bu3GljYyMm
Jvavu2xe3h+/q3EnGRsbOzk5XblyJSkpiVgnECuHlpYWYhXB7eEBoOeDKjIA
vx0iH4mU/N9ddmVl5ZMnT9zc3MaPHy8lxfLt9l9G7LKJ5cG/7rINDQ2XLFly
8eLF+Ph4bg8V6LGgitxFOllFlmK8M26N0DxB4S2mVmfmbH/k/jD+fnHVWyo1
gUrNolIrqOxSQ6WWUql5VGp6ed7Lr6Fer0/PD1hjfNYWbbJAU3TQQAUkLvDD
U5ugKNIYhIYtaKtxrg0y/ity2e2ky+/ykvJrqVRaU3MLrYXeQm+lMwrBf39x
SdsPb64vLUsKzAje9vnc6FdbBC7MQ+us0Vh9pCTB8neEKvJ3/fe837y6ksiM
16ejLiwOdBlwaQLaOhQ56iFTxf/rudQrqsj4P899Om4sby36RE+51/Leq/GJ
y0vPGYeWWv45TEteivXr/DyML16E+JCgBK/mML6RS0mzvPg3hZidiFn9INXv
U3FqWcPPDBJUkaGKDMA/oIrMZlBF7k6gitwTQRUZAK6hUCglJSWZmZmJiYlP
nz7966+/5s6da2xszGpGZTcSiSQlJaWioqKrq2tqajp//vyjR48+e/asqKiI
28MDQO8FVWQAfmu1tbVv3749d+7cypUrhw8fbsZkwIABWlpaSkpKYmJinP6E
kaam5uTJk/fs2XP37t24uLi0tLTCwkLi2qD7BAAAoAdraGgoLS3NyspKSkoK
Cwvz8vJatGgREcHEzpejsSskJCQnJ6eurm5oaGjW3qxZsw4dOvT48ePc3Fxu
Dw8AvQtUkQHoMRobGz98+ODt7b1u3brRo0cz5+zAgQO1tbWVlZXFxcU5/Qkj
NTU1Ozu77du33759OzY2NjU1taCgoKampqWl17+VD9gHqshdpPNVZEOEbBBa
ICiy3Wzsxfm7QjyCvz6qaviAcQpjtNnX+GtifLNKjIspFXH5MXcSAtxeHZ15
b43ZyblGrna6s0eojzRS7q8hp6EkKS8pLCzIcr/DL4z69EcD/0Q269Hs0zob
bk478njf9TcPwuJj4zKTUwsz8ivzKxvKqK1Vzbiehql0TOdeHbmZUl759UnO
871JlydFucn5LBXdMF7Itj+/shTLSV5cAemMRiNXoemnSM7PLI9/2Pzw2934
kvy6pmbGibct3KxYc1cj44lUgHFGbfHL1FCviOML/JcanxqG1hshB3U0QAaJ
szxhm1dOg9/EXvj/sXffYU0l/QLHh95779KUjoCAHQR1EUUpiooVey/Yu1hQ
EctaEMUKigXXwloooohUQWkivRfphJpAEuYesu+9F93d6IsBBH6fJ3/tPg8m
k+ScmeSbOVN3Cq68rXgk3vHW5+OvS17nkgZcivy/2hpxbRYujsCf71LjTyXc
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
IgPAYiQSKTw8/MSJE7NmzVJTU5OUlBQREeHj4+PkZH4VpJ/Fz88/fvz4zZs3
37lzJzMzs7yLL1++1NbWNjU1USiUjo7BeAUiAPoXSJEBGIRoNBqZTG5oaKiu
ribO3UFBQfv37586dWov7PfIy8srJCQkISFBLHlsbGz27t375MmTkpKSvh4S
AAAA4D9aW1sjIyNPnz49b968YcOGSUlJEatsYgnc06tsLi6ukSNHrlu37saN
G2lpaZWVlfX19S0tLXCxIQD6BUiRARjk6HQ6scpubGysqakhVtkvX748cuSI
vb29kpISy+cMxJyEmJkQ8xNilvLNF4vW1tY7dux48OBBfn5+Xw8J6AcgRe4l
AyZFxh2dNTK9DdPIHW2k9i/JrelPG9/9XvfULfb3OefWWC6w1h6mxHyXAzZG
iMrJ2MyVh4NTlodPh194nJCEvbLOGss5Z5Z4PDvyLOtOMQ6txB/rcXELbu3x
F1MbpldiWhZuj8dtIUWx59+cWX1ttuUeFZmFCP2GkCFjY+R/fyDcbBwCEsPG
ak5bb77puu3F5NVPys9G1b7MasqvG4zruLbqzMbPT2veepY9XBp35rdLa01X
TFY3VRPjYTzlnIxRY/vbaQ0hBYRMELJFaImSlvtvi/02XYq6nFT+qg0ntuNc
Gq6h/8RRpZ+lyHTGEZRKjCWdXNVenUIuCGlOu1UdeezdhVVXV9psHa09TYjP
HCEtRj0j8M8vTo7/vDh5JLjkzXkN5glO2C8yy2/0ruDV1xN9ogrjqprLGMlO
I2NjZAwpMqTIAHwNUmQW616KPNjIaiFjRzRtH1pxT+FwzEy/T6feFscWsv6K
ut1MkQcKMUVN3d8WTXLzWXQtZXckvpyMQwpwZi0m9++f0EGKDAALtLe3NzY2
VldXl5aWJicnX79+fd26daNHj+bl/aefP/4ENjY24m+KiIjIyMgoKysP6UJH
R2f+/PmnT5+OiIgg7kxfDwkAoPsgRQYAfPjwwdfXd/Xq1ebm5kO+JisrKyYm
xs/Pz8HB9HuobjEwMFi8ePG5c+eioqIKvlZeXl5bW9vc3AxXWAAAANALiFV2
U1NTTU1NWVlZenr67du33dzcLC0te+Ki6jw8PMQqW1paWklJqes5V1NTc/bs
2SdOnAgLCyNOgn09JACA/w6kyACArlJTU2/evLlhw4axY8d+s8qWk5MTFxcX
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
XLnS09Pzm5X1s2fP4uPjCwoKWlpa+npIQK+CFLmXDIoUmXjOycSSC+M6KqWo
Ljek8M25VP81Ucesb68x2m+nPne49AgJPjmEJBASYqSSzLcZRqLyaIgpGj4D
Wa6RnXds8oE7W/yibsaUJHzBGbW4pLEzSO6RoJdcjevScdkbnHu/JvpUxJU1
Fzb9tmqyxlhFZCCFVEWQJN93Np7lFpIQVTeWH+WgMWOTyYozzkfu7/J7dy0i
LyKfnFaN80m4qgW39u/Ygzh2NOOWSlyfh6tSmrLCssIuvbm29c4B+5Ou+uum
qtuZyRkMERHh52I2TJy8iF8aiaoj6eHcatbadhun7biy8VbM+YTGh/k48gvO
qsf1rNp2YuCkyO2M4L+BmD60VCd9SbqX/efBRO+5wbtHnl+gu95SyUZdVJ2b
Q5px7OBn1Mh/w8d4CyohNIxfdLyK6TLTeSenHgxafCdri+/9o2d2XTpic3+X
zLUVaNs0ZGeMNCFF/hakyGCwgBSZxSBF/hGQIvcKSJG7gBQZDEYVFRUxMTH+
/v4HDx5cvHixra2tiYmJoqIiSzYbFBUVJf6as7Pzzp07r3zt7t27r1+//vTp
U3V1dV+PAQCgN0CKDAD4QSQSKTs7+927d3/88cc38wd3d/eFCxeOHTtWTk7u
5ycq3xAUFFRXVx89erS9vf3yr+3Zs+f69esRERElJSV9PTxgcIAUuRs3SJHB
L6OmpiY+Pp5Y8x45cmTp0qXTpk0zNTVVUVFhSe0jJCRkaGjo6Oi4bdu2S5cu
dT1L3rlzJywsLDU1lVjm9/UYAAB6CqTIAIBuaGpqys3NjYmJefz4sY+PDzGL
IOYSrPqd1DckJSV1dXWtrKzmzJnzzcr62LFjDx48SExMrK+v7+shAb0KUuRe
MihSZDqjASATd4reXtVcFl+dcrf4lUf23eUhHnbnXEeuHas+SVZYCyFlhKQQ
EvhuiswvhiTVkIoJ0raWtHIds+qE65mnx55nP8zCb4pxahUua+rcGJn12km4
uQDXJ+HK1/Vp/gn3d9896HjYWXuRHputGhohi1SE0XcaWz5BfukhYhojZIxt
1KwXWq04suTE/UMPk/w+Ngfn44QvnTVyQ3+vGsh1uD4Hl8fhvOf18dfiA/b5
H16w33Xc3PFKk4ZLG6mJKkny8X2v2Eaiakh+JFK34zFZZjj/xByPP9yfpNzP
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
k0OvhoYGJpPZ2or5I/oB7CaoyoC8l5DoB5F74coK2DYNnC3BqB8oKPDIQ14e
5GVBThpkJUFGHCREQVQIBKlA4evwyID8f/IDIQCEEBAioGMODm7gcRUCMiEK
gBwqfOZcmsHPIvoBLS0tDAaDPLBXV1eXlZUFBwfv3bv3119/VVdX5/oJhZxl
CwsLi4uLy8jI6OjouLi4HDlyJDQ0lJzXd/duQAj1IJgiI4S6TFpa2tWrV9es
WWNpaSknJycpKUmj0QQFBfn4uJwZkaOgYcOGrVy50t/fPzk5mZzR19bWNjY2
4ncNPANT5C7yk6fIX2DRKypTn+Q+35lw0T5it8LFxeIbxovYGwr2laKIEIQQ
edjhZMftofATKgaEqSMxfjMx/5KWZ/CMC7FHX2VH5NQ0sKCRDcxmaG7plOsN
zPL0upSH5W+OFt5dGnVs0plVw5ZP0rU0kJESJcSECBEBQoCf+IbDsKAooWFC
DJ1BTN5BLL5usPPZ3AuRx4MTI1PySkvLSksrSkurS0trS0vrK6saa+oZDU1s
RnMrC4DN6Y5+bANbOZ9R8i+xWpqbWE31jLoaemVFfWlJTWleVWlGRWliWen7
tJjrb69tCdwx8dxMjT1WxEIjwrYPoS1FdLg+buuPCX5BQlCEEBbnE5OTN7bR
d1xrucHP4dSnVfeLfN5WBKfX51Z1/q96eT5F/v8NeQ2nhCqozg1JD/aK8Jn9
wG2g72Sx9SNEftUTNJTnF6W0LS/Oz/mIcWW4gCkypsiIh2GKzGWYIvckmCLz
IkyREYLKysq/VgV8+vTpmTNn1q5da29vr62t3d6RrcMkJSX79u1rampqa2vr
6uq6b9++O3fuJCYmNjf/9Kd4hNA/wBQZIdRlampqyCGQn5/fli1bHB0dra2t
DQ0NVVVVRUXbneJ9F3V1dXI4tGLFiuPHjz969CgyMjI1NbWsrAwHReiHNDOh
7jOUfICcp5B0GUK84bwnbF8Bv82EKVN45DHZHibawngrGGcOtsYwRAf6qYC8
ZFuN3NGRAQUIUSBkgFABQhv6TwTnbbDvHjzKbeuQczmXZhowRUY/hMlkFhcX
JyUlhYWFPXjwwMvLa9GiRVZWVgoKClw/oYiLi/fp02fQoEGjR4+eOXPmzp07
b9y48enTJwaD0d27ASHUg2CKjBDqMgUFBSEhIT4+PuSEd8KECcOGDevfv7+8
vDzXf+RL/sEBAwaQk3dyCk9O5Mknff/+fU5ODjm17+59gLgDU+QuginyvzQ3
1dTlh5fE+mY/WZHo90vgduMDs7TmW8gPlxPSJAglzjZ/5d42fBRCVpPoZ0WY
zyLGb9ZYfGLSwfvbbsXe/lCSXAE5NVBKh3omNHfCBQdWTQE9L7Im7mb5mz8S
b6y5s3/avkUWc21Uh2sThqqEpiwhQ2urkTtKQJhQ7Efo2xAj5hGTPDXne41z
P7nK69JJ/xuBgUGBgSGBgWGBgTGBgQnPX2dFxRclF9R8prPIz1cdJz36gX63
lfNf0znJTAWjLr8qL7HwY2TGi+D4wHvRgTffBF4NDrz0IPDsldOePttm7503
bKOtwgIjwl6bGKxIqIp9y+K6VCFCTI6Q0yLUjSn9R/axW2S5zGuGV9DGu+nH
wivuJdbGFDQW13X+b1t4P0Vu5dRPDZwwray+6F3BuwuJNza8PWx/183w4FSt
hRaK1hpiKvx8Mm0Li7d9xLgyXMAUGVNkxMMwReYyTJF7EkyReRGmyAhBbm5u
aGjo5cuX9+zZ8/vvv0+aNMnU1FRJqd1ZT4epqKhYWFhMnz59w4YNx48fv3Pn
zrt37/Lz81ta8ESEEPrfMEVGCHUZOp2ekZHx+vXrq1evHj58eMWKFZMnTzY2
NpaWlubKQOhLcnJyRkZG48ePX7Bgwfbt2y9cuPD8+XPy2Vmszl9tA/GwFjY0
VkBNNpR+bPsiI+4hvAiAG+fghDccOMAjj327YPdG2L4MtrrCBkeYaQ3WA0FH
pW1t5I6ODKicDlkTCCMgLEH/N5h9BI4+hdDPbesh/3VdhoEpMvohDQ0NSUlJ
T5488fX13bx5s6urq62trb6+vqTk//qy6McoKCiYmZlNmzZt7dq13t7eN2/e
fPv2LTmvxxMKQuhLmCIjhLpMRUVFXFwcORA6d+7cjh07fvvtNxsbGx0dHUFB
Qe6OgigUirq6urm5uaOj48qVKw8dOhQQEBAZGVlUVNTd+wBxB6bIXQRT5H9p
YdU3lsdVZ90t/eCV/3rZa1/HcytHuNvoTFUSt+BsrRpBSLR/YOKjEOIKhLJ+
W41s8qvypNWj151Y5hty/GXuk2x4VwRplVBGB1YnfCPaTK9glKXRcyPqkoNy
X50MvbDaf9v43bO1F1oRk40J875tNbKIQIePsPwChKQyoWpI9B9FDHGSH+06
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
EULdor6+PiIi4vTp0ytWrBg5cuSX02pTU1NdXV1lZWVyRsyVX2ypqamNHz/e
3d39ypUrMTExKSkpBQUFeKuIXg1T5C6CKfJ/sAFqAD4DpAF8KE0M+HRlx9N1
0y/aGO/WUfhNVXq0DK2viGDHj0vi8pp9zR2Hztg7YevT+WcLdj8ovRJVE5HX
VMJoIXdOE6dL6IxKh1lXXJUWnB96JCVgXvRRs2sbDXfP0Zlnq2ppIKOvJq4h
LyorISgi2O7nqD1C5BGXkzuOIYgZGnprf3E+9Nvuy3sCQ85FRV2PinoQFfUy
6rtFRkU9j4q6HxV1NSrqzNMbnhc95uybMsKtr7IzQYwmCENOk/H9c2wBEYIm
Q0ipEgo6gv0tZUfP7zNn34BNN4cdf7/kdprP28+hWdVVnVOK/6OfLUVm1QI9
B6o/QOnz+uQrcTd33POcfcTRfIWu7FQVMUtZER0xAXEq5bv/hb/YSZgiY4qM
eBamyFyGKXJPgikyL8IUGf2M6uvr09PTQ0NDAwICjh49umrVqilTphgZGUlI
SLR3NOsYISEhTU3NYcOGOTo6Ll++/NChQzdv3oyJiSkvL+/u7UYI9Q6YIiOE
ukteXh45QPLz89u5c+eqv3N2draystLR0eHKsk4iIiL6+voTJkxYtmwZOVi6
cuXKixcvkpOTq6sxjEToL0zODTor2r7MrI6H+CB4dBx818NWZ5g7um1JZF1V
EBVqdzQgAIQYELJAqICgHqiNB9NlYHcI5twCz1fgHwdv86G0d3wbgXoscpIb
Hx//7NmzS5cu7dmzZ+HChTY2Ntra2vz83/0N7/8mICCgoaFhbm7u4OCwdOnS
/fv3X79+PTIysqSkpLv3AUKo58IUGSHULRobG8m57ePHj0+ePLlhw4Yvp9WL
Fy+eNGnSkCFDVFVVuTJekpOTI/+ak5MT+UQ+Pj537tyJiIjIyclhMBjdvRvQ
d8IUuYtgivwfzZxXXcGpkTOrM59lPz4ee3RlyFK7i/ZG7hZaDrqKerJiHf/t
hIikqlL/cbrWa81cLtitebviWLx3UO7DxMq0RnYJZ/HfBk6awHXsxqr6zx/K
4+/khx5Ju+f28uRsf88J+xdbrJikO22E6sgBcnpq4jLi39BU/50AecQlCC2C
MCGIXxTUfzWyWjB2znpXz32rvL3dvb23e3vv9/5uf3h77/P29vT23ujt7bZ7
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
qIdLTU29ffv2zp07nZyczM3N9fX1VVVVJSQkfnyIRerTp4+9vf3GjRv9/f0j
IiISEhLy8vLIIRbeYKKHwxS5i2CK3AEsell1Vsjnt15pd+Z8OGl0fb3O9qnK
000kjaQElAhChiDInSXY/pGIX5BQ1CUGjCOslxBTD+isuex0/Pn+R4nPUipz
a6G4AaqboJENnf4jieYGaPwMtQlQ/oaVey89+ESIz5ZzbnO32Y1ZNmzo7CED
Jxtr/aKvbKotpasqpiIjLCEqQKH09ByZQhUQlpCRVNKU1zJSNbTUMrEzGDLN
xGL+sBErx0/etWC9n+eZ16df5wQVQXgFJNVBUVNPCjIxRf4XellSWfy1nGD3
xMt2L/brn1jUZ6WtvK2WqBpf22Ldkpwip92j/3/tJEyRMUVGPAtTZC7DFLkn
wRSZF2GKjHgWnU5PT09//fr11atXDx06tGLFikmTJhkbG0tJtXtK7hgBAQFN
Tc3hw4c7OTmtXr36yJEjt2/fjomJKS0t7e7tRgj1epgiI4R6uKqqqo8fP96/
f//YsWPr16+fMWOGtbW1jo6OiAgX7mdIo9EMDAzGjx+/ZMmSffv2+fn5hYSE
JCcn19bWdvd2I9SZGLVQlgAZD+H9SXjpDudmw5bR4NIfhoqBFgHKBEgRINzu
uZ+fCrJqoDMYhkwA2/kwfwfs8ofL4fC2CHI4HXIV53IYLoSGvlFFRUVcXNzj
x4/PnTu3Y8eO+fPn29jYkMd8QcGvfO3cEZKSkvr6+ra2tq6urps3b/b19X3y
5ElSUlJDQ+/4qgwh1JNhiowQ6uEKCgrevn177dq1AwcOLF++3MHBwczMTFVV
9ceHWCQFBQXyr02dOnXt2rVHjx69efMm+Vw5OTksFqu7txu1B1PkLoIpcgc0
M6obiqMqkq8URmzPejTj6ZExxxaarLRUHycrYkwQ2gShSBC09o9EFCohpdpW
kA4cTwyfp+Gyffw2v/X+YRcjit4UQFwZ5NRAVRM0d/ZlihYGMCuAngu1iezS
yMKPDz8+9Ht2+uhlT48Tq5YeXOS8babNGodBv9lqThiiNFhHSk1WRIC/p6fI
VCERKVUdNWNrfZsZZtPX28z1/HXR/nkrvN3W+W7fdf3Y+RdXniY8SSiNroTk
OshvhComMHtOHYUp8r8warJrcp6Wfjye99It9rLD9S2WOx31ZuvLDeVrO9Zo
cJr/jl95wRQZU2TEwzBF5jJMkXsSTJF5EabIiGfV1NRERUX5+flt2bLF0dHR
2tra0NBQVVWVK5GMsLCwsbHx9OnTPT09r1279uLFi48fP+bl5dXV1XX3diOE
ej1MkRFCPRydTi8oKIiPj3/9+vXt27f37t07Z86coUOHcmX5JiEhISUlJQMD
A0tLy8mTJ69bt+7s2bNv3rwpw/4D8TZ6BeS+gWhfeLQKLo6BHUPhN12wUQQd
IZAjQJIAUQIE2j33UwVBXR/M7GGSGyz6E3behPOhEJwKydVQwbnyQudcAMAU
GX2j/Pz8kJCQ48ePr1ixYsKECRYWFv3795eXl+fn7/jaPP9IQUHByspq0aJF
Xl5eDx48CAsLS0pKKi4uZjLxohJC6EdhiowQ6uGqq6uzsrJiYmKCg4MvXLjg
7u4+ZcoUPT29Hx9ikcTFxTU0NAYNGjR69OgZM2bs3LkzICDg06dPTU1N3b3d
qD2YIncRTJE7oIVdz6xNaSgOqcm+VJ64J+rqkmsbxu8eO2CegsRYTj+gTRDS
7R+J+CiEiBQho06oGBBa5sq/zLJasn/+0aC9j7OvJkFwDnwqhcJ6YHd2tdPK
BnYDMCuhqailLrumILEgISol/GX0w6BXV889Orn91r4Ffu7j/lxk7DZJZ6KZ
kr66uJAA5ZsPu11LUFRCSc/MYMwcywV7Ju+8veDIw82nnv1x6eWVm2GPnsS+
jkiLTi5MKqzLpUNxE1SxgN7c+cl3x2GK/C/sxqKmypi6gntVacczX7k/855x
cp7lukEav/IRIwliIKfS6fj9qDBFxhQZ8TBMkbkMU+SeBFNkXoQpMuJZ5eXl
T5482bVr1+TJk1VUVKSlpcXExISEhLjyhamoqKi1tfW6desCAgIyMzMrKyvr
6uqamprwBmcIoR+HKTJCqIcjBzwMBqO+vr6qqurz58+BgYEeHh7jxo2TlZX9
8VEWhUIhB2w0Gk1KSkpeXn7s2LFbtmy5e/duQUFBd283Qp2prhiSHsCzbXDO
DnbIwkJJGC8KRoIgQ2krkKkE8BPA1+65X1AYdIfC2IWw+Bjsew2XkuBpLnwq
h5Kmtnk/m/Pdc8/54gn1HmlpaVeuXFm9erWlpaWcnJykpCR5iBYUFOTj48I6
Uerq6r/++uvevXuDg4PLysqqq6sbGhrIU0xLC164RQj9KEyREUI9HJvNbmxs
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
L077x957lfk2syKd2fyZ0yDW99Qd2Myk08tSq9JDiqMv5ATvjLnj+eiS56Vj
nof2fsvWd8yeQ95e52743A079zoz4FPN84z6uKKmojo2u4WHUuTveC/t2Ol5
5JTnmTueAWGej1KPhX++l1geW1BXWt8z3zLfhTwu0b/juPTlTtp95NSlM3de
BISlP0ptCv8MieVQUAe9ZCcxOQdR8lBawKKnlP0/9u48rqb8jx/4bde+CxUp
FQpZU3YyZMs2ZBuyfC2DsYxhbCPDGMLYl5Bt7BWyNCJkCRUV0V5K+3pv93Zv
3Xvr/Tvl9/vOPObnW9yaOXV7PR/9Zcat9+n6nNfn3Nc9Ny4k4a5vmM+hIM9N
ftXL7j7mXPeJoZlleffGjYc2bvTZ5uV39NyjK/dj78UWvCqmeD5lCKlYTPJ0
Q3FoylBFrmeoIjckqCLLI1SRoXHj8/lhYWGnT59es2aNm5ubs7Nzx44dW7Vq
paFR47r0eZSVlTt16jR58uRNmzZdunTp0aNHr1+/Tk9PxwumAPCPQhUZABqv
0tLSzMzMmJiYJ0+eXL169ZdffpkxY0aPHj1kvq+mrq5umzZtunTpMmDAgGnT
pm3ZssXPz+8dljZopCSiqldbssMo6Sa9PkFXN9EOD5o3hAZak60BtdYhI3XS
qLkspUgcI+LYEseZOKOpzUJy20mb/OlaNMUXVd0POV9IAjHJ00tU8K9glu57
9+7t379/4cKFQ4cO7dmzp7W1tbGxscz3tP8rQ0PDvn37zps3b/fu3YGBgc+e
PYuNjc3JySkra5i3vAIAOYEqMgA0XsXFxampqZGRkQ8ePPjvax82NjayhTEm
0RkZGTHpjsl4TNJj8t6+ffvu3r2bkZHB9qDwd5USkVSQLy56L8qJKUkLy4gN
ffcy5Pnj4KA7fwTW4O7DwIdhgU9iAl+kBEdnRSQVJOSU5PDLhdX3mBUTSZlH
Znu0hqVCQuUlVe8U5qVRYVxxWnTq2xeRLx49CL5b03EOvBcY+DgwMCww8PWd
oPinYenRCfnJeYI8sZRLJKg+2vLc7JEISVRE/EwqThJmx2QlvHz36mnoo/s1
HrH//wA+CQwMZw5g0N2E0PAPr5MKUgtK86UVDfwAVkrLxfzc0rx4XvqLwvg7
6dGB78ICwx4H3q/5+SKToPshD55HPnmd/Dyp4FWmKCG/PIsn4ZVVyNVlHhme
S3/cCXz4NPBZdOCr5MB3eY9TuG+yBR+4ZfyyhvmUkYmM69JfD1LQw6dhz6IT
XiXnvcsVp3ApW0DcMmokB0lavQYwKwFXWp7Lz03Oi49Of/E0/s4f0dXLLrP4
fupAMKvKw8DAp4GBL+49eB36MjkqMTchV5AhpLwy4opJKMUlUpATqCLXM1SR
GxJUkeURqsjQuBUXF9+5c+fnn38ePXq0iYmJlpZWs2bNVFRUFBUVP+MiXC1U
VVX79u27YsWKixcvpqSk8Pl8oVBYXl4ulTb5szMA/JNQRQaAxquiokIsFotE
IiY4ZWdnX79+fe3atS4uLjJ/kqySkhITydTV1bW1tW1tbWfMmLF///4XL16w
PSiATMQCKoil1DsUfZyebKQTc2jlcHLtTG0MqZkyqSqRsiIpKtRWRTYlTnfi
jCLOPLLaTNPO0L5HFJZW9dJCubTqfsi4yA5fLjk5+cKFC8uXL+/Tpw+zYmtq
aqqpqSkrKysoKNR9Z92yZUs3N7etW7fevXuXx+MJBALmNMGcLCor8VwFgH8Q
qsgA0HhJpdLy8vLS0tKSkpKYmBgfH58FCxZ069ZNtjDGJDom1zHpTkNDg0l6
zs7Oy5YtO3/+fFJSEtuDwv+nsqKyQlIpLa8UC6XlArFIICrlC/glvFqU8EoE
PL6QJygrEYpLyyRlYqmYeaTqBnIlesifUEmV0qrin7ScJCJpubBcJChlDnQt
R5r5z3wer5THE/J4Ir6gXMgcagnzC6uq0FXI/aFmnlAVzEETk7SsQiwUl5V+
3pPzfxzAkjJBadUBLG8UB5DZu1YwPyjzVBFIRLxyIU8k4An4vC8a/rMPEr9E
UMoXlgnKJKXiijJJpVhaKW2gx0VWsj2XSvg8gZBXWsYTSfhlUqG4olzKrJjy
dGhkW5f+dpAEAmEZcxYQSSrLpCSuIObJ00gO0scFgFkJpJWVzD83ZgZhuYAv
ql5wBdVrx6eORMn/W1gEJSVCQWnZx2WZGbxqYanEJVKQH6gi1zNUkRsSVJHl
EarI0PiUlZUVFRVlZGQkJiaGhoYePnx4/vz5jo6O9fLRsSoqKrq6ui1btrS0
tHRwcJg1a9Zvv/324MED5juyPTcANBWoIgOAfBAKhc+ePfsY1Xr37t2uXbtW
rVrp6+urqanJltOaN28+dOjQVatWnTt3LiYmJiUlJTs7m8fjSSQStmcF+N+q
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
FJ/Pf//+/atXr+7evXvu3LmNGzdOnjy5a9euGho1Ljj/m76+frt27Xr16uXq
6jpv3jwvL6+AgID4+Hi2BwUA+DtUkQFA7gkEgpcvX164cGHTpk1TpkwZMmQI
E/Nat26tpaUlW9L7K2Vl5Y4dO44bN27NmjUnT578448/wsPDk5OTuVwu23OD
/BKXEj+H8hMp4yW9+4Nu76SDs2hVD5rYjAZyqDOHzDmkWeOZW1mVtIzI2JLM
HcimPw2bSwu9yOs6+cXRkwJ6w6N0IfEkbM8JjRuqyADQpKCKDAByLzs7++HD
h0ePHl25cqWbm1u/fv2YvXCLFi1k/jTJv9LX1+/du/fMmTO3bt3q6+v74MGD
6OjojIwMoVDI9twAAAAAAE2IbFVkJTUNTZO2Bra9WzqOafvVvO5jF3w19Vv3
uUu/Xbp8ZeP1w+qVW35bue/CytP3V159t+NB+uWovBfpvBz+lzQUZasiN9Pn
6LblmHTltB6kaz/aesDkvuM8xs/9dt7KlQtWrly8cuV3K1euYPvw/DvW//Lb
Vu/Lu/1CDz9MuxDJvZ8kiMkpyxfI+OoVqsjyCFVkaKDy8vLCw8N9fX137ty5
dOnSiRMnOjs7W1hYqKmpfcZ1sk8wNzfv16/f9OnT161bd+TIkYCAgIiIiKys
LLYHBQD4O1SRAUDulZWVpaSkPHny5PLly3v37l2xYsWECRO6d+9uZGQkW9L7
K0VFRTMzs169eo0dO3bRokXbtm27cOFCaGhoZmYm23OD/BIWU14cpYRQ9BV6
sJd8ltKGUTS9Azmrkh2H2nDIkENqNZ651TSreshWztR1HA1cSB7baPN5OvuE
Hn+guJKqHnJBOQlx/zGoE1SRAaBJQRUZAORecXHx27dv7969y+QxZuc7f/78
4cOHt2/fXl1dve5JT0tLy9raesCAAVOmTFm5cuW+ffsCAgKio6PxJl8AAAAA
gH+TbFVkRWUVFS19dUMzbVNbPaturdr3sOrUy76bY09HJ+fGq99A5/Eezv/Z
7Lz2d+fdT6eee7ctOO3Gu4LUItEXHFAZqsgcBY6yelUbWbMlR9dCrbmNoYVd
6w4OHbr17O7s3MPZuZezs6Ozc2M+sl/gq689Jiz7daaX/+Lzb3++l3v2ZfHj
FMEHroyfS4sqsjxCFRkaqPT09Nu3b2/fvn3GjBmOjo4dO3Y0NzfX09NTUlKq
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
46j/Spp4iJZdpwNPKTCOEgvYnhMaN6lUyuyymbU0KysrNTXVz89v3bp1rq6u
JiYmsq2iKioq2traRkZGpqamnTt3njVr1r59+548ecIspGzPCgBQE1SRAaAp
S0xMvHTp0urVq4cOHdq6dWsmCurp6amrqysoKMiWCbt16zZnzpyDBw8+e/bs
w4cPeXl5PB6vrKyM7UEBAAAAAOQcqsh/QhWZfagiQ61QRQY2CQSC9+/fh4eH
BwYGnj59ev369ZMnT+7WrZu2tnbdV8BmzZqZmZk5ODi4uLi4u7szD858i9DQ
0Pz8fLbnBgCoCarIANCU8Xi8iIiICxcubN68ecaMGcOGDevevXubNm00NTVl
y4QtWrTo16/f7Nmzt23bdunSpeDg4Ojo6MzMTLFYzPas0NhUiElSQmV5JPxA
xe8o5jbdOUg+q+jniTR/AI3qTA7mZKRV4xlaiTjaxGlOnDbEaU9mw6nPQpri
RWv86OBTuhpDYemUwWN7TmjchEJhenr6q1ev7ty5c+7cuU2bNk2bNq1Xr14y
v+FXV1fXysrK0dFx5MiRc+fO3b59u7+//5s3b9A8AYAGDlVkAGjKMjIyHjx4
4O3tvWrVqokTJw4cONDe3p7ZHcv8Jl9ra+sRI0Z89913Bw4cuHbt2pMnT+Li
4goLC9keFAAAAABAzqGK/CdUkdmHKjLUClVkYFNBQUF4ePjly5e3b9++cOHC
cePGOTk5tW3btlmzZnVfAbW1tTt37uzm5rZs2bK9e/cy3+XRo0cJCQklJSVs
zw0AUBNUkQGgKRMKhSkpKaGhof7+/gcPHvz4smn37t0NDAxky4R6enrt27cf
OHCgu7v7ihUr9u/ff/Pmzbdv3+J+nvDFpKKqHrIgmbhRlPWQHvvQqQ20YRpN
daYhHahra2pjSNrNajxDqxLHmDjtiNOdOIOpnQeN2kzfn6XjjykonsI/UFIB
FeGZCXXC5XIjIyOZJXTXrl2LFy9mltA+ffpYWVnV5Q0dzD596tSp69at8/b2
DggICAsLS09Pl0gkbM8KAFATVJEBoCkrKipitr3BwcHnzp3z8vJatGjR8OHD
bW1tVVVVZc6EDg4OzIN4eHhs2LDBx8fn4cOHaWlpbA8KAAAAACDnUEX+E6rI
7EMVGWqFKjKwKTMzMzAwcPv27dOmTevatauNjY2pqamurq7M783/K319/QED
BixZsuTYsWMvXryIjY1NT08vKioqL8ezEwAaNFSRAaApk0gkXC43IyMjPj7+
1atXZ8+eXbVq1bBhw1q2bClbJlRTUzM0NGzdunWHDh369OmzcOHCw4cPP336
lM/nsz0rNDYSAQnTq3rIefcp+RIFbKNt82j6YOpqUVVCNtEhXXVSVa7xDN2M
OObE6Uqcr4gzjTqtpW+86bcgephAqYWUXULFQhKh3gl1kpeXd+/evd27d8+a
Natbt262trZmZmZ6enoqKiqyraJt27Z1c3PbsGHDlStXoqKiEhMTs7KySkpK
Kioq2J4VAKAmqCIDQFMmEokKCgrev3//9u3bkJCQ/fv3z5s3z9HRUV1dXbZM
qKmp2bx5c0tLy06dOo0cOfLHH3+8cOEC8+BsDwoAAAAAIOdQRf4TqsjsQxUZ
aoUqMrApNTX1/Pnzixcv7t69e/2segoKSkpKKioqqqqqZmZmEydO3Llz5+PH
j3G/JgBoRFBFBgD4r4iIiIMHD86YMcPa2poJeEzMY8KeoqKibFlRU1PTxcVl
w4YNt2/f5nK5bA8HjUhl1Ze4mEriKDeE0i7T6710+jv6bjT1tyNt9dpOzArV
X4qkoEWKNqQ0iFSmkeoP5HSAlgfQpShKK2Z7QJAfmZmZvr6+K1ascHJyqpdd
dseOHefMmXP8+HFUTQCgcUEVGQDgI2bze+fOHU9PT1dXVwMDA2ZnrayszOys
FRQUZMuHbdq0cXd337t3b1hYGNvDAQAAAADIOVSR/4QqMvtQRYZaoYoMbKr3
KrKWlpapqWmHDh169+49bty49evXM48fHR0tlUrZnhUA4HOhigwA8F9xcXF+
fn6bN292d3d3dna2s7MzNzfX0dGRLSuiigxfroJIUn3RooxKMyjzGb29TKE7
6foy+vVr+qYP9WxLmmo1npWViMP8D1rE0SMVc9LvQ62nkN1qcjxIHr60+wkF
JVbdDxmgnqCKDADwEarIAAAfCQSCFy9e+Pj4rFy50tXVtWfPnjY2Ni1atJD5
DsmoIgMAAAAA/GtQRf4TqsjsQxUZaoUqMrCp3qvIJiYm3bp1GzNmzMKFC7du
3Xr27NmQkBDmu+CjYwGgEUEVGQDgvzIyMkJDQy9evLhjx46lS5eOHz/e0dHR
1NRUtqyIKjJ8OUlVCZkEVZcuuPEUf4tC9tHlpbRnDH3Xl0Z3IDsTUq+53qRK
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
vct+8zQx+Gbk+bOPvb3veHtf9fb+/RO/VJ/qP77i7X39+Ik7l6+9+ONJ/NO4
3DcF5SmCqh5ysZjK8FoqfEplZWVSUtKdO3cOHz78/fffu7u7Dxo0yM7OzsjI
SLarXhoaGp06dXJzc1uxYsXBgwf9/PyePHmSkJDA4/HYnhUAQEaoIgMAfFLd
q8jKysqmpqZdu3YdPnz4zJkzN27cePr06cePH2dlZbE9HDRIFRLKe0ex1+ip
FwX8hw6NpB9606R21EuPTDlkzCEdDjXjkGKNp2RjS+oykly/pzknaGMwHXtJ
gcn0ppC4lVRa3UOWoIoMdZWamhocHOzt7b169eqpU6e6uLgw22QTExPZlkpV
VdUOHTqMGjVq6dKle/fuZRbekJCQuLg4vGsDABoXVJEBAD6p7lVkLS0tKysr
ZmM+duzY+fPn79ixw8/PLzIysqSkhO3hAAAAAADkTWWlVFrGL+fniopSS3Pe
FWXEZKfGvE+MiYuNaXLevo2JT45JyYhJz4/JKknMF2byyoqEkjLJl7zEUiEm
cSmVcak0T8zL5OWlZacnJyfGsT1boxGbkBT/PjMpqzC1QJjBFecLJCVlFeXS
Slmf3xUVYqFUWCzh54iL0/i5KXkfEtNT4uLj3tX0Q7yNjYlLjkn8EJOcE/O+
KDm7JLNIWFjKPBDz2/2/r7nJ+gNB3VVWN8HLqwvJAjHzmynI4n5IzYuPy4yJ
SYuJSY6J+dS/t7fVf5wYE5Py9m1aQnLO+6zirCJhgaiCJyaBtKqHLPOzDORb
ZWVlZGTkyZMnly1bNnDgQBsbGzMzMwMDA3V1ddmueuno6PTr12/JkiXHjx+P
iIhISkrKysoqLi7Gp2wDQOOFKjIAwCfVvYqsqKioqalpbGzcpk2b9u3bjxkz
ZuPGjX5+fsnJyWwPBw1ShZg+hNGLo3R1AR10pB8taEYLGqhLVmqkxSF1DqlW
3xJZocZTsnkHGjSd5u2mXx/S+Q90N48iefRBRGWVVRdEpLgmAvUgJibm999/
X7Vq1dChQ21tbc3NzQ0NDTU0NGRbKpntee/evRcsWHD48OFnz54lJiYyy29R
UVFZWRnbgwIAfAFUkQEAPqnuVWQVFRVdXd2WLVtaWlp26dJl5syZu3fvvn//
fmFhIdvDAQAAAAAAAACAPKuoqBCLxSKRSCAQcLncoKCgLVu2jBkzpkWLFrJd
6VJUVFRVVVVXV9fS0mrduvXEiRN37Njx8OFDoVDI9qwAAPUAVWQAgE/Kysq6
du3a2rVrXVxcdHR0NDU1mzVrpqKioqCgIFuq7Nix45w5c44fP/4OayX8F3Ma
rpCQtJwkIhJxKfYO/bGZjoykH43oGw4N5VAnDhnVeA5WUCAlZVJWJVV1aqZF
dk709TLaeJ4uJtNzordEH4i4qB9DnVRWVkokko+7bB6Px2yHt2/fPmHCBHNz
c5l32cxyyiyqzC6b2aozG3Zm285s3pktPNuzAgDICFVkAIBPevPmzYkTJ+bP
n9+1a1dtbW0NDQ01NTVlZWXZYiSTIfv377969Wpmt56HtRIAAAAAAAAAAP5J
IpEoOzs7Njb22bNngYGBu3btmjt3bp8+fQwMDGS7uqWlpWVmZmZvb9+3b9+J
Eydu2LDh/PnzkZGRuEcTAMgHVJEBAD6poKDg8ePH3t7ey5cvHz58eO/evW1t
bU1MTNTU1GRLlagiwydIy6m0kIrTKPcdvX9GD4/SycX0U3+aqUfDONSTQ5Yc
0q3xHKykTNoG1NyCLDpTx740YjZ9t4sO3KGgjKoecipRLpEAVWSok/Ly8tzc
3Pj4+BcvXty5c2ffvn0LFy4cMGBA8+bNZVsPNTQ0WrVqZWdnx2zV3dzc1qxZ
c+bMmfDwcIFAwPasAAAyQhUZAOCTUlJSbt265eXlNXv27MGDB3fr1s3S0tLA
wEBRUVGGGIkqMgAAAAAAAAAA/Gt4PF5MTExgYKC3t/eGDRs8PDyGDh3aoUMH
LS0t2V4kbd68effu3ceOHbtkyZLt27efP3/+0aNHKSkpYrGY7VkBAOoBqsgA
AJ9UUlLy7t27oKCgEydOeHp6zp07d9iwYR07dtTW1pYtVaKKDJ9QLqCiVEoP
o9hbFHaSLq2lbZPoP91oqDZ15VA7DplwSKPm3pIamVhQe2dynkCjFtMiL9px
hS6HU3g+pVf3kLlEIlSRoU4EAkFsbOzH9XDTpk3Mejh8+HB7e3tdXV3Z1kMD
AwMHB4dRo0YtWrTol19+OXv27IMHDxITE0UiEduzAgDICFVkAIBPysnJiYiI
uHbt2v79+1evXj116tR+/fpZWFgoKSnJECNRRQYAAAAAAAAAgH9Nfn5+SEjI
4cOHly5d6uLi0rNnT2tr6+bNm8t8/7o2bdq4urquXLnyxIkTDx48ePXqVUpK
SmFhoVQqZXtWAIB6gCoyAMAnlZWVfbwLaFhYWFBQ0N69e+fPn9+vXz9DQ0PZ
UiWqyPAJwmLKiqJ3AfT0AN34gfZOo+8G0mhrstMgUw4ZcUibQ6o1noPVNKht
l6oe8sQ1tPQEbb9J515QSDIllVAxEb+6hyxhe0xo5LhcbmhoKLN8rVixYvjw
4b169bK1tW3RokWzZs1kWw9NTU2HDh363XffHTly5P79+y9fvkxKSiooKJBI
8GQFgMYKVWQAgE/i8/kfPnyIiYl5+vSpr6/v5s2b3d3dO3furKysLEOMRBUZ
AAAAAAAAAAD+NZmZmf7+/mvWrBk0aJCmpmazZs1UVVWVlZUVFBRke5G0Q4cO
M2fOPHTo0MuXL0tLS0UikVgsRg8ZAOQGqsgAAJ9UWVkpkUjKy8uZ+CcQCIKD
g3/55Rc3N7eWLVvKlipRRYZP4OdSyiN6cYxurKQTY2htX5rckXq0IANVUuaQ
EocUOaRQ4zlYXZvs+tGoJVU95N9e0sVkepBFsVwqKqcKqvqqxC2Roa7y8/Nv
3ry5YcOGYcOG6enpqaur13GXbWVlNXXq1D179jx79uzjLptZbJldNrPwsj0r
AICMUEUGAPikiooKZmddVlYmFArT0tIuX768cuXKvn37qqioyBAjUUUGAAAA
AAAAAIB/TUZGxpUrV1asWNG7d2/ZXhX9m44dO86dO/fEiRMojQCAXEIVGQDg
czx9+nTnzp0TJkxo1aqVzKkSVWSoIi0nsYBERSTIocxoCr9M17fQ4Rm0wZlm
2ZNLG7I1II0aO0yKKqSiSc0MSLMFmXSgPpNo5s+05VpVDzk4jyK5lFZKAtxd
FupNXl7e9evX16xZ079/f9lKI3/Trl27b7755vDhw1FRUWwPBwBQP1BFBgCo
VX5+/sdUOWDAAFVVVRliJKrIAAAAAAAAAADwr0EVGQDgi6CKDADwOVBFhnpT
XkL8TCqMp+wIirlBt/bQ4SW0ZgRN7UhfWVBXEzLTJjWlGrtKGqTZkgxsqWVP
aj+CRi+nlUfoyH26n1nVQ04SUF4ZifAxLlBvUEUGAKgVqsgAALVCFRkAAAAA
AAAAABoRVJEBAL4IqsgAAJ8DVWSoN8J8KoyljCeUeI0eH6JTP9D6STTFkXq3
Ijsjaq1D+s1IRbGm866aHhnYkFk/splAvRfTzJ30ix/5vaSYwqr7IeeVUYmE
xBVszwnyA1VkAIBaoYoMAFArVJEBAAAAAAAAAKARQRUZAOCLoIoMAPA5UEWG
esPPoKwXlOBPrw5QwBraMZ1mDyTndmSsUVVC1lKpuiWyokJN512N5tSiB9mM
px7LyHUXLb9ARx/RoyTKE5JAUnU/ZHEFVVSyPSfID1SRAQBqhSoyAECtUEUG
AAAAAAAAAIBGpO5VZAUFBVVVVU1NTV1dXSMjo759+y5fvvzcuXMJCQlsDwcA
UP9QRQYA+Bx1ryLb2NhMmzbtt99+e/LkSX5+PpfLFQgE5eXllZWojMq9SqqU
UqWYKspJKqL8WIoPpOdHKHANHZ1BK4bSyE7Urnltp1sl4qgQR4046qRjRZZf
Ua+F5OpFsy/Ttvvk94beZFOZhO1JQX5IJBKhUMjj8QoLC9+9e3fmzJmlS5c6
OTnJXEVm/qKGhsbHXbajo+O333576tSpmJgYtgcFAKgfqCIDANSq7lVkZWVl
JpEuWbKESadMRi0oKGDyKpNamezK9nAAAAAAAAAAACBv6l5FVlZWNjY2trW1
dXJyGjly5OLFiw8cOHD37t0PHz6wPRwAQP1DFRkA4HPUvYpsbm7u4uLCZMv9
+/ffunXr2bNncXFxeXl5UqmU7eHgH1YpJWkpiYtIlE2l7ynpIT06SZd+ot9m
0vdf0aQe1NuSTPVqPNcqEEeDOAbEaUUcSzLuR91mktsmWnyGtj+gc68oJIVS
CkmM5xLUGy6Xm5qa+vLlS2YvfObMmbVr1zILoJ2dHbNflmEBVFRUNDQ0tLa2
dnR0dHV1XbBgwZ49ewIDA5lvwfagAAD1A1VkAIBa1b2KrKSkxCTS8ePHM+n0
9OnTTFJl8ioTKZnsyvZwAAAAAAAAAAAgb+peRVZVVbW2th4yZMjs2bM9PT2P
Hz8eGBgYHR1dUFDA9nAAAPUPVWQAgM9R9yqykZFR586dXV1d58yZ89NPP/n4
+Ny7dy8xMVEsFrM9HPzDKsRUXkTCdCp5R0VhFHGJrmyj7f+hBUNpTBdytiIb
EzLQrO2WyPrEaU0ce+I4k9kkGryaFhyh3Xfoagw9SqG3OZTDJ2kF26OC/MjK
ynr27NmlS5d27NixZMmS8ePHM1tsc3NzRUVFGRZAJSWltm3bDhw4cObMmRs2
bDh69OjNmzcjIyNzc3PZHhQAoH6gigwAUKu6V5GZLMokUkdHRyadMhmVSaoX
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
clU3pBZdycaNei6h4V609DwdCKGgJHpfRoVEJUQiItwUGf4xqCIDAHwRVJEB
AL5U3avILVq06N+//9y5c3fs2OHr6/vw4cM3b95kZWWJxXjTJgAAAAAAAAAA
yKLuVWRjY+OePXtOmjTphx9+OHjwoL+//7Nnz96/f19eXs72cAAA/yxUkQEA
vlTdq8hqamoWFhZOTk7jx4//9ttvd+zYcfnyZSbT5ufnsz0c1JPiVEq+SxFH
KGgVnZlMnoPI4/+wd99xVdeN//+PgCwBRdwTZ+6ZKzVTM1NLc5QjK3M1NEvT
yrShZWpppWZ65ciROTJTc29x5cC9FVERBNl7HODxO2+u7+e66rp+FylwOCDP
++31p+B5HTjv8eJxXqceT5SisokyJjxNuJqwz/TkWrQstZ7gidfp9w2jN/LN
QX69yPFgQlKIhYSMLZG115dYjVJkEZEHohRZRORBZT9FLlasWO3atTt06PDi
iy+OGzdu7ty5mzdvvnjxYkJCgq0nJyIiIiIiIiIi+VL2U+SKFSt269btgw8+
WLFixfHjxy9fvnznzp2oqKjUVG00JiIPOaXIIiIPKvspsr29fdGiRStUqFCr
Vi3LN3nxxRenTZu2efPmgIAAW09OckjIeU7/zNb3+fFpPq/Da950LUm9IhQ1
4WbCOWNLZLtMT66lKtPiOfp/yoQNLLjKhgCOhHI9jpg0ksGcsSVyuq2nKQ8v
pcgiIg9EKbKIyIPKfors7OxcokQJy5fXq1fv8ccfHzFixPz58w8dOhQTE2Pr
yYmIiIiIiIiISL6U/RS5Ro0ar7zyyvz588+cOWPr2YiI5CqlyCIiD+rmzZsr
V658++23W7Ro4eDgYG9vb2dnV6hQoaxdiFo0bNjw9ddfX7Zs2bVr12w9OcmO
dOO0mp5Geiq3juLzLcv78lllXjPxrImmJsr93Qm1UCFj2NlhZ0/FR3h6EO/O
Z9EZDoDlNsUfwjMiZBHrSE9PT0tLS83g6+s7d+7cgQMHKkUWEbkfSpFFRB7U
iRMnvvvuuxdffLFatWr/vK3Ozp21q6trx44dJ06cuGXLlsjISFtPTkRERERE
RERE8iWlyCIiWaYUWUTkQd29e3fnzp3ffvvt0KFD27Rp06BBA29vby8vr8KF
C2ftWlQp8sMgzUxSDDHBhN8g+DzHVrFmPF924c1y9DDR2kQtEyX+rkN2cad4
WcrVoGpjHu/F0E+Z/iu/XeU0WH41giA6YzNkESswm80RERE3b948e/bswYMH
Fy9e/O6773bu3LlChQpZO7IpRRaRAkUpsojIg7p8+fLatWsnTZr0/PPPt2jR
onbt2pYrTw8Pj6xdfCpFFhERERERERGR7FOKLCKSZUqRRUQeVERExKlTpzZs
2DB79uyxY8f279+/Xbt21atXd3V1zdq1qFLkh4E5iehA7p7l+l7OruX3qcx+
ldGtea4kLS1nShMVTHhkeja1szM65KqNafI0HV/h5Y/45EeW7McngBsZHXIE
xEOarWcqD6mkpCQ/P78DBw6sWrVq5syZb7/9ds+ePZs0aeLl5ZW1I5tSZBEp
UJQii4g8qICAgEOHDv3888/Tpk0bMWLEc88916xZs/Lly2ft4lMpsoiIiIiI
iIiIZJ9SZBGRLFOKLCLyoOLj4wMCAs6ePbtv3761a9dOmTLlpZdeat68eZa3
b1KK/DBIjufeZa7t4vgSdn3GwuF82IV+9WleDG8TZUwUM+GceYpsT7maNH2a
biMYMpOPV7FgL1svcj6MMIjK6JCTLWduW89UHlJxcXG+vr4rVqz4+OOPX3jh
hfbt21sOTRUrVixSpEjWjmxKkUWkQFGKLCLyoCIjI/38/E6cOLFjx47Fixe/
//77PXr0qFWrVtYuPpUii4iIiIiIiIhI9ilFFhHJMqXIIiIPKjU1NSkpKTY2
NiIi4s6dO+vXr584cWLnzp2zvHeoUuSHQVI0ASc49TM7PuXnF5nyFIOb0K4S
FYvgYsLJhIMJu0zPpvYOVGtCx0EM+ZrPdrH4HFv8OXmPoARSwGz5zdOWyGJF
0dHRu3btmjZtWu/evStXrly8eHF3d3dnZ2d7e/usHdmUIotIgaIUWUTkQZnN
5oSEBMtVaFhY2NmzZxcvXvzGG280a9YsaxefSpFFRERERERERCQLUlNT4+Li
wsLC7ty5c/369XXr1k2cOLFbt27lypXL2jqVUmQRKbCUIouIZEdKSsq+ffum
Tp3avXv3kiVLZu1atHbt2gMGDPjqq6927dp148aNoKCgiIiIhISE9HRtgJu3
pZkxJ5IcS2IE4X6c38LOb1j6OtPaM6Ixz1ajQUmKOf/NTsiOLrgUxb0kJSrT
/Bn6j2fCzyw6x5a7HI3gehyRKbaepxQIkZGRW7Zs+eijj5588klXV9esHc2c
nZ2LFStWpkwZb2/vdu3avfPOO0uXLj179qytJyciYnVKkUVEsiMwMHDt2rXv
vvvuY489luULUcvXjhgxYuHChb6+vrdu3QoJCYmOjk5OTrb15ERERERERERE
JO9KTEy8ffu2r6/vtm3bli9f/umnnw4cOLBFixZZ3olOKbKIFFhKkUVEsiNH
UuRKlSp16NBh+PDhX3311erVq/fs2XPu3Lng4OC0NO2Bm7eZE4i/R5Q/oefw
28veBSz9gM/6MKwxParTshxVi+HmmGl15ELRMpSpRdWWNOhCj1GMnsOcbWzy
MzrkSzEEJhJntvU8pUDIkRTZchisU6dOu3bt+vTpM3r06Llz5+7YsePGjRu2
npyIiNUpRRYRyY7sp8iOjo5169bt0aOH5ZvMmzdvw4YNhw8fvnbtWlRUlK0n
JyIiIiIiIiIieVdMTMzp06fXrVs3Y8aMESNG9OrVq3Xr1tWrV3dzc8vaOpVS
ZBEpsJQii4hkR46kyF5eXnXr1u3QoUP//v3HjRv3/fffb9u27erVq6mpqbae
n2QqKYooP+4ex38bJ5ayZhLTXmXYE3T0pmlpqntSyhVnh8zOoM4elHmER9rT
YgBPj+X1WUxfx5rjHL9r7IccmGhsiZykIl1yQ46kyFWrVrV8+fDhw6dNm/bT
Tz/t3Lnz7Nmz91TUiUgBoBRZRCQ7sp8iOzg4lC9fvmnTpl27dn311Vc//fTT
ZcuWHTx4MCgoyNaTExERERERERGRvCs8PHzv3r3ffvvtq6++2qRJkxo1apQv
X75YsWKOjo5ZW6dSiiwiBZZSZBGR7MiRFNnFxcXLy6tSpUq1atV64okn3n77
7UWLFp04ccJs1na4eVv8Pe6d4cZWzi5m12fMHc6oLnSuh3cxSrtSzBnXwtjb
ZXYGdfOiSnOa9+eZiQxezOTfWfYHPn7cijEi5Diz0SGnptt6nlIg5EiK3LBh
w5dffnnGjBk7d+68ePHirVu3QkND4+PjbT05ERGrU4osIpId2U+R7ezs3Nzc
SpcuXaVKlXr16j333HOffPLJunXr/Pz8bD05ERERERERERHJu0JCQtavX//+
++8//vjjDg4OWVubsre3L1y4sLOzs6ura8OGDYcNG7Zw4cJz587ZenIiIrlK
KbKISHakpKQcOHBgxowZzz//fOXKlV1cXJycnCwXqHZ2dlm7Ri1ZsmT37t2n
TZu2f/9+yze39fzkv6WTnkZ6Kulmom9xy4czy9j/GauG88mzvPAo9cvjkGl+
XKgQheyxc8DekeKVqPc0nccweCEfHWDBGbb5czGMOP3oJbflSIrcqlWrd999
d+3atYGBgbaekIhIrlKKLCKSHXfv3l2/fv348eM7dOhQpEgRZ2dnR0dHy511
oUKFsnZdWrt27cGDBy9cuPDChQu2npyIiIiIiIiIiORd2U+R7ezsPD09vb29
GzVq1K5du0GDBk2fPv3333/Xe+RFpKBRiiwikh1ms/nMmTMrV6786KOPevfu
/dhjj9WtW7dChQpubm5Z+4OpUuQ8LT2NtETM0SSHkRhEwDGOr+H3L1nwBp92
59XWdKhF1ZJ/sxOygwsuXrhXwLMm1R+nw1AGTefjdUaHvPE6R4O4GU2iNsSW
3KYUWUQkO5Qii4hkR1hYmI+Pz/z5899+++1OnTo1a9asZs2apUqVcnJyytp1
qVJkERERERERERG5H9lPke3t7StXrty6det+/fqNHTt21qxZ69atO378eHBw
sK0nJyKSq5Qii4hkR2pqqr+/v4+Pz4oVK6ZNmzZy5MgePXo0bdq0dOnSWfuD
qVLkPC09lZRoI0KOvUbUaS78zubZzB3NuOfo35yOtalfgTIe2BXK7Kzp7Emx
apR5FO9ONH+Fvp8yfgk/7GeHP8fucjWCe/Ekp9p6qlLgKEUWEckOpcgiItkR
ExNz4cKFbdu2LViw4OOPPx48ePBTTz1Vu3Ztd3f3rF2XKkUWEREREREREZH7
kf0U2fJVDRo06Nu376effrp69WofH5+zZ8/evn07JibG1pMTEclVSpFFRLIj
LS0tPDzcz8/P19d39+7dixYtGjt2bNeuXatUqZK1P5gqRc7T0s0khRodcsRx
QnZyZCE/fsj7/ejRnMaVqFGaskVxd6ZQpimyW1lKN6HaMzQYxtOf8NYCZm9j
63muhHMr2uiQY5NJTbf1VKXAUYosIpIdSpFFRLIjKSkpODj48uXLR44c2bp1
69dffz1s2LA2bdp4eXll7bpUKbKIiIiIiIiIiNyP7KfIjo6Obdq0GTNmzKpV
q27cuBEbG5uQkJCcnJyaqv3HRKRgUYosIpJNZrM5KSkpPj4+Jibm5MmT8+fP
Hzx4cL169bL2B1OlyHlaWjIJd4g6RcgObq9g+xSmD6Z/O2pXxNURp8IUtsfe
7m/OmkWrULkDDYbQ9nMGLGHyVn45xbkgEs3GZsjmNNLSUYksuU4psohIdihF
FhHJjvT0dMv9b2JiYlxcXHR09M6dO6dMmdKjR4+yZctm7bpUKbKIiIiIiIiI
iNyPHEmR27VrN378+I0bN4aGhtp6QiIiNqMUWUQkB129enXp0qWvv/56w4YN
s/YHU6XIeU86pEEqpGCOIfISt3dxYSl/fMHSNxn3LE83okLxTM+UdpgcMRXB
VBRTCUo3p0E/Ok3gpUV8uJWFR9lznZsRtp6mFERJSUkRERGBgYHXrl07cuTI
vHnzLIevli1buri4ZO0IphRZRAospcgiIjno8OHDM2fO7NOnT/ny5bN2XaoU
WURERERERERE7odSZBGRnKIUWUQkBylFfhilGREyiRBHcgiBf3B6Jbu+YOVQ
pjzLqy1pU43S7pmeKQtnRMiWs2x1TA3w7kH70bw6m8mbWHyMrZc5HUhwrK2n
KQVRZGTk5cuXLUebX375ZdasWaNGjXrmmWdq165tuV/O2hFMKbKIFFhKkUVE
cpBSZBERERERERERyR1KkUVEcopSZBGRHKQU+WGUmtEhx0IEiTe5tp29s1j+
Jl904M1GPFONhqUo7pzpmdIJUxlMtTC1xPQ0dd6g93Q+WsPK4/jc4GwQtyKJ
TrT1NKUgCgwM9PHxWbx48YQJE1588cVOnTo1atSoXLlyWbvLNilFFpECTCmy
iEgOUoosIiIiIiIiIiK5QymyiEhOUYosIpKDlCI/jMzGfshEQDDxlzizhl8n
8mV3hnvTvQQtPajmgod9pmdKV0zemJpjegbTYJpOZvgy/uHDiVsExRAeT2wS
yam2nqYURNevX//ll18mTJjQrVu3GjVqVKhQwcvLy9XV1c7OLmtHMKXIIlJg
KUUWEclBSpFFRERERERERCR3KEUWEckpSpFFRHKQUuSHUFoi5jCSb5N4iXs+
+HzHD8MY04KuzrQwUctEWROu/312LITJDpM9JgfsPClcH5encRtCsY95agET
trHhAndjbD03KeguXLiwcOHCIUOG1KlTJ2uHLDs7O8vNtaurq4eHR/HixTt3
7jxx4kTLXfbdu3dtPTkRkVylFFlEJAcpRRYRERERERERkdyhFFlEJKcoRRYR
yUFKkR9CSZFEXiHoAH6/cmIOK99h8rO8XIdWjtQ2UcmElwmn/z47OmByweSB
yQunapTqQPVBNP2EDot463fmHWW/P2Hxtp6bFHTZT5GdnZ3Lli1r+fLWrVt3
69Zt7Nixlm948ODB8PBwW09ORCRXKUUWEclBSpFFRERERERERCR3KEUWEckp
SpFFRHKQUuSHUOxdAg5x7id8PuPXocx4hhGP0rUCtRyoYKKECXcThf/77OiM
qRgmy5m1Cm7NqNmXJ8YzYAFjdzHnOL9f5WwI0Um2npsUdNlPkT08POrWrdul
S5fXXnttypQpS5Ys2bVr16VLl2JjY209ORGRXKUUWUQkBylFFhERERERERGR
3KEUWUQkpyhFFhHJQUqRH0IRN7i0kb1TWNWfb5oxuha9K9CsKGXsKGqiSMaW
yPb/fXYsgqk0pmqYGuLZmeYjGTiLSVtZeZ0ddzgZxu04Esy2npsUdNlPkb28
vCx35W+88cZ33323Z88eX1/fa9eu3bt3LylJpb2IFCxKkUVEcpBSZBERERER
ERERyR1KkUVEcopSZBGRHKQU+SEUcpHji1k7nK8bMtqRFwrTxp4qdkaBbGei
UMb4/zk7emCqhKkBpraU6k/nSXywhlXnuGLmVir30ohNRyWy2Fr2U+SyZcv2
7Nlz+vTp+/btS0pKSk5ONpvNaWlp6ZZLTBGRgkQpsohIDlKKLCIiIiIiIiIi
1pOQkHDv3j1/f//z58/v3Llz5syZr7zySuPGje3t7bOwEqUUWUTkn5Qii4jk
oOynyJ6enpbL1LfeemvBggVHjx69dOnS7du3IyIikpOTbT25giOdtBRS40mJ
Jjkc/0Ps+pZ/vMh7NelrooOJBibKmnDI/OzohslyWq2JqSnFu9D6TYZ8xVdr
+d2X7b7s9eWgL8d88S0I4wy+F/G9hu9NzgRxPYy7McQmoVQ1D8h+ilyuXLne
vXtbbs8PHz5s69mIiNiSUmQRkRyU/RS5SpUqPXr0+Oijj3755ZfTp09fu3Yt
KCgoJiYmLS3N1pMTEREREREREREbCw0NPXfu3I4dO5YtWzZ16tThw4d36tSp
evXqSpFFRLJDKbKISA7Kfors5uZWv3797t27v/32299+++3q1at9fHws3zYm
JsbWkysw0tMwx5F0j/hbxFzmwkbWTeaLXrxSjXYmGpmoYqK4CfvMz44umIpj
Ko+pBu6PUucZOg9l6EQmzWHKHKbPYeYcZs1hTkEYC5mzkjkbmbObhUfZdBHf
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
ez9m3TB+/pjF85m7gZnHjRp5awBnwglNtPWjFBERERHJt5Qii4hYg1JkEREr
UYqcj6WnkZ5KWgppSaQkkBhHbDRRkYSHazz4sDxvUYTHEB5HZAKxSSSmYNan
3tqGUmQREStRiiwiYiVKkXNSOiQa+yFjOdEEcGcfu2cxbwijH6VncTp40rQY
1YtS0oOiRYwI2akw9nYPcC4r8wiNevD0+7z6IxO2M/8wm89x9lZWbyVDCQ8k
/Abhlwg/w8k1rJrA5GcZWInHTUaN7G3C04Rdpg/Jzp7CTjgVwdUDt2K4F6Oo
J8U8KVmKZk/ywru8t5R5p1kfyKEwrsQSkWzrn5GISIaYIPz28sc8Nr7Nj734
/i2+nsqUZUzcxTe+/HqV48GExNv6UYqIiIiI5FtKkUVErEEpsoiIleRIilyv
Xj3LBfDMmTN37959/fr1O3fuhIeHJyQk2HpyIpIvKUUWEbESpcgiIlaS/RTZ
3d29bdu2lu+wePHikydP+vv7BwcHR0VFJScXiOo0PY20ZFITMMeSHEH0bUIu
ces4V/exdzELxzK+Ky9UppWJeiYqmShmwj7zE5aTsdVwsVKUrES5alSsTpUa
VK/JI4/Qthu93+GN7/hkG/NPsfE6J4K5m+X6O+3/wulQCCTAh33zWPQWEzoy
6BF61eTJGrSoTu1qVK1A+RKUdKOoA64mnC0P8u9mYWePdwMe78eLkxn/K7MO
8vMpdl3jTBB3orgXR1QiiWZ9mI/kG8YrPeX/XumRxNzj3h1u+3P1Kpct4waX
b3M5iCv3uB1JaBxxlsOCfr3zIMtxLwWSIIGIa5zdyNbpLHiFz9ozYQDvvsvI
GQxdwYc7WHiCvf7cijb+uTnj6/TzFBERERF5IEqRRUSsQSmyiIiV5EiKbLmC
ffLJJ1977bWvvvpq1apVe/bsOX/+fEhIiK0nJyL5klJkERErUYosImIl2U+R
XVxc6tev/9xzz40dO3bevHnr168/dOjQtWvXoqOjbT253JCWgjmapBDibxJ1
Eb9DHP2dLUtZ/g0zxjLmefo3p11p6mRsMlzKhNvf7TPs5knZ6jzSgke70u4F
nu7PcwPp9zKvvsroCUz6nlnrWXqc369zJJCrEYQnZvWhp0Oy5R4GoiCMe2c5
8zvbvmPxOL4cxKcv8d6LjOzH4Ofp/SQdG/NoJaoXoawJr4xZOGaeIttRugr1
29NxEP0/4a25TFrJ3O2sPm4EyScCuBZm5Jr6PB/JL9LNmGNIukf8LaIvc+M4
x/ewbT0rlrP4JxavY/E2Fvuw7ARbL+N7h4AoklNt/aDlv1kOenEQASGE+HJo
OcvG83EPBjViQGeef5ke4+jyFUOW8+Uu1p/nYrjxzxMyvi5VNbKIiIiIyINQ
iiwiYg1KkUVErCRHUuSSJUvWrVu3Q4cO/fr1Gzdu3Lx583bs2OHn52fryYlI
vqQUWUTESpQii4hYSfZTZEdHx4oVKzZt2rRr166DBg2aNGnS8uXLDx8+XEDe
5JuaaHTIcdeJPEnQXv5YyZpvmPE+b71C/650aU6rqtQqSnkTJUx4ZGwpXCjT
E5ZXeWo9Rtt+9H6PodMZM5NPZjPze374gRW/8Nsutvty4AanQrgWYWyJHJeS
1YeenrHXZ3JGZhdLzG1un+LMTvavZPM/WDeXVd+ydAYLpvL5SEY8S6+GtPLk
ERMVM+bimuksCtlRtCQVa1O3LS170uU1Bn7CqHlM+o3vDvHrOQ7fxD+CJHNO
/ixErCctyeiQ4/yIOkXIfo6v5dd5fD2Zd95i2CiGfcywrxm2mDfXMXO/kbCe
vUt8ll+bYiXpGYe7cLgD17mzh+3fMfNNBj9BW29aPUrzp2nyEg1H88xM3v+F
pceMnefDMzaPj8/YTVkpsoiIiIjI/VOKLCJiDUqRRUSsJEdSZBcXFy8vrwoV
KtSsWbN9+/ajR49esmTJ6dOnbT05EcmXlCKLiFiJUmQRESvJfopsb2/v5uZW
qlQpb2/v2rVr9+rVa9KkSRs2bCggV7PmWGOX1MhThOzCbxWbpvPlCAY9S4sG
1PSmcmnKFMXTkSImXDJ2Erb/uxS5XA1a9KDPeEYvM7blXOjDb3+w/yTnz3P5
Gn63uXWPwGjuxROVZLSOKdnZWDgtY6NPs9HYJccSc4+w2wRewf8s109w9TCX
9nF+B5u/Y86bjG5Pj9I0N1HLZJTVHpmfeQvh6IJbcYqXo0w1arSieV86j6P/
d7y1nm982HCBc2o1Jf9IjSchgKjT3NvDrV/YNpOv32Fob1o3p24r6nan7lDq
jqfptwxZw+yD+NwgOsnWD1r+QzrEQBBchZP4/8baKXwwgE6NKFeUslUo3ZRS
nSjRl2bvMXQBc/bic8f452EZX5ekFFlERERE5EEoRc7L0tJITiYhgdhYoqP/
54iJIT6epCRS9bk/InmGUmQRESuJj4/fu3fv9OnTe/fuXbFiRTc3NxcXF0dH
Rzs7u6xdzZYrV65Pnz4zZ848fPiwrScnIvmSUmQREStRiixSEKSnYzYbi9vx
8ZmtgVtGXByJiaSkGMvmkk23b99eu3bte++998QTT3h4eBQpUsTZ2dnBwaFQ
oUJZu5pt0KDB66+/vnTp0qtXr9p6claTTnoq6WbSUkgMJeI8d3Zz9WeOfc2C
kYzsRts6uLv8TalrssNkb4xChXFwwskFFzfcPIys8ZnXjQ2EvznML3fYF8qF
aO7lctOYlrF3aCQEwy2ub2HzVL7px+u16ebOY0Wo40JZR1wccLKnsB32hf6m
r3YtSdnm1OpLiw/oNo/RvzL/IHuvEhRNbBIJKSSnkqbIT/Iwc6yxJXL4EYLW
c+0frH6P93sbCauXO6ZimOpgehLTy7iOp+N8Jm5j8yUiE2z9oOU/WA7dEaTe
wHySlD1c+pEfx/HaMzSsmnE0Lo6pCqZGmJ6g2mD6fMWUzWy9gV8agemEpxsb
I+uiQ0RERETk/ilFzstiYwkI4Nw5Dhxg69b/OXbvxtcXPz8iIoyVWxHJC5Qi
i4hYSWJi4smTJ1esWDFx4sTevXu3adOmXr16FSpUcHNzy9rVrFJkEckmpcgi
IlaiFFmkIDCbCQ3l6lWOHWPHjsyWwS13bBcvEhRk7N0h2RQSErJv37558+aN
GjWqc+fOzZs3r1mzZqlSpRwdHbN2Nfvwp8jppCVhjiE5jMRA7p3j0nYO/Mj6
Kfwwkvd606sVDbxxdcr0xOSAyRmTOyZPCpfBqzpVGtGwNW070/d1xszg6/Ws
Ps/ee5yKxD+eyFzePTgtYwPQWIiw/Ipw5w+O/MSaT5kxkLEdGdyC5+rxuDf1
SlC1GGWK4OFkBMmZzNepGF61qdSBOi/SaiwvfMXY5czawW9nOHDD2B45IMpo
kkXyLKXID4M0ku4Sc5awXQT+zMFpfDuUl9pTp2LGe0M8MJXFVMOokav0pvvH
TFzDmoucSuRqMkFmotOUIouIiIiIPAClyHlZSAiWJ/W335g9m48//p9j+nR+
/tnIlW/e1I4QInmFUmQREStJSUnx8/Pbv3//ihUrpk+fPnLkyB49ejRp0qRk
yZJZu5pViiwi2aQUWUTESpQiixQEiYlGh7x7N0uW8NlnmS2Dz5/P5s2cPUtk
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
iVHbIwcF/c8KDla/KtUOBUlJpMkihhBC/F/i4uJOnTq1cOHC7t27lyhRInfu
3La2tpaWliYmJm83m5UoshAikySKLIQQWSMlRV2AiooiNDS9K2vtf9W+RvtK
eYaXEG9Ee+wcPMi336rZ4wIFXlkHdnBQF4etrTEz0/969V8lUeRM8vX1/eOP
P6ZMmdKyZUtHR0ftJNbGxsbCwsLY2PjtZrPZN4qsiSfeh4grBB7g2Tp2f803
PWhfg0L2agLZVMFEwSj9D6QJij1KETWHrDSkeD+6LmDOPv58hLeG56mEphGX
9v5GkdGlkVPVSk1S04BXN7B/Kr925ps69HWlQQEKvklLQ7tCFGlK1SE0X0Cf
Lcw5zvZb3AqUKLLQA4kiZyPPLnJ2CRt74VaCkbnoWIgaruSriUlzqvSm70T1
6+wjG9m1gllj6NqKUkVfNxwZ64Z3UzWT7FyGal3o8DUjtjDvIuvvcNqXJ5ES
RRbiJX9NBjRqG+TkOGLDiQgg6CnP7/LsEk+P83gPDzewcxbTP6NtHQrkyfDc
wAhTCyxtsdFekuTDoSB5C1OwCEWKqXdKvk0Vp4T2Z4tSogglXHDJR77cONhg
a4qVgoXuHjTjdN+SiSlFK9GoJ33mMHUXS86y4RKHbnDlDt7e+DzHP4SQaCKT
1D7J8RqSU6WJuhDCUCSGEuGF3xG813FrBVd2qosqxx6yP5rTidxK5rlGvXoV
IjMkimxQDDCKnN6KkB2NGjF2rNor49Ytnj1TU5TR0dLKVQghhBD/otjY2BeR
v5w5c77dDNbCwkL7s87OztqpbN26dUeOHPnLL79cu3ZN3xsnhMiWJIoshBBC
iOwiNVV9dFdYGH5+avPwhw//rkuXWLmSoUOpWdOAIsf/qySKnEnaOad25jl6
9OgaNWq83fTV2NjY2to6d+7c+fPnL1asWNu2badPn75z584nT57oe+PeTEoc
MY8I8cB3Jw9XsHUik7vQqgrOuTL8gTTBxAmzsljUx6o9Fcbw2XJ+PMpJX/X5
tiG6x5In6hI6771UDUF3uP0Hp+azYwA/tOLzGjQvhkvGd6aCTX7y1aN0L2pM
pd3PfLmHtZe58lxN8qToIk6pH8bOFIZAosgGLY20ZLWzvSaWlCjuH+XAXJZ1
ZEI+eljTohBVKlOoKXaf0GgsYxawZj03j3N+Jz/PZkR36lfE0ZpcFtiYYW6i
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
Sjah+ne0mEv/ncw5x77HPPIXnxqn+vhkaSNLshWpKcQGEPqU9854OHFlCWuH
MboZzWxEn3BLVatwAwV500xHeqaY2mJVk1JtqTmQPnOZvZd993gUKjQ2vzjC
E0n8SNfyLE/Sn74fkUS84tVprq/m4DhWdWZcI76yx94SA530JnDdfBSqTpnu
OE6nxXZGnWbNPS57fkpCk0gyBqkiZyeSVMVHlNgZGuzKo30cm8nqbkyuRp+y
NC6Cbf5P2CJhZEa5hjQbSf91TL/B+qec8uRJMOG5cL+t5NMJDAx0cXE5derU
pk2bZs2a9e233zZp0qRUqVJ58+ZVY/VJqsifiVSR/y3MzLCzo3lz+vVj/Pj/
ioUL2b9fLNQHBGj6+5NIJBJJ1iM5WbzPvXiRLVv46ae/TyJ/m1D27RMTir+/
pv9oyf+gLCzv3bvn5OS0ZMmSMWPGdO3atW7duiVLltTT01PvnalUkSUSScYh
VeScjfKx/elTTp5k9WomTkyrtFixgmPHhI0ckf6mTBKJRCLJrbx7x7Vr7NrF
nDmiG0PHjqIlcpEiml+VzbIhVWQ1UD7/Ojs7b9++/eeffx48eHC7du2qVq1q
aWmpXskqVeT/hI4+tjVpMoj+K/jJmQ1unPTCJZigXLgfLVX17tsf3oArnkc5
NJvpXWlb9hP8JYUeClMUVihKYVqHRsMZs57Nd7mfyCvRuFQ0XZYvwHM8UkVW
I3KkipwUQ9gLvM/zbAt3f2bbIMa3pqU9Vqbom1G0Ng4DaDqfbw4x7Qrbn3DL
91OaiKb+l0wY4MLdnThNZEkbxpbhm6LUtaCEETp507rshlYUcqRUZyqPodVC
vt/Dhutc8yZE1W45RpWvsrtxKclVpKYQ9Q7/O7w5zOPVHJvMgp70rUP1Ipgq
MFagr6x8FORJMx0ZFqJwVWw7UGUYLX9hzDbWXODiS3xjCEkgMom4FJKzu6Of
8lcD0hhf3t/hhRN3lnHyRxb1ZEADapbCSC+9CVzLGCM7zNthPQLbhXTaxexL
HH+Oj1xRlGgaqSJnG/7YYKV8FgsVj2P+t7mxgR2jmdmIfla0NqeaCUX10E1z
g9WHoZ+f4rVw7E+7+Xx7mF+usvspd3wJjtX0SCXZgejo6Pfv37969erBgwcn
T55csGBBnz59qlSpoqWlpcbqk1SRPxOpIv9rotOnYEFKlcLBgbp1/yt69WL+
fNHo0sND09+fRCKRSLIeSUk8fMiOHUIWatPm75PI3yaUefPkhJJFeffu3alT
pxYuXNivX79atWpVrFixWLFipqam6pWsCqkiSySSjESqyDmbsDChiq1Zw4gR
NGyYVmkxZIiwkS9dQq6OSCQSieSjPH/OgQNi/2znzkJCLldOqLYmJppflc2y
IVVkNXjy5InyKXjq1KkdO3asXr162bJlraysjI2N1StZpYr8n9DRp2QNGnxL
zyVMOMeKRxx+zf0AAnLhW9pUlXvnI1oic4+3+9n7E+O+pkGZT/CXFIYoCqOw
RVEFs9Y0/ZFx29nxkCeJoiWyv+r/QQoOOR6pIqsROVJFTojC34XnB7mxkBND
+e0rhtShkS2FjDG2oFxjmo6m7wYm32TNE06qmvVFfNJehRSVjaySCYNf4nqI
07+wuQc/OzKwPM2tKZMf3TRVZB0LjCpi1pjC3ag8jj6rWXiGM+74pYoW7hGq
9oTJGXV5JJIvT2oyYW/wusSTLVyfya7vmNKGjg7YFvyEdGRSjGKNqfwdDefR
fRezVN3CXd+TlEO9fOFquv/paj5bza4PXc10XjRl8VMaRUMUPVCMo8Zyxhxh
zyM8QzU9NkmuR6rI2YZUVc0RDgHghc8lzi9mRS+Gl6eFAkfVCTUWCrTTncl1
TShUhbJdqDWRVusZc5S1t3B+Q0CUpkcqyW4EBAQcOXJk0qRJDRs21NbWVmP1
SarIn4lUkdWIihUZNIjNm3n2TNPfn0QikUiyHgkJODuLTSsdO2Jh8ZEJ5bvv
5ISSRXn16tX27duHDRvm4OCg3kvSvyFVZIlEknFIFTlnExjI0aNMnkyjRuik
edJinTqMG4eTE76+mv6jJRKJRJLluXdPbGDp2ZMSJTS/3JotQqrIaqCsLZUV
ZteuXa2trT//sVqqyP8JbT2KV6NOX7osYPRxFt5h/wvu+OGfja+KuqSqXn97
wRO4jvsudkxheEccSn/KD9wERTGV2NCQAt1oPouJ+9jryqsklGV1CESrzEFJ
zkaqyGpEjlSR4yLwus29LZycwJb2zKhLrwrUssLCgPyFqNaab6Yy2YmNbznm
x+0Q3kYTo674G+bNy7NcW8bBoaxszvc16FCaiuYfO8o8H4riKBxQNKJQL1r/
wlQnnNx4m4rf/6csqSJLsjqpqts0SXTUTIkm4DFPD+G8EKehLOnAsDo0K4ON
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
8xcXMDdcQ0mWQqrIWZ1UUlNEJMXifpHzc9nYnukWDDCidVEc7CnUAONONBzB
93PZvpUn5zi/nYUT6dmOciXQzotWHvLmIU+ej+SlwuWo2pm20/luN7Ous+0J
zt545sIHXsmn80VUZOW/nTBhwsGDB318fBISEhITE5OTk1NT5ayYLqSKnHFR
qBBffcWCBVy5IlVkiUQiyYHcuCFeQXbpIl5Hfv6sIVXkrIZUkSWZgfKZJTlZ
VIoJCcTHpxXKW0j5X6bI96CSjxMWFnbq1KkZM2Y0b97c0NBQvQwmVWSN8/kq
8oehoyPaI0+eLBojBwZqemwSiUQiyUjCwzl9mhkzRJMEIyPNL5DmpJAqshpI
FfmfSVa1wQyF9+DJ88McmsG8dvS1oklequahRB7yp3k3aulSoDyl2lFtNE2X
MWg/S65w6jmeobnOGElNIe494S74n8NrJ5fnsmQgvRtTodgn/LoL2lKlI22n
MPh3fr7Jtqdc8uZNOMm56lJKsgZSRc5sVEkzyhefG7j9zo25HBzGL1/RsyYO
NmjrYFme6l3o8BPD9jHnFjvduPIOzwxoQR8XwcsznJvFptbMMGWgNq20sM+L
WdqijrLYK42iIYruKL6n9jJ+OMJ+F7EzJYVcNyNIshGJkUS8xP8KHntx/Y0d
YxjXgaaVMEu3PZtHFx1rDKpg0oICvag7jeFbWX+dO/7CQw4Vgj8Jmh5m5pAc
T8BTnh/h+iKODWVZR0bUoVlpin6K+WNUlMJ1se2Bw0TarmTCIbbf4b6P0LkT
VN2Xk2U+kWQWUkXOyqQmkxwrvqOEIKI8eXSQA1OY34LvCtAhHw1sqVyb4h0o
OpD205m2hgOHcb/DrSNsmssPvWlZhTJmFDXB3ABDnY/YyAVKU6YtdX6g/TqG
nWTpLU68EtvBJJKP8vkqso6OjoODQ69evebOnav8qNu3bz979szX1zdKnjma
PqSKnHEhVWSJRCLJ2UgVOWcjVWRJZqCsxf38eP6cO3e4dOlf4/p1XF3x8iIs
DLnjUvIxpIqcM5AqskQikUjUQ6rIGRdSRVYDqSL/MymqPn2RECJsZPcznF7A
ih6MKU9nUxoYU14fc+207sa8OuSzpUhTyg6g2k98s4FZJ3FyEY18/2OM5JKN
rKkpxPgSfJ93J3i1kbMz+LUvPepT3voTft2WZanVlW9+YfxRlj3hwFtu+uMV
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
V14c5/Bc5nWnXwXq5KWGBQ5lsKtF2TZiG9eIZaw6wyUPvFQecphql5VyGk2O
EyZzjBeRz3h3hfMrWDGIETVpok8VBbYKCirQTzMvGVuInWKNhtNjJeMusuI+
x9x5HJjx5ZkkRyBV5MxHqshfNiwtcXQUltrYsWJdeu9e0WbKy4sU+aAikUgk
2RMfHyH/7N/PkiX88ANdu1K7NkWLqjlN6OgID7lRI/r2ZepU1qzh2DEePhTd
DiUa54uoyJaWlo6Ojp07dx47duzixYv37t17/fp1T0/PFFkKSP5AqsiSjCcu
Ls7d3f3y5cs7d+6cN2/e8OHD27dv7+DgUKBAAfUym1SRNU5MjDhA4cIFtm1j
zhyGDqVtWypVwtRUzSxSoIDYP6v8EOVH/fKL+NiLF4WNHJfRXZ4kEolEkvHE
x+PuzuXL7NzJ/PmMGEGHDlSpInbFanzhNLuHVJHTw+eryDo6OqVKlWrUqFGf
Pn2mTJmyZs2aY8eOPXz4MDAwUNODyzDiIUJleLwj+D639/D7bH7uS/+6tKlE
jeLYFBDtkdO4OY2tsWmCw1AaL6H7IdEJc48bj/yJy6EbzVISSAgl1pvI5wTf
4dpGNozmh0a0NqOqgtIKCisw+t8LpYsiH4pCKGwwqEzFb2g3jdHbWXqLvc9x
9uZFCOHxmh6bJNcjVeTMISEa71vc28iJMWxpygxHeleljj2FymNSnRp96TWf
WUfZ7c55Px6G4BVNdEZn1FSV9hqnspHD8bvHzc3s+Z75TRlRik5W1DSjqAFa
aTbJNymGVV3K9qD6BL5azuSDbLvDHV/hAkWpdKDEXKMixwQT+IK313hyiBtb
Ob6GHUtZNo+ffvrvmM1PC/lpBT9tZNYu1p/l2APue+MbJ2bmGNUUnUO39WiY
MG9cD3JqMuubMd2cAflpZkg5XQzTfZKLVJH/QqrIkpyFVJGzGomhRL8l7CGB
l3i4le0T+bEjrcpQQovSRalQk8qdqD6cTvOZspudN3ngJwqPyA8Kj9Skv3aS
Bj/j9g52jmVmfXrr00JBNQXFVY2R08hLhgUoXoca39J2Af0P8Ysze56InaRh
8nWGJB1IFTnzkSrylw1bW7G8P2kS27dz5YroounhQWioPOhWIpFIsisvX3L4
sDjctndvGjQQ3k7x4urPmPr6VKtGnz7Mm8eRI9y8iZsbvr5iOpZonC+iItva
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
SC+1R9jQnALVqdCD+lPpuo5px9h8l2te+CQIzzAK4jJTs1DlLyHKn1BXAh7w
5hr3z3LhEPt3sG4ta9b8FVu2cfQc15x54vdnA89wdXc9jY8m2B2PWzw5zK01
XFjDsTXsXsNG5QfeyJo9rDnOmgusu81RF2578iaYGOkNfIBUkb8cyfEkhBLr
K+6w/12urmf9MMbVoFV26uSmcmnKNMS6J+Um0msNi85x7hV+iX+ND19ZmY/y
w89RKIX3l3DKnl860bs6tgXQSbVnoOIPTcsKRTHMGtDQHvuNbHDkZgSPo3kT
R3AiCd+rWJuikpDjVIUlEXjf5dYm9o5mcSNGFaODFVVzkz/73+6YjqqcxxxF
EXG+QPme9FzAgpOc8MQpipex+CUQJcslvgDpV5H1DSlZm2YjGLqBhffY7soF
H56GEpoFnaBkkR0JV9gDnuF2lMOzmdmBtkUoraCwgrwK0R5Z87PvrVSRJepF
qsiZixRC3HB34P5aLkxkcw8mNKR1GWxM0dahaBWaDGHIOhbeZYcH5/1xCeNd
qiUh8ZH43MV5O+ensKcd82vRrzQ1LTH7+xz9QWjpop+bnIUwLYtlDRoPZvQK
1l/mxjsxQPmobGTZWEXyKdKvIhsZGVlbW1erVq1169aDBg365ZdfDh069OjR
o5gYuRL7Z6SKnIawVCZgdYX9sXAh27f/T5w4Iew1d3ciItT91UokEokkTSgH
8Pv32beP+fPp10+YOZUrU6iQsIjTP4NIFTmzERQUdPv27e3bt8+cObNnz55N
mjSxtbXNnz+/np5e2nJRqSJL/gF/f9FpdMsW0Y2uRw8aN6ZCBZFQprn9XO7c
QhysXZsOHRg1SiiJyjFF/uQkn0CqyN8fGasia2uLox/KlaNhQ1FsO3kyGzdy
5Qo+Puq+TolEIpFkBCEhoiruxg2OHPn4Nebs2fTuTbVq5Mmj/tet30RIFflT
vH792sHBYfXq1WPHju3UqVPdunVLlSplamqatuQzi6vISfHEBhPhxbvn+Dhy
ezf757CkL6Nq0rk4da0omVv0Rv7495lN5SjmQ2FN9srCpOo8h6l72fqQM6+5
58frMCK+dX0kQaXYhkMwYU+F5nr6Z9b3YUY1sXndqADFTTD4u6T9QeQuQPlm
tBgnzvOddYWNqpvzJJiQJKGtxakUtsyjm8WFCg/Z5w5uJ7m/jeO/s2YW00bT
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
7f99ZjW1MDbFqjilqlG1BZ2GM3EFax1w8BIe8hsIUDVazpwFllJFzrJIFfnL
Ee2H7y2e78JxHicGsbA1fSpT0Qo9HfIUoUwrGk+k9xYmX2HdQxze4BpCkhoH
iFiVzfMWXhJyjYsrWDKQHpUoqYOVAlMFhv8m6hiaUbQ+tUfQeTWjLvPbA466
8SiIiO/0XU5KIkmhJLwl7jnRTjzYzvbxTGxKi3zCQy6Sjbw5MMiFIi96eTHO
i3leCikjD+Y5Mc5ONh0xa+Qrh103Wsyl/2Fm3WbbM65581aOUV+AcG+eneTC
XLZ1ZEExhlrRPA+llN+R1r/n5H+EVJH/QqrIkgwiKZ6gV7y6wN1NnJvJ/kls
nMSvk5g1SWyaf7UYP5oxgxjVk2HtGdCYVpWpXBSrPKpzAfRRmKIojKIsejUo
0pzaXek6mLHjv+on/DBmKx+3LWw6xQEnzr3hrp/IH97FfOONkRNVHvI7ccpA
ihtPj3NwIXP7iDykblHKl6GgHTmrodOQaqMYvo5NN3EOw1f1/4hULeBSITmB
GD/CnhJwHa+jXFIONYMZVpd65mKwslRgokA/1XorDQ2K2NFoIINXs/A2Oz05
H8CTMLHUlUj+EV9fXycnp2PHjq1Zs2bq1Kk9e/asXbt2gQIF0vz+SqrI/4pU
kT8ndHUpWpSGDenfX9yrjRs5c4ZHj3j3Tt3fn0QikUgymgxXkfPkET2m2rdn
9Gh+/ZW9e7l+HXd3cU6uRO2kX0XW19cvXrx4kyZNBg4cOHfu3M2bN587d87F
xSUkJETdFyfJNEgVWaJW0q8i58yZs2TJksrFtfKPTJkyZe3atcol9tOnT7O4
GaJG/PxwcuL4cdasYdo0evWidm1x8kKGDCpSRZZIJJKsw98nFOUqOKMmlO8y
pIr8KdKvIufOndvOzq5du3b29vZLly7du3fvtWvX3N3dY2OzdCPClGSiAgl4
Lmzkp8e4vIYdU1nQi+F1aVeUOvkpnQdzA3T+t3+glg45LbAsS/H6VOpM+/GM
XcWKM5x6wYNQXkXiG0tE4regIierlJcYiIAQApx5cpyLK9kzkV97Mq4RXctS
05TCCixUG9bZ/+bYaOtgaYNdA5r/QL9ZTN3I6tMce8T9ICH3BYouX8L1y5y3
QqrIWRapIn85wr1wP4fjMk4NYWMjJlWigw1lc4sO8+bFqNqZzvMYf5zfn3Lw
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
msXIcBXZwoJq1ejShQkTRM5z6JAQkr28yNrl3RKJRJK1kCpyVlaRAwICHj58
ePLkyfXr18+cObNv37716tUrUqSIlpZWGtLILK4iP97M6e2s2830/fQ7wtyr
7HnCPR9CMkJFTk4kOpCQl8JGfn2Wu/s4sYGNS5k/i0mT/ieG9aVnI1qVpE5O
KhlhW5ayLSk1jOK/0HUnCy5x9gX+X8IR/bSKnNOUgmUo35C6PWn9I11H0H80
I8YxceL/fPLZ81mxld0OnHsq+iE/jxACYWgCiWl2whJUn+od+BL2lBsnWLeM
UaNo2Iq+I5m7mj2XuSdV5M9DqsjpRKrI6SURov5UduNf8fgoB39mfm/6VqRJ
SSqWoXAFjCqSoz7VhzF4BSsvcNUXl3DeRBMUn1nP8k5RDVMxKhs5BB9HHLdy
cCK/tWacLV2KUsMcqxyp5TAamujnx6QKlu2xHk7DhYzew6Zb3PURY5ryhsWq
7tw3J9YmBBP5nHdX8T2A8zI2jWR4C6oVR+d/VeScebFtSscpjN/PajcOu3PT
HXd38az5Xcfhd5b2o185KisoqRAebC4FOgr0c2Nmi0077EbReAkj97DqGhfd
8IkV30OMSp6Sr0PSTEo8ScHEexL7lPBb3FzHuuGMrEMD4z/dszwqJzyVX7VO
diwqUKYzdafRYSsTzrDhHlff4Beh7mv76qQkCq87yoXQKwQe5Npifh1Mj3oU
s/wPKx3jIhRpRqVRNFlJ/2P8coNjL3jxrTdOl3ybSBVZLcQE8O4RXg682M7l
+awayLAG1CuMmQY2xajQitpjabGGwSdYeotTr3ALyaB/OFGVhagynLDnOG5n
20imVqejNnUVlFWIQqHUpwPd3OSqRP4uFJ9E5bUM/D/2zjouq6RtwI9II6KA
CCqiICp2d3es3d3dXatrrt1rd+cqdq3dASaKggJKdzdc35nnfb9dV99ldxEE
Za7f/Pav9XDOec65554519xjz5q7ojtIk3W+ku+PmJgYLy+v58+fX79+/fjx
44sWLerbt2/16tVz586duo+khoaGVlZW5cuXb9CgQffu3efOnXvo0KGnT59m
8Y+kWU1FzpaN4sWFhzxlCtu3c/GisDOU4UZISEb/EhKJRCJJa5Qe/skTDh4U
3Vz37qKO3++tRQvh0hQrJj6eZs+eBv2LVJEzM0FBQbdv396+ffvkyZPbtGlT
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
ilO1Mx3nMdae5Y855MIdH95/Hm0SlZuorv7vT6IHL+2xn83SNgyyooU+VXUp
okUuDTSU/1pjWZeSPak2jW7rmXeSo444+YtdA2LUGwdIfSD1JKt3XwhCLH9y
wesalzexbgIjW9GsFFWtKZqXPIZ/kyfkLkyxFtQaT7stjLzEqkecdsU5KJM+
yV+OWKsSRqwvUW4EPObWdraPZkpt2hr+16LPr8Lg8xulDLJyoDJGZY5BCYq3
pckksfpszjW2PebCW174Eyo3gZVkNFJF/jrEhPD+Dg5bOT+BPc2ZXYeelaha
EpPC5C5HpR50XcCM4+xw5rQHD/xxDyc6IZ3PKUm9/DVK3S8H4n6dK2vYNoAZ
leltQRMTyhqSN0UzUEOT3EUo3Ijyg6i/gL47+fkCvz7jeYDYTSJaffiE77fk
e0KMkJD9XuFxF+dzPLDnt8Mc28vObWITtD/aFjbvYvNBNh9j8xkOXOfSMx6/
50N4lrhLKRAYGHj//v39+/fPnz+/f//+P/zwQ+XKlQsWLKirq5u6CTFLS8t6
9eoph1qwYMGePXsuXrz45MkTHx+frPCRNPOryLlzU6wYderQsSODBv2ptW9P
zZrY2ooF7Gn+d/PmpXp1evbkp5/YsYMzZ3j0SEzOx6XV4n+JRCKRpJaICFxd
xbe/48fZsEHsMK70CGXLio+bad4d5Mkjvoc2aCCqLk+aJP7cxYtCgZZkNmJi
Ytzd3R88eHDq1KmtW7fOmDGja9euSopoYmKSuvwwZ86ctra2tWrVat++/YgR
I1asWGFvb//8+fNoqU9lZaKihIR8965w+JQB29SpdOpEhQpiaVyGJ80pt+zZ
xYKK5s0ZMULUkT90SOgmL18K+0QiURMSEuLg4HD48OGFCxcOGjSodevWVatW
LVy4cKo34LawsFBCaJ8+febMmbNr165z5845Ojp6enomJKT3jJXk7/HzE2Xd
9+4VUwH9+tGiBRUrYmmZLot8bWzEio2hQ1m6lAMHuHxZrOSQ1dklEokkMxAQ
IGKyEpmV+KxEaSVWN2ki4naa9wVK/6L0Mkpfo/Q4fft+OsH7cWvblho1xDmk
x+j+y1tWUJGVnNDZ2fnGjRtHjhxZvXr1mDFjfvjhBzs7Ox0dndTlhGZmZqVL
l27UqFH37t2nTJmyefPmy5cvu7m5ZfSFZgBSRf6dGH+CnvDhHK+3cWMOa/oz
oAGVbKSK/CekiiyR/FOSRa31CFeCH+F7iUdb2T2BqS1obU0pLUoVpXRTSg+l
zCLa7GHWb/z6AtfvaDIsNhTfx7z6lbtLOTecFe0ZVINaNpgYpBjo9FHlQ2Un
bGTdVlSfwLDNbLrOAx/eReITQ2i8sJEzIUlxRLoTcJf3x3izjhOTmdOZtpUp
9FmVCMuS1OlJn2X8dJmtrpzxwiEI78/n9ZPUETNSWE9Jvrhc5MJSNvZichl6
mNPQmJI5MNUSapOBBXnKYNUQu640n8qErWy7xl1PfNQKbYT6MFlQ2kkbktXa
U6S65LUfAU9wOMqxxawcxLjGdKlMLVusTdHRTOmpNrDEvB5FB1DxZ1ruY8ol
9jzlsY8oHf9dkhgtPOQIF0Ic+HCB8ytYPoD+VamWQ9RDzq8itwqdz2+UrtpD
LiDynJw1qdifrouZeVyUPD3vwSO1ahgplU5JRiNV5K9DdBBvr3BrBUf6sKYc
40vRvhQVSpG7NCb1qDWcQb+w4grnfLgbyKtwfGPSPzdIViuwsWodNgLPB9zZ
xqFxouT7mOJ0KEhVU/Lrp9QXZMsuuoM8VbFqj91Imi1hwkG23+W+N4HqcVyU
usP5XvvruAgC3vD2Go8PcH05R+exfhqzxzB8kPgG9EfrT7+R9JtMv9n0W8Kk
7fxynlNPeRaQJe5SCkRERLx9+/bu3bsnTpzYvHnzlClTOnToUK5cuRw5cqRu
QszY2Lh48eJ16tRRjjN69Og1a9acOXPm9evXiVmgAG7mV5Hz5RMesvJGLFjA
9u1/aspp9+olJqjNzNL+7+bMKeowKwdv0+a/n02PH+fZM1m+SSKRSDKegADu
3fuvP9Onj3DrKlakYEGxFXiadweFComNxYcMER3BwYOioN+LF0LgkWQ2wsPD
HR0djxw5snDhwoEDB7Zq1apq1arW1tapzg/z5s1bo0aN3r17z5kzZ/fu3efP
n1eO/+HDhzi5KikrExLCw4ciFsyfL9LTli2pXFmECf0UR7+ZoWloYG5OmTI0
bEi3bkKi3rJF2Mjv32f0PZVkFqKiotzc3B48eHD69Ont27fPmDGjS5culSpV
ypUrV+qiqPIPixYtWrNmzXbt2v1nQcfJkyednJxkFM0MhIXh4iJsZHt7Nm4U
q7rataN06XQJZspovVQpsbVEly7iDyl/7tIlsqR/JJFIJJkOJRorMVmJzJMm
iSitxGolYqfHLKuenuhl2rYVHcGGDZ9O8H7cZs2iRw+qVsXUNOMz6M9bVlCR
vb29b9y4sWPHDiUb7NGjR+PGjcuVK5cvX74v2SmjadOmw4cPV7LBw4cPX716
VUkIAwICMvpCMwCpIv9OtB/+Drw7wfN1XJrG8h70rUOFQlJF/hNSRZZI/iHJ
SUT5EPQUz0u47OPyQtYOZFh96lpiqU2xkpRvQ82JNN7IoBOsuMM5FzxCM/qk
0464cAKdcD/H883c+ZHN/RjdmPp2ooTs3wS6XGobuQg6FanYm96LWXKaM248
DOZ1hLCRozKlIpEQQ7Az7hd4tplbM9jRlwlNROHcAp9tl1m4DI37M3w9K+5z
1I9rIThF4v/5jNTv1lMUSaG43eTGBvYNZ2EdRhSlTQEqGpNXl2wa6OTC0BKT
EuSrSvXuDPyZFSc5/443iI4yQC3SfqfS61chSV1aWq2fhbvz9ir3tnNqJlt6
M7kZ7StQpgD6KS6f1zRHvwpGHckznpIr6XOYtXe460H8d/qrJEQQ5S48ZD8l
9O3l6CxmdqF1eQrqY6Suh6yjIvvnN8oAlQWqYqgqkfsHak9k+FY23OJWIM8j
cIsmMLMuQ5BkKaSK/HWIDMD5LJdms70lc80YlJ9mtpQqg1E1zNrSaDoT9rDr
EY+jeBODZzwhicR/BTk1Sb3NQILoFHyf8/ggZ2axtQOzq9DXjnr5KZRyhqOB
Zl50S2JYl9wdKD+BvhtY+RtXPPBSd9Zh6r0Mvtc4Fx3Ch0c8PcSVnzkykOWd
Gduc9jWpVFpUf/2j2VGsKsUaUaw9xfrScAajtrPxGjc+ZIm7lALx8fFhYWG+
vr5ubm7Pnj3bvXv3+PHj69evnzt37tRNiOno6OTKlcvCwsLa2rpGjRrDhw/f
smXLw4cPs0K9psyvIhcpIuohL1gg6hI7O/+pHT8uSha3aSP0szT/u9ra4obk
zSvskvLlhWyyZg03biB3ZZdIJJIMx9OT06eZN098BFRSJqUXyJMnvXYVL1VK
LHtZvlxIyK6u4k/LXcUzJ0FBQZcvX162bFnPnj1LlSplZWWVN2/enDlzamlp
pS4/VI7Qpk2b2bNn29vbv379+v379wEBAZGRkVlh1wzJX+Lnx/nzLFok6qQr
0cfKSrgahoZopliUITO0bNmEYmhiQv78Ir1u0oQpU0T9OyWllkjUKIPf8PBw
Pz8/d3d3Z2fnAwcOTJkypUmTJmZmZqmLotra2kZGRubm5oULF65cufKgQYPW
rVt3584dWVs+MxAXJ2xkX18hoT1+LNSv0aPFEmDDlKfyUtX09DA2FrHHxkZs
MzF+PHv2kCV3ZZdIJJJMhxKNlZg8YYKIz0qGqMRqJWLrpbydd6qa0r/Uri36
GqXHcXT8dIL343b0KD/+KBb8KSeT4Rn05y0rqMiurq5Hjx6dMWNGy5YtbW1t
CxQoYGJiYmBgoKGhkbqcsFy5cn379l29evX169eVg3t5eQUHB8fExGT0hWYA
UkX+nUgffO7z5ggOKzg9jkWd6FmD8gU/lWwzrEkV+cuQKrLkK5OcRLgH3nd4
cxjHlRwbz/yOdFPeFwty6mBdlspdaD6bngeZcZXtT7jhgdd39J03IZIwF3xv
8O4QTivZP4bJbWhSFrOUv/hrqMO+ASojtPNRujkdpjL9ADtfcsFX2MjvlMNm
Sq0rPhqfpzgd5cZCjvdneQsGV6GeNRafzWYUKc8PQ5m4g20vuRTNo1jeJhD8
+bx+8h/WU1IMno94uJuTU9nUihmV6FGMmhbkV25UNrJro5UD3dzo58WuNh3H
8dM+DjnzCJzBU72ZvPxskCZEB+L3GNeTOK7jt2ms6c2whtQrhlkO9DTRyY6m
BhrZPnuqTVGVQtUIVS9Mp9JyI3PPc8GZ0FhiEohLJDGJ5G+9wmPy/z+xSaIa
fIgT3pdx3cfDpWwdzsgW1LJTu5p//e5r5ELbBr0q5GiO1QDaLGbWcY695G2i
qO8drK6EmXnsKCW8JyWQGEdCNHGRREcQEUZoiPhE+3ELCSE8gqgYYhPEySeq
71DG/tTKmSunHRdFTBhRQUQEERZEaBDBygkHExRKUDhBkQRHEx5LdDzxid/+
w5mmSBU5HUkmWXneEsQuA6EfeHKE4xNYWYvRmnTORV1rilckd2MK9KP1In6y
54QzHuALIer48JVXKQW68OoUN5dxbBBrmjGqCs2KUMT47zKc3KgKoSqLqg6F
etNuEXNPcsoF1yQ8kwhMJir5u+uv/793iPTD9Sq31/PrSNY3ZGIl2ttSzgwj
HXmX/jVxcXG3bt1auXJl9+7dixQpYmRkZGBgoKOjkz179tRNjpmamjZv3vyn
n346ffq0n59fWFhYVFSU8le+V+0kk6jI2bOjo4OBgTgHY+M/terVGTNGlL58
/frTk3/+XMxgDx0qimHmyiUkNF3ddDFB9PWpV09UCDl8WHyrDQ0V9y02lixQ
NlsikUgyDKXjjYsjKkqoMp8MLZ88YfNmsXlruXLp3g01bCiqh/76qywdmhlJ
TEyMjY2NjIwMDQ19/fr13r17x4wZU6NGjVTrxx9ja2vbu3fvDRs2PFEeOInk
P3h5CT1i/HiRoWZU3pwmzdaW3r1FTTr5eEv+gjt37ixbtqxDhw758uX78oia
K1cuZZQ9d+7cS5cuKePrjL44yZ9QfpBr18TuD507U7iwyIWUjEjJi9JjhZel
Je3bs3Ahly+LjE7J8ZS/Hh8v59slEonkK6HEWyXqRkf/d5StRONFi4Rbq8Tn
NI/5H4+yCxWiUyfR1yg9TsqJwOPH/x3sly376dg8Z04xQ6utLbb7yKgk+rtU
kZOTk+Pj46Ojo8PDw4ODg+/evbtmzZqePXsWK1bsy5NAherVq48fP/7IkSOe
np4Zfa0ZzDegIpuhshVV8lQNKT+KARv45Tp3AsTXZz+1YZVWdus/lGwzrH1T
KrJxXqq3ot9cFp/jRCBXg3gUxOsgfII+nU39as39JTd3sn8Ei6swMhsdVdRS
UURdoVGqyJK05P+li+R4gt/w9gIOm7g8lW29mNiElmWxNhfiaKGq1OpP12VM
PMdqB4694ZEvft/RtERiNFEeojKq73k89nDiJ+Z0p20VrHKLmqhaKjRVaKQY
9LR1KVad5sMZsYVljzjgzhVfXiq5Yqba0ur/f+64cDzu8WAHJyexpSUzqtKt
ONUsMNMXtrBQazTVYVy5qBp0GMdPBznizn14pbaFw1L8I0mJ+L7g+a9cWcCh
XixpyOAKNChEwc/0iYLFadqXcRvZ8pQrCTgk8lbt7UhrIE2ICyPYBc/bvDnO
ww3sn8bcHvSqRbWCFDOmgCHGuuh+njMoP1NhdRrTBOPeNJjD+L3svsMzP96F
4htJWOy3XyE56f+LeEcT+Z4Pt3i2j2sLOTKMee3oUY2KVhjopPS+6+clbyWK
tKX8SJouZsx+se7sijteSQRBuLoMZuZ5jBNiiAkiwlM8D97PeP0Qh5tcuyQK
VX3cLl3mriMv3ETF+0D1a67E+LgMtZHjlRG3Fz4veHcTp9M4nObOaa6c5qxy
whc4fY3T9zj9hHPO3PPgtT/+ESR86w9nmiJV5PQjKV7UVI8LJMYbX0dubmX7
MKZVoaMmjU2pVoIS9SjQiVLj6bGOJRe46CqGP8HK2EQde77ycxrmjsdVnm7n
xkz29+XHZrQvh515ikM5JRkwRKX8PzbCsy3YhpYzmHaAA89xjOZ1LF7xhCaS
+D19jPhP1xAnIni4By/PcHEx23szrwKDitGsACVyYaj1z+7SMxy+17v070lI
SHj27Nnhw4fnzp3brVu3evXqlS1b1srKKmfOnKmbHDMyMqpWrVrfvn0XLVpk
b29/8+bNFy9eeHl5fa+1mzKJimxgQIECYqu+OnVE4YuP27BhohzxxYv/wwF7
906USl6+XExQN25MpUqizpKxsaj6lranp6srbLeuXcWNOnRITJs/fSrOJ0LO
kEgkEkm6ERODtzdOTty69enQcts2sTykVStRuClN4nzOnKK4qRLq69f/tBsa
O5ZNm7h+XRRDlWQ2wsLC3N3dHz9+fOXKlX379v34448dO3YsVapUqpekfYxU
kSX/A6kiS7IMUkXOOsTGCu/rwAGx5VCXLtStS5kywknLkSPtY4+ZmRjyDxnC
ypViLH/nDq9eieLMcZnqE6dEIpF8vyjxVom6SuxVIrASh5VorMRkJfIr8TnN
Y77Sjyi9idKnKMfv3JlZs0Rfo/Q4KVfDdXHh5EmWLKF//0/H5jVrUqIEFhZi
njajkujvUkVOTEwMCAh48+bN/fv3z58/rwyBR48e3aRJk4IFC355EqiSKvJH
ZHYVWQtVLlQF1Ht2V6RsX/qsEFvZXvXHRa1vBQntJW2QKnIa3iVDY0rVoEV/
hi7l51OsOs2W0+w7zfHTn86mfrV2eDe/TGNWO4ba0T6bKIlcWkV+FXoqqSJL
0o5ktS0XL6SLpAh8HMVW1Jfms7cvPzdnQC3qKaPawmgXoFhTmo1j2BaW3GHf
ay5/wCmIoO+oNn9SLLF+RLwm+D5+F7m8ilVDGFibqqYUVJFXhZFKOMkpBD0t
XawrU28AvVYx4wobnnPKDccA/DOPFvGRYxPrL8r9XVvL3iEsrsnIErQuSHkT
THRQKeFRH5UxqnxCSS3Rhm6zWXSScx94Ce7qDcdTnpBKTiTwNW/OcG8N50az
oQNj69CsOIU/K8CYvyj1ezBkFctvcyyI62G8iMY3noSsLe2kFQlRRHoT5Iz3
fd6c5eIvbB7PdKUfLEsjKyrkxcoIQ+3PHmZ99f4ONqjKYdSYaiPot4olZzj1
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
H3/48KGXl1dAQED0N9Q9NLukyFJOaGiItbUwonRyom1bZswQyo6XLzN5IaGh
XLrEb78xcCBVqlChwv+PMmUoXFiYLxn8tUQuU0P6tD+/sIdHuvH0qbBKDgkR
O+QyMjIyMv+WmBjhP+ztzaNHnDrFL7+IQhVpmlD5NKShIZq65ssn5HjlytG1
K/PnizNZX9/svgUy/4b79++vXbu2V69eRYsW/fKsT01NzdDQ0NraukiRIlIm
2bZt2xkzZuzfv/9lprMTmW+DtIHp9OksDExfc9jZ0aKF8ILfvVuoQ6SH/N07
IiL+h0udzPfEgwcPduzYMXHixCZNmjg6OhYqVMjS0lJfXz9zAdbIyKh69epD
hw5ds2bN1atXnz596uPjExISEi+vmnIeUrQ7fJg5c+jYMd2yWhqlSmFvj7m5
UBd8eRzS1BSf2bcvv/7K+fPpltVyWJKRkZFRIbGxQoH8+jWPH4t4K0VdKfZK
EVjlTg7q6kLebGMjHCfKlhWS3dmzOXQILy/VXMiDB+zYIaz7mzTB0ZFChcRm
r77+V02iv1Up8vnz5+fOndusWTNTU9MvX1lraWlJn2Nra1uiRIkKFSr07dv3
119/lf5EYGBgdl9rNpMLpMhphoMzncYxax/73gop8hNEd3tVSZEj3+LrxsPt
XJnN3gHMaiE0RU75hXI12y9cjFwlRc5lQ5Yiy6iIlASSQoj3IeYJYde5vp6N
Ixhfm2ZmVNClWF6sC2NQFp06lO1Ll9nM3M5uN0554OqBmwc3PTKe7X4z4/hW
XMYxpyHDLGmvFL+VVGDxyRdTXQuTQtjWolQ3qkyky2/MPsRedx4HCIFirNJs
7+v3ZE9LajwpoST5kfiC0OvC7m/dUEZWo74eZRUUVpBXga50IQbolcK0KVZD
sJ9Py23MOMfhp/iFf/5fIiGQqGeEXOXDEW78xtoRDGlM1YIYK93ddRRoKmsr
TPJTtC7Og2m9hMEHWHSJ/Y+55y80rolK3WhKTtV25jpSkgj3w+8OT49xayOH
57ByCBNb0qUCte0oa0lBE8x00UgvRdbWI29hitagYgfqj6DfIubsZsdV3Hx5
EYVfLMEJQo2cC0hRCmrjhB4vJYzgp7w6z60dnP6FzaOY1Y5+lahvJV7zAsoX
wfAvqjwtHawKUKoqNdrQegjDF7BoD3tucSNQiPveQajyNc+Zj6ssRf5ukaXI
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
PWtTuSjGev/7LkXk/rv05YSGhj5+/PjcuXPbtm2bP3/+4MGDmzRpUrJkSV1d
3cxto6VFliJnYhQsSJ069OnDjBlin/bPsWwZf/whtsQ9PbPcjjIqSuiBL15k
1y7xp0eMoFUroUY2Nlb99ebNS9myNGvGgAHMnMnmzVy4gJcX8qG6jIyMzN8i
hejHjzl+nNWrxRlijx6iaWzJklkSoq2sqFpV2DRNnMjKlRw4gDSf+/jIDnu5
idjY2GfPnp06dWrdunVTpkzp3bt3w4YNHRwcMt1G1szMrHz58m3bth0zZsyy
Zcv27Nlz5coVT0/PWNksW+ZPZCmyzHdPRESEFHtdXV137ty5aNGi4cOHN2/e
vHTp0pkWq+TNm7ds2bLNmjUbMGDAjBkzNm/eLH24l5eX3LY7hxMYyP37IlRs
2iT2EPr1o359ofXSULUcQksLe3tR0dy+vVi///KL2D24dUso62RkZGRk/idx
cTx7xunTrFsnbBl69xa5noOD8DH+8hAtxXwp8kvxX5oFZs1Kt9m7YgV793L1
Kt7eWV7wGxEhrvHCBWFzkfY7SGPKFCGKdnYWsmGVJ87fjBQ5KCjI3d19//79
S5cuHTVqVKdOnWrUqFGoUKFMF5rZ2trWrFmzR48e06ZNk1brR44cuXPnzrt3
77L7QnMWybEkBAs1cuRz/O9w/zxn9rNjY8ZnOIeMLbs4dpHrL3gRJfyQg5WW
yKo6f4wLJ8Qbvzu8OIPHXlx3cMCFTav4dWn2X7gYy1iyhiWbWCJFmP1sdeXU
fTx8eRsjjqpjlELIr7BukaXIMjIZSVIq9KKESC/8GY8OcnIe63owrSJ9StLA
lhKmGGhm90Oe+4d1Eap3pMd8pp9iozfH3nMnFL9YErPvmDv6g4iHT3ZzfT6H
hjK/DT2rUMEeXS0UOihMlQbFhTGpSvWBDF7BioucD8YjildxBCT+S0lwsjLK
xwhxUvATPPZwaCrLWzGuOF3sqJWHwgboSnFYS2m0mAdFfgwcqdSd3gtZeJKj
b7kRwdMY3sX/Swm0zOeRFE9sGBHvCfbk3X2eneP2LlxXcGg6SwcwuIkQK9r8
ZdWjo4+JJVaFKOBI6TrU6ikUd33XMPYoK64KNfKD90TkHCFoNASANzzE/yxn
1/LrRPq3x7k8ZYtTPD92JuTRxFiBvnRp0gJNoZQim4inUUyylbBrQ4PRDF/G
ikMcucWlp9zz43U4oSkigsYqNbq5QrciS5G/W2QpsipJVgpJpRXdS/F6PN7N
th8Z2YLqdtjpU6QYDvUo35Oqk+m9moXHOPKAV2H/WfUk5CQv3IQIgh/x5gSP
1nB9Cut7MbI+dUuQ5y/lJ+mGprKRgZQq5EWvKFW7Mmgxqy5yJZKn4KOMFbn9
5Qv14tVpbq7kxCjWt2N8LVqWonge5eVboyiHoimKvtiMovFExv3Elrlcmc/q
IQxrKjoTmRr8/V1aeeGbuktfTlxcXGBgoJeX1/37911dXZcvXz5w4MBq1apl
+pA0LbIU+d8ONTWh+O3WjfnzOXpUbNL+OaRb+PixEICFhgqzjiwlIYHgYOGh
9PCh+NPr14vTzLp1hYmHytdoBgZYWwsj6PLlhRH05Mns2MG9e8iH6jIyMjJ/
S1iYKEtZs4bhw0Unbicn0TRWis86WeBgIH1yq1biKHbXLqFmefpUNHUND5er
RXITUVFR169f37Bhw6hRo+rVq1e2bNnChQvnzZs300Vn1tbWjRo1Gjt27KZN
m6QE7/Hjxz4+PiEhIYlZnZ3I5CJkKbLMd098fHxQUJC3t/eDBw8uX768evXq
YcOG1axZM9NlINLy3MrKqmjRouXLl2/evPmkSZO2b99+7969JLk6KGcTHS3E
wK9ecfcuJ06IZha9elGuHJqqPu1VVxe7E7a2lCpFlSp07/6fLQVpUS8jIyMj
8z+JihL7ri4uomtb/frCM6FwYWGeoJL2cFLMlyJ/z55iFpDmgrSbvTdvCitm
X1+x2ZvVU3p8vGhC5+3NgwfpvoM09u4ViW27dmJ7VuWJ8zcjRfbz8zt16tTi
xYt79+5dtWpVBwcHOzs7MzMzTU3NzGV3JUuW7Nix4+zZsw8cOHDnzp3nz5+/
e/cuMjIyuy80Z5GaSHIMieEkBBH1Dn8vPJ/wwEP0VczwGOeEce8hL17jG0xw
gjiJjlXpSbTQEYUS8U7oiN4/xvsBTz24eyvH3IobXLvNtbtce8i1J9z35pU/
7yOISBQ3IVF5H77CVqIsRZaRyUiiUqEXKkR6wXe5tZVd45jbiH75aJGHysYU
0EVX1S17vsORtxAV29BuOqP3seQ+u1/h5o93ZHZKkSPf8foS7i6cmcS2zkyr
R8cyOFmj+1E5Y4WiiFDamDahzjhGbWLjTe5E8SKBt0mEJpPwr/ycU5RRXum/
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
0KwZRYqo/sBUR0dsUDs6ipa17dops8f/jkGDWLxYqJFfvMju2yEjIyOT9Uhz
jYcHu3cL4XG3buniYcuWYtYoUUKYLKmrqz4OOzmJk8dp00SH1rNnxdd4/Vp2
pM9l+Pn5nT9/fvXq1aNHj27VqlWNGjVKlixpaWmpoaGRuYyuRIkSrVu3njBh
gouLy6lTp27duuXp6Zmr0zkZFRMRwe3b7Ngh2lp37izUdWXLCjM1fX3V54s5
YWhoYGkp9CU1atC6tZBer17N+fPI+nyZv0OWIst8JD5e1NU+esTly2ILa9Ei
BgygZk3y/sWn5cuHkZEwRq5YUcjq0qaR0hg3jvXrRa2xXOQrIyPzvSHF4YcP
2bdPCI979UoXG6WETkrrSpUSKZ5KrICl2C5F+P79RbSXYr4U+aX4LwXe+Bx5
EhEVJUTad++KfHbXLmbOpGtX0RfPwEAFtyL3SpGTk5OfPHly8ODBhQsX9uvX
r0mTJpUqVSpcuLCJiUnmUjhjY2PpE3r06DFnzpw//vjD1dX1/v37vr6+MTE5
spmrjEwu5DOlyEZmOFSjSR8G/szs/Szez6r9bN7Pnv2iKCNbxg4Xfp3Ij60Z
WII2akJ7U1oh7JF1FbIUWebLSFEKy+KFBi4+mCBPvNy5fw63/VzYz5n9HN/P
wex78r+ZcfQk567i9hD3NzwJ4nW4UDNGJZDy+YaqKvmtoyEQ3sAzvE9yZDFz
+4k+7OUsKWqGjSHG2qiroZByXT0UJijyoG2LZSmKV6VKQxq3o3kHWnWgTQfa
dci4k/CZo3VzmtSibjmcC1PeUrSAz2eIiQ4a6Y+xtPWxrUCF7jSbQ5+9zLzE
9gdc882F0qasJyFIOBgHu/HuEE/3cvkI+06z+iLzbrD1Ea5veBHyb/SEqcIY
OSVRWGUmS2EhkqgwQoMI+ICPJ48vcmMHZxdw4AcWdaB/TWoWJa8RaupCjayp
i7YhOiYYmGOSBwtLrKwpVJpyzak9nFaL6L2HuefZcx+Pt0RmxaonSvgh8wLc
8T/G8aXMGkzLutjYYGONjSU2ebGxwNIMU0MMdNH6y7Iujx2VmtNhMuN3svwO
Ox9x+hXufvhIdyCc0Gii4olPFgrkFOX4V29wZChPb3F2J5tnMqc762ZyYCdu
t0RhwnulyjdKaYyc1chS5O8WWYqsQhKieefBg924zuaP7ixoSL/y1LTHyhAj
c5wa0GYCY3ay4gl733AlgJeRRObMm5lEaiQpgaT4kPRcXNHuSUxvTIe8OCtw
UAhvZKNP7udo6mBVhlLtqTmZNhsZc4K1t3D14m2OsVT9XKQfKESZIz2C63hs
Zu14+jfF0V5kR/pa6GgocxU1rB0o24EmP9F7F9NOs/EMrmfxPkfsKVyX8vMA
WjqTJ71GVEuPQpWp1Y9uvzLhLCvuccgT9wBRlSbzJ6mpqfHx8VFRUSEhIf7+
/pcuXVqyZEnXrl0z3XdMQ0NDV1fX2Ng4T548+fLla9269ezZs0+cOPEhN7sr
qlyKbG0tdGUzZ3LsmNiUDg4Wao64ONE3MIeQkCCuOjRUuGLeuiWkFv37C62a
yg9M1dVFG0QjIywslKljmlG+vFAjr1snbDpkZGRkvnmkicDVVZxadu4s3I/T
xkMrK+EzamioGrOmDENfX3SPHTtWtPN+/lw07w4PJyaGpK9QryujOl68eLFr
165x48bVrl3b2tra3Nzc0NBQR0dHTU0tcxldpUqVhgwZ4uLicu/evYCAgLCw
sOjoaFn/JvP/SPnr6dP8/LOoJbO3F5USxsbo6aneuj2HDDU1UbkhBWJzc5HK
16kjtH27doniPRmZvyBLkWU+Ii3wpWV+ZKQImdLC/9Qp5s4VFvK2tqqPUpqa
IqkzMRFauAwr6wYNmDxZtL3w9s7uOyIjIyPzdYmNFU08li0TTsUlS6aLjVJC
J6V1UnInpXhSovflcViK7W3aiDgvRfuPm71S/M9Rm71pkdb70s2R1v5BQXh5
8ccfwsm5fn3V+PbnXilyUlLSjRs3Vq1a1bdvX0dHR0tLS1NTU319fS0trcyl
cNLCvHHjxlOnTj1w4ICPj09QUFBERERsbGxy8lfo1Swj813wmVJkMyuqNaf3
DH4+yv53nHnP9fc8es+b9yJiZ8t4cQ9XF7YN5edKDFOjnYLqCgorMFDIUmSZ
LyNVOVKEuWdKgpDWxIQREUjIe4LeE/ieD9n32H9L40MAgSGERBAWS2SCEHfF
J5OU8u90jF9KirLtuB88hVu82M2OnxjZnqolhBLYQAtdTWGJrKYQMhuFhlKQ
rI26HjpGGJphlpe8Nlgph7VNxm2Ezx/WVlhaYGGCmf5f/m6aoaWHlZOQNtWY
TCsXxhxj7U0uePEu10mbsp74ACIeEXAe31082Mrp3Ww5wM/HGXue3+5w9BWP
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
wGo6eu/BpBvY7okbAfBndch/TXFx8Y8fPxITE79///7ly5fr16+vXbu2f//+
2traVV+jExAQ+Nm5jHyasbFx3759V61adeXKla9fv/L7uhmVpKTkz46KERH4
8oWWR964ke6ZNmlSqxsEoqI0D/KzbSKPVxwwgKaRb9xAWBi/bxaDwWgQfPyI
U6ewYAG6di2nNs2aQVeX7pbKyPChlfbEidi3D8+fg7xRo6ORmorc3P99LYx6
QbVHkU1NTceMGbNr1y43N7fg4OCoqKiUlJQclqVk/EVWFm2MfegQpkxB69bU
XamrU6dF/FZtSlsdHyyKzPg3VHsUWVhYWFZWVk1NTU9Pr3l5evbsuXTp0vPn
zwcEBPD7uhn/gsJCZGTQ87Nk3urnR8/5ErfZrRsUFGpV2yQloaQELS3aYrWs
0TUzo7Wa9+6lnUFYVysGg1F1iJIQPSFzWKItZD5bVnCI/hAVIlpEFImPXo98
kzFj6CkMNzcEByMqipavZ6avXlO9UWQZGZmOHTvOmTPn2LFjb9++DQ0NjY2N
TU9PLyiohegBg/G7w6LIDAbj9yKfG6CKAAKQ+wKeR7BnBkZ2gL4MzdhI/8wh
kyEGhabQtoHpBLRfA/v9WHkOx+7jmS8tXFOD4zMCfBDghgBXBJzFna3YPBlD
O0Nfk9dgC6tCvDWkB0NhHgx3Yswl7H8JrwgW2qH8MorM7yXwP4cEOOrgmIDT
HiJ2aLsUM0/i2Cu8z0AMLddNU37VZYLzk5BBboU7Ii/CZyeOTMeUnrCo3dhJ
RUMMHDXuK5tFkSsFiyIzapsSlOagJAXFMSgOQdh93NuCnUMxSR9dxekxB4PO
UB0FiSWwOoC5t3DhA0JT+P2dq48fCQj3gK8z7i7A8X5Y0QHDjGGuCumKN3sV
uQ9jdzoxkV+O3k7Y8BCPyMOYj8JSFJfSfHvdyWiXZqEkCkWfUfgCMVdwfT2W
jEBHU965oYwyjLui+xyMd8bKl3Dyw/1w+Kcgi0eyS7mF/jO5gh6NWA+478OR
cZhrij7CaCcEI0GoCECYAyl1aHZAszHUdA1ywco7OPsWb6ORU0TbWZRwP6nu
3KU6yOfPn48fP+7g4GBubi4jIyMpKSkmJiYkJFT19TqCvr7+qFGj9u3b5+3t
nZmZmZOTk5+fX1RUVFrK/k3qK0FBtATx7Nm0LqisbLkhLU3LhIqIQFCwVj2h
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
Hz48f/78+PHjixYt6t27t7a2dtWn1TyIi4urqakZGRm1adOG/Anyh8if8/Hx
YcdP6hGlpUhLw/fvf3boKOv67t7FH3/QNDJxpGSqW2uaJyAABQXo6v7ZoaOs
N7azw7JlNGdIHClby2EwGGUhmkCUgegDUQmiFWWlgygJ0ROiKkRbiMLwy9A1
afL/IsYzy379GsHBiI9nhyzqMSkpKS9evHB2dp4/f37Pnj2trKwMDQ1VVFTE
xMQq57KIc/vLXBFHR3xdWFgY8XjE6fH7WhmM3wsWRWYwGL8VOUmI9UXARXht
wa2p2N4f461gpQ3p8vtT4tIw7IAeMzDZERu8cOwLHkbicwpSa1r1SrmJnTxu
+b90xPji2SE4j8NCYwzihgybcWsjC5MvKQqODDiNaLRJ1gxtx2LiH/jjAe5E
wzsFgVmIy0Pu7+qqWBT5L7KiEeOFLxfguw3XZ2HjQIywQvPazZZUNFgUuWqw
KDKjlikuQHoIIt3hfxLeG3B2Kpb3gV1LNFGCpDSatIH1JAzdhdn3sdMXV7lH
eJJz+f2lq4+iLPwIQbIXom8g6AguLMKSQejeEgrSFQqdADiC4JC5lTAkldCy
B4Ysw7JLcAnGnTi8SkVYNrLqTG/E1HAEP8DLvbjhgEO2mG+FfgYwUoJQ+cXG
Rpp0bjhjNw5642kx3pbgWykSS38xNyz9c2RE4+tjvNiPaw44aIP5luivj+ZK
kBCmi5kCQhAUhpAo5FTRYSCmbcP+Z3iSSyeeIdwTWg3op1T9lJSUFBUV5efn
5+bmfv/+/cqVK4sWLbK2thYWFq76JqmgoCD5HFFRUQkJCRUVFTs7u82bN7u5
uWVmNqCi578ZJSW0/WJ+PnJz6Y5D2fHqFfbvx6hRdJ2/Nj2hoCCNioiJQUKC
7tWWHe3a0bInFy8iLIzfN47BYNQx3r+nFS4nTICxMa90iItDVJQKSy1vmFpa
0vLyp08jKIhXYPPyUFBA5bf0d21f1cAoLCx8+fLl7t27hw8frq2tTWySmJgY
sUyV7knRqFGjfv36bdq06fHjxxkZGcTUFRQUEINXyn4xjL+FRZH/ySDvACEh
+j4gbwVyl37aygsXEBrK738/Rh2luLiYyHteXl5OTs67d+8cHR0nTJhgbGxc
9Wk1DwICAn/NsuXl5Xv16rV27dp79+4lJyfz+x4w/gXFxcQPUI+Xk1PO9SUl
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
fe7cuY0bN06ePJnMglu1atW4ceNq6T1UFiEhoaZNm/bq1WvmzJk7d+68ePGi
u7t7QEBASkoKv+8Bo5IUFNAGGffv49AhLFxYzitOnkyVu1UrKkjCwrWnf+RF
QV4X5E+TV8feveUc9YkT9Ku+e0dXA9haDoPRUCFPN3nGyZNOnnfy1JcVAaIJ
dcFUKijQL9C1K+zteWfZW7bQXmmvXtEzZIyGQVJSkr+//5MnT86fP79jxw4H
B4cePXo0adKkclaKeDNNTU3i04hbI56NOLezZ896eXnFsSPiDAZfYVFkBoPR
8CnmxhlzaUom5Qs+XMHttTg0CEtNMFoHXVSgLw3xnzlkRXC0wDGCVAe0nYYp
+7D/MZ7G0BxyaDYS85Fbu7sBGZH49gDeu3BrIpw6YnFLDNRBcwWIlZdoCTk0
tUbX6RhzCMuf47Af7oTBLwlpv2vmsK5HkYW4hSXlwFGGsA4sh2LCNux5DLdU
fAbCua/XnGq6FSyK/A/v0j+JIktIQ00Pxm3Qrh9sx8FuHAaPw4hxGDsO4/g0
7IfArhO6GsNKCc040OVAhVuaVYjDosiM6qOYm0P+QYveFkTh60O47caxSVjT
BhObw9aUFvRQbAHpDrCaggl7sOMhbkfCOwWBmYjNRU4D2kUv5daFzk9CbhTS
A/H6PM4txlob2CugCwctuWlkmQpFT0wa2q1hRQRkK6a4YvMLXPSHbwySqkv0
K3NVXJ3N4VbkT0aUFzyO4KQD1rTFeDX0UoS5NNRFIcjhvrbIm9QcnG5Q517C
BlfcC0IC9wRNFvdnUvEObl4Kkj4i7A4+HcGzFTgwFlO7oJ0+pMTKi60smnVG
33n0gNXODzgfDvd4fMngd+3o+kNeXl5UVNT79+8fPXp07ty5DRs2jB07tl27
dkpKSlXfJBUWFlZXV2/ZsmX37t1Hjhw5rgwzZszYvXv3rVu3AgMDC1iN2npL
Whq+fqX53ps3cfZsubFhA8aOpTVSlJRq1S4qKNAKdtbWGDSI1witX49z5+hm
BNulZzAaEjk5tO/q9eu0vPDUqRXNhvr2hZUVdHVp69ja1CVtbZpDnj4du3bx
SuX9+zRE/f07rbLJaHgkJye/evXq7Nmz69atGzNmjK2trYWFRePGjcXExCrn
rLS1tW1sbBwcHHbt2nXlypVnz575+/snJCSwBhOMvycmBh4eOH6cnsQYORLd
u6NlS1oXvjbTbPV6lLWVs2dj3z5aHjk4GCz8z/g7MjIyQkJCfHx8bt++7ezs
vHjx4oEDBzZv3rzSmv8rBAUFVVVVTU1Nu3XrNmLEiKVLlx49etTd3T2SFX+s
txQV0VMOxNA+fYpLl8p5RWdnLFmCgQPpuTYxsRqXvb8GeVGQ1wV5aZBXB3mB
lHXUPz3trVu0Wnx+A+ptx2AwylJQQJ9x8qTv3k2f+rIiUEdMpYYGPTE2ZQo9
3sszyyZ+zdeXdk3KyuL3fWRUE+Hh4W5ubo6OjosWLRo2bFiXLl2aNWumrKxc
OSslKipKHBrxacStOTk5EedG/BtxccTL8ftCGYzfGhZFZjAYDZ9Cbg45E0hB
0gf4nsLFBdjcDVPUYacEK1loi0NMEBxpcBqD0wKcTpAZis4rMf8UTvvgUwqt
h5yYT8vxFdbubkB2HM2RBpyG11rcGIctvTDGAhaaEC8/HRCXhU5btJmA/jsw
9Ra2vsSlALyJRcrv2sWrrkeRf7a5F6Xpd2E5mNti7FrsuId7yXgHWl4ynhYf
rR5YFPkf3qV/EkUWEoaEDOSUoawFTQNoGUDHAHoG0DegFQL5MvR0oKUKdTk0
EoM81wJJcEsiC3BYFJlRfRRxc6rpQALyv+HzNdxYjR12mNwYfdXQpgmamEK2
LWT7ouNizD4BFx/4puNrPqILkVaM/AbU6bS0BCWFKM5DUTbykhF4H3fX40Af
zFfCcA5NIxtzoFih6IlIQc0czYej8yoMPoUlD+DyBp7hiOfjJKWEmyHOpDlk
xOL7EzzaiYOjMMcY/SXQQQxGImgkyFUVZa6qdANnJDSWYLATdrjBI4w6rHyu
1Srm5poroCAdGV8Q546w83i3E8dnYk4fdDSBdPl+wuIyaNoB3aZj3GGs8oTT
Z9z9Dr9kpDL5+mcUFxdnZ2enpKTExMSEhoa6urquWbOmX79+Ghoa1bJJKikp
qaioSD6tSZMmBmWwtLScMmXK4cOHfXx88vLYv1Z9JT8fGRm0Y2NEBK02XHa4
utJSyf360d2B2rSLYmKQk6MdbHV0eI3Q4MG0VPK9e4iN5feNYzAY1UdmJo3a
7duH8ePpkbcKZkONG6NRI1qqvZY3TE1MaD3kXbtovIRHKqOjkZxMS7WzmnIN
EmKu7t69u3HjxkGDBunr62tqaiopKUlJSQkJCVXOWZmYmIwePXrXrl1Pnz4N
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
4FEK3gOh/J9MUN2VUsIR8hjeJ3FnNU5Px+bRmDkAg7pw/8X/tvZo1QuthqHV
RLSyx9idWO+MKz54n/Y/FX0V7AcwKTKDUZ4ioJDvfnlID8fnB/A8jFuLcWw4
lnTB0CZoqgkp7u7LrjFW3ww9bTH7EA744FYGXmbjUx4SC6tUZFuYg/QQxHgg
5AL8duLibCwbhL7Noa3MV5iTX1kCPBnw5NGgPXrPwOwj2O+NG7F4noyPmUj8
oeMiBfzlLZWuc7nB8LuMK8uxqS8maaGPLFpLQl8MckLgiYCnAJ42eI3Ba41G
Y2CzCetv4OZnfMhDaD7iCpFZxKTIP0N8fPz9+/cdHBwmTpzYqlWrxo0b6+jo
KCoqioqKCuS9X2kMDQ2HDBmyevXqK1euvHnz5tOnT9HR0enp6cXshXKNg/yk
797h9GnaO7R37zKZnoUFVcpoadHWphw2XdHQQPfutOnKyZO0pfO/mZcXbZv8
5QtSU+kOCIPB+O9kZFDtRFAQ3rypyMsuX8aqVRg8GA0bcp+GlZiEBFRUaANk
U9Pyterw4Vi3jl50GxrK9fgyKp/MzMzY2Njg4GAfH59XZTly5Ii9vb21tbWK
isqvJ0jCwsLy8vJaWlpGRkYtW7YcNWrUpk2bXF1dIyMjuR4DRrWkqAhpafRe
CpKjeHtTocmyZVRAW78+9wH0dzeSnnboADs7ODri2TO8f0+ldYmJyK1Vb9AZ
Pwkpb0mdS6pdUvO2KouJiYmurq6ysrK4uPivrxoSEhIWFhakfidVPKnlSy9P
3t7egYGBUVFRaWlpRSRWMH5/UlLoId+9ezF1Ku1OXDovNTen+j11dcjIcBk4
SXVvY4O//oKzc0U5v48PgoNpp9bMTK7HlMH4nSEeRPyIeBPxqQo8jlSspG4l
vsntSTUSnUiMIpGKxKsKdoQHD6bvBK5coQ2QGTWPwsLC1NTUL1++BAQEeHl5
lc5b3N3dt23bNm7cuObNmwtkJ4LkSKRC19PTMzU17dChg52dnaOj47Nnz9LT
f+QWTwaDUZkwKTKDwajZFBchMxJxrxB6FR/24uYirP8DNm3R6BudoWp9tOiP
gcsx6yK2vsW5IDyJxuc05HP4LqcAyPpbtJP9iYp2rq3EtoGYpo+BKmgnDwNJ
yInwRTuK4OnwlYetYTQWwzZirQuufcKbDHzKRnQeMmrTfnpBOnKikfGRtnn8
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
YljnQAbjn2FSZAaDUavIT0ZGIJKeIPoy/HbjhD1m9oWlMSSqpRRZXAEK+tCw
QP2eaDUR4zdjyzXc9MfnQsTw070s/mktxi+SnJz89u1bFxeX3bt3LyrL5MmT
+/TpY25urqqqKpC3iFpaWpaWliNHjly8ePG+ffucnZ09PT2joqK4HgNGlZKX
R2WQ9+7h6FEq+li06H9mb4+hQ9GuHb2Jsno2YtXQQJs2GD6cdovdtOlfbd8+
XLsGT0+w2c2obiQk4N07ugd65EhFc3jFCowdi06dUL8+bYjEuetVbDIydLe0
c2eMHl0mpBAj3+XsWXr1c2Qk10PPqFpyc3NDQkKePHly/vz57du3byrFihUr
xo4d26lTp/r16wsLCwskw/mKqKionp5eu3bthg0bZm9vTz768uXLJNuJi4vj
ekgYvwPJyfDzg7s7jh2jF0jY2qJbNxrgqqdapcaYlhYsLTFiBBYv/l8O9+UL
17OB8XuTlpbm6+t78+ZNUvaSynr06NHW1taNGjWSkZER7LpD0NDQaNOmjY2N
zYIFC0hRf+XKlRcvXkRERBQVsaPbNRyyaPj4wMUFu3eXz4GnTKGXEJmbo25d
7qPst0aKfQMD2hh2wgTa/r+CqoSsh2RVJGsj+bIMRrWFzM/37//O4CqYz2S2
T5xIZz6Z/2LV8lU8iRgkbpDoMXly+ahC4gyJNm/fMmes1eTn54eFhT179uzS
pUsODg5z584dOnSohYWFmpqawNMbOTk5Y2PjLl26kOJ9yZIljo6Ot27d+vDh
Q2ZmJtfDwGAwvg+TIjMYjBpIAWinvETgC4qC8PkpHl7Byf1YW3abe/FSrNmG
zcex+zoOP8MVX9pk72M8Uqrn6doivtomma9G/oxoT7y8gQtHsHVD+XJg0V9Y
tAuLjmPRFay7h1Ov8TgEYclMisxg/DNMisxgMGoVuYlI9sWX2/h0DM/WYv8k
TOmK1gaQqJaSPxFJSKpAThfKjWHYGYNmY9lxnHkNn0JakJKcKJXTOFxjyMrK
ioyM9PX1ffTokXNZ9u/fb29v36NHD0E1N1BQUNDX12/ZsmX37t0nTpy4efNm
FxeXQNaqspZRWIj4eNqh9PlzuLrC2fl/duYMFUDa2KBJE4iLcx+FvjV5eejp
oXlzdO2KAQP+1SZMwObN9Bux2c2obkRE0Eabe/bAzq6iOdyzJ23D2bAhlJWr
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
iYmJ8fDwOH78+LJly0aMGNG1a9emTZtqamoKpIugoqKihYXFyJEjV65c6VSW
K1euPHnyJCAgIDExkesxYFQpWVnw8cHly9i0Cba2VJD81YYNo+1lTE2pKFFI
iPugVLEpKsLCgu6ZrlwJJycBmIsLVcQEBdENMkZtJj4eHz5Qxf6lSz85lzZu
xKRJ6NCBiq0495T/4kqGhlRpPHBgmYBQzmbNwu7dVGVNfIRRm0lNTQ0KCnr+
/LmLi4ujo+O8efMGDBhgYmIiJib263lLBcjKyurr67du3bpv3762trabNm0i
mcy7d++y2O3FjB+FSZE5NyZFZlQOZHm6devW7t27Z82aNXjwYCsrKyMjI2Vl
5cpYkpo1a2ZjY7N06dJjx465urp6enqGhoZmZmZyPQaMKiU2Fk+f4vhxLFtW
PnPu3x9t21Lth7w890H3u6ajg86dMWUKVSP/ell96hRu38br14iIoGc8GYwS
EhMREIAnT3Dlyk9Ora1b6Swlc5XMWM695rtGfJ9EABIHSDQoFx9IxCBxw8OD
xhBGraWoqCg2NtbPz+/BgwcXLlwo/cb+8OHDixYtGjJkSJMmTaSkpASexqiq
qjZu3Lhjx45Dhw6dM2fOvn373N3dP3/+zPWQMBiMHyY3BSlBiHpJ1civT+L6
LhxYjWWzMX5cmXVn+kys340Tt6ig1x8IBeKAdH5vTq7ITkGEF96exd21ODcW
B8ZgwxgsHIPJ5IGnYMwijNmIMY4Yfx7r7+GCD15/QRprp8RgMBgMBqMsTIrM
YDBqFUnB+HAV91bh9CBsNsU0ffRQg6EMRKu9rk9WGWZd0H8+7M/AwR8XwvE4
Dp/Skc5a+1QmqampgYGBjx8/vnjxooODw6xZs/r27WtiYiKQ7oLS0tL6+vrt
2rUbNGjQtLIsW7bs6NGjDx8+DA8P53oMGFVKbi5t/+vpievXcfgwDhz4n23Z
QoU53bujYUMIV/vTE9LS0NdHu3YYNIg+9q/bmjV02/TZM9oOl1GbCQnB3bs4
eBCLFv3kXBo+nF5zbGREVb6ce8p3TUuLqqbHj8fatWUCQjlzcoK7Oz3IwDZM
aznR0dFPnz51cnJavXr1xIkTe/fu3aJFi3r16lXGdbGlqVu3bps2bUaOHEkS
mMOHD9+4ccPT05PkMHmskT3jR2FSZM6NSZEZlUNsbKyPj4+7uztZpNatWzdp
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
NZwifj/kWOAz8B6fruL8KiwciK71ocuDGg8K/LhRhwcpVag2Qf0eMBuPjgsx
egOW7seBs3C9RV/8VqJdg9sZuB2G2y5cWo21E6ga2dwA4qJl9wtkINUYir2g
MQ16GzHACWvu4UYAotK4HuFaQ2FhYWJiYnBwsJeX1927dw8ePDh79uzu3btr
a2sL/J2kpKSkhoaGsbFx27Zt+/btu2DBgmPHjr18+TItjf3etZe8PMTFUX3s
q1e4fbuiqLJjB5VrWlrStqucbwYJymRkoKUFU1N6n2zPnpVofftiwQIcO0Yb
/DKH+498+UI7Ke3eTS85rdRfh1ibNmjUiDZr+q2bfktI0H7II0fir79w+XJF
7vz0KT58oC2RmTCe8ZWoqCiSh+zevXv69Ok9y9K+fXtTU1MtLS0ZGRmBJydq
amqdOnUiH0o+2q0sT5488fX1jYiIYBumjF+FSZE5NyZFZlQ+2dnZ0dHR/v7+
z58/L7egHD16dP78+X369NHX1xfI4iUvL6+rq9u0adOOHTuWWzTnzJlz6NAh
Dw8P1niwtpGRQcWxfn7w8KgoDz9/HqtWwcaG6jNFRLgPzwKxOnX+vpyleXN0
7ly5hVtJsXPlCr09h/ETxMXh0SMcOICZMyu9ym7blh5m19CApCT3s/SnTViY
eivxWeK5xH8r8G7i+yQCkDiQwfp7MP6fuLi4R48eHThwYNasWT169GjVqpWh
oWHdunXFxMQEkpCUpmHDhv3791+0aNGJEyfKJUIvXrwICAiIiYlhVzYwGAwG
g8FgMBiM3xcmRWYwGDWcQn5L5HCqQ8Zz+Dvh2EJM6YMmuhDjQZQHYX5LZBLo
ZLWgZQWTsbBchSGHsdQZJ57hxSckp1A1WiVaDNI+Is0LaQ8QfoGqkRf8gY5N
IVlWZFVHCkINIdwJoqMgthDt9mLudVx8h4gUrke41lBcXFxQUJCbm5uVlZWe
nv7q1as9e/aMHj26UaNGAn8nKSQkJCoqKiEhIS0traKi0rt379WrV9+6dYtt
ktZmiotRUEDv6MzMrCikpKbSzsnr1qF/f6irc78ZJCgTEoKYGN0Xk5GBnFwl
mooKbQe0ejW9rJM53H8kOBhnz2L2bLRrV7m/DjFpaarjFRX9vW9JlpJCp060
H/Lly4iIqMijMzKo1+fno6iI65+ZUW0IDg4+e/bs7Nmz27VrJ1cWGRkZSUlJ
MTExkkgIPDnR0dEZOnToli1bHj16lFaWjIyM7OzsvLy8wsJCroeH8ZvDpMic
G5MiMyqfoqKi/Pz8nJyczMzMcgvKmzdvHB0dJ06caGpqKpDFS1hYmCyLZHGU
lZUtt2h27dp16dKlzs7O0dHRXA8Jo0oheXVeHrKzaaZdQR4eEoJz5zBnDj3k
Kypa6dG3ykxYmB7qJPWIrGzlFm6NGmHMGNp+9tUrrn/y3xNSJ5JqkdSMpHKs
sipbSIj7KfrTRp6feCvxWeK5xH8rrrJJBCBxgFXZjK9ERERcvnx54cKFnTp1
IkmCtLS0hISEiIhInTp1BJKQlKZZs2ZTp049evSon59fuUSIpEYkQSJpUnFx
MddDwmAwGAwGg8FgMBg/CZMiMxiMmk1xAQpikfMBGR5IccbzHdg1DaM6w7Be
+UCnoAuDbmj9J3o7YPI1bPWAsz/841FY2S9+soF4ftNmX6Tex92d2DARgyyg
JU47NsvwIM7XS/MkwNMBrwV4vWhwa7YaU0/hyDP4xiA1H5kFyC1CAXtHVYUE
Bwdfvnx5xYoV/fr1MzIy0tXVVVVVlZaWFrj4R1RU1MLCwtbWdu/evR4eHu9L
4e/vHxoaGhcXl5GRwcQ/jBKKi/H2LY4fp7rQTp1gYvKv1rAh6tWDoiLdcuJ8
z6j6mKgoWrakbaX37qWtct6/Z/Z9c3XFhg20+5ChIfe/IOfzR16etpPS16/I
+0rm2J49dI6xJrKM71JcXJyZmZmQkBAeHh4QEODq6rphwwYbG5vKOAxVDikp
KWVlZW1tbfJZ3bp1W7BgwenTp0kGwvWQMGou4eFwcaE3hQ8eTNvz6emhbl16
DElYmPsQX4NNUpJ2ydTSogu5tTVNIk+cgI8P17OBURshK52Li8vatWsHDx5s
bGysp6dXt25dGRkZYWFhga9x5ubm48aN27lz54MHDz5+/BgZGZmUlJSdnc31
GDCqC8nJePAAO3di3DiYm1eU29evT08By8nVnObJAjFVVXTrRq8cOn2a+4r1
d7Q7d7B1K0aNonOM81+TWyOeRfyLeBnxtQo8sWlT6q07dlDPTUriOoIwfgey
srISExMjIiICAwPv3LmzdevWUaNGCeowVGlIGiMrK6umpkYSm8aNG5NanlT0
pK6PioriegwYDAaDwWAwGAwGQ/AwKTKDwajZFOUjMxyJLxF5DZ/24+Zi/PUH
hrSGvlr5QKeiD5M+6DIfo45i4X04voZ7CIKSUFTZ+t48IBWIoWrkNE88OYS9
0zG5LVpJoCEP9XhQ5NEGzjwx8OqCZwieBY1vZn9izC7scMODzwjORFQOkvOQ
zbSoVUhUVJSHh8eJEydWrFgxduzYnj17NmvWTFNTU0RERLCvK8kfNDQ07NWr
14wZM3bs2HGoFMePH3d1dfX29o6MjMzLy+N6SBjVheBguLvTezznz8fkyf9q
Njbo2JHKfJSUuN9aqj4mIkJlOL16YcYMuod16BCz79u6dZgwgU4nLS3uf0Fu
TVYWDRrQ7tADB1bkfXZ2dHa5uNBrYZnghfFdioqKoqOjfXx83N3dnZyc1q1b
N2HChI4dO2ppaQk25fgWNTU1MzOzrl27jhw5cvHixST3uH//flhYGNdDwqi5
xMXRZrynTlE18vjx9KKCFi2grU2vRuA8xNdgU1WlCp7OnfHHHzR9JEnknTs0
oWQwqpy4uLjnz5+fPn16zZo148eP7927d4sWLbS1tSvjevQGDRp069Zt2rRp
W7duPXfuHFng3r9/Hx8fz/UYMKoL6en0TMaVK1QOOm1aRbl9//5o04aKJKWk
uI/o1ccUFNC8OYYNw+LF3Fesv6Nt2kRnF1mc9fS4/zW5NeJZxL9at6a+Zmv7
r55I/HTLFuqzxHPZgV/Gf4FkHb6+vnfv3j1z5symTZsmT57cuXNnPT09gacc
EhISurq6FhYWffv2nThxIqnoz549++rVK3b7IYPBYDAYDAaDwaiRMCkyg8Go
2RTmIfkTwu/C7wiercDJiVjYA73NoKtcPtCpNUSLQRiwEnYXsdETZwLw5AtC
0ypfilwAZPHVyAnICITnaZycjcXtMUAS7XhozIMmD1LkCUXAkwNPHbz6NMQZ
DcXQVVh1EZc+4GUS/NPxJRtpBZX8qIxSpKSkfPz40cPD4+rVq3v37p09e3a/
fv2MjY0FvkkqJCSkrq7epEmTrl27jhgxYkIpSrZNr1275uvry9o3Mb4SF0f1
jffv4/x5HDv2r7ZxI93E6dSJCnw431qqPiYkRJvtNGmCrl0xYgRV2DL7rg0Z
AisregMvk7WrqNAd0lGjsHJlRd7n5ITbt/HmDSIjwc6RML5LYWFhYGCgq6vr
rl27Zs2aNWTIECsrq0aNGikpKQk25fgWAwODHj162NnZ7dix4+LFi48ePfL3
909ISOB6SBg1l7Q0BAVRNbKz89+nqgYOhJkZU3dVrunp0bxn6lSqtyPp44MH
tBsjSSgZjConLS0tKCjo+fPnzs7Ojo6O8+fPHzRokJmZmZSUlMDXuLp165qa
mlpbWw8fPpx8EPm4u3fvhoaGcj0GjOpCTg5t1e/tjVu3aKv4CnL7ZcswfDi9
90RBgfuIXn2MLN1kebGwQJ8+3Fesv6MNG0ZP+zZuTGtMzn9Nbo14VosW1MuW
Lq3IE4mfEm/18qKem8P2ARn/geDg4Nu3b+/bt2/OnDnDhg3r1KlT48aNVVRU
BJ5yyMrKmpubDx06dNGiRYcOHbp+/fqLFy9CQkIyMjK4HgMGg8FgMBgMBoPB
EDxMisxgMGo2BbmI9YP/VXhshrMtdvbBtNbo3AD15MoHunpGsPwDozZimRsO
BuJ6BLwS8CWr8qXIRXw1ch6Qg6z/Y+++46q42vXhS+8gCCgg0gUVBURULCio
wYYtCgaxh9gbFoxdMRZssQZLFCvYiC2KBUWsIIigiKB0pPcOG7zftfW8z2/D
c+QYw2YQr+9n/avMrD0z17pn1qx5T5F+5OdO2/rTTBka1YI/G9mwBSmyLRT9
uDCy7McJySpkaEND59GiI/THM7qWTk9yKbaYcjGdqRFVVFQUFBSkp6fHx8eH
hIQcPHhw1qxZ1tbW0tLSDXu7UkRE5NPn0du2bWtoaGgswMLCYurUqXv27AkK
CirCkh/w/ysr43+MMjWVP5fnzZvPNn9//jI7Tk78GaScP1pqOk1EhP/MtFUr
0tIiQ0N+56D9n01fnzQ0+M8HpaS4/wW5beywGTaMVq2iCxfqO/tiYig5mbKz
qaSEamq4vmRAk1dVVcVGGocOHfo00tDX19fQ0GjZsqWUlFTDDjn+26eRxu7d
u9lI4927d+/fv8/LyyvHo30QnspKKiigjAxKSKDwcP60kvnz+a+7KChwf4lv
xs3UlCZOpB07+G+yvXvHH0SyoSTecwQuVFZWFhYWZmRkJCQkhIeHHz16dP78
+TY2NgoKCg2ecTIyMioqKlpaWgYGBnZ2dm5ubidPnnz58iXXfQBNRXU1FRdT
VhZ/WmM9A3vWfHzI3Z3s7UldnfsretNp4uL89GZ9oqPDfcX6LTYDA9LUJGVl
kpbm/tfktrGj6IcfaNky/rkWHV3fycjOVnbOsjO3Gt8NhC/ARhrHjh37NNJg
gwFNTU1lZeUGv7HPsP/200jjxIkTbKSRmJjIhjpswMMqfa77AAAAAAAAoOFh
KjIANE8fPrYaqiqhlGf07Dhdc6cjI2h1T5rQgXppUhs5aiHycX6v+McpvtKk
Y0EDptHMPbT9AZ1PpXtZ9KqQMiuoMacIleVTjD/d3kBHh9E6VfpZhoZIUmdx
Uhate1nW6Uy2k2j6LtoYSMfj6WYavcinDFzlOFJQUHDr1q3ffvtt1KhRWlpa
SkpKcnJyUlJSYmJiDX73UpCsrGz//v2XLl167ty5hIQEthklJSUVFRXVuOcO
XyAujv8cx82NP8FHReWzTVmZ/wBRRoYkJPjTdDl/CIWGxkkTF+c/ApaX58+4
rud8MTPjfxn20CH+BDqAf4rH45WXlxcXF+fn5+cKyMjIuHr16urVqwcPHtyq
VasGH06Ii4tLS0vLy8u3bNlSpTb2F9nfvXLlSnp6OtfdA9+f0lIKDOSv0ztu
HH9dxXouvo3WGmRU9IWJ0pjNzo6WL+d/0Tw5metfHeD/KS0tDQwM3LZtm6Oj
o66urlCrbG1t7TFjxmzevDkgICC3NlTZ8H8KCaH9+2nyZP4CtvVca5WUSE6O
//KmmBj31Q0aWlNo7FxgZwQ7L9jZUc+5w84sdn7t28c/1wD+qc9V2Yy/v7+H
h8eIESM0NDQafGjBhits0MKGLmwAY2Rk5OzsvGvXrkePHmH6MQAAAAAANHuY
igwAzdCH/7fOcGUuxd+noP10ZjZ52tC8jjRKh7q2IjXpj/OQZfkrDLfQoBZ6
ZGBPw5fQMm/yDuPPQw7Pp4RSyqsiYS+KLKiikBIf0NN9dMmVvLrT8vbkpEXd
lUlNsu5lWasjWY8nx99oyVX6PYIuvKOnGZRa0ojbCgKKi4ufPXt28uTJlStX
jhkzpm/fvqamplpaWnJycg1+J1OQtLS0ubn5Tz/9tH79+rNnzwYGBkZERCQn
J+P7bvAl3r/nL323bx/Nnctfx/Vzzd6euncnIyP+V0HxzBTtu20tW/LnwVlY
8Kdr1XO+TJtGnp505Qp/TXKAfyovLy8uLi40NPT27dvXBFy6dGnz5s2TJ0/u
0aOHoqJigw8nWrZsqaura2FhYWdnN0zA8OHDlyxZcuTIkUePHuXm5nLdPfD9
qajgv9fh40Nr15KjY30X30ZrgwdTjx7Uvj1/eT4Jia9MFCWlL0qUxmwLF9LB
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
AKYiA0Dz86GCavKIl0pVsVTwlB4dpEOzaWFvGiRP5h8vFOofrxUi0iTVnuQH
kPJUUl9DdofI/Tqdj6SEPM62vKaSKtKo6CXlBFLaBQrYSjt+JhcbMm1DCi1I
tgVJtSCxj5dleW3S6EPtXchyJY3wol+v0KlQCn9PlR+vzNXsv2r0edTwHzEx
MefPn1+9evXIkSO71mZiYqKtra2srCwpKdngNzn19fVHjRq1Zs2aCxcuhNX2
+vXrpKSk3NxcrGoI/1RRET18SAcO0MyZ1KsXf23kzzUTE9LWJmVlkpTk/pEW
GtqXNDExUlQkTU0yMiJz8/oObxcX8vQkf39KS+P6nIRmpKqqKi8vLyUl5c2b
N6GhoUePHl24cOGAAQPU1NQafJAgSFxcXElJSUtLq3379hYWFi4uLp6env7+
/mk4vgHqV1JCt2/Thg00ZMjXT0Xu1o3mzeMviZyYyPX+AHxL4uPjL126tGHD
hrFjx5qZmRkaGmpoaCgoKIiKigo1NFn9PmzYsF9//dXHxyc8PDw2Nvb9+/eF
hYX4wDr8U8nJdO0abdpE48fXV3eYmZGhIWlokIICiYpyXzGhof3Txo5bdvSy
Y5gdyex4rudoZ+cCOyPYecHODoCGwuPxCgoKUlNTY2Jinj9/fvLkyaVLl9rb
27NhQ4MPEqSlpVu1aqWjo9OxY8c6jwCcnJx+++23q1ev4tuFAAAAAADwvcFU
ZABofmrKqCqTyt9SyXPKvEV3dtKu6TStB1nJ8a8SGi2o5ac5vbKk2Ik0hpPh
PDLbSeN9aVMgXXtDydx97u1DFVVlU9lbKnxGubfp8QHymkuzBlBvTWrbgtRa
kOLHLRdh1zoNUulGWiPJaDb120xzT5PXA3qUREVEpUQVRDxMReZOSkpKUFDQ
8ePH161bN7e2cePG9e3b18jISEFBocHvf2poaPTq1WvChAmrVq3aW5uPj09g
YOCbN28K8DlD+IfKyvgL1Fy9Snv20KJFNHfuZ9u4cdS3L39Kp4IC9w+/0NC+
pElJkY4O9ehBI0fyJ9vXc3h7etL58/wv2Ofmcn1OQjNSUlLy7t27Bw8enD9/
noW1m5vb6NGjzc3NlZSUGnyQIEhGRkZPT8/a2pr9udmzZ3t6erINCA0NzcXx
DVA/TEUG4E56evrjx49Pnz69ceNGV1dXBwcHKysrbW1tcXFxoYammppa9+7d
nZycli9f7uXldenSpadPnyYmJuIlX/insrIoOJh8fWnz5vrqDldXcnAgKyv+
e77i4txXTGho/7Sx47ZtW/4xzI5kdjzXc7Szc4GdEey8yMJn/qDhlJWVxcfH
szGDn5/fgQMHli1bNnbsWEtLSxUVlQYfJCgrK3fs2NHOzs7Z2bnOI4BNmzb5
+voGBwdn4fgGAAAAAIDvDKYiA0DzU11C5SlUHEl59ynpAl3xII8JNNaSjGT5
s3mVPi4vLN6CJORI3ZyMx1GPFTT4KM27TvtD6G48pRVxtuUfeFSdT5XJVP6a
SoIp/ASdXErLhtDQttSpBel+XM9Z7uNUZAk1kjMl5QGk7kxmy2iSF+24TXfi
KIson6jk42xkfPGLK3l5ebGxsY8fP75y5crp2jw8PCZNmmRtba2qqtrg9z+V
lJQMDAx69OgxbNgw59p+/fXXo0ePPnjwICMjg+vugW9MZSW9f08RERQQQGfP
0unTn20eHjRpEllbk6oq9w+/0NC+pMnK8hdDHjeOVqygY8fqO7z9/fnzkBMT
+dPQABoKGzAEBwefOnVq7dq1LKwHDRpkYWGhra0tIyPT4IMEQYqKipaWluPH
j1+9evWJEyf8/f1DQ0MTExNLcHwD1A9TkQG4U1BQ8O7du6dPn167du3w4cPL
li0bPXq0qamplJSUUENTQUFBT0/PyspqyJAhU6ZM2bRp0/nz51+8eFFaWsp1
l8A3pqiI4uMpJISuX6+v7jh8mJYto9GjydSU/+Ik5xUTGto/bey4ZUcvO4bZ
kcyO53qOdnYusDOCnRdF3N2Kh+anqKgoLCzM19fXw8Nj4sSJgwcPZsWvjo6O
nJxcgw8StLS0+vfv7+rq6unpWecRwPXr10NCQuLj44twfAMAAAAAwHcGU5EB
oPnhFVFpHOUFU8bfFPMn+S4n9x/Jvgupy5B0C5L8OA9ZpAVJyZO2FXWbSMM2
0bS/aMMDOv2KnqRSFocPlKrpQzHVZFF1EvHe0Bs/8ltDHiPop3Zk3YI/G1n7
41RqtvGiyiRuSJLdSXoI6brS6O204QpdjaEUokyiAqIy/n8G3KisrCwqKsrK
ykpJSUmo7dKlS2vXrnVwcNDS0mrw+58SEhIKCgqqqqrsP9etbejQoatWrfLz
80vEnAf4h2pq+Asj5+VRejp/ykxCwmfb5cu0di1/3RstLe4ffqGhfUlTVKT+
/cnNjU6dotev6zu837/nr4dcUkI8HtfnJDQjGRkZ169f37hx45gxY1hYa2ho
qKioyMnJiYmJNfggQRD7KwMHDly2bJmvr++nD83n5uaWlJTwcHwD1A9TkQG4
U1VVxars7Ozs1NTUiIiIY8eOzZs3r3fv3sJ+f4dV2fLy8q1atdLU1OzQocOE
CRN27Nhx7969wsJCrrsEvjFVVVRcTDk5/MqinrojIoL/jiQLit69SUaG+4oJ
De2fNnbcsqOXHcPsSGbHc/1VNjsj2HlRxeFTRmh2WG17+/btrVu3Ojk5GRkZ
sfhmIc6qbGF8RsHQ0NDR0XHLli23bt2q8wiAVdk5OTnFxcVVOL4BAAAAAOA7
g6nIAND8VOZTYTRl3KMEHwrfQUfn0vxh1Lcjyde+hy+tQIbW1M+VJuwh97u0
7wVdiaPwLMrl8FpRQ1T+cSZxFlEKJdyim560x5nmdiAHWeolTcYSpCrGn4rc
QoFatP14rbMm9bH0wxpa5kNnXlBUJcVXUUY1FdYQ7wN3OwKfER4efuTIkZkz
Z1pZWamrqysrK8vJyUlKSjb4vdA6OnXqNGnSpD179jx+/DgjIyMvL6+4uLiy
spLr/oBm5cULOnKEZs7kf4hTQ+PftjZtSEWFFBT4K+qIiHD/NA2tCTYxMf5T
TkVF/kLcX3eYmZjQhAm0axc9eMCfcg8gDDU1NeXl5UVFRTk5OWm1PX/+/NCh
QzNmzLC0tGzw6BcVFZWSklJQUGjVqlWbNm00BJiamk6ZMmXv3r1PnjzB9GOA
fwBTkQGahsLCwoCAAE9PT0dHRwMDA8GMa926Nauy5eXlWZUtIiLSsNkqIyPT
t2/fRYsWnTp16s2bN4KZnp6enpuby6rsioqKDx9wLwa+XmEh/4NEnp7k6EgG
Bg1QWaurU8uWJCdHEhLcV3BoTb+xKltaml9lt2r1lYecvj7/6N26lX8k46UN
EBIWtSxwWZXNwpdFsGAiv3z50tvbe+7cudbW1hISEg07EmBDC1Zls2GGiooK
q7JtbGzc3NxOnz4dExPDdZcAAAAAAAA0FZiKDADNT3kuZb+ghGv08g8KXEl7
J9EvtmRtSPK1v2woo0gd+tLgeTTzCG0OpRPv6E4aReVTPofTMz8Qsb9eQpTP
n42c+ogeHqST88jDllz1abgmWSqTlgyJilALWWqhRi10+Zc71YFkM59metHe
+xSQRaH59LaEMiuoooa7HYHPePv27d9//71z584ZM2YMHTq0R48eRkZGKioq
DXtf9L/p6ura29vPnz9/3759V69effz4cUxMTHZ2Nh6SQgN6+5b+/pt27qQZ
M+jHH/9tGzmS+vShjh2pdWs8M0X735usLGlrk5kZ2dl95WE2cSJt3Ejnz1Nk
JFVUcH0KQTNVUVHx6Xno/fv3/fz8Lgg4fPjwkiVLHBwc2rdv3+DRLyEh0aZN
m44dO/bt23fkyJE/Cpg6deqWLVvYxkRFRVVX4zMaAF8MU5EBmoaSkpLnz5/7
+PisW7fO2dlZMOOGDx9ubW1tbGysqqoqKirasNkqJSXVpUuXsWPHrly58sSJ
E4KZfvny5YcPH0ZHR2dmZiJb4d8oLaXnz/kpsW4dOTs3QGXNIqt7d/6sZmVl
7is4tKbfpKX5H7rq3Jn//aAxY77mkPvpJ/7Ry47hsDD+0AlAGKqqqjIyMlg9
GxQUdOnSJcFEPnbs2PLly0ePHt2pU6cGXwlZTExMXV3dxMSkd+/erJCfP3/+
/v3779y5k5KSwnWXAAAAAAAANBWYigwAzU9pFr0Pptdn6ckWujKLtoyiST2p
mw7JSda6sskqURdbGr2ElvjQH7F0KYMe59HbUirkcHG4D0Tsr1d8nI1cSJnh
FO5L19bRofG0phdNNqX+7UhP6eNUZClqofhxNrI2KXej7pNowhZad4VOv6Ob
qRSWQ8klVIbHX01Penp6WFjYtWvXDh06tHr16kmTJtnY2Ojo6DTsfdH/pqam
ZmZmNmTIkOnTp69du/bo0aN3796Ni4urqcGEdWgw6en8J03XrtGhQ7R9+79t
mzbxpzTb2/PXrZWW5v55HFoTbMrKZGFBo0bRwoVfeZjt3UsXL9KTJ5SURFga
FoSkuLj41atXLPr379+/bNmyxQJmzJjh4OBgaWmpqanZ4NEvIyNjYmIyePBg
9lc2b968XcCBAwf++uuv4ODglJQUjAQA/gFMRQZoGioqKuLj4x8+fHj+/Pnd
u3cLZtz69eunTp1qZ2enr68vJibWsNkqISHRrl27nj17jhkzZu7cuYKZvnLl
ysOHD9+6dSs2NhafH4J/o6KC4uPp4UP++5K7dzdAZb1yJbm48N/z1dbmvoJD
a/pNUZG6dCEHB5o79ysPOXbcnjvHP4bZkYwXfkFIysvLo6Oj/f39vby8fv31
V8FEnj179qhRo7p37962bVthjASMjIwGDhz4888/e3h4HDt2jG1DZGRkTk4O
110CAAAAAADQVGAqMgA0P8XplBhEYX/SreV0yolW25FTFzLXJNna62rKtaSu
P5DzKlp/hXwzKKCYwsspuYpKuJ2RUfNxNnIVf0JyXizF3qBHe+nyQjowhhbZ
0PCOZKJOYiLUQuzjbGQ5/oRkJUPqMpJG/ErzTtGO53QmhgJTKTafSji8RsNn
FBcXp6WlxcTEhIaGXr58eePGjePHjzc1NW3Y+6L/TU5Ork2bNkZGRhYWFkOH
DnV3dz958mR4eDjWa4IGVFxMaWkUE0OhofTo0b9tAQH8B1g//0w9e5K8PPfP
49CaYNPQoEGDaNEiOnr0Kw+z4GB6/ZpSUqiggDAfE4QkPz8/KCjowIEDs2fP
7tu3by8B3bp1MzY21tTUVFBQaPDol5eXt7a2dnV13b179927dx8JCAkJiY6O
Tk1NLSwsxPcRAP4BTEUGaBp4PB6L1+Tk5KioqKdPnwpm3N9//71169aJEyea
m5s3+FqIoqKiSkpKbdu27dChQ/fu3QUz/YcffnBzczt69OizZ8/Ky3EDGr5e
dTUbPVJyMkVF0dOnDVBZX7xI69fTuHH8l3w5r+DQmn5TVeWvh8yGKgcPfuUh
x45bdvSyYzgvDy/8grAUFxc/efLk8OHD8+fPt7OzE0xkKysrExMTLS0tRUVF
ERGRhh0JSEtLsyp+ypQpO3bsuHnzZnh4+Lt37zIzM8vKyrjuEgAAAAAAgKYC
U5EBoPkpSKXY2/RwD/nNov2DyM2KRhqSqSrJiNe6sskrU4+hNM2Ddtwh/zJ6
RhRDlEHUdO4cFb+n94/ptQ893Ux/zaaNo+in7tSlLYmJ1t4RVWrfj/rPJuf9
tOQe7XtOV99RZBYVYiWepi01NfX8+fNubm49e/Zs2Pui9VNXVx85cuSWLVvu
37/Pw1MBaKo+TfZZv54GD/76yT5ozbvp6vK//bpnDz17xvXxCvB5WVlZly9f
dnd3t7GxkZCQaLS4b9my5ZAhQzZs2HDnzp3S0lKuuwGgWcBUZIAm71PsLl++
vF+/fpzE7u3btxG70KSwtGGZw5KH5Q/nFRxa02+amvTjj/zFjR894vrYBfi8
goKCGzdurF69euDAgXJyco0W97KysgMGDFi1atX169fz8/O57gYAAAAAAICm
CFORAaCZ4PGXEaZSdl2j7CgKu0B/baDdP9FiKxrfgfq2Jf2WJCVGYpIkqUiy
6qTYjrQtyH46ue2jI4/ocTlFEyUT5X78b5qIsgzKDqOEy/TqAN1ZQTtdaIoN
ddWtOxVZRoXaWVPXqfTDFnL2o7X36fRLCnlP+bjoNW1ZWVl3797ds2ePq6tr
r9q6du1qZGTUpk0beXn5Br9rqqys3Ldv31mzZh04cCAoKEhwCanQ0NA3b968
f/++qKiI6+6B711ZGYWE8Fe7XbSIv/Jtr15CbF27kpERf4ldLL/875uoKH9y
Vtu21KEDde8u3B9uzBhas4b/5eLoaK6PV/ju8Xi8vLy8epZndHFxEcbyjHXI
yMioq6sbGBiwv/VpecZjx45heUaABoOpyABNXn5+/oMHDz59jMDGxqZLly56
enqqqqpSUlJCjWBWuffs2fPTxwgCAgJevHgRFxfHSn5EMHAuPZ2fXTt30rRp
wq3OWOvShfT0+MvqSklxX5k2pyYiQoqKpKXFX9raykq4P6KDA61YQWfOUGQk
18cufPdqamoKCgpSUlJev34dHBwsWGXfunVrx44dU6dOtbKykpaWFmrEs/9f
TU1NX1/fzMzM1tZ2/vz5hw4devz4cXFxMdc9BAAAAAAA0BRhKjIANAcfPk4g
LiTKJkqltCcU+CcdWkxLhtCY9tRPmzqpUhs5khAlCXlSaEuqnUirN3UeQ06r
aP1pOh9OURX8echZ/InMXF7Z6qjIpsJXlHmHkk5R8FbymkG//EBWhiReeyqy
lDKpdSMDJ+q6kvofpTnX6EAw3U+gHKzE07QVFBRERERcvnx5z549i2tzdXUd
NmyYhYVF69atG/wOqry8fKdOndj/P3v2bE9Pz+0CvLy8rly5EhoampaWxnX3
wPeuspJiYujWLTp8mFaupMWLhdhcXWnYMLKwoNatuX/I+K03CQnS0SFra/48
4blzhfvDbdxIp07RgweUksL18QrfvYqKivj4+IcPH547d2737t2C2bpu3bqp
U6fa2dnp6+uLiYk1eKwLatWqVefOne3t7adMmbJq1arDhw/fvn07Nja2shKf
ygBoCJiKDNDklZSUvHr16u+//96/f/+yZcsmTJjAItjExERRUVGoESwjI8P+
CovgGTNmbNq06fjx4yyCo6KisGQicC4vj8LD6a+/6PffhVudsebiQnZ2/Omy
iorcV6bNqYmK8t/27d6dRo2iWbOE+yOuX0/e3hQYSAkJXB+78N3j8XhJSUlP
njy5ePHi3r17BavsjRs3/vzzz4MGDTIyMpKUlBRqxLds2bJjx44DBw6cNGnS
8uXLvby8bty4ER0dXVbWdD6tCQAAAAAA0IRgKjIANAcfiEo+zkNOIoqmJH+6
upN+m05O1mSuTkbKpClPilIkJkLSKtSqA7WzpQ4/Ud/F9Mt++v063XpDKZWU
R1RMxK4T1VzvzX/w8qjsLRU9odyr9NqLTiymeSPI2oTExWpdosWVSL4LqY0g
7XnUfgc5naEtgXQzlrJKuN4BqFdZWVlqampERMS9e/cu1PbHH38sXLhwyJAh
BgYGDX4HVUpKSlNT09TUtF+/fqNHj/5RgKur67Zt265cuRITE8N198D3jsej
zEx6/ZoePqTLl+nCBSG2P/6ghQtp6FAyMOD+IeO33qSk+GthjRtHq1bRiRPC
/eFu3KDgYHr3jv94HYBbJSUlYWFhPj4+69at++mnnwSzdfjw4dbW1sbGxqqq
qqKiog0e64Latm07YMCA2bNn7969m6X5w4cPo6OjMzMzq6ubzvAW4FuGqcgA
TV5FRUVaWtrLly/v37/v5+e3devW6dOn9+nTR01NTagRLCEh0aZNm44dO/bt
23fkyJFubm4HDx4MDAzES77AudJSSk6mFy8oIEC41RlrW7fS9OnUpw+pqXFf
mTanJiZGHTvS6NHk7s7/dJRQf8S//6YnTyg2lnJyuD524bvHMj0yMvL8+fMb
N26cOHGiYJU9YsSI3r17d+jQQV1dXdjfHmL53q9fv19++WX79u2XLl0KCgqK
iopKT0+vqmo669kAAAAAAAA0IZiKDADNwYePSyKn8uchUwi9O0tn1tLCsdSr
AylJkZwESYvzVxIWaUFyrUmjB5k4UY9l5LCPlvnRsScUnERFPP4FjUdU8/E/
ayI+FFF1MvEiqSqIUnzpwlpa4kh9TOtORRZRIPEOJDmQZKaQ/CoacJBW3KBL
UZRexPUOQL2qq6vLy8sLCwuzs7PTagsODt6/f/+0adO6dOnS4HdQRUVFpaWl
FRQUWrVqpVGbhYWFq6vrwYMHQ0NDue4e+N59+EAVFVRcTLm5/E/KpqUJsQUH
0/79/O/VdunC/UPGb73JypKNDS1aRKdP05s3wv3hMjMpP58/LwzPf4BzLM0D
AgK2bt3q6Oior68vmK2tW7dWVlaWl5cX9mJNTPv27X/66acdO3bcv38/PT09
Nze3uLi4oqLiw4emM7wF+JZhKjJAk1dTU8Oq7KKiopycHFZZ37hxw8PDY9So
UW3bthVqBLMqW0pKilXZKioqbdq0GTBggLu7+7lz5+Lj47nuEvjeVVdTWRkb
rFJ2tnCrM9Zu3OB/uWbUKP4SvpxXps2piYtTz578rw4dO0YvXwr3R8zI4L/q
y4Y8+KwKcK6srCwoKGjXrl0TJkwwMTERrLJZ1LLAZVU2C18RERGhRryuru7Y
sWO3bNly+/ZtVmWzAQYbZrAqmw05uO4hAAAAAACApghTkQGgOfg0Ffk90Rui
ZxT/F13YSit+psE2pKtbq3XqQdaOZL+Exu2l2X60I4guR1FUBlU2zbXiSoky
iN7yL7s5N+nWPtoynxyHkKFB7f3qRLp2pPsT6S4gvU3043H6LYB/0css5nr7
4WulpKRcvnx57dq1Dg4Ourq6bdq0UVZWlpWVFfaH3Vu3bj1kyJCVK1devHgx
ISEhLS0tNze3tLQUqylC85aSwl94ee1acnComxpo/7R17Mj/LO/Onfwvuhbh
jRj49lVVVRUXF+fk5Lx//z7h8yIiIo4dOzZv3rzevXvLyMgINawFiYiIsD/X
smVLluDt2rUbNGiQu7v72bNn3759y3XPATRHmIoM8K2JjIz09vaeP39+nz59
tLW11dXVlZSUpKSkhB3QHTp0mDBhwo4dO+7du1dnzMBGFGxcUVJSwuPxuO4e
gAYWGUne3jR/Pn9hZM4r0+bUjIzIyYm/6DQbhuTmcv0zA/xrLAFZDubm5tZf
Zb9+/frUqVNubm79+/dXVFQUanCLi4vLycmpqKhoamrq1sb+OtsGtiVse7ju
OQAAAAAAgG8ApiIDQHPw4eOs3WyiZKIYSn9AQb7053ZyX0jOzrXatDk0dz25
e9H6v+j3B3Q+gh4lUmIe8ZrmW+zsqpX3cYr1Wyp8RqF/kc9e2rCcJrrU3q9p
5LyYnD3IeR85n6a1N+n0cwpJpvwyrrcfvlZWVtajR4+8vb1Xrlw5fvz4gQMH
mpmZaWlpCfuZqbKycvfu3V1cXNavX3/69Olbt249f/48OTm5rAwHEzRnWVn0
6BH/menKlXVTA+2ftqlTadMmOn+e/wng0lKuf1qAf62oqCg+Pj4kJOT69eun
P+/w4cPLli0bPXq0qalpI6x+/B/i4uJt2rRhf7R///5jx45dunTpoUOH7t27
l5qaynXPATRHmIoM8K2Ji4vz9/ffu3fv/PnzWUz36dPHxMREVVVV2AHdrl27
AQMGzJw5c+fOnXXGDGx7QkNDExMTS9glBaB5iYsjf3/au5c/G5nzyrQ5tYkT
+aMPNnYIDeUvcA3wrWMJyHKQpSHLxHqq7GPHjq1YsWLcuHHm5uaysrJCDW45
OTkdHR1LS0t7e3vn2hYtWnTgwIHbt28nYvQOAAAAAADwBTAVGQCagw9EFeyK
9vHClEb5byj6Md27Rj4n+DfABZvXUTp2kc7coYvP+JeFp0kUk03ZJVTdNKci
s4tsycfZyBlUFkfxz+jRTbroQ/v3194vL9p7kvb60d6btO8hXYikhwn0LodK
8Cm9b1ZhYWFMTMz9+/fPnj37+++/L1iwYMSIEZ07d5aXlxf2fVcDA4M+ffqM
HTt27ty5O3bs8PPzCw8PLygo4LpLAISoqIhiYuj+fTp7tm5qoP3T5uVFly7R
06f8CVb4ois0A1lZWcHBwb6+vps3b577ea6urg4ODlZWVm3bthUXFxdqWAuS
lJQ0NjYePHjwrFmztm3bdvr06YCAgKioqLy8PK57DqA5wlRkgG9NZmZmRETE
zZs3vb29N27cOH36dDs7Oz09PWEHtKqqqqmp6cCBA11cXOqMGTw9Pc+fPx8a
GpqLtU2h2cnMpIgIunmTjh/nvjJtTm3/fvLzo8ePKT6esFQANAMsAVkOsjRk
mVhPlT1jxoyRI0f26NFDR0dH2KtzqKioWFpafnq9d29tJ06cuH379suXL7Oz
s7nuOQAAAAAAgG8ApiIDQDNRTVRJVEZUTBW5lJNKSe/o9UsKC6vVwiMpMoai
EikmneJy6X0h5ZZRWRV9+MD19v+vaj5eZ8v5E5J5+ZSfTqnxFPOantfeqbBw
CntFYTEUlkBhqfQmi1IK+EsiV1Vzvf3wtSorK3Nzc5OTk6Ojo58+fXro0KG5
c+fa2Ni0bNlSqPddJSQklJWV27Zta2xsbGlpOXXq1F27dgUEBOBeKzRvlZX8
j5wmJ1N0dN3UQPunLTycYmPp/Xv+Yk3ViCH49iUlJV29enXTpk3jx4/v+nlm
ZmaGhoYaGhoKCgqioqJCDWtBMjIyPXr0cHV13bt37/3796OiohITE3NycsrL
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
ISHBsqkxo7COrl27zpo1y9vbOzo6uk5YBwQEbNq0aeTIkRoaGkLdBhERETEx
MUlJSWlp6TqJbGhoOGHChD179gQHB3P9YwI0PZiKDNCISktL7969u3nz5tGj
R2tqatbJdBZhLNMbYQFGAwMDZ2dnVk2zmjorK+vq1av/GWYI+08LYnvK9pft
Ndv3eiprS0vL/wwzuP4BAQCgmSgoKLh165aHh8fw4cPV1NS4SuR6mJqaTp8+
/dChQxEREXWq7LKyssrKSh6P9+HDB647EgAAAAAAAAAAAKA5ePPmzdmzZ1eu
XDl8+PBOnTrp6uqqq6vLyclxuGCFIBUVlf79+y9YsODo0aNhYWEvBERFRSUm
JmZlZZWWlnLdiwAA0CRUV1cXFRWlp6fHxcVFRkYKpsa9e/d+//33qVOnWlpa
iouLc5VrMjIyrVq1ateunYmJiVltzs7OW7ZsuXHjRlpaWp39Ytt//PhxNze3
gQMHdujQgf1zVVVV9l815paz4QH764sXLz5x4gTbnrdv375//76goKCqqoqT
3xqgacFUZAAhq6ioyMvLS0lJiYmJefr06cGDB2fPnt2nTx8FBYVGi0JWI7NK
mQUiq5pZ7cwqaFZHnzt3jm1SeXm54FYJ5rupqamenl7r1q3l5eU5fOlJX19/
9OjRa9eu9fPze1Eb237Wsax7WSdz/TsDAECTU1NTU1xcnJGRER8f//LlS8EE
efjw4f79+3/55ZeePXs2cn0qSFpaWkVFpW3btsbGxnWq7HHjxnl4eFy5ciUp
KYnrjgQAAAAAAAAAAABo5lJSUu7fv3/s2LHVq1dPnjx58ODBFhYWGhoa3K4M
+R8KCgpmZmajRo1yc3Pbt2/fHwJOnDhx8+bNiIiIjIwMrnsRAACahIqKiqSk
pJCQkCtXrhw+fFgwNTw9PWfOnGlvb29kZMThukytWrXq1KmTnZ2ds7PzzNo2
b9589uzZZ8+e5ebm1tmvuLi427dvHzx40N3dfcKECQMHDuzcubOamlpjbnnL
li3ZCOHHH39cunQp608/P7/Hjx+zDcMLQQB8mIoMIGQFBQUxMTGsdD137tzu
3bsXLFjg4ODAIrUxJz6xGplVyiwNWdU8ZcqUNWvWeHt7s01iNXVlZWV0dPTf
f/+9d+/eRYsWCeb7tGnThg4damlp2bZtWw5fhmJb3qtXLxcXF7bZf9TGupTt
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
ZdiwYebm5urq6sLOODaKYJUvKzNXrlwpmLPbtm1jlTKrl9++fctq5y/cqYqK
iri4uAcPHvj6+u7YsYONVUaPHt21a1dVVVVh78gXYl3KOpZ1L+vkekZZGzdu
PHnyZFBQUCKuUQAAzcJ/Ynfv3r31XP/d3NycnJxYMurr6zfyC796enr9+/ef
NGnS6tWr66myjxw5cv369YiIiOzsbK47FQAAAAAAAAAAAAD4qqqqcnJy4uPj
IyIiHjx4ECTAz89vw4YNjo6OjfA93C8kKSmpqqqqr69vZmbW9/Ps7OzmzZt3
8ODBhw8fFhQUcN3HAADwNVJSUm7cuLF9+/YpU6bUc823trZmOdWuXbuWLVuK
ioo2WiRJS0t369Zt8uTJ27Ztu379etDnhYWFvX37NjMzs6ys7Ou6ory8PCsr
6927d8+fP6/zn585c2bFihUjR440MDAQ9i4rKipqaWl16NChR48egj+Bra0t
i10vLy8Wu/n5+Q17GAA0XZiKDNAQ0tPT79y58/vvv7u6utaJeJazxsbGGhoa
jbAeo6mpqZOTk4eHB6uCBXOW1cisUk5ISGBVM6udv3CneDxeXl5eYmJiZGQk
C8ejR48uXrzY3t6+7f/H3p3Hxbi2cQCf9kWbNk0qLSoilS3JkoQWeyR72bIv
HeHYt2PNTpasOZYsHWtxEiHZQqlEaad9L61q3gvv5/105j2NpOkp/b4f/5lm
5rme+76u+5q553nU1Ph9ILVEIaXAUngpyDxWWSNGjFi5cuX58+fDw8P5OgwA
AKBhpKWl1VR2qzM3Nzc0NGzTpo28vLywsHCDlSd6LSMjo/Hjx2/atOnatWs8
uuyQkJDo6GhaRdT+h0IAAAAAAAAAAAAAwG9VVVWVlZWfP3+u+KfExERvb++F
Cxf26NGjwT5z/i4BAQFBQUEhISHhmklKSlpaWi5fvvz69eu4OAYAQBMVExPj
5eU1e/ZsExMTHjlf6CsqDVQgGrIetWjRon///itWrLhx40ZWVlZFzajCUp2t
+qrO0aipWEdFRZ04cWLGjBmdOnXi9yF/K8H/X4UlJCT69etHZffatWsou9CM
YCsyQH1ISEg4f/78ggULTE1N/7/Ef6vvDVDiqeddtGgR9b9JSUk11fEfOq7/
FW7y4sWLAwcOTJgwoW3btvw+kFr6FtXvdtbq6uoODg47d+58/PgxnwYAAAA0
pMTERCq7Cxcu/P+y2xi6bBERkd69ey9ZssTHxyclJYXfXTYAAAAAAAAAAAAA
NIyMjIyAgIDdu3dPmTKl+z8ZGRnp6Oi0atWqAa5PVQciIiKdO3eePHmyu7v7
7du3n9bs9evXcXFxdKR1vlIlAAD8qMLCwtTU1JiYmJcvX/JI0ZcuXVqzZs3I
kSN1dXWZKigCAgLS0tJsNpveA1WW6qWwT58+c+fOPXz4cHBwMB0RU8FMSkq6
efPmli1bxo8fz1WsDQ0NtbS0lJSUJCQk+BolYWFhExOTfy27z58/j4qK+vDh
Q15e3ufPn5mKEgBfYCsyQK2VlZVlZ2cnJiZGRkZylfsrV65s2LDBwcGhffv2
fK1WrK8/I6IeljpZ6me5iubUqVOp86X+l3rDej/86Ojoy5cvr1271t7enut1
O3To0KZNGwUFBTExMX4ffh0oKipaWlouWLDg6NGjPNZsz549e/PmDa1JcnJy
Kioq6j2AAADwXUVFRWlpae/fvw8NDeWRsa9evbpx48YxY8Y0QNnlQUpKSkVF
pW3btsbGxtXLYs+ePV1cXPbv33///n2qKUwHFQAAAAAAAAAAAADqR15eXmho
6F9//bVr164F/+Ts7GxtbW1kZKSsrMzgB9c1ERISatu2rZWV1bRp0zZu3Li7
Zl5eXv7+/hEREdnZ2UzHGwCguUhJSXnx4sWNGzc8PT15pOgVK1aMHz++Z8+e
qqqqTBUUQUHB1q1bd+3adciQITNmzKheCt3c3Dw8PHx9fd+8ecPg71kyMjKe
PXt24cKFrVu3chXriRMnUins0KGDvLw8X6NEZVdHR+dfy+7+/fsvX74cHBwc
Hx9fWlrKVJQA+AJbkQFqraioKCYm5sGDB97e3lzlfvXq1ZMmTerTp4+6ujpf
qxVp1aqVsbGxjY3NlClTuIomvZMrV65Q/0tdcL0f/sePH4OCgv7880+qklyv
O3bsWAsLC319fRkZGX4ffh3IyspS1z9s2LBvIarJ3r17L168SMcYGxuLH/kC
ADAiLS3t1atX1J8eO3aMR8b+X9nV0NBgsL6w2ezOnTvb2dlRC1m9LLq6ulJN
uX79enh4OIM/+AUAAAAAAAAAAACA+lVcXJycnPzq1as7d+54/9P+/fvnz59v
bW2tra3N4AfXNREUFFRSUmrfvn2vXr2GDRvmUDNXV9dDhw7dvXv3w4cPTMcb
AKC5ePfu3fXr13fs2OHi4sIjRdva2nbv3l1HR0dOTo6pgiIsLGxgYDB8+HA3
NzdPT8/qpfDSpUuBgYHh4eGpqanl5eVMBbOwsDA+Pj4kJOT27dtcxfpbhPv1
69e6dWu+RolH2Z04ceKGDRvozdBy4tOnT0xFCYAvsBUZoNZycnKePHni5eW1
cuVKrnI/ePDgHj166Orq8vuHM4S6V+phqZOlfparaFLPGxoaSv0vP3bS5ubm
vn///unTpzdv3uR63U2bNjk7O5ubm1Ml5ffh14GEhISampqRkVH//v15rNnG
jRu3Zs2aM2fOPH/+PD8/v94DCAAA3xUbG+vn57dnz545c+bwyNgNWXZ50NPT
o3eyaNGigwcPVi+LFy5cuHv3blhY2IcPH/BTVgAAAAAAAAAAAIBfxufPn4uL
i3Nzc9PT05P+KTg4eN++fU5OTp06dWLwg+uaCAgIiImJycjIKCoqtm7dWr1m
lpaWbm5u58+fj4mJYTreAADNRUhIyOHDh2fMmNGlSxceKZrNZsvLy0tJSYmI
iDBVUOile/ToMWfOnGPHjoWGhlYvhcnJyRkZGXl5eSUlJZWVlUwFs6Kioqio
KCcnJzU1latYBwQEbNu2bcyYMbq6unyNUvWyq6qqWv0k6unpjR071t3d/d69
e9ibBL8abEUGqLW0tLSbN2+uX79++PDh/1/uFRQUqNyLiorytVoR6l6dnZ33
79//+PFjrqJJPS91vtT/Uhdc74dfXl5eWFiYnZ2dkpLC9bo3btxYt27dsGHD
1NTU+H34dSAkJCQhISEnJ6esrMxjzaalpTVq1KjNmzf//fffWVlZ9R5AAAD4
rrCwsOPHj8+dO9fMzIx3l91gZZeHzp07T58+/dChQ8+fP+fqsqkiU5dNFZnB
LhsAAAAAAAAAAAAAGkxycvKVK1dWrVpla2vL4/Pt1q1bKykpycrKiouLCwoK
MvgRd0309PQcHR23b99+9+7dpJp9/PgxMzOzoKCgtLS0qqqK6fADADRGlZWV
xcXFeXl56enpVCZ4JNW//vpr5cqVNjY2rVq1YroO/JeYmJi0tLSCggLXTlpt
be3Ro0d/21qTnZ3NdIx/THR09Llz5xYvXtyvXz+uAk2Rb9myZYsWLYSFhfka
WElJyV69ei1YsMDLyysyMrL6MPjw4UNGRkZ+fn5JSQlqKzRJ2IoM8E88VgLP
nz8/dOjQt18h8bXusL7+jEhKSkpeXp7NZnOVPzs7u9WrV1MnS2+P6Wj917ed
Y3PmzOnRo0fj3zlWE4q5qanp7Nmz//+nW1xSU1NpQVVUVMTgHSUAAJoQqq3U
LlFtpdaJd5d948aN9evXN6rftlDNospF9ev/KzK9T3q3N2/eTEtLYzrGAAAA
AAAAAAAAAMCkjIyMoKCg48ePL1u2jMdd/0aOHNm3b9+OHTuqqKgweE1LHtTU
1CwtLWfOnLlz507vml25cuXhw4dRUVF04LgoBwDAvyotLf3w4UNYWNjdu3cv
XLjAI6lu2LBh4sSJpqamLVu2ZLoO/JeCgoK+vn7Pnj2HDBnCdcPxtWvXnj17
NiQkpMld1Dc5OTkgIODgwYOLFi3iKtADBw7s0qWLpqamlJQUXwMrJiZmaGho
b2//+++/nzhxovow8PHxefDgQWRkZFpaGj8uQQnAd9iKDPBPtBL4+PHjt5XA
xYsXq+f8Q4cOubq6Dh48WE9Pj691h8jJyeno6NAyw9bWlqv8fStG1MlSW8d0
tP4rNjbWz89vz549c+bM4dFZU+h69Oihq6srLy/P7wDWgZCQUPv27YcNG+bm
5ubp6cljEUgH++zZs7i4uCa3rAIAYER5eXlqamp4eHhgYOClS5d4JNjNmzc7
Ozubm5srKSkxXRb+i/p9qlxUv+zs7Ljq2sqVK728vJ48eZKTk8N0jAEAAAAA
AAAAAACASfn5+W/fvr13797Zs2d312zr1q2zZs2ysbFp3769uLg40x+B/wt5
efkOHTpYWVlNnDhxQc1WrFhx9OjRO3fuvH//HtulAAD+VWFhYXh4+PXr1/fu
3evq6sojqTo4OPTu3btt27YtWrRgug78l6amZr9+/ZydndetW1e9kNGxXLx4
MSgoKDY2tri4mOkY/5js7OyIiAh/f38vLy+uAu3m5jZ69Ohu3bopKiryNbAi
IiIaGhqmpqbDhw+nJUH1YbBs2bLDhw/fvn373bt3ZWVlTEcL4MdhKzLAP/FY
CUybNs3Ozq5z585sNpuvdYeoqqqam5uPHz+emjiu8kfdK/Ww1Mk2nn2waWlp
r1698vX1PXbsGI/OevXq1ZMmTerTp4+6ujq/A1gHgoKCrVu37tq165AhQ2bM
mMFjEbh58+Zz5849fvw4NTWV6dgDADQB1IS+efOGyoSHhwc1cTwS7NixYy0s
LPT19WVkZJguC/9FNYsaf6pfVMW46tr58+fv378fHR1NiwemYwwAAAAAAAAA
AAAATCotLc3KykpISIiIiHhas8DAwH379s2YMcPMzIzf112sGwkJCSUlJS0t
LUNDw+41GzRo0OLFi0+dOvXy5cuKigqmww8A0Bjl5OTcv39///79Li4uPXv2
5JFUDQwMNDQ05OXlG88F86kKjB8/fsuWLTdv3qxeyJ49e/bmzZukpKTc3Nwm
l/+Li4szMjLi4uJev37NVaD//PPPpUuX2tra8vvuvYKCgjIyMqqqqvr6+l26
dKk+DCwtLRcuXHjs2DEKcklJCdPRAvhx2IoM8E9UK2taCRgbG7dt21ZFRaUB
ukJdXd2RI0euWbPm0qVLXOWPulfqYamTpX6W6Wj9V1FRUVpa2vv370NDQ3l0
1levXt2wYYODg0P79u35HcA6EBAQkJaWZrPZFHwTExMei8AxY8Zs3LiRDofW
J0zHHgCgCSgsLAwODj58+PDcuXP79OnDI8F26NChTZs2CgoKYmJiTJeF/6Ka
RZWL6teVK1e46lpkZGRiYmJ2djZ+lAoAAAAAAAAAAAAAtVFUVOTv779hwwY7
Ozt5eXnhmgkJCQkKCgp8xfQn5f9CSUlp6NChmzZtunfvXklJSUXNPn/+XFlZ
WVVVxXTsAQDqTdVXlNwoxfFIgCkpKT4+PkuWLOndu3fj2WNcHZUYwa+o6HCV
oV69erm5uV2+fJmOgul4N4TQ0NBDhw45OTnp6+sLffWtCjfk6ZCTk7O2tl63
bt3t27fz8/P/V0BRQ6HJwFZkgH8uElJTU5laCXwr8d8qWufOnWfPnn369OmY
mBimw1NvEhISzp8/v2DBAlNTU95tNSM1vfbat2/v7Ox85MiR169f826r0VkD
wK+tll12VlbWjRs3VqxY0b9//8ZzU6Hqvn2W+69dNtUsqlznzp1LwEIXAAAA
AAAAAAAAAH5OcXHx8+fPT5w4sXjxYmtr694169y5c9u2bZWVlSUkJJj+EP1f
yMnJ9erVa+bMmfv27bt3796DmoWGhsbFxWVmZuKyHgDwy/j06VNqamp0dHRI
SAiPBHjt2rVNmzaNHz/eyMhIWFiY6cz9L6SlpVVVVdu1a9e9e3euMjRr1qz9
+/cHBgZSAmc63g0hJibmypUrGzdudHR07NGjh4GBgbq6uqysbEPuXJKSkqKX
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
c/bsWX9//9DQ0I8fP+KKTwDQYCorK9PS0sLDw+/evevt7c0jTW3evHnq1Kl9
+vRRVVVlOst+X8uWLfX09MzNzYcPH85VUNasWXP69OnHjx9nZWUxHf5GpKCg
4MWLFzQG/vjjDycnp+oRGzVqVN++fQ0MDJSUlPh94jQ0NCwtLWfMmLF9+3au
EXjz5s1nz57Fx8cXFRUxHS2AarAVGZqNvLy8mJiY4ODgq1evcqXojRs3Uu2g
stuqVSu+lglhYWE2m92pU6f+/fs7OjpWr1YuLi7u7u5XrlyJiIho5ntQ6fAp
CBQKCgiFpXqUKGgUOgoghbHx/8hXWlraxMTEwcFh+fLlx48fr2Vnffny5QcP
HkRFRWGlBwAMysjIiIyMDAwMvHjxIo+URV0PJWrqgKgPYjrpfp+srGzbtm3N
zMyGDh3K1WWvWLHixIkTDx8+xO3hAAAAAAAAAAAAAKAxyMrKioiICAgIOHPm
zMF/WrZsmYODQ9euXeXl5Zn+6P37VFRUjIyMBg4cOGnSpJm1s2DBgj179ly7
do0i0Myv4gUADenz58/R0dG3bt3y8PBYvHgxjzQ1ZswYCwuLdu3atWzZkuks
+31qamp9+vRxcnJav349V0G5dOlSUFBQTExMQUEB0+FvRKj0xMfHP3ny5MqV
K4cPH64esc2bN0+fPt3KykpbW5vfJ05BQaFDhw6WlpZjx47lGoH0Nry9vZ8/
f56dnc10tACqwVZkaDZSUlKogJ4+fXrdunVcKXr06NFUdvX09GRlZflaJkRF
RWkpYmtrO3fu3J07d1avVseOHbt582ZISEhycnIzv34+HT4FgUJBAaGwVI8S
BY1CRwGkMFIw+Xqyfp64uLimpqapqemwYcNmzJhRy856xYoVR48evXv3bgIy
KgAwJzY21t/f/8iRI8uWLeORsqjrod6HOiDqg5hOut+noqLSs2fPCRMmrF69
mqvLvnDhwv3799+9e5eXl8d07AEAAAAAAAAAAAAAvuyDysrKSkxMjIqKCv2n
M2fOLFmyxNrams1mM/3R+/e1aNFCSUlJU1PTwMDAqHZ69Ojh4uJy4MCBoKCg
wsJCpk8FADQX5eXlISEhx44dmz9/ft++fXmkKX19fTU1NXl5eXFxcaaz7PfR
ux09evTGjRuvX7/OVVCio6M/fPiQm5tbVlbGdPgbkYqKivz8/JSUlPfv34eF
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
HZQhLSwslixZcunSpaSkJB7loLCwsKSkpLy8HFeM/3lVVVUUSYpnUVERV5zD
w8OPHTvm4uJiYmLC77MvJCQkKioqISHBVSVlZWUHDBiwYsWKq1evpqamMh0t
aH6wFRl+LbGxsefOnVu0aJG5uTnXgkFKSoqSMKViQUFBviZ8ERERenV6D/RO
6P1wlR4qRqWlpdT7UHliOlpNDwWNQkcB/P+aziUwMHDbtm2jRo1SV1fn6+mu
dzQ+aQjR4paWuLVsq0m3bt3mzp3r5eX19u1bps8SADReWVlZvr6+a9eutbW1
VVRU/G6XTemo8XfZvMsuV5ddXFxcVlaGLhsAAAAAAAAAAAAAfnkfPny4efPm
H3/84eDg0KFm7du319TUVFZWlpKSEhISYvpT/7qTl5e3tLRctGjRqVOnQkND
I2oWFxeXmpqan5+PHcsATUJpaWlOTs7Hjx9jYmJ4TG0e7t69u3PnzsmTJxsZ
GTGdq75PREREVlaWzWZra2vzyN5du3adNm3avn37Hj58WFBQwPRZgi8Xz6Sy
u2nTpv8vu7q6uq1bt6Y6JS4uzu/xY2xsTEN9165d9+7de/fuXXJycnZ2dnFx
MdPhgeYBW5GhiauqqioqKsrMzExMTIyKivL19aWsPmbMGH19fX5nb0lJSQUF
BXV1dXqt6hWEli7fsjotZmg5xHSEmilaTP75559ubm4DBgzgsTbT09NTU1Oj
ci8hIcHvAcNXtAQdOXLk+vXrr169ymOBTXOEZgrNF5o12AwP0OSUlZXl5uam
pKS8f/++bl029aHUjVJPSp0p9bBMp67vEBYWlpGRUVFR0dLS4pHJv5XdnTt3
UtnFXWYAAAAAAAAAAAAAAL7Jysp6+vTp2bNnN27cOL1mTk5Otra2Xbp0UVNT
ExUVZfrLgbqTlpY2NjYeOXKkm5vboUOHjtTA09Pz6tWrT548iYuL+/TpE9Nn
CQC+Lycn5+3bt/fv37948WJNU5u3bdu2zZw5c8CAAdra2kznqu+TkpLS0dHp
2bPn8OHDeWTvOXPm7Ny5kxJaeHg4Npo2Bt/K7rlz5/6/7Do4OFhYWLRv315e
Xp7f44cGz8CBA2nAb9++nd5MQEBAREREZmYm0+GB5gFbkaGJq6ysTElJCQ0N
vX379unTpymfT5kypW/fvtQo8Tt7t2rVytDQ0MrKaty4cdUrCOVzWsZcvnyZ
3hV+ecSUhIQEqqe0pFy2bBmPtZmjo6OlpWWHDh2UlJT4PWD4is1m9+rVa9Kk
SevWreOxwKY5QjOFRibNGlwUFKDJyc/Pj46ODgoKohJTty6bulHqSW1sbPT0
9Br/lQ0kJSW1tLRMTU2HDh06bdq0mjI5yi4AAAAAAAAAAAAAwP8rLCyMjY19
/PjxtWvXjtfs4MGDixcvHj58uKGhYZO+fJO4uLiGhkbXrl1tbW0nT57sXLM/
/vjj/PnzISEhubm5TJ8lAPi+jx8/3r9/n/LV8uXLeUxtHsaMGdOvX78OHToo
Kysznau+T1FR0dTUdPz48atXr+aRvb28vG7duvXy5cvk5OSysjKmzxLwKrub
N2+eNm2ahYVFA9zYnQZ5x44dacDTsP/22xx/f//4+HimwwPNA7YiQxP3+fPn
t2/f3rx5c8+ePfPnz7e3t+/du3e7du0a5ockgwYNmj179s6dO6tXkJMnT/r6
+lLnkpiYWFJSwnSEmqnMzMzIyMjAwMALFy7wWJtt377dxcXFyspKU1OT3wOG
r+Tk5PT09MzNzUeMGMFjgU1zhGYKzReaNTR3mD5LAPBj0tPTHz16RE0ldZ11
67LHjh3bv3//Tp06qaioCAoKMp26voMyW5cuXahFWr58OY9M/q3sPn/+HGUX
AAAAAAAAAAAAAOB/ysvL8/Pz09LS4uPj39bs5cuXx48fnzdvXu/evaWlpZn+
cqDuhISEpKSklJSUNDQ09GvWrl07R0fHrVu33r59OyMjg+mzBADfFxMTc/Hi
xRUrVtja2vKY3Tzo6Oioqqo2lftlt27d2s7ObuXKlZcuXeKRvd+9e5eUlPTt
pti4El1j8L+ym5CQwHWybt26tWXLFqo+NBr5PX5okNNQp1HUtm1bS0vL3377
7fTp0+Hh4UyHB5oHbEWGJq6iouLZs2dHjhyZNWuWmZmZtrY2m82Wk5MTExPj
d/Y2NjZ2dnbes2fPgwcPuIpIYmIitS2FhYXY7cmUkpKSnJycjx8/vn//nsfa
LCAgYMeOHRMmTOjYsSO/BwxfiYqKysrKqqioaGlp8Vhg0xyhmULzhWYNrYKY
PksA8GOoZ7ly5cratWuHDRtWty6b2g1qOhQUFCQlJQUEBJhOXd+hrKw8cODA
JUuWnDt3LioqikcyR9kFAAAAAAAAAAAAAKibT58+3bt3b9u2baNHj9bU1JSv
maysbIsWLcTExBr/jRd5EBAQ6N69+5w5c06ePPnmzZvsOsnLyysqKiotLcUX
E0yprOSUldHo5eTnc7Kza/yXk8MpKOAUF3PKyzlVVUy/afh63/OysjJKO/n5
+bWfccHBwXv27Bk/fryenh7TKeSnCAsLi4uLS0lJycnJ8Ui2RkZG06dPP3Lk
yKtXr5g+Y1A/YmNjz58/7+rq2rt375YtW0pLS0tISIiIiPD7K3t1dXV7e/st
W7YEBASgkEFDwFZkaCIqKipKSkoKCwtzc3Or58a0tLTr16+vXr3axsZGQUGB
rylaUFBQVFRUUlJSRkaGqv+gQYNWrlx57dq11NRUpsMDdZSUlHT58uVly5ZZ
WlryWOk15EqAr2iOWFtb03yhWUNzp26dNTUF1BqUl5dXoVtjSEUFp6SEU1jI
yc3l1VnT/9Jj6JH0eGgMaipktRcSEuLh4eHs7NzUfz0hJCQkJibWokULWVlZ
HrnXwMBg8uTJ+/fvf/r0KdNnDwAAAAAAAAAAAADg11RSUvLq1atz586tXr3a
wcHBrma9e/fu2LFj69atW7RowfRXDXUnICDQvn37ESNG/P77715eXjfqJDAw
MCwsLCkpqbCwkOkT2EwVF3M+fuRERHAePuTcuFHjPz8/zpMnnHfvOBkZ+M60
USguLv748WNERMTDhw9rP+M8PDzmz58/YMAAdXV1plPIT5GTk9PU1DQxMbG0
tOSRbKdMmbJt27Zr167FxMQwfcagftCwDwgI2L9//9y5c62trU1NTfX09JSU
lERERPg65JSVlfv27evi4rJr1y6uaXX37l2q/gkJCfn5+UyHB34h2IoMTURO
Tk5sbGxISIi/v3/13HjlypUtW7ZMnjyZErWsrCxfU7S4uDibzTYwMDA3N6fq
v3jx4qNHjwYFBWVnZzMdHqij9PT0+/fvHzp0aOHChTxWet9WAvr6+lSm+b0S
4CuaI3QgNF82b95Mc6cObfXNmzeDg4OjoqLS0tLKysqYPoHNVF4eJz6e8/Il
JyCAV2dN/0uPoUfS46ExyMvLi4+Pf/nyJXUZdZh95MiRI66urra2tlpaWkyn
k58iIyPTpk0bY2Pjfv368ci9kyZN2rRpk4+Pz5s3b5g+ewAAAAAAAAAAAAAA
v6by8vK4uLiHDx+eO3fO3d39j5rNnTt36NChxsbG/L5EGL+pqamZmpra29vP
nz9/eZ3s3r3bx8cnJCQkIyOD6RPYTOXkcMLCONevcw4c4CxfXuO/tWs5x49z
7tz5shu5pITpNw1fd/6EhYVdv379wIEDtZ9xM2bMsLOzMzIyUlRUZDp//JTW
rVubmZmNGTPGzc2NR7Ldv3//X3/99fz585SUFKbPGNSP7Ozs169f+/n5eXp6
rlmzxtnZ2crKSk9PT1xcnK9DTlZWtkOHDgMHDqRX5JpWO3bsuHjx4tOnT3H5
TahP2IoMTURiYiK1P2fOnNmyZUv13Lhs2bIJEyb069dPV1dXUlKSrylaRkaG
UrSNjY2LiwtV/5MnT965cycqKgo/dWy68vLyIiMjb9++ffz4cR4rPVoJTJky
pWFWAnxFc4RmCs0XmjU0d+rQVq9atYqWRrdu3Xrz5k0RVRBgwocPnOBgzvnz
nO3beXXW27Z9eQw9kh4PjcGHDx+Cg4PPnz+/ffv2Osw+MmvWrCFDhnTu3LlV
q1ZMp5OfoqKi0r1791GjRrm6uvLIvXv27Ll8+fKTJ0+Sk5OZPnsAAAAAAAAA
AAAAAL+mz58/5+TkxMfHh4WFPXjw4G7NPD09Fy5cOGDAgNatWzP9VcNPkZWV
VVdX79ixY8+ePfvViZOT0/bt2319fROwSYYhqalfrsu0dy/HxYXTr1+N/2xs
OIsXf9mN/PQpB19uNwapqakBAQF79+51cXGp/Yzr3r27vr4+m83m96YgfqOj
GDly5KpVq86dO8cj2QYHB0dGRiYnJxcUFDB9xqB+FBcX0+B/9+7ds2fPqHa4
u7s7OzvTwOb3XQbExcWVlZV1dXW7du3KNa0mTJiwefPma9euvX//nunwwC8E
W5GhiYiIiPD29l6zZs2oUaOq58a+ffuamJhoa2srKiry+3K1CgoKffr0mTVr
1v79+6n6v3jxIiYmJiMjo7S0lOnwQB2VlJSkp6dHR0eHhITwWOn5+fn9byUg
JSXF12HGVzRHaKbQfKFZQ3OnDm21lZXVggULjhw58ujRo9zcXKZPYDP19i3H
x4ezYQPH0ZFXZ03/S4+5fPnL46ExePv2rY+Pz4YNGxwdHesw+4ipqWn79u1V
VVWbdCIiOjo6Q4YMWbZs2enTp3nkXsoz4eHhSUlJebi0NwAAAAAAAAAAAAAA
31RWVlZUVJSXl5fy9OzZs717944bN05HR4fprxp+iqCgoJCQkIiIiFhdGRsb
z5w58+TJk1FRUUyfvWYqIeHLRZkWLeKYmXHExGr8Jy/PsbXlrFvHuX0bd5Jt
FBISEs6fP79o0SIzM7PazzhRUVFhYWGatgICAkznj5/SpUuXOXPmeHl5RUdH
80i2ZWVllJA/f/5cVVXF9BmD+kGnkk4olVo6udnZ2b6+vqtXrx44cKCsrCxf
hxxNGZo4NH1oEnFNqw4dOkydOvXIkSOvX79mOjzwC8FWZGgiHj9+vHv3bkdH
Ry0tLa70SD0CpU3qF/i96mCz2SNGjNi6dWtgYOC36k9lgvoyVP+mq3q557HS
y8nJoZXAmjVrBg0axO+VAF/RHKGZQvOlzp21lJSUlZXVihUrrl+/npmZyfQJ
bKZevPhyp6GJEzl6erw6a13dL4+hR4aEMP2O4asXL14cOHBg4sSJenp6dZuA
1CDQ5P0FumxDQ8Pp06cfPXo0IiKiNl02lVqmzx4AAAAAAAAAAAAAQHP37t27
ixcvrlq1atiwYZ1rZmhoqK2trayszO+LPTKIDnD48OGrV6++dOnSi/rw9u3b
5OTk3Nzc8vJyps9z41VUxElL48TGcl6/5ly/zvnjD86YMZz27XntZpKQ4Jia
cqZP5+zbx7l/nxMZ+WVbU1YWp6SE6YNpmoqLizMyMuLj4yMiIuo21K9fv/7H
H3+MGTOmffv2TM/jeiMkJCQjI6Oqqqqrq2tsbMwjPU6YMGHbtm23bt1KSUlh
+mQCY2gePXny5MiRI3Pnzu3bt2/1EWJkZNS2bVs2my0tLS0oKMjXcauurm5n
Z/f777+fO3eOa55GRkYmJCRkZWWVIFfCj8JWZGhMPn36lJ6eHhcXFx4ezpXo
Tpw4sWjRov79+yspKfE12QoLC8vKyrZu3VpPT8/ExKR6zh80aJCbm9vp06fD
wsKYDhU0KCqvT58+9fT0nDdvHtdKgAstmDU0NOTl5cXExPg6UJlCE4QO08nJ
aefOnXfu3Klbf8FDVFRUUlJSTk5OWVkZ06e9Eamo+PIr3Q8fOO/ecV6+5Jw+
zXFz4wwaxGGzeRVn+l96DD2SHk9/RX9Lz0DPQ88GP6qysrKgoIBawpiYmNDQ
0LoNbyofVESolFDvwPRU5gvqhqgnoqOj/oi6JB6p0tHRcdOmTTdu3EhMTGT6
3AIAAAAAAAAAAAAAQK18+PDhwYMHp06dWrt27dyaOTk5WVtbGxsbq6ioMP3d
Bb/QofXs2XP8+PErV67c99P2799/6dKloKCg9+/fFxUVMX2eG6/U1C9fevr6
co4f/3KhYycnTt++HA0NXl+Yiopy9PU51tac2bM527dzzpzhBARw3rzh5OQw
fTBNU2ZmZnh4uL+/v5eXV91G+7p16yhF9O3bV0NDg+l5XG/ExMTatGljamo6
bNgwFxcXHulx27ZtFy9eDAkJyc7OZvpkAmPKysrevn3r5+fn4eHh5uZWfYRM
nz59yJAh3bp1U1NTExYW5uu4VVJS6t69+5gxY5YtW8Y1T8+cORMQEBAZGZmD
XAk/CluRoTFJT08PCwu7ffv2yZMnuRKdq6vriBEjqGHh9zVpJSQktLS0zMzM
6OVmzZpVPeevWLHi6NGjlG/j4uKYDhU0KB4rAS6Ojo4WFhbt2rVr0hdP5kFI
SKht27YDBgyYMWPG5s2b69Zf8ODt7X3//v3o6OiCggKmT3sjUlzMoawTHMzx
8eF4eHzZXTxqFKdLly93FOJRnOl/6TH0SHr8gQNf/paegZ6Hng1+VEVFRXJy
8rNnz65du3bkyJG6DW/KHqNGjerSpYu8vDzTU5kvqBuinog6I+qPqEvikSop
e5w/f/7p06cZGRlMn1sAAAAAAAAAAAAAAKiVnJyc6Ojo4ODga9eunanZ/v37
FyxYYGtrq6ury/R3F/wiKyuro6NjampqZ2c3rj6sWbPmzz//fPbsWW5uLtPn
ufF6945z4wZn164v+4qHDeP07PnlHrK8vzAVFuaoqHA6duRYWPz3a9MjRzj3
7n25ghPUQUJCgr+/v4eHx6JFi+o21IcNG9azZ089Pb1f6QtTSUlJY2Pj0aNH
L1++/MSJEzzS461bt0JCQiiM+NFBc1ZRUZGamhoeHn7v3r2LFy9WHyGenp5L
liwZMWJEx44d+X39Q2lpaS0trW7dutnY2HDNUzc3tyNHjtDb+4BcCT8KW5Gh
MYmNjaXKu2/fvvnz53MluoEDB5qYmKirq0tISPA72Xbp0sXR0XHVqlVeXl7V
c76Pj8/Dhw+joqIyMzOZDhU0KB4rAS6bN2+eMmVK7969f9Uf+QoKCiorKxsY
GPTp02fkyJF16y94WLFixcmTJ4ODgzHLqiso4Lx48aXMUrmeOPHL73a7dOG0
acNp0YJXcab/pcfQIwcN+vJX9Lf0DCEhnPx8po+nCSotLaUMQFVg69at06ZN
q9vwtra2pvrSpk2bX/V+ZNQNUU9EnRH1R9Ql8UiVvr6+z549i4uLw48OAAAA
AAAAAAAAAACairKysoKCgoyMjOTk5PiaPX78+MCBA1OnTjUxMWH6uwt+ERER
kZaWVlRUbN26teZP09LSsre3/+OPP/z8/NLT05k+z41UVdWXLzo9PTmzZnFM
TTlqahwlJY6MDEdMjNcXpgICHAkJjpwcp1WrL9dPHjCAs3Qpx9ubExPD9PE0
TW/evPnzzz9dXV0tLCzqNtrV1NSUlJRkZGR+pdtM0+FQQCgsFBwKEY/0+PHj
x+zs7KKiogrcybgZq6qqKi4uzs3NTUtLS0xMrD5CwsLCTpw4MW/ePHNzc37v
jqNCJiUlpaCgoKqqyjVPBwwYsHTpUm9v7xjkSvhR2IoMjcnr169Pnjw5f/78
Xr16cSU6NpstLy/fokULISEhviZbehUrK6slS5acP38+Ojq6es5PSkqilX9e
Xl5paSnToYIGxWMlwMXX13fjxo0jR46kQcvXgcoUAQEBcXFxWVlZZWVlDQ2N
uvUXPAwdOnTt2rXXrl3Dr6uqy87+Uqu3buWMGcPR1eWoqnIUFL7sNBYW/s6P
fOkx8vJfHk9/RX9Lz0DPg5u91AFlgKCgoL179zo5OXXq1Kluw5vW8LSSp0LG
73upMIW6IeqJqDOi/oi6JN5ddlZWVmFhYXl5OdPnFgAAAAAAAAAAAAAA6lNq
aur169fXrl07ePBgdq0pKSnJyclJSkqKiIgw/Y1HQxMQEOjatevMmTM9PT1f
vXqVUt8yMzPz8vKKi4ub9O7HqirOo0ccd3eOvT2Hza7j5iYDA87UqZxjxzhv
3jB9PP+msrKytLS0oKAgKyuL5lG9j4Sf5+/vv2XLllGjRmn+otshuAgLC0tI
SMjKylKC4pG+2rVrN378+F27dj148KAYtyiGn5Cfnx8QELB161YHBwdtbe3q
w6xVq1YtW7aUkpISFRXl98jX09MbO3bsjh077t+/z5UEfo2CAnyErcjQ4MrL
yz99+pSbm5uens6Vsvz8/DZs2DB8+HA1NTW+pk1BQUExMTFpaWl5eXkVFZXq
2btjx45OTk779u17/PgxtkjBj4qMjDx16tT8+fN79uxZ+85aUVFRRkZGXFyc
3zvtGz8jI6MpU6Z4eHg8e/as3jujjIwMWhRR/mlyi6KMDM7Vq5xlyzh9+3JE
ROpSqOmv+vT58iNfeh56tkaITgqtV+kE0Wmq91P/82JjY729vZcsWWJpaUmz
lemJ0tAoNVGXTQdOyYpHKqNuiHoi6oyoP8rH1bcBAAAAAAAAAAAAAJql7Ozs
4ODgkydP/v777/a1NmjQoK5du2ppacnKyjL9xQgD9PX1hw4d6ubm5unpeam+
3blz5+XLl4mJiYWFhUyPjrprDluRy8vLU1NTIyMjHzx4cOXKlXofCT/P3d19
xowZffv2/VVvEs1FSkpKQ0PDxMTEysqKR/qaOHHixo0bL168+Pr1a1zYEH5G
UVHRixcvzp07t3bt2rFjx1YfZoMHDzYzM6NioaioKCgoyNeRr6am1r9//9mz
Z+/evZsrCfwaBQX4CFuRocHl5eXFxsY+f/781q1bXClr69atU6dO7dWrl5KS
El/TpoiICC2NDAwMevfuPWzYsOrZ29nZefPmzT4+PrTAa3L7FYFx8fHxt2/f
3rt375w5c2rfWVtYWHTq1Kl169bi4uJ8HfmNn46Ojq2t7cKFCw8ePFjvndHf
f/8dEhJC56jJbZJsDluRaaVK61VatdLatd5P/c87e/bsmjVrHB0dO3fu3KJF
C6YnSkOTlJRUV1c3MjKytLTkkcqoG6KeiDoj6o+oS2J6TAEAAAAAAAAAAAAA
AAMKCwvfvXt37969s2fPutfasmXLHB0dzczM2Gw201+MMEBVVbVr165Dhw51
cXH5rb7t2LHj0qVLISEhmZmZTI+OumsOW5GLi4ujoqL8/PwOHTpEM6LeR8LP
mzRpkpWVlYGBgZycHNOTpiEoKirSxLS3t6dj55G+9u3bd/ny5cePHycmJmKX
EfyM0tLSuLi4oKCgCxcu7Nmzp/owW7t2rbOzs6Wlpba2Nr8vcqigoGBoaDhw
4EAnJyeuJPBrFBTgI2xFhgb38ePH4OBg6js2b97MlbLGjx9PabNdu3b8vuak
hIQEvcqgQYNoJb9p06bq2fvAgQN//fXX06dPk5OTKysrmY4WNDEZGRmhoaG+
vr7Hjh2rfWc9b968IUOGdOrUqRlebZVLq1atTExM7Ozspk+fXu+d0bZt27y9
vWl2p6WlMT1Sfkxz2IpMK1Var9Kqldau9X7qf978+fNHjx5tbm6upaUlJibG
9ERpaC1btjQ2Nh4+fPiCBQt4pDLqhqgnos6I+iP84BcAAAAAAAAAAAAAoHkq
KyvLysqKj49//fr1o1rz9vZeuXLl8OHD27Zty/QXIwyQlpZWVVXV19fv2rVr
z/o2adKk7du3+/n5JScnMz066q45bEUuKCgIDg4+cuTIvHnz+vXrV+8j4ecZ
GRlpa2srKSk1k2usqaur29jYuLm5eXl58UhfT58+ffPmDc2vvLw87DKCn1FR
UZGTk5OUlBQZGfnkyZPqw+zmzZtbt26dMGGCsbGxsLAwX0e+hISEsrKyjo4O
vRZXEqCCsm3btqZeUICPsBUZGlxMTIyPj8/69esdHBy4UlanTp20tLQUFRX5
vdFLSkqqR48e06dP37NnT0BAQPXs/ezZs6ioqA8fPuTn51fRchbgRxQVFaWl
pdEgf/nyZe0768OHD3/rJmjw83XkN340N9lstp6eXufOneu9Mxo3btymTZuu
XbsWHx/P9Ej5Mc1hKzKtVGm9SqtWWrvW+6n/eaampgYGBtRstmzZkt8L+0ZI
RUXFyspq0aJFx44d45HKqBuinog6I+qP8INfAAAAAAAAAAAAAACovejo6FOn
Trm4uHTq1InpL0Z+NUZGRrNmzfLy8oqJiWH6PNddc9iKnJub6+vru3Llyv79
+0tKSjI9cIClq6s7adKkgwcPhoWFMT06oLnLyMi4evXq0qVL+/TpIyIiwtSk
oIIyc+bMpl5QgI+wFRkaXGhoKFVqqtcM/p5RTk7OxsZm/fr1/v7+nz59Yjok
0NwFBwfv2LHD3t5eVVWVqUnRHLRv337q1KlHjx6NjIxk+pz/mOawFZlWqrRe
pVUrrV2ZHinArU2bNo6Ojnv27Hn+/DnTIwUAAAAAAAAAAAAAAH5BSUlJvr6+
27ZtmzhxYu0vJtPcrtFaN7q6uiNGjFi1atWFCxdqfzWtxuH5o0dvHz36+OhR
waNHnMOHOXPnciwsOIqKddzcpKXFGTKE8/vvnLNnOY8eVTx6lPPoUdKjR5GP
Hj357ltpALdv396xY4eTk1PXrl0xpPmqltchd3BwWL9+/V9//YVdl8C43Nzc
Bw8eeHh4zJ49u3fv3g12qU8u1QsKLvUJ/wJbkYH/KioqKCX+7wLyp06dcnNz
s7GxUVNTa8h8WP0C8gMHDnR1dT1+/Pjz589LSkqYjhA0d+Hh4WfPnl2+fPnQ
oUN/9BqtcnJyzfAarXWjqak5ePDg33///cyZM0z3kbUR+uhR7KNHGY8elfj6
crZu5UycyDEx4QgL16VQ018ZG3MmTPjyPDdvUmdd8vWZY7++SqNAK1Var9Kq
tXnedYsp365DTv0C7+uQ03lZvXo1naM3jfMn4gAAAAAAAAAAAAAA0MRlZmY+
f/780qVL7u7uv9XaxIkTraysDAwM5OTkmP7WpfFSVVXt2bPn2LFjly1b5t7E
HHJ3v+buHuLu/tHd/cs+5CFDOIaGHBmZOm5uatWKY2rKcXDgLFnCcXcvdXeP
c3cPcne/4O6+h+kj/WLDhg3Tpk2jIa2rq8vgVU+bA5oUXbt2HTp0qIuLC48M
s3nz5nPnzgUHB6ekpDCdI6G5KywsjIiIuHnz5oEDB5YsWTJ+/HhLS8t27drJ
yMg08NwxMzP7VlA8PDz++uuvp0+fJicnV1ZWMh0haBywFRn4r7S0NC4uLigo
6OLFi3v27HF1dbW3t+/SpYuiomJD5kMFBQVDQ8OBAwc6OTmtXLnS09Pz77//
jo6OLisrYzpC0NwlJCQEBgaeOnVq3bp1tWyr58+fP3r0aHNzcy0trQb+lVPT
1apVq+7duzs4OLi5uTHdR9bGKXd3f3f3SHf33HXrOM7OHEtLjrY2R0ioLoWa
/or+lp6BnoeejZ7z6zP7f32VRoFWqrRepVUrrg3ekGhSmJiY2NnZTZ8+nUfC
2bhx4+nTpx8+fJiUlMR0vgQAAAAAAAAAAAAAgF9QYWFhQkLCy5cv/f39L9Wa
u7v7jBkz+vbtq6KiwvS3Lo2XrKystrZ2165dBw0aZN/ETLe3325vf83e/t3I
kV+uh2xoyGndmiMuXsfNTTIyHE1NTpcunAEDOPb2Rfb2L+ztz9nbr7W3H8v0
kX4xZMgQc3Pzdu3aKSsrCwkJMT1wfmX6+vpDhw5dvHixp6cnjwxz69at58+f
x8bG5uXlMZ0jobkrLS1NSUkJDw+/f/++j4/P1q1bp0yZ0qtXLyUlpYacO9UL
irOz85YtW+jNREZGfv78mekIQeOArcjAf0VFRdQynDt3bu3atePGjevfv7+J
iYmGhoaUlFRD5kM1NTV66dmzZ+/evfvatWtBQUFRUVHp6enIh8C4rKys6Ojo
x48f37x5s5Zt9ZkzZ9asWePo6EizqUWLFg05lZouaWlpTU3Nzp07DxgwgOk+
sjZc7e0P29sH2tunDB7MMTPj6Ot/udmQoGBdCjX9Ff0tPQM9Dz0bPefXZz78
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
T2ho6K5du5ycnPr27cvnN0f8a20wilxBUVlNnyeiaYm9vSmNbEFR/Mty07ee
3r17z5w5c9u2bVevXv2+veK7iIiIiI2N/fTpEx56AQAAAAAAAAAAAAAA4Gs1
NjbW1dXV1tZWV1dXfG9ZWVlBQUGurq4//PCDlJQU3/b4WgtR5C8zNTVdsGCB
j4/P27dvv3sn+XaVlZU1NTVsNru+vp7p8QQA34oeyPRwpm9J9NB+9erV0aNH
58yZY2RkxM9JT1hYWFRUVFxcnL5zqaqqjhkzZuvWrbdv30ZuUJAgigxNsrOz
r169umHDBnt7e2lpaUlJSXpo0wNcSEiIn7OKhYXFkiVLTp06FRcX9/dzC17l
ANCO0ats+pGGR6vsvLy869evb968efjw4fLy8vyczf61NhhFbqCoOoqqoagq
isqmqKsUtYGiBlMUi29FYbFYP/zwg6ura1BQUFZW1nfvGN+uqqqKvkPV1dXh
DgUAAAAAAAAAAAAAAABtSllZWXh4+JEjRxYuXGhtbW3e9hgamnfubK6oaC4h
YU5RP1DUSoryo6hXTduUjO+W0q2Iov6kKC+K+omiLFgscxUVc11d8x49+Fql
yZMne3p6hoaGZmRkMN2nAKADSU1NDQoKcnd3Hz9+/P+ZvQ07d+6sqKjI66NN
paSk+vXrt2jRoqNHjz558iSGy7t37z58+JCTk1NeXo7ARpuDKHJHUldXV1pa
mp2dnZKS8ubNG+5xevfu3b17986ePZueN3g6V/w1XSgrK+vo6BgZGbWYsqZP
n75z586wsDD6QzJdLQAQeNXV1ZGRkb///vvSpUsHDhzIpzXhf2Vqaq6vb66h
YS4ray4iQs+3EyjKnaKCKCqV6QX1F5qISJms7BMNjaP6+otMTfn33xTW1tZ/
PVKGh4eXlZUx3Y8AAAAAAAAAAAAAAAAABEZlZeX79+9DQkK8vLxcXFwWtz2T
Jy8eNGixoeFiefnFFLWeoo5T1G2KSqKoesZ3SJtaGUXFNB3ZtI+ilqmpLTY1
XTx06OJZs/haJU9Pz3PnzkVGRubl5THdpwCgA8nOzn7y5MmZM2c8PDz+z+w9
2dbW1tDQkNeHAYqLixsZGY0aNWr58uX79+8/zsXX1/fGjRuvXr3KzMysq6tj
ulrQHKLIHUlVVVVaWhr9oBIcHPz7779zj9MdO3YsWrRo6NCh+vr6PJ0raMrK
yj179rS3t58+fXqLKYv+GIGBgS9fviwsLGS6WgAg8Gpra+Pj4+mHkMOHD69Z
s4Zfi8L/ZsGCxWPHLrayWqyjs1hcnF5Ze1DUGYp60nT+MONr6pZNXLxKR+e9
lVXImDFeCxas5FuVXFxcvLy8QkJC3r9/T9+5mO5HAAAAAAAAAAAAAAAAAAKj
trb206dP0dHRd+7cCQgI8G97PD39nZz8bWz81dX9KSqQoh5Q1DuKyml6fyvz
m6QUVU1RGRT1mqJuUdSZLl38hw/3X7rUf/9+vlYpNDQ0MjIyNTUVZzcBAD+V
lJQkJydHRERcu3bt/8zenk5OTjY2Nurq6jzNFoqKimpqapqZmQ0ZMmTatGmz
uTg7O+/duzc4OPj9+/f0/Y7pakFziCJ3JPTzyevXrwMDA7dt2/bTTz9xj1NH
R0c7OztjY2NVVVWezhU0HR0de3v7RYsW7dmzp8WUdePGjRcvXqSlpVXQPRMA
4NvU1dVlZ2e/efPm3r1758+f59ei8L/x8fF3dfWfNMnfzMyfxaJX1tcoKoKi
kimqhOkF9Rcai1VrZvZp4sRoV9c7Pj7n+FalgICAO3fuREdHf/r0CY+OAAAA
AAAAAAAAAAAAAP9eQ0NDZWVlYWFhVlZWampqctsTEpLs4ZE8fnyyrm4yRX1o
OrWpiKKqKKqR8R3SplZPURUUVUBRnygqxdQ0ec6cZC+v5EeP+FqljIyMvLy8
srIyNpvNdJ8CgA6ktra2tLQ0Nzf348ePLeal0NBQDw+P8ePH6+rq8jRbKCws
zGKxlJSUtLS09PX1u3KxsLCYP3/+kSNHnj59iqPt2hxEkTsS+lHz3r17e/bs
mT59upGREfc41dPT09DQUFBQkJSU5OlcQaP/NP0B6I9Bf5j/+yiVn59fXl6O
E9QB4Ns1NjbSDx5tapX99m3y6dPJq1Yl29kly8nRK+uPFJVLUaUUVcv0gvoL
TVa2wda2ctWqwtOns96+5V8B6YtFXzL6wlVWVjY0NDDdjwAAAAAAAAAAAAAA
AADgu4mJIceOkdmzSdeuzG+J/s9mZUVcXBCJAgAg79+/P3ny5LJly6ytrdWa
U1RUlJGRkZCQEBER4WnsUF5efsiQIa6urpcvX05PT8/lkp+fX1JSUllZiV9w
MAZR5HansbGxtra2oqKiuLg4Ly+Pe8TFxcX5+/u7uLj0799fTEyMpwNfVFRU
UlJSVlZWSUmpxeQzePDg9evXBwYGfvjwgelqAQDwVWUluXfv/7vrKigwv3D+
701OjtjbE1dXcukS5w5fWEjKykh1NamvZ7qOAAAAAAAAAAAAAAAAACCYEEUG
ABBEHz58CAsLO3DgwOLFix2as7OzMzU17dSpE4vF4mkiUVpa2sLCYsaMGR4e
HoGBgcFcbt68GRkZmZSUVFBQgFPvmIEocrvDZrNzcnLi4+OfPn0aGhrKPeL8
/f03bdo0adKknj17ioqK8nTgy8rK6urq9urVy97evsXks3LlyuPHjz948CA7
O5vpagEA8JVgRZGlpYmFBZkxg3h4kMBA8uAB578FMjI4zw4AAAAAAAAAAAAA
AAAAAK2AKDIAgCDKzc2Nioq6fv3677//vrO55cuXjxs3ztzcXFFRkaeJRAkJ
CX19/UGDBk2dOnXNmjWuXH777bdTp079+eefHz58qMcRe4xAFLndqa6uTkhI
uH37to+Pzy+//MI94lasWDFx4sR+/fppa2sLCwvzdOCrqalZWVk5OjrSo77F
5OPn50d/vHfv3hUVFTFdLQAAvhKsKLKEBNHXJwMHkqlTyZo15MABEhREXr8m
+flM1xEAAAAAAAAAAAAAAAAABBOiyAAAgqiioiI7OzshIeHly5ePmztx4sTK
lSuHDBmirq7O00SiqKiooqKirq6uqampjY3NIC5jx47duHHj2bNnY2Ji6urq
mK5Wh4QocrtTXl7+7NmzP/74Y9WqVcOGDeMecf369TM2NtbW1paXlxcSEuLp
wNfT0xs9erSrq6u/v3+Lyef169fJycm5ublVVVVMVwsAgK8EK4osKkoUFYmu
LjE1JQMGkLlzyd695NYtkpnJdB0BAAAAAAAAAAAAAAAAQDAhigwAIIgamzQ0
NNTX19c1FxkZeeDAgalTp+ro6PA0kUgTEhISFhYWaSLKRUNDY8KECbt27Xr8
+DGbzWa6Wh0SosjtTklJSVhYmLu7+/Dhw+Xk5LhH3F9jkB6MvM4h03r06DFv
3rwTJ068ffu2xeRDT0f0pPTX7MR0tQAA+Eqwosh0ExIiwsJERITTLCzI0qXE
358kJzNdRwAAAAAAAAAAAAAAAAAQEPX1pLiYc95RfDx5+ZKcPUtcXTkbpp07
M78f+j+bsTHnHbKenuTaNRIdzdkq/fyZlJczXVMAgLYkLi4uMDDQzc1t3Lhx
fZszNjbW0dFRUlISExPjaVhRUVHR1tZ22bJl3t7eT58+fc4lOjo6OTn58+fP
5Zi+eQpRZMHU0NBQWlqalZWVkJDw6tUr7rFz//59Ly+vefPmWVlZSUpK8nQI
0/++ioqKnp6eiYlJi2lk6tSpnp6e165d+/DhA9PVAgBgUnU1yc8naWnk3Tvy
6BE5coQ4O3MOGZaRYX7h/FXN3JwsXkxOnyZJSUzXFAAAAAAAAAAAAAAAAAAE
RE0NZ7c0IoJcucLZLV2/nkyezIkaqagwvwf6P5uODrG1JXPmkC1biI8PuX6d
vH5NsrOZrikAQFuSkZHx6NGj06dPe3h4rGxuypQpgwYN6tq1q7S0NE9zjDIy
MiYmJmPGjFmxYsW+ffu8uPj4+Fy/fv3169fZmL55ClFkwcRmsz9+/BgZGXn1
6tVjx45xj50dO3Y4OzsPHz7c0NBQXFycp0NYQUGhR48e9vb2M2fObDGN0B/j
/Pnzz549y8nJYbpaAABMKi4mcXHk/n3Oz3t37+YcLEzfcnv0IFJSzC+cv6oh
igwAAAAAAAAAAAAAAAAAX6uigkRFkQsXyNatZPZsMnw46dOH6OoKxtlNSkqk
WzfSrx8ZM4azW7p/PyeNnJjIdE0BANqSwsLCpKSkZ8+ehYaGBja3devW2bNn
W1tbKyoq8jTHKCEhoaWlZWZmNnjwYEdHxylcFi9evG/fPvqzJWL65ilEkQVT
TU3N27dvL1++vH379rlz53KPnQkTJtja2hobG6urq4uIiPB0CGtoaNB/a8GC
Bbt3724xjYSFhb148eLDhw+lpaVMVwsAgEmfP3MOQ/bx4fy8d9IkYmdHTEyI
piYRE2N+4fxVDVFkAAAAAAAAAAAAAAAAAPhapaXkwQOyZw+ZNo0T61VXJ4qK
hMUioqLM74H+zyYuzolMKytzdngtLTkvwD1xgnMwMgAA/K22tra8vLygoCA7
OzujuatXr/7yyy+jRo1SV1fnaY5RWFhYSkpKXl5eTU2tc+fO2lwsLS2dnZ1P
nDjx6tUrpkvVriGKLJiqqqrCw8O9vLxmz57ds2dP7rHTqVMnVVVVOTk5SUlJ
ISEhng5hPT29SZMmbd++/fbt2y2mkc+fPxcWFlZUVLDZbKarBQDApLQ0cvky
2biR/Pgj6dyZqKpy7reSkkRYmPmF81c1RJEBAAAAAAAAAAAAAAAA4N9gszmJ
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
R1ZVRZ49I97eZOlSYmNDuncnnTtz3iErKcn8biaPmrQ0UVXlbAobG3NSV66u
nA3T2FimrwQAgACqqakpKirKzMxMTEyMaS4oKMjd3X3ChAn6+vo8zVIKCQlJ
S0urqanp6en17NnTnIu1tfWiRYuOHj365MmTsrIypqvVViGKzIS8vLy7d+/u
3bt39uzZ5s316NFDR0dHRUWFxWLxdOzQ6CEzffr0nTt3hoWFtRjCycnJWVlZ
JSUlbDab6WoBAAiA7GwSFkZ27iTTpxMzM2JgQDQ1iZwcERVlfgnMh4YoMgAA
AAAAAAAAAAAAAEBH9lf+yMODjBjR+vyR4DY9Pc5O8aFD5NUrpq8EAED7Eh8f
f+rUqSVLllhYWEg3JyUlJS4uLioqKiwszNOYJYvFGjx48IYNG65evZqdnV1V
VVVTU1NXV9fQ0MB0edoSRJH5he54bDab7oSVlZXJyclnz551cXGxtrbm6Sig
mk4Op4ebhIQEPfRaDMZBgwatW7fu4sWLH/F+CACAb0PfAOnbIH0zpG+JjK9z
+d8sLMjixeTkSRIXRyorOW9fYrMJHrgAAAAAAAAAAAAAAAAAOghEkRFFBgDg
hfT09Js3b+7du3f+/PlDm+vXr5+RkZGmpiavD32VlJS0sLCYNWvW9u3bg4OD
IyIiYmNjs7KyKuibH/wNUWR+KS0tzcjIePv2bXh4+IULF7Zs2eLo6GhsbMzT
UUCTlZXt3Llzz549bWxsWgzGpUuXHjly5MGDBzk5OUyXBwBAsHXwKLKhIRk/
nmzaRM6eJY8fkzdvOAUpKWH6qgAAAAAAAAAAAAAAAAAAXyCKjCgyAAAv5OXl
vX79Ojg4+PDhw1uac3Z2HjVqlJmZmZKSEk8TmGJiYvr6+nZ2drNmzdq4ceOx
Y8dCQkKioqLy8/OZLk9bgigyv2RlZT1//vzKlSsHDx5ct27d1KlTBwwYoK2t
zdNRQFNXV+/Tp8/48eOXL1/eYjB6e3vfuHHj7du3xcXFTJcHAECwdfAospYW
sbYmjo5k9Wqyfz+5eJFERJDMTKavCgAAAAAAAAAAAAAAAADwBaLIiCIDAPBC
eXl5Zmbmu3fvwsPDw5o7evTo8uXLhwwZoqWlxdMEpoiIiLKysoGBQZ8+fYYO
Hbpo0aIDBw7cunXr48ePTJenLUEUmV+SkpKCg4N37NgxZ86cH374oVevXnp6
egoKCjwdBTR9ff3Ro0evW7fO19e3xWCMiIiIi4vLzs6uqqpiujwAAIKtg0eR
6ScIXV1ibk7s7MiMGWTrVnLlComLY/qqAAAAAAAAAAAAAAAAAABfIIqMKDIA
AC80NDTU1tZWVVWVl5eXNvfkyZP9+/dPmzZNX1+fpwlMISEhUVFRCQkJFosl
Kyvbt2/f5cuX+/v7JyQkMF2etgRRZH6Jiory9vaeN2+eiYkJ3SHpbikuLi4i
IsLTUUCj/xz9R+k/TX+AFoOxoqKiurqazWbTA5bp8gAACLYOHkUWESHi4kRK
isjKku7dyezZ5PBh8vw501cFAAAAAAAAAAAAAAAAAHimtpYUF5OsLJKSQl6+
JD4+ZPlyMnAgkZFhfgeTz01Li4waRTZtIoGBJDaWpKWRnBxSVkbq65m+SAAA
7VdCQsKFCxc2btw4cuRIIyMjHR0dFRUVFoslJCTE00CmgYHBxIkTf/vtt5CQ
kPfNpaSkZGdnFxcX19L3yI4GUeTvqrq6urCw8NOnT0lJSS26WWBg4F/dng/n
gcvIyKipqenp6fXo0eOvbn/t2jWcBw4A8H1VVpKCApKRQT/bkDt3yJ49ZOZM
0rMn8+tcxlfZkyaRvXvJ06dMXyEAAAAAAAAAAAAAAAAA4JmSEpKURMLDOa9M
PXKErF5Nxo0jJiacI4wY37Xkc1NWJn37cg5GdnMjvr4kNJS8eMFJUVVXM32R
AADar8zMzIcPH/r6+m7atGnWrFnDhw83NzfX1NQUFhbmaT6T/hMDBw50cnLy
8PA40dyVK1eePHmSlJRUWlrKdHn4DlHk76qgoCAuLu7PP/8MDAxs0c3c3Nym
TZvWt29fZWVlnnZ1cXFxbW3tPn36jBo16qeffqI7/NmzZyMiInJzc5kuDwBA
u0JPq2/fcu6iAQFk506ycCGxt+e8eYfxdS6zDVFkAAAAAAAAAAAAAAAAgI4g
J4ezJ3j6NNmyhfPi1B9/JL17k06dOC9UZXzXks9NRobo65N+/cjYsZyN4507
yeXLJDqaczAyAADwSGFhYXx8/OPHjy9fvnzw4MEVK1aMGjXK0NBQRESEp/lM
BQUF+q/Y2NhMmDDhp+a2bNni7+//9OnTjpjVRBT5u8rIyHjw4IGPj8+GDRta
dLOxY8daW1vr6+vLyMjwtKuzWCxTU1O6n69bt87b2zs4ODgiIiI5ObkjJu0B
AHgpJYXcukWOHuX8vHfyZGJnR4yNiYoK8+tcZhuiyAAAAAAAAAAAAAAAAAAd
QXo6uXqVuLsTBwdiaEi0tTm7pdLSRFiY+V1LPjcxMSInR9TVOUdXmZhwgtn7
9pEHD0hREdMXCQCg/aqpqSkuLs7Ozk5NTY2IiDh69OjChQutrKxERUV5ms8U
FxeXl5fX0NDo0qVL9+YcHBx+/fXX4ODg9A6YpEUU+buKj48/f/68q6vr8OHD
W3QzXV1ddXV1OTk5MTExnnZ1WVlZW1tbFxcXPz+/6OjotLS0nJyc0tLS2tpa
pssDANCuREcTPz/i4kJsbYmBASeCq6hIJCWZX+cy2xBFBgAAAAAAAAAAAAAA
AOgIkpI4RyI7OxMzM+a3KdtOExfnHGO1YQMJCSH5+UxfJACAjiE/P//mzZse
Hh5jxoxRV1dX4qKgoCAjIyMpKcnriDLNxMTkp59+Onbs2MuXLwubKy0trays
rK2tbWhoYLpavIEo8terr6+vqampqKgoKSlp0WEePXq0d+/eqVOn6uvr87TT
CgkJiYmJSUlJycrKKioqco+dLl26TJkyZc+ePQ8fPqR7L9PVAgBotyIiOD9l
nTSJE75lfD3bdpqGBuetQ/STxa1bpLCQlJYS+l5UW0va65MUAAAAAAAAAAAA
AAAAQMeEKPIXG6LIAAD8V1JSEhkZeerUKVdXVwcHh9Fchg4d2qdPH319fUVF
RZ5GOmldunQZOXLkmjVrTpw4cb258PDw9+/fZ2VlVVVVMV0t3kAU+euVl5dn
ZGS8efPm4cOHLTrMoUOHli5dam9vr6WlxdNOKyIioqKi0q1bt759+/7444/c
Y2fq1Knu7u7nz5+Pjo6uqalhuloAAO0WoshfbEpKZMAAMn8+2bOHhIaSJ09I
bCzJzibV1UxfMAAAAAAAAAAAAAAAAAD4fhBF/mJDFBkAgP8qKysTExMfPHhw
5syZHTt2bOPi6uo6ffp0GxsbHR0dnkY6aerq6hYWFmPHjl2yZMmm5o4ePRoa
GvrmzZvi4mKmq8UbiCJ/vdzc3JcvXwYFBXl5ebXoMAsWLBgxYoSpqSmvI/Ri
YmIGBgaDBw92cnLavHkz99jZu3fvhQsXwsPD09LS2Gw209UCAGi3EEX+YpOR
IUZGZMgQ4uRENm0i3t7k5k3y7h3neGQAAAAAAAAAAAAAAAAAaDcQRf5iQxQZ
AID/2Gx2fn5+ampqVFTUw4cPH3C5dOnSr7/+Onny5J49e/I00kmTkZHR0tLq
0aOHtbX14OYWL1586NCh+/fv5+TkMF0t3kAU+eulp6ffuHFj9+7dc+fObdFh
rKysDA0NNTQ0pKSkeNppJSUl+/TpM3v27J07d4aGhnKPncePH7958yYtLa2o
qKi+vp7pagEAtFuIIn+xSUgQVVXStSuxsCCDB5Nly8ixY+TRI6yyAQAAAAAA
AAAAAAAAANoVRJG/2BBFBgDgv8bGxoaGhrq6OjabXdPchw8fzp8/v3LlSmtr
a55GOmlCQkIiIiJiYmLi4uISzQ0YMGDNmjWBgYEfP35kulq8gSjy14uLizt5
8qSzs3OvXr1adBi6C4mKitLdie5UPO20LBbL3t5+48aN165dy83NbTF86AFF
Dyt6cDFdKgCA9gxR5C82ISEiLExERTlLbAkJzir7559JUBDJymL6ggEAAAAA
AAAAAAAAAADAN2hsJOXl5PNnkpJC3rwhV68SDw/Ohmm3bsxvU7adJiZG+vQh
P/1EDhwg9+6R9+9JWhonk1xVxfT1AwDokPLy8u7du7d///65c+daNGdiYtKl
Sxc1NTUWi8XTtCfN2Nh42rRp27dvv379+uvmEhISMjMzi4uL2Ww209X6Bogi
/4OamprCwsKPHz/GxcW1uPSXLl3avHmzg4MD3Q952v2EhIRkZGQ0NDQMDAzM
zMy4R4GNjc2SJUuOHz/+9OnTcvo5DwAAeI++4RcXk8xMkpBAXr8mJ0+S1avJ
kCGcQ4AZX8+22WZmRmbNIrt3k1u3yLt35MMHkptLKiuZvpYAAAAAAAAAAAAA
AAAA8JUaGsinT+TVK3L9OvnjD7JlC5k9mwwcSDp1Yn5fsu00ERHOO2SHDeOc
F71zJzlzhpPMevcOJyQDADCjpKQkOjo6KCho3759y5ubM2fO8OHDzczM1NTU
eBoEpeno6NjZ2c2dO9fDw+Nwc5cvX37y5ElKSkpFRQXT1foGiCL/A7oHxsfH
//nnn+fPn29x6d3c3GbMmNG/f38NDQ2edj9hYWEtLa0+ffqMHj16/vz53KNg
zZo19Ce5fv16bGxsFX43BQDAF/Q9MyWFPHlCLl8mhw+TNWvIhAmkV6/W3z87
QuvShdjbk/nziacnOXWK3L7N+X10bi7T1xIAAAAAAAAAAAAAAAAAvlJdHYmL
I9eukb17OTnbsWNJ//6c2K2CAvP7km2nCQsTNTVibMx5geykSZxt5ePHOccj
f/zI9PUDAOiQqqqqMjIyXr9+ffv27YDmDh48uHz58h9//FFfX5+nQVCakpJS
9+7dbWxsHBwcZjTn7u5+9uzZ58+fFxUVMV2tb4Ao8j/4/Pnz48ePfX19N2zY
0OLSjx492tra2sDAQF5enqfdT0RExMjIaNy4cWvXrvX29uYeBYGBgffv33/z
5k1WVpZgn8sNACA46Bv+8+fk7Fni7k5mzCDDhxMLC6KtTaSkmF/PttmmokKM
jDg/hZ4wgbi4cCLct26R1FSmryUAAAAAAAAAAAAAAAAAfCU2m0RGkmPHyIIF
nK3Szp05u4GyskRcnPl9ybbThISIpCQnhKWuTnR0yODBZO1aEhBA4uOZvn4A
AB1SfX19RUVFYWFhdnZ2WnPh4eEHDx50cnIyNTXlaRCUJiEhIScnp6qq2rlz
Zz0uXbp0mTRpkqen582bN3Nycpiu1jdAFPkf0D3typUrbm5uI0eO1GuuU6dO
KioqsrKyYmJiPO1+9L9vbW29ZMkSHx+f169fc4+C9PT0z58/FxUVVVVVNTQ0
MF0tAIAOgb7h37zJOd134kTOYb+amkRJiUhLc96ww/h6ts02CQkiJ8f52a+2
NrGx4TwvnDzJORgZAAAAAAAAAAAAAAAAANq++npSVUVKS0l+Pudc3ytXyMaN
nFOblJSY34sUiNatG5kzh3h7Y5MUAKDNyczMvHr1qpub24gRIzQ1NZWVlWVl
ZSUlJYWFhXmaC23B0tLS2dnZx8cnOjo6Nze3uLi4oqJC8M6nRRT5PxobG2tr
a8vLy4uKinJycp4+fXrw4ME5c+YYGxvzs1+JiIhISUnJycmpqKjo6OhMmDBh
27Ztt2/fLigoYLpCAAAdEX1jp2+VxcUkN5dERxMfH86bhuj7HuMrVkFsurpk
2jRy8CB5+ZLp6woAAAAAAAAAAAAAAAAA/0JlJcnIIDEx5P59cuECJ2E0cyZn
w1ROjvn9R4FoiCIDALRZeXl54eHhf/zxx88//zxhwgRbW1sTExNNTU0JCQl+
Rka7d+8+bty4devW+fj4hIWFPX/+PCUlpaioiOnyfCVEkf+joaEhPz8/ISEh
IiIiNDT0yJEjK1asGD58uJ6eHj/7FYvF0tbWNjc3t7e3nzJlyubNm8+ePfvi
xYvS0lKmKwQA0BHRN/aUFPL8OQkL4+SQ160j48aR7t2ZX7EKYkMUGQAAAAAA
AAAAAAAAAECwFBaSqChy9So5cICsWkWmTCGDBhEDAyIlxfz+o0A0RJEBANqs
0tLS+Pj4+/fvnzlzZteuXUuXLh01alTPnj2lpaX5GRnV0tKytLQcO3ass7Oz
p6fn2bNnw8PDMzMzmS7PV0IU+T/q6+tTU1PpfuXn57dly5Z58+aNHDnS3Nxc
VVWVn/1KUVGxd+/e48ePX7Vq1f79+y9cuPD48eOUlJSqqiqmKwQA0BHRN/bw
cHL2LPH05JyHPHYs56anpcX8ilUQG6LIAAAAAAAAAAAAAAAAAIIlO5vcuUP2
7yc//UT69SM9exIdHaKoSMTEmN9/FIiGKDIAQJtVU1OTn5//4cOHN2/ePHr0
6OjRo0uWLBk4cKCCggI/I6OysrJaWlrdu3e3tLScOHHili1bLl26FB8fz3R5
vhKiyP9RV1cXFRXl7+//888/jxo1qnfv3l27dlVXV+dzxF1DQ2PYsGGrV6/2
9fV99uzZ+/fv09PTCwsL2Ww20xUCAOiI6Bv7pUtkyxYycSLndte9OyeHLCvL
/IpVEBuiyAAAAAAAAAAAAAAAAACCJS2NnDvHiQX16cP8hqMgNkSRAQAEApvN
fvjw4Y4dO8aNG8fn02u56enpTZ8+/dChQy8FLluDKPJ/tJG+pKurK6h9CQCg
PaIn40OHyPTpnBgt46tUQW+IIgMAAAAAAAAAAAAAAAAIFkSRv7Fpa3MyWevX
E39/EhlJYmNJRgYpLib19UxfWgAA4MJ9ku3IkSMHcLG2tjY2NtbW1lZQUBAR
EeFpfJT7JNunzdEfLzk5OScnp6KigulqfUnHiyKXlZVlZWUlJCS8fPmS+0rx
84RtcXFxZWVlPT09U1PTAc39dcL2xYsXBe+EbQCA9ghR5O/YNDTI0KFk9Wri
60uePSPv3nEeHAoLCQ7+BwAAAAAAAAAAAAAAAGibEEX+xqaiwslVTZpE1q7l
nNp06RJ5+pR8+EBqapi+tAAAwKW+vj41NfX+/ft+fn5btmxZy8XFxcXR0dHG
xqZLly4SEhI8TZYqKir27t17/Pjxq1at2tucr6/vzZs3Y2Ji8vLymK7Wl3S8
KHJWVtbLly9DQkK8vb25r9SuXbuWLl06atSonj17SktL87TDyMjIGBoa2tnZ
TZ8+fW1znp6eZ8+eDQ8Pz8jIYLpUAACAKPL3bIqKpFcvMn48WbmS7N9PLlwg
jx+TlBRSVcX0ZQYAAAAAAAAAAAAAAACAL0EU+RubjAxnr7l3b86pTTNmEA8P
TsAqKopUVjJ9aQEAgEtDQ0N+fn5CQkJERERoaOhlLgEBAe7u7tOmTevduzeL
xeJpspT+97W1tc3Nze3t7Sc1t2zZskOHDt2+fTu9bcZ0O14Ume4t165d27Nn
z4IFC7iv1IQJE2xtbU1MTDQ1NXmdXVdSUurXr5+Tk9P27dsvNxcWFvb8+fOU
lJSioiKmSwUAAIgif8/GYnFeP2RuTuztyZQpZPNmcuYMefGClJYyfZkBAAAA
AAAAAAAAAAAA4EsQRf7GJipKpKQ4mSxVVWJgQKZOJbt3kwcPsEkKANC2NDY2
1tbWlpeXFxUV5eTkZHNJSUkJDAxcv3794MGD5eTkeJosFRERkZKSov+KioqK
ZnMDBgxwcXE5ffp0bGws09X6ko4XRX758qW3t/eCBQt69erV4mIpKyvLyspK
SkoKCwvztMNoaGiMHj3a3d09JCQku7nc3Nzi4uKKigo2XlcPANAGIIr8HZuI
CGeVLSfHeQmRjg6ZMIFs20Zu3SIFBUxfZgAAAAAAAAAAAAAAAAD4j5oaUlJC
cnNJRgYJDycHDxInJ2JqyvyGo6A3FosMHEhcXMjJk+TNG/LpE8nPJ+XlBBEh
AIC2rKqq6smTJ4cOHZo7d66ZmZkeFx0dHXV1dQUFBSkpKSEhIZ6GTuk/N3Hi
RE9Pz5s3b6Y19+nTp/z8/LKyMiZDp+00ilxTU1NaWpqXl5eZmdmi7FeuXHFz
cxs5ciTdB3h66UVERFgslqKiooaGhl5z1tbWS5Ys8fHxef36NdOlAgCAZurr
Oa/CKSoinz9zfuF77Rpxdydjx5JOnZhfmbanJipK+vYlixeTEyfIq1ckM5Pk
5ZGyMlJby3QPAAAAAAAAAAAAAAAAAOjY8vNJXBx5/JgEBXFyyMuWkeHDSZcu
zG8yCnqTkCAmJpwjm37+mfj4kOvXSWQkSUnBCckAAG1aTU3Nu3fvgoKCdu3a
tWDBghlcHB0df/jhBxMTEw0NDVFRUZ7mUek/MWjQoHnz5u3YsSOguevXr0dG
RqakpJSUlDBWpnYaRS4sLExISHjy5ElwcHCLsv/6668zZ87s27evoqIiTy+9
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
2v3000+HDx9OTExMVZGWlpaZmZmbm/v+d0sufVXkoqKi/Pz8nJwcaWnSAlXX
++LFi927d//www9NmjQxNjaWNXZtbW1pc6UtNjU1LbH19erVGzly5JYtW8LC
wj58vQAAxd25I65ZI/brV3xjXsXfYzKMjcXmzcXp08XDh4t/CgoAAAAAAAAA
AACArKgiKz6oIgPAly08PHzfvn3z58/v169fG3X169evXLmyg4ODgYGBrJ1Y
CwsL6VoDBw5cuHDhwYMHj6g4c+bM7du3nz17lvzeTZ3SV0UuKChITEx88uTJ
jRs3Tp48qbre3bt3z5kzp1evXj4+PnLHbmxs7OTkVLVqVT8/vxJbP2zYsKVL
lx49evT58+cfvl4AgOKoIpeqQRUZAAAAAAAAAAAA+JSoIis+qCIDwJctJibm
2rVrf//99/Lly2epGzJkSOvWrb28vMzMzOTuxFaqVKl58+b9+/efOnXqDBW/
/vrrzp07L1269OLFi/dcYemrIufl5T19+vTs2bNbt26dN2+e6np/+OGHXr16
NW7cuHz58np6erLGbmNj4+Pj07Fjx+HDh5fY+tWrV+/fv//WrVsJCQkfvl4A
gOKoIpeqQRUZAAAAAAAAAAAA+JSoIis+qCIDwJctNTX1xYsXoaGhFy5cOKFu
+fLlQUFB/v7+NjY2snZi9fX17ezsPD0969Sp07x58xYqevbsOWvWrF27dj14
8OA9V1j6qsjZ2dk3b97cunXrlClTunTporreJk2a1KxZs3z58tbW1jo6OrLG
7uzs3LJlyzFjxqxdu7bE1l++fFkKPCYmJkNKDwDw+aOKXKoGVWQAAAAAAAAA
AADgU6KKrPigigwAX7bCwsK8vLycnJzMzMwMdadOnZo3b16XLl0cHR1l7cRq
aWnp6Ojo6+sbGhqaqPP09Ozdu/dvv/129erV91xh6asiS1GfPn16/vz5UrZO
Tk6q6zU2NpZC0NPTk7uHLPHw8OjVq9fy5cuvXLlSYuuzsrKkI5Gfny8djw9f
LwBAcVSRS9WgigwAAAAAAAAAAAB8SlSRFR9UkQFAY925c2fz5s3jx49v0aJF
DRXe3t4eHh6Ojo7m5ua6urqy1mXt7Oykq0tz2LJlyx11Dx8+fP78eUJCQlZW
1ruWoVAVuaioKCMjIy4u7tmzZ/fv31ed+dWrV9euXTt8+HA/Pz8zMzNZA9TX
17e0tHR2dq5QoUINdR07dpw6depff/0VHh7+EY4LAKAUo4pcqgZVZAAAAAAA
AAAAAOBTooqs+KCKDAAa6+nTpydOnFi7du2kSZO+VTFs2LDOnTv7+vq6ubkZ
GhrK2qS1tLSsWbNmt27dJk6cuEbdtm3bpOmFhobGx8e/axkKVZELCwtjYmJu
3bp15MiRP/74Q3Xmy5cvHzNmTMeOHatWrWpkZCRrgGZmZp6eno0aNZIy/Fbd
jBkzNm3adP78+ejo6I9wXAAApRhV5FI1qCIDAAAAAAAAAAAAnxJVZMUHVWQA
0Fjx8fEPHjw4e/bsrl27tqjYuHHjjz/+2KNHj5o1a8p9U19jY+Ny5crVqVOn
bdu2fdV9//33q1evPn78eGRk5LuWoVAVuaCg4NGjRwcOHFi6dOnw4cNVZ96r
V6+WLVv6+Pg4Ozvr6+vLGqCtrW39+vX79Okza9asLer27t178eLF8PDwN2/e
fITjAgAoxagil6pBFRkAAAAAAAAAAAD4lKgiKz6oIgOAxsrOzk5OTn716tWz
Z88iVDx8+HD79u0TJkxo3ry5tbW1rE1aXV1dU1NTW1vbsmXLeqoLCAgYO3bs
5s2bQ0ND37UMharIeXl5165dCw4ODgoKqlevnurM3d3dnZycpOiMjY21tbVl
DdDZ2blDhw7Tp0/fu3dvhLqoqKjXr1+npKTk5OR8hOMCACjFqCKXqkEVGQAA
AAAAAAAAAPiUXr0S9+8XZ8wobg/Z2YlWVqKpqWhgIGprK//p4Rc8dHVFQ0PR
zEy0thY9PcVvvhEXLxbPnxezspQ+EACAUiAvL+/y5cvLly/v27dv5cqV7VXY
2dlZWlqamJjo6+traWnJWrJ1cXHp2rXrvHnzjh8/Hh8fn5ycnJGRkZOTU1hY
qDbdT1hFLigokCaQnp7+5s2bmJiYffv2TZs2rXXr1jY2NrJGoa2tbWBgYGpq
amVlZa+uVq1aQUFB69evv337trzHAgBQit2/L27aJI4YIfr6ira2xa+Hxsai
np7y7z01Z+jo/P/vssuVE7t1E3/5pfgLvykpSh8OAAAAAAAAAAAA4EuXlCRe
uiRu3Cj+8IPYubPo7y9WrSo6ORV/hKf4J4lf8DAzK/5stGZNsVkzsVev4vZW
SIh4967ITRMBAJL8/Pz79+/v3r37559/7tu3b2cVHTp0aNiwYeXKlR0cHPT0
9GTt39rb2/v7+w8dOnTRokX79++/cOHCgwcPXr16lZubqzbdT1hFzszMfPny
ZWho6NmzZ/8rn3r16pmbm8sahaGhoZOTU7Vq1aRAOqv7Tz4HDx6MiIiQ91gA
AEqxZ8/EI0fEZcvEb78tfj309S2+PbKNDV/y/XTDxER0cRFr1BCbNBF79Cj+
wvX27eLNm8X/pwAAAAAAAAAAAACQVXq6GBYmnjolbt1afMug774T27cXq1UT
zc2V/yTxCx4ODmLdumL37uK4ccWfVu/aVVwIj4oS8/KUPhAAgFKgoKDgxYsX
V65c+fvvv3/77bdfVMyZM2fIkCEtW7asVKmSoaGhrP1bCwuLKlWqtGjRol+/
flOmTAkODj5y5MiDBw8ySnR6PmEV+c2bN3fu3Pnnn3+kWCZMmPDNN98EBAR4
enoaGxvLGoW5uXn16tXbt28/fPjwX9StWbNm//79N27cePXqlbzHAgBQisXF
ibdviwcPimvXitOni/37Fxdi3d2Lb9Wr+NtPDRk2NmKtWmLXruKYMcW/OrRz
Z/EPDz19yhd+AQAAAAAAAAAAANnl5ooJCcUfz925U/w53erV4vDhYkBA8ad4
in+S+AUPNzexQwdx0qTiBvjly8U/5vv8uZicLJb4xXsAgGYqKipKSUl58eLF
gwcPrly5cl7F8ePHlyxZMnjwYF9fX1NTU1n7t4aGhnZ2dh4eHjVr1mzatOmo
UaOCg4MvXryYLL1iqfqEVeRXr16dPHly2bJlQ4cObdSokbe3t5ubm42Njdw3
iLa1tQ0ICBgxYsSaNWvOq7t27dqjR49iYmLS09PlPRYAgFJMejGMjS3+nu/1
6+L+/eL8+WLv3qKPj6irq/zbTw0Zzs5i69bi+PHFv/p08aIYGlr8P8WbN2J+
vtKHAwAAAAAAAAAAANAARUXFDdiCguJP6M6fFxcuFAMDRUdH5T9J/IKHl5c4
aJC4bp14715x8tKQtkDaCAAA/qOoqKiwsLDgrXwVqampR48e/emnn9q0aWNh
YSFr/1aipaWlra2to6NjZGTUtGnTH3/8cf/+/QkJCWpz/YRV5KioqJ07d44Z
M8bX11dXV1eamDQ9aZJy5+Dk5BQYGPjrr79euHAhX520QYVvFfFCDgAaTHoR
+K931q9eiXv3ij/8IDZuLOrpKf/2U0OGp6fYp4+4apV48ybvsgEAAAAAAAAA
AAAl3b0rbttWfLfedu3EevVKxfDyEl1dRSur9/8M18hItLMTy5cXq1dXfjn/
GT17inPniv/8Iz57pvSWAwA+K9nZ2deuXfv999/HjBnTrFmz6tWrly9f3s7O
zsjISNYurq6ubs2aNfv3779o0aJjx45dU3H93LlHK1e+HDYspUGDAlPT93y1
Vqki5+bmJiUlPX/+/MGDB9fU7du3b86cOT169KhSpYqs65WYmJg4ODh4eHjU
qFGjffv2kydP3r59e2hoqNJHAABQ2iUnF3/Jd+VKMShIbNhQ+bef0qhVS6xQ
ofgbx2ZmopbW+7xQS38l/a30CNLj1Kyp/Ir++wgMFH/6Sfz7b/HxY6VPAAAA
AAAAAAAAAKDZIiPF06eLf890xgxxzJhSMXr0EP39i29wZGLynuUma2uxalWx
RQuxb1/ll/OfMX9+cdnq6lXx9WultxwA8FnJzc0NDw8/evRocHDw5MmT+/bt
26JFi6pVq1pbW8vay9XR0fHw8JCuNWTIkLlz5y5TsXLhwr+/++5y27bPqlTJ
MTL68CpyRkZGRETE+fPnQ0JClqmbMWNGv379/P39XVxcZF2vxMHBwcfHp23b
toMGDZKuu3HjxjNnzjzjS0QAgP+T9PTin785cEBcsUIcN075t5/SGDZM7Nix
+MXW2VnU1n6fF2rpr6S/lR5Behzp0RRf0X8fc+cWf7H64kXx5UulTwAAAAAA
AAAAAACg2RISxLAw8dKl4hv2hoQoP3buFOfMKa4Q+/oW3xj5/cpNZcuKzZqJ
334rLlmi/Ir+M44cEf/9t7j4nZqq9JYDAD4r+fn5r1+/fvDgwblz5/bs2bN4
8eKgoKCmTZs6OzvL2svV1ta2s7OrUqVKo0aNOnfu3ENF327d5gQEhFSrdtvR
MfO9f8NApYr85s2bq1evbtmyZdq0aT3UdejQoX79+hUqVJC7ei3x8PBo06bN
6NGjV65cuX///kuXLoWFhSUmJip9BAAApV1OjhgTU/yTQ6dPi7t2Kf/2Uxrr
14sTJ4qdO4tVqoi6uu/zQq2jU/y30iNIjyM9muIr+u/j0KHib/s+eVJ8V2oA
AAAAAAAAAAAACsrJEdPSxMTE4k9OX7woFWPvXnHaNLFtW9HB4T3LTRUqiF9/
Lf76a/EHwYov5z/j1SsxKUnMyBDz8pTecgDAZ6WoqCg7Ozs1NTU+Pv7ly5en
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
AADvJyIiYs+ePbNnz+7Ro0dDdd7e3uXLl7e1tTUwMJC1A2xqatqgQYOhQ4cu
X7789OnTl1QcOnRowYIFffv29fHx0dXVlXUaRkZG9vb2Hh4e0rVKRNGvX7+F
CxceOXIkOjpa6R0DAEAuVJEBAAAAAAAAAAAAaCyqyAAAvJ87d+6sWbOmX79+
np6eshZ938HS0rJt27azZ88+efJkZmam6vTi4+P/+eefyZMnN27cWE9PT6kZ
1qhR49tvv928eXNERIRSOwUAgNyoIgMAAAAAAAAAAADQWFSRAQB4h6ysrLi4
uCdPnty+ffuSus2bN0+cOLFNmzZly5aVtc2rra1tYWEhXaVKlSr16tVTvedw
q1atxo0bt3HjxuvXr2dnZ6vOPDk5+fz586tXrx4+fLi/v7/qX9WpU6dSpUpO
Tk5mZmayzlzi6enZtWvX6dOnh4SElAjw7t27kZGRCQkJOTk5Su0vAAAfBVVk
AAAAAAAAAAAAABqLKjIAAO+QmJgYGhp67NixP/74Y5G6cePGdevWrXbt2ra2
trK2efX09MqVK1e/fv3AwMCRI0eOVzFt2rT169cfP3788ePHubm5qjNPT0+/
f//+oUOHVq1a9cMPP6j+VVBQUMeOHevUqePk5CTrzCXSJRo0aPDNN99Mnjy5
RIDbtm07derUo0ePUlNTldpfAAA+CqrIAAAAAAAAAAAAADQWVWQAAN4hOjr6
5MmTq1atGjNmTDd1zZs3r1mzpqurq6mpqaxtXgMDA29v76+++mrq1KlbtmzZ
rWL//v0XL1589OhRXFxcQUGB6sxzcnJiY2Pv3bt37ty5PXv2qP7V+vXrJ0yY
0LFjx0qVKsk6c4mFhYW7u3udOnVat25dIsAffvhhw4YNFy5ciKdxBQD4zFFF
BgAAAAAAAAAAAKCxqCIDAPAO4eHhO3bsGDduXEBAgKM6Ozs7CwsLIyMjXV1d
Wdu8xsbG/v7+33///bZt28LCwmJVvHr1KikpKT09PScnp0h6UVdRWFiYnZ2d
lpaWmJgYq+7WrVvr168PCgqqXbu2rDMX3t7SWZq/paWlvb19iQDbtGkzbdq0
vXv3RkdHK7W/AAB8FFSRAQAAAAAAAAAAAGgsqsgAAKgqKirKyspKTk5+/fr1
8+fPjx8//ssvv/To0cPT01PWyq6WlpahoaGFhYW9vb2rq6ubCi8vrz59+ixZ
suTs2bNpaWkfvkZpaYcPH547d25gYKCburJly9rZ2ZmbmxsYGMi6Xom3t/eA
AQN+++23CxcuvHjxIi4uLiUlJScn58MXCADAJ0YVGQAAAAAAAAAAAIDGoooM
AICq/Pz8V69e3bt378yZM7t27Vq4cOHQoUObNGni7Owsay9XW1vb3t7ey8ur
cePGgYGBvVQMHDhw3rx50mTu3LmTmZn54Wt88+bNtWvXtm3bNnPmzF7qOnfu
7OfnV7FiRWtra1nXK3F3d2/duvXIkSOXL1++Z8+eCxcuPHr0KCEh4cMXCADA
J0YVGQAAAAAAAAAAAIDGoooMAICq3NzcsLCwI0eOrF69euLEib169WrWrJmX
l5fc1VwdHR1PT8+WLVsOGzZs/vz5K1QEBwfv27fv6tWrUVFRH+WmwRkZGU+e
PLl48eKuXbtWqJs1a9aAAQMCAgJcXV1lXa/E3t7e29u7VatW/fv3nzp16u+/
/37q1KnIyMgPXyAAAJ8YVWQAAAAAAAAAAAAAGosqMgAAqrKzs69du7Z+/fpR
o0YFBAR4eXmVK1fOxsbG0NBQ1l6urq5urVq1BgwYsGTJkpMnT95Ucfv27ceP
H8fExKSmphYUFHz4GvPy8pKTk6Ojo8PCwm6qO3jw4Lx5877++mtp4bKuV2Js
bGxvb1++fPlq1aq1bt164sSJW7duvXv37ocvEACAT4wqMgAAAAAAAAAAAACN
RRUZAKCZCgsLCwoK8vLyctQlJSUdPnx4xowZrVu3trCwkLWLq6WlpaOjo6ur
q6+vb2pq2qJFi2nTph04cCAhIUGpWJ4/fx4SEvL99983bNjQwMBAT09Pmp62
trY0VVmjcHR07Nq164IFC86ePVtiR3Jzc6VtkjarSPqvBQCAUokqMgAAAAAA
AAAAAACNRRUZAKCBioqKkpOTnz9/HhoaevHixdMqDh8+vGjRooEDB9arV8/U
1FTW/q2hoaG9vX2FChVq167dsmXLMWPGrFu37tKlSykpKUol8/r161OnTv32
229BQUEBAQE1a9Z0d3e3tbXV09OTNQrpEo0bN/7uu+9Wrlx5Wt3ly5cfPHgQ
HR2dlpamVCwAALwbVWQAAAAAAAAAAAAAGosqMgBAAxUUFDx//vzy5ct//fXX
0qVLf1Yxc+bMgQMHtmjRomLFioaGhrL2by0sLLy8vFq1aiVdcfr06evXrz92
7NjDhw8zMjKUSiY5Ofnu3bsHDhxYtWrV5MmT+/Tp07Rp0woVKhgbG8sahbm5
edWqVdu2bRsUFPSzupUrV+7du/f69euxsbFKxQIAwLtRRQYAAAAAAAAAAACg
sagiAwA0UH5+/r1793bt2jV79uxevXq1V9GmTRtfX9+KFSva2dnJfStge3v7
xo0bBwUFLV269NChQ5cvX3706NHr169zc3OVSiYrKysmJub+/fsXLlzYt2/f
/Pnz+/fvLwViYWEhaxSGhoaOjo5eXl5+fn7t1Q0aNGjhwoX79+9//PixUrEA
APBuVJEBAAAAAAAAAAAAaCyqyAAADZSXl3fp0qVly5b16tWrQoUK1iqsrKzM
zMyMjIz09PS0tLRk7d+6uLgEBgb+8ssvp06dSkpKSk1NzcrKkuZWJL08K6Sw
sDA3NzczM1OazOvXrw8cODBjxow2bdrY2NjIGoW2tra+vr6xsbG5ubm1uho1
agwZMmTt2rW3b99WKhYAAN6NKjIAAAAAAAAAAAAAjUUVGQDwBcvKykpKSnr5
8uWTJ0/CVNy7d2/r1q3jxo1r1qyZlZWVrCVbXV1dMzMze3v7cuXKVVInXV2a
gzQTaT5KR/U/yMvL+/fff9etW/fdd981aNBAdeYVK1Z0cXGxtbU1MTHR1taW
NUBnZ+f27dtPnTp19+7dYeqePn0aGxubnJyck5OjdFoAAI1GFRkAAAAAAAAA
AACAxqKKDAD4gsXFxd27d+/06dM7d+7cqGL9+vWTJk3q3r27j4+PmZmZrE1a
Y2NjNze3evXqtW/ffqC6CRMmBAcHnzhx4tmzZ0pH9T8oKCgICws7dOjQ8uXL
R48erTrzvn37tm7dumbNmmXLltXX15c1QBsbG19f3169es2YMWOjut27d58/
f/7Ro0dJSUlKpwUA0GhUkQEAAAAAAAAAAABoLKrIAIAv2JMnT44fP75mzZoJ
EyYMVTFo0KAOHTrUrVu3XLlyhoaGsjZpLS0ta9eu/dVXX02ePHmduj///PPU
qVP3799PSEhQOqr/QWFhYWxs7J07d44dO7Z161bVma9cufL777/v3LlztWrV
jIyMZA3Q1NTUw8OjYcOGXbp0Gapu6tSpGzZsOHv2bHR0tNJpAQA0GlVkAAAA
AAAAAAAAABqLKjIA4At2+/btTZs2jR07tmnTplVVeHl5lS9f3sHBwczMTEdH
R9Ymrb29fcuWLSdOnLh9+/b76sLDw6Ojo5OSkrKyspSO6n9QVFSUkZGRkJDw
/PnzR48eqc78+vXrv//++8iRIxs1aiT3baX19PQsLCwcHR3d3d2rqmvXrt2U
KVNCQkLCwsKUTgsAoNGoIgMAAAAAAAAAAADQWFSRAQCfu4KCgtzc3KysrLS0
tFQVKSkpx48fnzt3bqdOncqUKSNrXVZLS0tXV9fQ0NDExMRcXaVKlfr27bti
xYpr164pHdVHk5mZeebMmQULFnTr1s3FxUV1vWZmZsbGxgYGBlIgUiyyxu7h
4fH1118vXbr00qVLqerS09OlIyEdjMLCQqXTAgB8+agiAwAAAAAAAAAAANBY
VJEBAJ+7lJSUqKioO3funD179oi6JUuWDB06tFGjRjY2NrJ2YvX19e3t7StW
rFivXr1WrVq1UdG7d++5c+f+/fffD7+gl8ns7Oxbt25t37592rRp3bp1U11v
8+bNa9eu7eHhIWUu9x2nnZycpMuNHDly9erVJbb+woUL9+7di46OTk9PVzot
AMCXjyoyAAAAAAAAAAAAAI1FFRkA8Ll7+fLllStX/vrrr8WLF89QN3DgwJYt
W1apUsXMzEzWTqyJiUnlypWlaw0aNGjmzJmzVCxZskSamzTD6OhopaP6aPLy
8iIjI8+dO7d9+/YFCxaornfKlCl9+vQJCAhwd3fX09OTNXZra2tvb+927doF
BQWV2PoVK1bs27fv5s2b8dS5AADyo4oMAAAAAAAAAAAAQGNRRQYAfO7Cw8P3
7t37888/9+7du4W6unXrVqxY0d7e3sDAQNZOrIWFRYMGDQYPHrx48eIjR46c
UHH+/Pm7d+9GRUWlpKQoHdVHU1BQkJSUFBkZeevWrTNnzqiu97/2ombNmnLH
bmxs7OjoWLly5fr165fY+v/ai+fPnyudFgDgy0cVGQAAAAAAAAAAAIDGoooM
APjc3bx5c/Xq1f37969SpYqJOkNDQ319fV1dXS0tLVk7sba2tu3bt589e/ax
Y8eSk5MzVGRmZubk5OTl5RUWFiod1cdUUFAgLSo7O1taoOp6Y2Ji9uzZM2nS
pKZNmxobG8sau7a2trS50hYbGRmV2PratWsPHz5806ZNjx49UjoqAMCXjyoy
AAAAAAAAAAAAAI1FFRkA8NnJz89PTU2NjY198uTJ3bt3d+zYMWnSpDZt2jg6
OspafC3ByMjIxsbG1dW1cuXKTZo0GTNmzIYNG27cuCFNT+mElJSWlnbhwoVV
q1YNGzbM19e3YsWKZcuWtbKykvsOySW4u7t37dr1p59+2rNnz7179yIjI1+/
fp2env6FFcIBAKUEVWQAAAAAAAAAAAAAGosqMgDgs5OVlfXs2bOrV6/u27dv
7dq1kydP7tGjR506daytrT9l2dXGxqZq1arNmjX75ptvJk6cuGbNmqNHjz5+
/LigoEDphJQk7c79+/f379+/bNmy0aNHf/XVV40bN65YsaKFhcWn3B1HR0c/
P78+ffrMmDFjw4YNhw4dunHjRnR0tIYXxQEAMqGKDAAAAAAAAAAAAEBjUUUG
AHx20tLSbt68GRIS8vPPPw8cOLBdu3Z169Z1c3MzMTH5lGVXV1fXZs2aDRs2
7Ndff5Umc/r06Xv37r1+/VrD77ubm5v78uXL27dvHz9+fPv27XPnzh0wYICf
n5+Dg8On3B0LCwtPT88GDRp06tQpKCho0aJF+/btu3//fk5OjtIJAQC+QFSR
AQAAAAAAAAAAAGgsqsgAgM9OUlLSyZMnFy5c+M0331SuXNnFxcXW1tbU1FRX
V/dTll2lS/fq1evXX3+VJhMZGRkbG/vmzZusrKwi6cVVgxUWFmZmZkp7FBMT
8/Tp0wMHDsyePbtLly7lypX7lLujr69vbm5ub2/v6upas2bNwYMHr1y58tKl
S9IGKZ0QAOALRBUZAAAAAAAAAAAAgMaiigwAKJ2Kiopyc3MzMjKSk5Pj4+Pj
VDx8+HDLli2jRo1q0KCBnp6erI1WXV1dQ0NDMzMza2tre3VNmzadOHFiSEhI
ZGSk0mmVXvfv39+0adOIESN8fX1LBGhlZWVqampgYKCjoyPrJpqbmzdv3nzS
pEm7d++OiopSPUsJCQkpKSmZmZl5eXlKRwUA+IxRRQYAAAAAAAAAAACgsagi
AwBKp7y8vNevXz969OjSpUsHDhzYp2Lz5s0//vhjYGBg1apV5W6xmpmZlStX
zsfHp1mzZp3VjR07ds2aNadPn46NjVU6rdLr2bNnR44cWbZs2bffflsiwICA
gOrVqzs7OxsbG8u6iSYmJrVq1erVq9esWbNCQkJUz9Lhw4evXr36+PHjxMTE
wsJCpdMCAHyuqCIDAAAAAAAAAAAA0FhUkQEApVN2dnZYWNixY8fWr18/bdq0
SSpGjRoVGBhYv359FxcXbW1tWVus9vb2devW7d69+7hx435Rt3HjRml69+/f
f/PmjdJplV5xcXG3b98+ePDg2rVrSwQo7WOnTp1q1KhhZWUl6yYaGBi4u7v7
+/v37NlT2kfVszR79uxNmzadOXMmMjKyoKBA6bQAAJ8rqsgAAAAAAAAAAAAA
NBZVZABA6ZSenn7lypXff/997NixLVu29FdRv359Ly8vFxcXCwsLLS0tWVus
bm5u7du3nzRp0pYtW86ru3nzZkRERFxcXFZWltJplV4ZGRmxsbFhYWHXr18v
EeC6devGjBnTvHnzMmXKyLqJurq6VlZW5cqVq169up+fn+pZ6tix4+TJk7dt
23bnzp38/Hyl0wIAfK6oIgMAAAAAAAAAAADQWFSRAQClU3Jy8pEjR2bMmNGq
VStzc3NdFTpvaWtry91DllSpUmXQoEHr1q27d+9evrqCgoLCwsKit5ROq/T6
Tz5SUFJcJQK8evXq0qVLe/bsWa5cObn3UToq0oH5z8lRPUtlypTp2rXrggUL
zp8/n5eXp3RaAIDPFVVkAAAAAAAAAAAAABqLKjIAQEGFhYWpqakxMTFhYWE3
bty4puLUqVNLly4dNGhQ3bp1DQ0NZe2pSo9va2vr5uZWrVq1eup69uw5d+7c
f/75JzIyUum0vjQPHz4MCQmZNm1ap06dSsTu5eXl6upqbW2tp6cn69ZbWlo2
btx4xIgRwcHBly5dUj2Bt2/fjoiIePXqVXp6utJRAQBKO6rIAAAAAAAAAAAA
ADQWVWQAgILy8vKeP39+9erVvXv3rl69epmK+fPnBwUFtWrVqmLFivr6+nL3
UatUqdKsWbPevXuPUSdN488//7xy5crr16+VTutL8+LFi3Pnzm3evHnWrFkl
Yu/Ro4e/v7+np6eJiYmsW29qalqtWrUOHTqMGjVq8eLFqidw/fr1Bw8evHnz
ZmxsrNJRAQBKO6rIAAAAAAAAAAAAADQWVWQAgIJycnJCQ0N37949b968AQMG
9FDRtWtXf39/Ly8vBwcHHR0dWfuoZcqUady48ZAhQxYuXBii7siRI//++29k
ZGRqaqrSaX1pkpKSHj9+fOXKlQMHDpSIfc6cOX379vX19bWyspJ16w0MDJyc
nLy9vZs2bdq9e3fVExgUFLR48WJpbuHh4UpHBQAo7agiAwAAAAAAAAAAANBY
VJEBAArKzMy8cOHCsmXL+vbt6+Xl5aLC2dnZzs7O3Nzc0NBQS0tL1j6qm5tb
t27d5s2bd+zYsRfqXr16lZSUlJGRkZeXp3RaX5rc3Nz09PTExMTY2NgSse/d
u3fatGnt2rVzcHCQdeu1tbWNjIwsLCzs7e3Lli2regLr1KkTFBS0du3aGzdu
KB0VAKC0o4oMAAAAAAAAAAAAQGNRRQYAyK2oqCgnJyc1NTUhISEmJka1cRoe
Hr5jx47x48c3adLE3Nxc1tKprq6usbGxpaWlg4ODizp/f/+xY8du3br1Ia9k
pcONGzfWrl0bFBRUp04d1Z0qW7asvb29hYWFkZGRtra2rAdGOift2rWbPn36
vn37SjSlY2NjExMT09PTc3NzlY4KAFAqUEUGAAAAAAAAAAAAoLGoIgMA5FZY
WBgfH//w4cMLFy7s27cvRMWWLVumTZvWo0cPHx8fY2NjWZulJiYmrq6uNWvW
bNmyZQ91o0ePXrly5fHjx6OiopROC8XCw8MPHDiwePHioKAg1Z3q3r1706ZN
vb29nZycDAwMZD0wVlZWvr6+ffv2nTNnTog6aW5Xrlx5/PhxUlKS0lEBAEoF
qsgAAAAAAAAAAAAANBZVZACA3AoKCp48eXLixIn169dPnTp1jIoRI0YEBgY2
aNDAzc1N7maptbV1rVq1pMuNHz9+mbpNmzYdO3YsNDQ0ISFB6bRQLDY29ubN
mwcPHpTOjOpOLV68eOTIkR06dKhWrZqpqamsB8bExMTT09Pf379Hjx5j1M2a
NWvz5s3nzp178eKF0lEBAEoFqsgAAAAAAAAAAAAANBZVZACA3PLz82/durVp
06bx48e3atWqnoo6depUrlzZ2dnZwsJCR0dH1mapo6OjdHVpDtJMrqm7e/fu
06dP4+LiMjMzlU4LxdLT01+9ehUREXH79m3Vnbp06VJwcPCIESP8/f0tLS1l
PTD6+vrW1taurq5eXl711HXu3HnatGkhISEP+dcHAPAWVWQAAAAAAAAAAAAA
GosqMgBAJkVFRYWFhQUFBVlZWadPn/755587duxoa2sra320BC0tLe23dHR0
PDw8evfuvWLFihs3biidDd5TXl7euXPnFixY0KVLlzJlykjbKm2u1luf8lyV
K1euZ8+ey5Ytu3r1an5+vnTIpaMuHXil4wEAKIYqMgAAAAAAAAAAAACNRRUZ
ACCH7Ozs+Pj4J0+e3Lp16/Tp07/99ltQUJCfn5/cd7Itwdzc3NnZuUqVKr6+
vl999dVPP/20e/fusLAwpePBe8rPz799+/a2bdsmT57csWPHOnXqVKpUydHR
0cTE5FOeqzJlyjRv3nzMmDHr1q27cOHC3bt3nz17lpiYmJeXp3RCAABlUEUG
AAAAAAAAAAAAoLGoIgMA5JCSkvLw4cMTJ05s3rx53rx5QUFBbdq08fLy+sSV
UWdn57p163bp0mXEiBHz58/fsWPHpUuXoqOjlY4H76mgoODp06dnzpzZtGnT
7Nmzhw0b1r59ex8fH3t7+095rqysrGrUqNGpU6dRo0b9+uuv0rk6e/ZsRERE
Zmam0gkBAJRBFRkAAAAAAAAAAACAxqKKDACQQ1xc3Pnz59etWzd+/PiOHTs2
atTIy8urTJky+vr6n7IyWrly5c6dO0+aNGnjxo3Hjx+/fv3606dPk5OTlY4H
76mwsDAxMfHx48dXr149fPjwmjVrxowZ06ZNGzc3t095royNjZ2dnatXrx4Q
ENCtW7cff/xxy5Yt165dS01NVTohAIAyqCIDAAAAAAAAAAAA0FhUkQEAcnjx
4sWePXumTJnSsmVLOzs7S0tLExMTAwMDbW3tT1kZrVu37nfffbdhw4bQ0NDE
xMTU1NSsrKz8/Hyl48H7y8vLy8zMTElJSUhIuHr16sqVK/v371+1atVPea50
dHSkw2xqamplZeXk5NS5c+c5c+YcPXpUOmNKxwMAUAZVZAAAAAAAAAAAAAAa
iyoyAOC95efnp6enJyQkREdHR6g7e/bs0qVL+/XrV716dbl7oQYGBhYWFg4O
DuXKlfNU99VXX82bN+/o0aNxcXFKp4WPLyoqas+ePdOnT+/QoUOJrXd1dbW3
tzc3N5f7Rtx6enr16tULCgoKDg6+du2a6rPg6dOnMTExSUlJmZmZhYWFSqcF
AJARVWQAAAAAAAAAAAAAGosqMgDgvWVmZkZFRV2/fv3w4cNb1C1ZsuS7775r
2bJl+fLlZS2CSmxsbCpXruzv7x8YGNhXRb9+/WbPnr1jx45///03OTlZ6bTw
8b1+/frixYt//PHH1KlT+6rr1KlTgwYNPD09LSwsZD1+Ojo60vHr0KHD2LFj
V61apfos2L59+/Hjx2/fvv3y5cvc3Fyl0wIAyIgqMgAAAAAAAAAAAACNRRUZ
APDekpOTb926tXv37oULF36rrnfv3i1atKhevbqdnZ2sRVBJuXLlmjZtOnjw
4J9//nmNuj179ly+fPnp06cZGRlKp4WPLyUlJTw8/Ny5c3/99VeJrZ8xY0af
Pn0aNmzo6Ogo6/HT1tZ2cnKqWbNmmzZtBgwYoPosGD169LJly/bv33///v2s
rCyl0wIAyIgqMgAAAAAAAAAAAACNRRUZAPDe4uPjT5w4sWjRor59+9ZQV6VK
FVdXV1tbWyMjI1mLoJKqVav26tXrl19+OXLkyB11ERERMTExKSkpeXl5SqeF
jy8nJ+fNmzfR0dHh4eEltn7Pnj0zZ87s2rWru7u7rMdPS0vLxMTE3t7ezc1N
OoqqzwJfX99hw4atWrXq4sWLaWlpSqcFAJARVWQAAAAAAAAAAAAAGosqMgDg
3YqKigoKCnJzc7OzszPURUREbNu2bdSoUb6+vrK2PYW3957V1dU1MDAwMjIy
Uefv7z9hwoS//vrr+fPnSqeF0uLRo0ebNm367rvvateuXeLASEdIX19fOk7S
oZL10BobGzdt2nTy5Ml79+6NiYlRfe5kZmZKT6i8vDzpyaV0VACAj4AqMgAA
AAAAAAAAAACNRRUZAPBuubm58fHxERER169fP3ny5AkVO3funDFjRvfu3b28
vGStdErMzMzKli1btWpVPz+/FupGjBixcuXK06dPv379Wum0UFpERUUdPnx4
8eLFgwcPLnFg6tevX7lyZUdHR2NjY1kPraGhYa1atfr06TNv3ry9e/eqPnfO
nDlz69atyMjIpKQk2sgA8AWgigwAAAAAAAAAAABAY1FFBgC8W2ZmZlhY2MmT
Jzdt2jR37txZKiZMmNCzZ8+GDRu6uLjIWumUODg41K5du0uXLiNHjpyhLjg4
+NChQ6GhocnJyUqnhdIiPj7+5s2b+/btW7FiRYkDExQU1K5dO29vb2tra1kP
rZ6enru7e0BAQJ8+faZMmaL63FmwYMH27dvPnTsXGRmZl5endFoAgA9FFRkA
AAAAAAAAAACAxqKKDAB4t5SUlCtXrmzcuHHChAnt27dvo6JJkyY+Pj5ubm6W
lpayVjol7u7u0tWlOWzYsOGIusuXLz98+DA2NjYrK0vptFBapKenR0dH37t3
78KFCyUOzKpVq0aOHNm8eXMnJydZD62Ojo6NjY2Hh0ft2rWly6k+d7p16zZt
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
vXv3woULhw8fLicnR+suJScnp6Kioq6u7rRp01auXLm+kd9++408End398jI
yMrKSqajBfD/FBcXh4SEuLq6njp1an1TS5YsmTRp0sCBA2VkZGjNHUJFRWX0
6NHLli2zsbFplsL3799///59QkJCeXk509ECAOjusIoMAAAAAAAAAAAAAAAA
AN0WVpEBALq27Ozst2/fXr161draemFT06ZNMzAwUFVVFRUVpXWXkpubW1NT
c+bMmVu2bHFwcLjdiIuLi7e3d1hYWGZmJj7ZFTqUysrKtLS0z58/e3l53W7K
3t5+/fr1kydP7tOnD625Q0hISPTt23fEiBEmJibNUnj//v23bt0KCAj4+vUr
09ECAOjusIoMAAAAAAAAAAAAAAAAAN0WVpEBALq25OTkhw8f7t69e8qUKb2a
UlRUlJKS6tGjBw8PD627lOT7GxgYrFmzxtHRMTg4OLmRlJSU7OzsoqKiysrK
+vp6pqMF8P+w2ezy8vLCwsKsrKzkpt69e2dvb7906VJtbW1ac4fg4+MTERGR
lpZWUlJqlsKzZ8+2tbX18PDIyclhOloAAN0dVpEBAAAAAAAAAAAAAAAAoNvC
KjIAQBfAZrMrKytLSkry8/OzmvLz87O3t1+yZEn//v3p3pnk5eUVEhISFxeX
lZWVb0RFRWX27NmHDx/28vIqKChgOloAPys9Pf3Ro0d79uwxNjaWb0pGRkZM
TExQUJDuDX9CT0/P0tLS0dExJCSkWeKTRCstLa2qqsKGPwBA+8AqMgAAAAAA
AAAAAAAAAAB0W1hFBgDoAioqKtLS0kJDQ729vR80df78+Q0bNkyaNKlnz550
L0ZKSkqqq6sPGzZs6tSpcxoxMzPbu3fvrVu3AgMDS0pKmI4WwM/Ky8t79+7d
lStXtm/fPqepyZMn6+np9enTR1RUlO6M09DQmDFjxtatWx0dHRtnvaurq6+v
b0RERFZWVnV1NdPRAgDoFrCKDAAAAAAAAAAAAAAAAADdFlaRAQC6gK9fv37+
/PnRo0dnzpzZ0tSKFSumTJmio6MjLS1N92Jkr169Ro8evWTJkn379p1shDyq
e/fuvX37NiEhobKykuloAfyskpKS6Ohob29vZ2fnk01ZW1svWLBg+PDhCgoK
dGcc+RF6enozZsywtLRsnPXbt2+/cOHCs2fPvnz5Ul5eznS0AAC6BawiAwAA
AAAAAAAAAAAAAEC3hVVkAIAuIDs7+8WLF6dPn16xYsXwpgYPHqympiYrKyso
KEj3YqS2tvaCBQsOHz7s5ubm38iHDx++fPmSmppaWFhYW1vLdLQAflZ1dXV+
fn5SUlJYWJh/Uy4uLnv37v3ll19I3tGdcT169FBQUNDQ0NDT02uc9UZGRmvX
rr148eK7d++KioqYjhYAQLeAVWQAAAAAAAAAAAAAAAAA6LawigwA0AUkJyff
uXNnw4YNenp6dG8/tsDQ0HDLli0PHjzIzMxkOiQAzIiPj79x48bq1at1dHSY
ykQeHp7Ro0dbW1s/efIkD9tsAADtAqvIAAAAAAAAAAAAAAAAANBtYRUZAKCT
Ki0tzczMjImJCQoKevjwoY2Njampab9+/dpz45GXl1dSUrJXr17a2tqGhoar
Vq06e/bsmzdv8vPzmQ4PADPS09M9PDyOHz++ZMkSAwOD/v37Kysri4mJcXNz
t1tikp81aNAgc3Pz33///dmzZ58/f46Pj8/JySkvL2c6PAAAXRZWkQEAAAAA
AAAAAAAAAACg28IqMgBAJ5WZmRkUFPTkyRMHB4fdu3cvWrRo5MiRSkpK7bbu
SAgLC/ft23f06NELFizYsmXLuXPn3NzcwsLCSkpKmA4PADPy8/NJYj548ODU
qVMbN240NTUdMWJE7969+fj42i0xubi4+vTpM27cuOXLl9vY2Fy9etXDwyM0
NBSfkAwAQB+sIgMAAAAAAAAAAAAAAABAt4VVZACATiomJubJkycnTpywsLAw
NjbW19dXVVUVFxdvt3VHQkJCYvjw4UuXLj1y5MjDhw/fvHkTHh6ekZFRVVXF
dHgAmFFWVpaamvr58+dXr17dvn17//798+fPHzx4sJCQULslJicnp5SUlIaG
BknP6dOnr1u37uzZs15eXsnJyUyHBwCgy8IqMgAAAAAAAAAAAAAAAAB0W1hF
BgDopIKCghwcHCwsLAYNGiQjIyMmJiYkJMTDw9Nu646EnJzctGnT9u/f7+bm
lpWVVVBQUFJSUlVVxWazmQ4PADPq6uoqKyuLi4vz8vISEhJcXFy2bds2btw4
ERGRdktMDg4OXl5eYWFhcXFxWVlZQ0PDjRs33rhxIzIykunwAAB0WVhFBgAA
AAAAAAAAAAAAAIBuC6vIAAAdWXV1dUlJSV5eXnp6enIjSUlJDx482LVrl7Gx
saysLK1rjVxcXIKCguLi4nJycr2aMjAwWLNmjaOjY3BwMNOhAuhwKisr379/
f/bs2WXLlg0cOLBx7qioqJDMFRMTExAQ4ODgoDWFyY+bPXu2ra2th4dHclMZ
GRn5+fmlpaW1tbVMRwsAoHPDKjIAAAAAAAAAAAAAAAAAdFtYRQYA6MgKCwtj
YmLev3//+PHj200dOHBg0aJF+vr64uLitO4x8vHxKSkpDRo0aMKECfPnz1/Y
yLp16+zs7J49exYXF8d0qAA6nOrq6oiICFdX199//93CwqJx7piamo4ZM0ZL
S0tOTo6bm5vWFCY/wsjIaMWKFUePHm1WRtzd3T9+/JiQkFBcXMx0tAAAOjes
IgMAAAAAAAAAAAAAAABAt4VVZACAjiw1NdXHx+fatWv79u1b39ScOXNGjBih
qqoqJCRE6x6jsLCwtrb2zJkzrays7OzszjXi5OTk6ekZEhKSnZ3NdKgAOpy6
urq0tLTAwEA3N7c//vijce4cP358zZo1xsbGGhoavLy8tKawqKhov379xowZ
M3/+/GZlxNbW9vbt2/7+/khhAICfhFVkAAAAAAAAAAAAAAAAAOi2sIoMANCR
RUZG3r17d+fOndOmTRvSlIaGhpKSkpiYGA8PD617jOLi4qNHj96wYYOjo2NA
QEBwI+Hh4YmJiTk5OeXl5UyHCqDDqa+vLy0tzcrKio+PDw0NbZw7Pj4+Z8+e
tbCw0NfX5+fnpzWF+fj4JCQkVFRUNDU1m5URU1PTgwcPPn78OCkpieloAQB0
blhFBgAAAAAAAAAAAAAAAICup6Ghob6+vq6urra2tvr7qqqqfXxqjh2rmzWr
Xl6+4cdWkTU1G5YvZzs41IWG1rTws9oEeTrkSZGnRp4g0zEGAGgbpKCx2WxS
32pqmldRPz+/U6dOmZmZqaio0LqsSHBycnJzc/Pw8PA1paSkNGfOnBMnTrx7
9448SKajBdAVFBcXP3/+/MCBA1OmTBEXF2+WdCQNubi4SErSnfWamprLli1z
cHAICQlpVnxIOSIdFylN6LgAoJv7u08jJfG/+7TGMjKqHzyo3baNbWRU/8Or
yCNH1m/dyibfJz29jefo/y7ypKkjz4tM1kwHGAAAAAAAAAAAAAAAAAA6rtra
2vz8/MTExM+fP/v4+Lz+rjfnzgWvXp0walSepGTNj60i9+pVPnVq1rZt0dev
B3z/B7UB8kTI0yFPijw1rMMBQJdRVlaWmZkZFRX18ePHZnXv0qVLGzZsGDdu
nKysLK0bidzc3JKSkr179x40aNCoUaPGNjJr1qzdu3ffuXMnLCysrq6O6WgB
dAUk6wMCApycnLZs2WJsbNw440aMGKGtra2ioiImJsbBwUFr4vfs2XPq1Knb
tm27du1as+ITGBgYGxubnZ1dWVnJdLQAAJhUXl6elZUVHR1N6nYLs+qjR+9t
bcMXLkzV0Sni5v6RN/mSrxo4sGjBglTyfch3a+NZuik/P7+IiIi0tLTi4mKm
AwwAAAAAAAAAAAAAAAAAHVdFRUVsbOzr169v3rx59OjRw99naXljypRXAwZE
9+hR9mOryDIy+Xp6IbNnu1tZXW7hB/28Y8eOOTs7kycVFxdHniDTMQYAaBs5
OTnBwcFubm4XL15sVvfWrl07ffr0gQMHiomJ0bqRyM/Pr6qqOmrUqIULF27b
tm1XI+RhkNrr6+ubnJzMZrOZjhZAV1BVVUX6tJcvX169evXAgQONM27Tpk1z
584dPny4iooK3R+MLCMjo6en98svv1hZWTUrPo6Ojp6enuHh4V+/fmU6WgAA
TMrPzw8NDXV3d798uaVpd9euM4sX/zlqlH/v3qlcXOwfGKu5uOp79Uol34F8
H/Ld2naUbsbe3v7hw4cfP35MT09nOsAAAAAAAAAAAAAAAAAA0HEVFxd//Pjx
2rVrO3bsMDExmfZd0w0Nt2pqXpGT8+PnL/yxVWRh4VRlZa+BA+1Hj179/R/U
BsgTsba2vn79OnlqJSUlTMcYAKBtJCUleXh4nDp16tdff21W90aOHDlgwAAF
BQUBAQFaNxKFhIR0dXUXL15sa2v74MED90ZevHgRFBSUkJBQWFjY0NDAdLQA
uoLa2trc3NyYmBjS0nh6ejbOuNu3b+/Zs8fU1FRLS4ubm5vWxBcWFlZWVh44
cODo0aObFZ8NGzZcuHDB29s7MzOT6WgBADApLS2N9EL29vZr1qxpYVadOHGh
nt5BVdX7kpIRnJx1PzBWc3DUSUhEkO+gp3eIfLc2nqWbWrJkyZEjR1xdXaOi
opgOMAAAAAAAAAAAAAAAAAB0XPn5+R4eHjY2NtOmTZORkZH4LkkREWNBwb28
vG6cnNk/torMxRXDx+csJLRBVHTY939QG5CVlZ0xY8bBgwc9PT0LCgqYjjEA
QNuIiIhwcnJas2aNrq5us7onIiIiKCjIy8tL94ejioqKTpgwYefOna6urhkZ
GYWNFBUVlZWVVVVV1dXVMR0qgC6ioaGhtra2srKytLT069evjTMuLi7u1q1b
VlZWhoaGPDw8tCY+FxcXHx+fkJAQqQDNis+oUaO2bNly7969xMREpqMFAMCk
mJgYZ2fnjRs3Dh8+vIVZVUxMXVh4IT+/HTe3H4tV+0OTdS35WvIdhIUXke/W
xrN0U/3791+6dOn58+cDAwOZDjAAAAAAAAAAAAAAAABAF1RfX19eXl5QUJCe
nh4XFxfTafn5+V24cOHXX3/V09Nr8SP1OFgsQxZrC4v1gMXK+rFVZBYrksW6
wmKtYLE0aV2Y4eHhGTp06KpVqy5evOjv789UbBMSEjIzM79+/VpVVcX0gQWA
TqOmpqa4uDg7OzspKalZVXn8+PH+/ftNTEx69uxJaxXl5OQUEhKSlJRUUlJS
V1fXaIRUV3Jl/F1dKysrmY4WQPdVWFjo7e196tSpxYsXa2lpNc5TVVVVRUVF
CQkJuj8mnejXr9/8+fOPHTvm5eXVrGSlpKTk5OSUlJTU1tYyHS0A6BwaGhoq
KirIlJ2RkREfH99ec1vbcHd3t7W1NTU1JUW4xcIpzWLNZLGOslg+P7yKzGL5
sljHvn0faVqLvIyMzKRJk7Zv33737t3o6GimYosLBQAAAAAAAAAAAAAAALqq
urq6zMzMkJAQLy+vW7duOXVa9vb2GzZsmDp1at++fbm4uL7/ImRnWkXm5ubW
0NCYNm3axo0byRNkKrZ//vmnj49PVFRUfn4+0wcWADqNoqKi2NjY9+/fu7q6
NqsqNjY25ubmhoaGMjIydFdRBQWFQYMGTZw4cdGiRcsbWbdu3enTp93c3CIj
I2tqapiOFkD3VVpaShrR+/fvHzt2zMLConGezps3b+zYsVpaWnTXCkJZWXnM
mDHkARw9erRZySKF4uPHj4mJiWVlZUxHCwA6h/r6+uzs7PDw8FevXt25c6e9
5ra2YWtrSyqwkZERaaJaLJydaRVZTExMV1eXXCu7du1iMLbkQvnw4QMuFAAA
AAAAAAAAAAAAAOh6qquro6Kinj59amdnt3Hjxl87rcWLF0+aNElHR0dOTo6T
k/P7L0J2plVk8kTk5eXJkyJPzdzcnKnYWltbOzo6ent7p6SkMH1gAaDTyMrK
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
Jmpra4uLizMzM+Pj40Pb2rt3786fP79q1SoDAwN+fn6mXyLrwrCK3KENGDBg
4cKFx44d8/T0/Pm0Cg8PT0xMzM7OLi0tZbPZTJcQgK6goaGhvLw8Nzc3OTn5
y5cvjTPu48ePly9fXrt27YgRI3r06EFrreDl5RUTE1NUVFRXV9dpasaMGbt3
7/7zzz9jY2OZjhYAtCVSZ27cuLFly5YJEyY0zvqBAweqqqrKy8uLiIjQ/Tc+
pKWlyU8nj+HmzZvNuo6oqKjU1NT8/HwsfQH8T5WVlQUFBSRloqOjf77nb+bp
06e2trZz587t27cvrQWh28MqcsdFWnHSkJO2nDTnpEX/+bQid1xKSgruOAAA
AAAAAAAAAAAAgDZRXl6emJjo5+fn6up6qa2dOnVq3bp1U6ZM6devX9f9E64d
AVaRO7SePXuOHTt25cqVhw8f/vm0cnR0fPr0aWBgYGpqak1NDdMlBKArqK+v
z8zM/Pz5s6en57Vr1xpnnJ2dnZWV1YwZMwYMGCAgIEBrrejRo4eamtrIkSPn
zJmzuql9+/Zdv3797du36enpTEcLANoS6cNfvnx5+fJla2vrxlm/atUqExMT
AwODXr160f2GPlFR0cGDB5PKs23btmZdx61bt8jDCw8Pz8vLYzpUAB1dQUFB
ZGSkt7f3nTt3fr7nb8bGxmbp0qWjRo1SUlKitSB0e1hF7rhIK04actKWk+ac
tOg/n1bOzs644wAAAAAAAAAAAAAAANrK169fAwMD79y5Y2NjY97W5s2bN27c
uIEDB8rLy9P9eW7dG1aROzRJScl+/foZGRnNnj3759PKwsLi999/f/jwYVhY
GD6+CaBNsNns6Ojop0+fnjlzZu3atY0zbsGCBRMmTBg0aJCioiLd76mRkpIa
NmwY+aHkRr7Z1KNHj96/fx8bG0tubaajBQBtKS8vLzIy0sfH5/79+42z3snJ
adeuXWZmZoMHD6b7I9kFBQV79uypq6trbGzcrOvYvHnzhQsXXrx4kZSUxHSo
ADq61NRUb2/vy5cvb9u27ed7/mZmzZo1YsSIvn37iouL01oQuj2sIndcpBUn
DTlpy0lzTlr0n08r3HEAAAAAAAAAAAAAAABtKCcnx9PT88iRI6ampmptrU+f
PgoKCuLi4gICAhwcHEy/ctWFYRW5Q+Pj4xMVFZWVle3Vq9fPp5W2tvaSJUvs
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
5VVWVjIdLYAmysrKsrOz4+PjQ0JCWtn0+vr6nj9/3tLS0tDQkO7PIYf2wcXF
JSoqqqio2K9fPz09vcZVdMiQSerqW+Tlr/fo8ZmDo+4HxmryVeRr5eVvqKtv
HTx4cptP1gMGDOjZs6ekpCQfHx/TgYSWiImJGRkZrV271sHBwc/Pr5UFh8wv
ZIohswyZaJiulwDQ5TTUU3WVVHURVZFLlaaV5ybmpEQnRIeHfv7UyhrVZQQG
fQoOjwqLS/2SWhCTW5n8tSanrK6kil3D7jDvCm+oo9hVVF0pVVPIrsguy0vJ
T45NiwyLDQyMJNNWQMDngICgf3hmpL/9EhAQFxCQ/Dk0MzqhICWnNLe8ppSi
KiiqmqLqyDdm+pm1pR+M0k/79DkgJCogPDEgKvNTfH5UenFqQUVBRU1lfUPN
tyCzO2OcG9j/Vx9ySH0oy03ITo6OjwoLCW65PgR/i3RMQEBiUFD6l+jcxPTi
rKKqInY96WOqKKqWouqZfmY/jfw+yS+2koyS7NrCyq8ZRanxOZHhaQEBCQEB
0QEBYeREtHxeQsLCYxJjUnMT8yrSS6ncCqq4mqqqo+pbPCX1tRW1ZbmVhYll
WWFfUwIy4wISIgMiQgICA9vyLHcXQZ8CPn8JCIsPiEwPiMmLSC1KyivLLa0u
q6vvxDkLAAAAAADwc4qKiqKiory9vW/dumXXatu2bZs7d66enh7dC1fQbmRl
ZQcNGjRlypQVK1ZYNbHJzMzOyOixmlqokFDJj60iS0hkDxjwYcKEu+bmR6za
2vLly42NjXV0dGRkZJiOIjQnKipKfjUmJiabNm1qfYW5fv26l5dXeHh4fn4+
0zUSoImcnJyQkBAPD4+rV682PrRnzpwh5YgcdXLgRUREaE0rAQGBPn36jBgx
wtTUdMOGDY3r4b59+5ycnN68eZOcnMx0qACgU6qpqYmNjSW3sIODg7W1deMK
s3r1alLlDAwMVFRUeHh4aC100tLSQ4cOJeMGGTqaNQk3b958+fLlly9fCgsL
mY4WQBNZWVnBwcHu7u6Ojo6tbHqPHz++du1aMoJpamqS+53WtIL2wcfH16tX
r+HDh8+ePXvdunWNq+iqVbtnzHDU03upqJjAycn+gbGafBX5Wj29V+T7kO/W
5pP1ggULxowZo6GhQXc3Cz9JWFhYS0tr+vTp69evP3XqVCsLDplfyBRDZhky
0TBdLwGgy6mvpaoKqeJkKi+MynifG/481Oeh58MbTn9cbGWN6jLOnr9w2fn+
dTffu2+jXcMKXyeUh2ZWpRbVltV0mK1JdhVVU0hVZlBlcTW5n7O/vIl8/fjd
vRtPztq7kGnLzo40suf/4ZmR/33Hzs7Nzs77j6uBDzyi34RkhueUZlBUHkUV
f1um7DDPsC38YJR+2gVHuyt/2jl72f358YJ71H3/FN+YvOi8ssK6zrx/y66h
KvOp4iQqN5RKf5cV5hn8+oH7/euODhdajMWlb5F+aGfnde68352H4c/9U4KS
C5Oq60gf85Wiyr9Fo5OroagyiiqkqOya8vj8+I9Jb5+Fuji/s7PztLN7YGd3
nZyIlmPkeO2m6/OHvmFeEXl+GVR4HpVSQhVWUXUtnpLa8vzyrPDCWK/soOuJ
r+0Cn9p53rO7dcXurH1bnuXu4txFuz/u2N14Znfvvd2jL7d9E19GZIdllmRX
1ZZ9K4w137aRAQAAAAAAupWsrCxfX19HR8dt27aZtdqkSZN0dXV79uyJz27q
MlRVVadMmWJlZXXhwgWXRu7dczl06JW5eaiBQbq4eOWPrSIrKZWMG5e4enXg
6dOeLm3t/PnzGzduNDY27tOnD9NRhOYEBASUlJQGDRo0fvz41lcYcg7Jr/XF
ixcpKSlM10iAJhISEjw8POzt7detW9fs3JJDrqOjQw483atEIiIienp6Cxcu
PHDgwJ07dxrXQzc3Nz8/v5iYmIKCAqZDBQCdUl1dXU5OTmRkJBkQXF1dG1cY
JyennTt3zpkzR1tbm+4PzCQjRq9evci4QYaOZsX2t99+c3BweP36dXp6OtPR
AmgiNjb26dOnp06dsrS0bGXTSxJq9OjRWlpa8vLydG/4Q/sQFBQksw/55e7Z
s+fmzZuNq6ij4+Nt296ZmERpauZxc9f/wFjNxVVPvtbEJJp8H/Ld2nyyPnr0
6PLly0eMGCEtLc10IKEl5BZWUFAYOHDg2LFjTU1NW1lwyPxCphgyy5CJhul6
CQBdDruaKk2ncj9TyS+oqNuJL895Xjtof3DzulXLWlmjuowFi5dabDmw8cSN
nTff2nqlXwn46hlTGp5dVVjRYZbR6sr+2rAtjaIKP1QkPYvzdnpz5eit3Zt+
X7hgD5m2zMxII7v4H54Z+d/WZmbHzcwcf13retDunZNH9IuEgkiKSqaoHIoq
/fb5n13HD0bppy2xNFuzz2zLBbN9D5ae8j1wL/TGu+S3SYXpteyv34Jc1RnX
GusqqZJUKieYSnpORTrHeZ11v2Jz+oDV6pVLWozF8m+RPmRmdmGR+Z0dB1+e
vxf6+HPGp/KaeIrK/LaNXM30M/tpld/2kNMpKq7y68fUjw+Cnc8837vFed68
s2ZmNmZmm8iJaDlGqzf+Znv+0I0XF7yT70RRL1Oo0Fwqo4yqafGUVH1N/Rr3
MsPvQvxjq6CrZq4nzc7uNtu+xmzB/LY8y93FomVmq3aYbTpjtvuO2RHvHTc+
ObyK94rOjSutLqCokm+/4y5VGwEAAAAAAFohKSnp/v371tbWkyZNUm41WVlZ
cXFxQUFBbm5upl+Egbaho6OzYsWK8+fPf/jwIa2pR49y9+wpmjKlUlb2Rz67
ifynrl47f375iROFr19np7U1f3//c+fOLVu2bODAgUxHEZrj4uISEBAQExOT
kZFpfYUxMjLatGmTs7NzVFQU0zUSoInQ0FAnJ6d169YNGzas2bklh5wcdXLg
ybGnNa0kJSUnTpxILm5yfZNLvHE9zMzMLCgoKC0trampYTpUANApNTQ0VFVV
lZSU5OXlZWRkNK4wX758uXnzppWV1ciRI+l+zwUZMYSEhMi4QYaOZsV23Lhx
W7duvXv3blxcHNPRAmji06dPly9ftrS01NPTa2XTq6SkJC0tLSoqys/Pz8nJ
SWtaQfsQEREZM2bMli1b7ty5Exsb27iKhoZmXr2av3ZtybBh1Tw8DT8wVnNz
NxgYVK9dW0q+D/lubT5Zu7u729jYmJiYkJPJdCChJaRckIuYlA4ygJBfVisL
DplfyBRDZhky0TBdLwGgy6mroL7GUamvqS83qY9Hw25ZXds3f/38scOH9G9l
jeoyeqv305kw12ilzfSDrgtvxO3yzLkW9PVdUnl2aYdZRqstosriqcKPVLZ7
acSVz3f3uuxacnjm6GW9e81SVh6rrKyrrKz+D8+M9LfTlJVXKCvvHDzs7Lx1
rnuvBjqHZn6gqC8Ulfptn7Lzf0RtIz8YpZ+moas8dLbyhM3Ks+36rXow94SP
zaMvDyOy4xp9FHCHOUmtVlNGFUZTKS+piOuUv23wjQ1/7DaznDt6qE6/FmMx
gEz/ysoLlJU3qaofmzL/ltUJnwuv418WV4VQVAJF5X5b8uzkyO8zm6LiKCq4
LNcj2uPMy0Nrrs8ab6uivEFZ2UxZebSy8v+Ikd7IcQutFhy4uelu5LGP1K1I
yieNii+iqlo8JRW5UTnBzvFPNodcHOW1R/ncr8obZihP1lfu3bMtz3J3odpf
efAU5TFrlGceU1581/jAy223P98ISPv8tTKLogq+few1/o0eAAAAAAA6Lzab
XVlZWVRUlJub2/oXm3x9fc+cObN48WJNTU2mX07plHh4eISEhCQkJOTk5Jie
e3/KtGnT9u3b9+TJk4yMjMbnqqGB8vOjTp6k5syh5OV/ZA+Z/Ne/P7VyJXX1
KkXHYml6evrjx4/37t07depUBgPYbluI3UHv3r1NTU2PHDni5eXVQvkiZzU/
P7+kpKSqqqqBnFQAGtTX15O7tbi4mNytpNr8vaExc+ZMRUXF9kwKctcICwuT
u0ZeXn7QoEErVqy4cOHCx48f6+o630sQANBJkQv39evXJ0+eXLBgQd++ff9+
ZyJpg9v5nYnq6urz588/ceKEt7c36QTy8vLQCUCbq62tLSsrKywszMrKav1k
/Z+RhGRHeyZFl9TC+xE6uP79+5ubm9vZ2b179470kI3PVV4e9eQJZW1NjR5N
8fD8yFhNvmrUKGrHjr++D/lubS4sLMzJyWn9+vXDhw9nKoAKCgpSUlIiIiJ8
fHwcHBxMn8QuhcwvZIohswyZaFooZWTkIXcrGX/I3UpGobY/ZwDQJdWWUwWR
VKIHFXKR8tnxycH87MbxC8b36yUnynTxa2/c/MISGsN6TbLQ+dXeyNbb/I+g
g65hd97GBEUmkRKblkZ6y9y0tIK0tKLsnNL8r5XFFbUVdfU13/Z42RTVHmW3
ppAqjabyfamMP0uC7T46bnBaM3WbgcZ0Hm5DFkuTxZJnsf7pfacKLJYeizWT
xVot2/PwuPm3Nti/uxSY5kNRIRSVSFH5nWMVuYGqr6Pqqv46sdXFteWF5UV5
hfnZ2VkZza/DxPC06DdpoffTAi9Fehx4cnzZKfOxqwf3mcDDpUtmUhZLhsXi
p+MACcqw5IeyNExZQ7cITbEbttHZ4qynvWeQd3xSUFpaWFpaTFraXx9JkJ6R
lpWblvs1raA0ragqp7Tma2VdRS27rr5DDsU1JVReOJXwlPp8nnqz9cOFhafW
jjEd3VdRquU/tyrGYvVnsSawWEv4BHcOGe9gvuf5sWfRT4sqAygqhqKyvi3y
dnKlFJVBUZEU9aEk60H4Q5unW8zOG2pt5eBYyGKNYbH6slj/I0aKqv0nmk/Y
dHGJY8hOX8ohlHqeREUXUpUt/mtxWVZY5geH6HtLPx5Tf7yOdfgX1kIDlo4y
iwcvav0APlGW7BCWxlzWMGuWsePgTW4rL3+88C7pQ0FFOhkAv30wcuf/+G4A
AAAAAOi+Kisr09PTQ0JCXr161fo/wWlnZ7d27doJEyb07NmT6bGtUxIREenT
p8/QoUONjY2Z/mtAP2Xnzp3Xrl3z8/PLz89vfK46/ipyXl7e+/fvnZycrK2t
GQzg+PHjdXR0lJSU6P6cwO5ATk5u1KhRFhYWx48fb6F8ubq6vn37NjIyMicn
h83ufH+eDjqF6urqjIyMsLCw169f//nnn0eOHFm2bJmhoaGUlFR7JoWYmJiq
qqqBgcHUqVP/To3Hjx9HRUXh5ANAu6moqCCDBrl/Dx06ZG5uPmnSJF1d3V69
egkLt/ziWBsjvdbYsWMtLS1PnTpFOgFfX190AtDmioqKEhISAgICnj171vrJ
+u/UIJe1uLh4eyZFl0QKCykvpMiQUsPgiPcDSKNI2sUHDx6Eh4eTNrLxuer4
q8iJiYmenp729vbr1q1jKoAmJiYjR47U1NSUlpbGR4W3LTK/kCnm7yPaQikj
p9fHxyciIiIrK6u2tjOslQFAR4BV5P/DxSsgotxfTm+a6vT1A1eemrTl0vKD
V/bY37h07Q4psS4upLd87eLi7+IS4vEi7v3njIjUotTymgKKKiYDV/ts83bn
VeSG+r8+obc8hypOovIjSpIDk8J8A98+93R/1Pw6vH3V5fppF8cDLpc2Xzu2
1NbSeM2kwTPVFXS5OPuyWIosFmn3eek4QPziLIl+LOXRrH5mAgbr+s/eNW3D
7+uPXTp1684lF5crLi43XFzu/HVbu7o8e+XyOsjFP9YlJOdF7NfgjLLUoqry
mg45FGMV+buwitz5YRUZAAAAAAC6tOLi4tDQ0EePHp05c8aq1ZYuXTpp0iRt
be123qrqMuTk5IYNGzZ//vydO3fadWZ379718fGJjY0tLS1tfK46/ipySUlJ
TEzMmzdv7ty5w1T0/k46ExMTHR0dERERpk9lpycmJqapqTlu3LhFixa1UL6s
ra0vX77s5eVFzm1NDf7UFdCirKwsIiLi6dOnZ8+e/e2330i1Hz16dN++fXv0
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
DR8+nNa5pgWksJDyQopMV3oTFlaRW4MkKenGHRwcNmzYMHbsWFqPGWm5SeNN
2m/8jbDG+Pn5SWSWLl16/PhxDw+PFkplcHAwydDc3NzKykqmDw4AMA2ryK1C
hiNFFkuHxRrHYpkpa2weNefU0n339v/5/o8PMQ8jUn2S87/kV2RXUYU1VGkd
VcX+a4+07XWHVeT6GqqunKotoqpza4rTijLiMmPC4j8FRPi8Dnl2J+jPMx+u
7Xh3fqnzrqk7FuhPH96n8x1UPiGWohZLZwZr3AaW2WmNjY5zDt/Zd/XJn89e
+X34GBQWFRafHp1ZklRMZZZRhVVUeS3Frv/fYaMLVpG/C6vInR9WkQEAAAAA
oHPKzc39/Pmzu7v75cuXj33frl27Fi1aZGRkpKKiwvQAxgAZGZnBgwdPmzZt
1apVO9rRqVOnHjx4EBgYSH5NTJ8UWmAVuZVSUlJ8fX2dnZ1tbW1pPXIbNmyY
PXu2gYGBsrIyJyctfwuusxAQENDQ0Jg0aZKFhcWhQ4daKI83btx4+fJlVFRU
SUkJ0ycFOqLq6urExMS3b9/eu3ePVPXGh2fv3r1LliwZM2ZM7969ubjo/TdZ
KSmpgQMHTpkyZeXKlc0S387OztXVNTg4uKCggOloAQD8JSsr68OHDy4uLseP
H29WskjZnDBhgqampoiICK1lk5+f/3udwNmzZx8+fEgeYVpaWn09gy+7QgdS
W1tLOnY/P78///yTXKwttI5WVla//PLLkCFDyNVM6xnugHh4eHr27GloaDh3
7lwSB1rnmhaQwkLKC0lhUmqYPjhtBqvIrVFeXh4ZGenp6eng4LBz505ajxlp
uUnjTdrvbpjpLSBFQE1Nbfz48cuXLz9w4EALpdLJycnLyysiIuLr169MHxwA
YBpWkVuFh8WSZLF6f9tGNpJWMtUyXD9uge2CHVc2n3P7/U+/G76xXrEFYcVU
fBmVVUUV11K1dMwxXX8VueGvPeTqPKoimSqJLEv7kBLoGfz0zosrF12OHrmx
f9sf1hZnN5meWD1+i5me6ei+Q/vJyYp3tjcl8fCzJHuyeuv/tY1sZKE4Y4Ph
km0LNu7Zsd/2tP35P24/uuMV4Bac8TqVCs6h4ouovAqqms3cLwSryN+FVeTO
D6vIAAAAAADQOSUlJXl6ep45c2b16tUm3zd58uShQ4eqqqpKSEgwPYAxoHfv
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
ePLkSUdHx9+/d2xtbUF5GTdunLCwMLOLxGBRVFScPXv2li1bLl68yKDYPn/+
PCEhIScnp7GxkdnzDA08Bm335s2bO3fuXLBggZaWFifn4L6WkZ+fX0lJacqU
KfPnz+92M+7bt+/OnTtxcXFVVVXMHi0IgqD+Ky4ufvfunY+Pj5ubW7dCZ2lp
qaenJy8vz8PDM9jFduLEifb29gcOHPDz8+ta84ODg0GlzcrKqodJvtECj8eX
lJSkpKSEh4czWOndvn177969dnZ2Ojo6g30FDiouLi45OblJkyaB9e2KFSt+
fzvQ1fr168+cOfPs2TOwZCIQCMye21EFRpGHG7DkBu0ALL/BInxAbp+5c+fq
6+srKCiM6ArTe6AQmZmZbdiwwcvLi0HthW0Xgv4IMIrcH9wIIoog8giiziNg
MlbHabL1yfnbn6678OVoQI5fXEV0fnN+GwWUzlYUJQxg0HdURpGpJGpbbXt9
HrE8BZf3rvTTk68RV6IeewRe2+J9YMlehxmrjDVmSYuMRxAlBJEAu0X6+dSj
EoZPSFJNX91sudHqw3P3+6+7FHb48cfrUbmh3xsSSwiZNaTyFgqWNGDB9l6B
UeQewSjyyAejyBAEQRAEQRAEDSft7e05OTnh4eFXr151c3Pb1LMlS5aYmJiM
GzdOUHBk//pOSUnJ3Nx8w4YNZ86cuTHQgoKCEhIS8vLyWltbmT23owqMIg83
RCKxpKTk06dPoaGht27d+v17x9PTc82aNaDIyMjIMLtIDBZxcXFtbW1Qf1au
XMmg2B48ePDu3buxsbHwcPVRiUwm99R2165da2VlpaenB+6CwT7EbMyYMYaG
hg4ODuB663YzPn36FFx+4EM2Nzcze7QgCIL6r76+PiMjIyoq6tGjR90K3e7d
u+3s7CZOnDjY+xouLq6xY8dOmTJlwYIFYPfRtebv3bsXrKDAx4MvlB81mpqa
UlNTAwMDT58+zWClt379+vnz5xsYGMjLyw/2k0eDio+PT0dHx9bW1t3d/dq1
a7+/Hejq9u3br169SklJKSsrA2snZs/tqAKjyMMNWHKDhTdYfoNF+IDcPn/3
OCEhIWbXiaEgKiqqqalpZma2fPlyBrUXtl0I+iPAKHJ/cNIjsaIIIs3JPV5c
br7ypG0TZ5+fueLZ2iOxJx6lB3yu/NxMLKZHLltQdMBOlh+NUeSOdlx7Qz6+
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
ataOxztuJfomVnxoRNNb0WIw2OSfByP304iNIneQ8eSGfHxRfOv3gIaEi8n+
Ox4esfFYpeswTXCmGjJBDlEQRQT/7aP3jI+eQx6PINMw3NaK2o7TbHct3XXa
7YYvWMGf8vO75Od308/v/sPHT0Ijn8Wkvk4tfpuL/XleYl17DY5K7P8cdEOj
X05EFMWT8VXYyozarNjSpGfZkX6fX/lFBfuFPPbzv+fne9Xr+knXK3uXXthi
cmS5huMsBVMdcSVJXjbW3kaRObiFBaUmSmnYKhu76s67bOsa6H4t4erbwvAi
Qkozmov7mUbGD0YeBUaRewSjyCUwigxBzNHeijZmo6XR6A9/StLpFH8338Mr
Ni+3MNLXVfvD6BhMnWrnPNf18tKL75yfVZ5+Xx+U3vq1kthKGjYn77VV/oxZ
5oei33wqww+HXd54fNtCO8upzB65YUzXUM3EXs1qp9oy7/Gbntufi/N8nhn8
vTqrrb2WvnbHD/6qdcBRSdiWoviKD5dznjqmXtQN3qt2yklt7Ty16QYMh0LH
QG2andpcN7WlF9Wdny068/5wUHrA18r0VlINvQ2PxKHojtiA1qejxRFoxh3s
++Pxvtsv71nquMhUV1triK63YWPC1FnTl22fv+fm8msJW19UXUxoeJmFzawh
DdyeBYKgIVJbWxsZGXnmzJmlS5cyvvHl5eXFxcX5+PjY2P777VvMxc3NbWxs
vGXLltu3b6empub2TkFBQWVlZVNTE4FA6OyED1aMNjCKDPUViURqbm6uqqoq
LCzsZRnJzMx88OCBu7u7mZmZsLAws2vhf2BlZeXl5RUVFZWVlVVVVWVQ/xcs
WHD06NHQ0NCysjJmT8toBnpQWFjYiRMn7Ozsuk2BkpKSlJSUkJAQBoMZ7Atj
4sSJTk5O3t7eCQkJ4OL/9dZgeJAmBEFQb4BNBNhKNDY2gpIONhdv374F+6xl
y5apq6sPdvUGOyAREREZGRllZeWuHWT8+PErV668cOFCTEwM2Okwe4RGs5yc
nICAgL17986ePZvBsgpMEJgmMFlgygb7qvh90tLS8+bNO3jwYHBwcC/Xw0Bx
cXFNTU1rayuZTGb2tEADD0aRod/R3t7e0tJSXV1dVFTU+6ryq7rOmTNn+D/E
wcLCwsPD86sjq6ioMGgHVlZWv6orWDAwe1ogCPrLHxdFRunxUQoozyhKpJFb
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
cYs4u+TCCqP1OrLGLIg2PVchSs9YMMDKzsnBK8QlIs0npSKioqdmsWqa86mF
p0I3PMk7EV33+FvLx1JCDW6kLfI7yCipBsVmoY0f0OqXZbHe8ddc7m+ef2S6
ppOS+FwpwYnCPFLcHAzHhQ2R0EK0FiEzDyBL/JV2RS27+fVSdElSWWsb/VQ0
Mj0qOjCRKhhF7hGMIpfAKDIEMQeMIvcKF73mgGJswMY2W0Zltb7FXuuNlzec
CTzsH3Ptzbfg1NIPpdgcHFpK+Fl82qhox2BkkWEUua9GSxS5g1BHqUkh5T/D
f7lY9cYt0sv+3Jqpq/XGTsSwK9FfgSH4X8tg+ptWBOiX8ViERVNcY7GGrYfJ
vqcL72e4RNdc+9r0thhf3DrCcwgwitwrvPTdHNjqGWJ4rMZqrTOaf2jhdp8t
F0OOPY679S4jNK0iuRKf14aWE38elE2gDbNHMiFoxGpvby8tLf306VNoaOiN
GzeudnH69OkNGzZYWFioqKiwsf3ns+pDgZubW1FR0cjIaNGiRVu2bNnWswsX
LoSEhKSlpcGjuqDfAaPI0LBSU1Pz8ePHx48fnzhxgkEBXLdu3bx58yZNmiQt
LT08/0gqLy8/Y8YMR0fHY8eOXf1fz549S0xMLCwsxONH/q9U+4hIJBYXF4Mp
Bv3Lx8en67CAGQfTamZmNgQRJjExsfHjx5ubm69cubLbpeXl5RUcHPzly5em
piZmjxYEQdCfiMFKYNmyZTNnzlRXVxcUZJx5+F2cnJxqamqWlpabN28GfaFr
t/L19X316lVKSkp5efkfGFsFG8+cnJzY2NiAgIBuy5uDBw86ODiAbaykpOSg
zk7viYiIaGpqgqUF+GAMVpX79u27devWu3fvCgoKaLQRflIExFQwigwNW/X1
9Z8/f3769Onp06cZ1ENnZ2dra2sDAwM5OTkODoYBJyaRkZGZNm3aqlWrPDw8
urWhwMDA+Pj4vLw8HA7H7PGGoNEIRpF70t6MtuahtYloyYvW1Gsf/V1v753v
Zq0+W5ndQBIZJ4xI8CJcDP9OziEsJTDBUnLBXsUdT7QvZKwKKLoQXxNTgG0i
9HevMaKiyJSW4rbit01fr9VEuaTfX/h0n4mHrcZidXFNlp85ZAn6NcQ4Z8DO
zc8rqSSiNkVqsrXynPXT159YduzhzvsfLsZUPElreV+Iz65rb+p3rptZOqko
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
2tranJwMX4g1mAQEBMaOHaunp2dhYWHXMycnpzNnzrx48SIrKwv+khwaAjCK
DI1EWCw2JSXl4cOHhw4dsre376miLlq0aObMmaD4y8jIcHExPIVkCKmpqdnY
2Ozatev27dtdu1VISEh8fHxmZmZ1dfVoeud7a2trUVFRampqZGSkn5/f3r17
Fy5cqKmpOZR/tubg4JCUlAQ/1MTEZMGCBe7u7rdu3YqLi6upqWH28EAQBEG9
VVJS8vbt2ytXrmzdunX+/PlGRkagpYqJibGy9u8XdP3By8s7ceLEZcuWHTly
5PHjx9HR0WA3WlZWBnamzB6e39LY2Jifn5+cnBweHs5gZ33t2rXt27fPnj17
sA+mZgBMN5h0MPXgAgCXAYOdtYuLi4+PD5gjeEImNDRgFBka6QgEAmhqAQEB
np6eDg4ODAqsmZmZrq6unJwcDw/jgN3QUVZWtrKycnV1vXHjRrfmFRsbm56e
XllZ+Qe+zgCCBgyMIveIiqKgtmBRtKkdl1P55UH6kx0xR40DHThOWSCOk5Cp
8og4L+NB+sOiyJ00lEZAKc0oqQYllNZnvsoMORp91ubxOtmzc5CNBoiFMqIs
wnDEWFgQbkFERA6R1kKUjESm2k9Yecja4+HW+5/PxNY/+tYSW4QvaCSTqKPo
fC9iPdqUiVZEoXmPGuLPxNzYcGmbuZOZkp4koiaCyPL/PHn7H6EVFvp5aKoI
MhlBLCUUN5osubTW682Z98VBDej7VjQDj1aRUfKADBKMIvcIRpFLYBQZgpgD
RpH7DPRNLgQRpFcheR7BydKq9prT9hovumm99c2Oi8mXX+a+zKzLJFLLUbSe
vvIbsLArjCL31QiOInfSF9RE+mdsxtekVn68m/XEJemkachG+RM2EisMhCbK
cWHY+3foCgvCp4RImiPKzojuaVmbh9YHozwCM0Kz64vo265G+spq5CXPYBS5
z1jpuz1hBJFEEAV+0WlyGqu0Zx42Wepn5/5297WU6xEFkflNebTOCvr90jZQ
70mBoNGloaEhNTX12bNn58+f39mzbdu2LVq0yNDQUF5efijPYOxGQkJiypQp
9vb2e/bsOd+z69evh4aGfv78uaKiYjSdigkNWzCKDI1EBAKhsLAwISHh6dOn
Fy9eZFBUQQuwtrbW1tYWEBBgVv3vRlpaWl9f38bGZuPGjV27FegOPj4+4eHh
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
+9HAJ3lv8JdnGfW1f1QUue3raPdnYf3R7bVPM565B+9ddtFAZTct9QrC/SH3
b6okP5PSyIFq1RX6fREzfFL2hRQ+y/yNKo1jugmj8YUwMh9ra2MyMpLfv896
+PDLo0flHz7UZWa21tWNbrYCRZEHBUWRi1AUGYEgDyiK/I2+TqyzCmvN+prf
qwouDj//8aLjna0W7kZKGxUEzcW51HhY+BlJr9hASehTBAmzkzqvpLXmAjfL
Q4GOj3M8UzsfFnR/quopau3DD3mfARRF/sPpIzRvONgV9HSV16Q9zQrcF3nc
6Nka1nOzwSZNMFMCCP3YB1NxAPpJgFkXsC9gk7bXsnJb4X716MuXj8oT/d/d
vfHX7gvrZ53RFNgnCJZxg+ksQPTHW5iODXDJAzEjoLiSRmevqq3PyrMhp0Iz
g4vbE1uwPBxW1YW1j4sFvVAU+Ru97VhHOdaSjtVFdBc9yQs58/bs5hu2s111
J62X458twqnExcRFT0OyLPC/chBaMGgKNYUVV+ksPWVzInhPSPH59K4nhfjY
mp7y9uHYMwWBGHXweHxdXd2XL1+SkpLev38fPoBHjx4dPnx48eLFo7A+FQlY
WFiEhYXhOWhraxt+z9atW318fD5+/FhfX0/uQiIQwwmKIiMQ/562traYmJib
N286OzvPnj17oEzo6uoqKSmJioqys7OPdIpJTExszpw5u3bt8vPzC/+euLi4
3NzcqqqqIS/O39nZWV1dnZeXFx8fT/TH79y5s3fvXnNz81FIN7GxsYmIiEye
PFlHR2dgnU1MTLZv33716tWoqKiR2NcegUAgEH8wUODevXvn7e1tb29PZPem
Tp0qLy8vKCjIzPyLffl+H0VFReh8of8NCAgYqLMfPnyAThn6ZeiaScd029vb
Kysrs7OzY2NjicT62rVrjo6OpqamQkJCI30hg0FNTc3JySkhIaGioqKvrz+w
zgsWLDhw4MC9e/dSUlJ6esbBC1QE4t+DosgIxNDo6upKTEy8ffv2nj17oNkc
qBp6enrKysri4uIcHBxUVKRXzPxdoG5C9dyxYwdUUiJthWoLNRcqL9RfclcL
gSATKIo8CP34xl5cLr7pU1ft09qMC5/9dtzeNs9VW24ZDbUJ4f23KGF/ZRJQ
svHTKpowznZktb3Jezhm3o1Mt9clIdmNde1/UBS5vxXrLcHwqVjXx7ayB6mB
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
Le9u7pqAhuLbNt/QMNZ3dze2tjbX1bVWVOAqKjrr67tbW3u6u0e3LCiKPCgo
ilyEosgIBHlAUeR/6Mf6+75G+PrwWF9Xb31Od35YR9yVtrD9GddW3dxpaj9P
WVX6l6tSUBAifLCno2ERUhA1WD5l/RnDE+FL75e5va19mNqSUtnZ1YOiyIif
Ah+aGkL6Nam7/U3+u3Pvjq33nT/VjZfJjg7MoQEqVIDrx22WWYSBsD5QXA10
3LgsfY1dgnfdS7iXUpqN784oik4I94y6aR1+UPTeGuAyG1hOAfI/Lh5GQQEo
qb8GkqkZqBg5xDRm66x2tfYIdgquP5eABeZhcVVY1bjotFAU+R/6v35b8XU2
6+7vbu2tSevOedERfb4tZGfchWXnt85caSwvK/zLpCUlof/6OpuxS6hLmtiq
b75k4hm9NqD85Ie6oMzWHNRpIcYndXV1ISEhhw8fnjt3Li8vL+cA2NnZmZmZ
6enpqalJzxsji6qq6oYNG65fv56amtrwPS0tLTgcrhvaePTCFPFngaLICMS/
p7+/H4/Hd3R0tLa2NjY2DpSJ3Nzcu3fvbt++XUdHZ6S1jIqKio6OjomJiY2N
jfN79PX1nZ2dHzx4UFhYOLRrLC0tDQwM3LNnz8yZM4n+ODwcPCg89EhnrSFa
Wlpbtmzx8/PLzMz8UZHhEMCBgMMxvOOLQCAQiD8baOWgoYO2DkoJkbjEx8df
unRp7dq1kydPHmmNg30CdL7Q/0IXPFBn+fj45s2b5+bmBl1zfX09iQvJycm5
c+eOg4ODtrY2GcV6MFhZWY2Njfft2/fkyZOysrKBdW5qampra+vs7OzpGQdv
TxGI/wSKIiMQQ4OEyy4qKnr06NHOnTsNDAwYGX/ctXQ4IeGyp02btm3bNqi8
UH/JXS0EgkygKPIg4BuL2vJe1Ud5VQZtTrk0x9dx2nbzSfpy3CzUlHQA0BBe
9P4YLhgIPacgn+a8SUtcNfc/Nb32ZcfzimuxDVHF7U1DXu93DEaR8Y1YWw5W
H4FVPm5J8Y654eC3ee7eabIWNNTTAVAkHJt0NIqFV1RmhrXeZk/r89EOb3rO
xfcG5fWl1fa3jcMMwXDQTwgkwzukp6+vp7e3F4/v7e6GVrcPj+/v7R31n0tR
FHlQUBS5CEWREQjygKLIg9FWhlXFYHmBWJJX6bOdT05YH1ihPUtViJ8JcNID
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
AM3Nza9fv3Z3d58/fz4/P/+InsPfYk1PT8/ExERUCllZ2ZUrV54/fz42Npbc
I4ZAIBCICQ0Oh3v//v2pU6csLS1FRESIhBv6Teg6oZyN9Ne1kpKSNjY2np6e
nz59qqqqevbs2YEDB0xMTNjYSEc+fhdKSkoaGpqfivVAYM8AOwfYP8AuAvYS
5B40BIL8oCgyAjGa1NfXh4SEHD58eM6cOdzc3D+K9ei47MmTJ69bt+7y5ctJ
SUkt39Pe3t7Z2YnH49FXOYg/gQkYRe7vw/p6sN5urLerD9/R3YnrwLW1tba2
NNS0FCe0pD1p+eTVEuocdWHZuS2GS43kpQT/w2YlFJRClNRaVLSLqOm3CU3y
MF31YMfFz9cSyj9hWCohulf/G7nfMRhF7m740pL1ovb9qdIHqxM8Da5uUdlo
Jj51EgcN6T2DKQQBpSagsgDUm/kkT8xc5u9w/tOV+LIIQrSx8DerhBhGhhhF
ZiPMDzMAWErH4KRi8JfNrseHA+IfllSHt7TEt7TktrRUtYx3KlpasltaYlta
3pbn3v58Z//DbYtOT5V3oKBYDIAeANIoikx8xSiKjEAMEyiKPCiwd8ARsrq1
7bXxxZE+CTfWv9qjcnsRODgD2CgBNUHAQnrVBxRFRvyaPoIOdsNx6GrIq097
UhJyJPPqkkhX1YtrJ9kbCerIsDHTk/qxglZQlmWaNc+SY8K7X2qcz9zwpMgn
pja2rP1rFBlXhdUlYCXPsSyf6jcHQs6scF+pt0hZVILQ5HMCwPSjvFJSAx5Z
IDsX6DgAcy+JLYFWf0WceJnzOrehvAOr68Ja8Fhn71hNI6Mo8s/pJ1xBO4Y1
YlhNc9nHgrdnYy4tfblD5poF2D0dLJQHirwoioz4E2hraysrK0tPT4+MjAwI
CDhy5MjSpUunTJkymms0UVFRcXFxSUlJaWhoGBsbzx6czZs3nz9//u3btz8u
C4lATEBQFBmBGGnq6+uhPl69etXR0ZFIkgwMDFRUVMTExEY6VgSZNGmShYXF
3r17/942fSCenp52dnbTp0/n5OQc0XOgpaXl5eWFZ6KlpWVqajqwFMuXL3d3
d3/8+HEWmkcQCAQCQVY6OzuTkpL8/f1dXFwsLS0HqpWRkZG6ujp0ndB7jnTA
SVBQEB5u69atly5dCgoKOnHixMqVK6HbZWJiGtHjMjAwCAgIyMvLa2trk7DV
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
24gRIwa8E8D7XhYWFk5OTj4+PmHhL+ZddXV1FxeX48ePR0VFkcm/wW1TAAAA
ICsr69q1a2vXrjUzM+s3ZQsICHBzc7OxsQ3GlC0vL+/k5HTw4MFXr15Vfqm2
trapqam9vR2KKQD0A6LIAAwFvb29nZ2dX52yMzIy/P39V69ebWpqysz845HH
H/LPlM3LyyskJDRy5Ei8M8H7k8zMTFovCRgaqIwicxNbcJkhNJ2RaZWGyV9T
V113vxJxOT3/SWVlZGVlUmVlfuVAKamszK2sTK+sTCzICk14cDD0yJyrbjpH
x6A1w5GDEtIVQbysP/yWY2JFUjpohCOatB25XlPZFTbrfOyR0Kw3qRVV1S11
De1NLZ2tnd2dvb2f8yf09aEtXUSRMWJJeom16W4u/VDy9nRagEuUp3LwUrTP
HjkbIF0pxER5hOJXRArWaPgKNPaI5IJb9n+93n0//UF2dRGGVWJYPZGGgijy
D4MoMk1AFDkfosgA0AaVUWQ+4g1ojnduHDwrdEcdmL72ivuV534p6Xdycp7l
5ETn5KTk0KWMpJy4xzkvL+Tc25MTsOTOXocdLiaTTBQkvlOJvo2BETGxfdp5
mE2AiV9W3MBOx9nDakfgzCsZW0MrLsTXhee1lDYO0LWYmijyUMPw6WElI5yQ
wx60LEjOM9o5IO1EZElCMU036Ohtw3pqsO5ijJzdWPwsM9Tn1ZHZ1xdpHjZD
K3XQJHmkJfjvL0IyENsSsxH1n1dY3niY/Wp7j6vLb2Z5JWDXMrHwEiy3Eeui
usHtrMGaM7Gat1jZ/arYU2/Prb603GbbSIUZfMiKC+myI0lmxNo/tYqXYn7i
KTZaCJmKKLqMmHJg2u676+5mHUlpD8zrjKwg5zf3kGnYc1MZRRZGSBOhMQjN
5Bdda2jjM3vb9d23w6/l5NzLyXmRkxObk5NO6+vW16Um5MTcy3l+Oufu9vTL
CwI8bDc4GYzRl+HnZqPy3UNiIr6zwIPYBdnE1KTNnPTn7bfed3/OjYJdzyuv
fqiPLmqraaWjr9UC+tHT09Pa2lpbW1taWvrx48f79+/v2bNn8uTJsrKyVJ6N
P3jOkkgcHBwCAgISEhIKCgpKfejr67u6up48eTIqKqq9vZ3WKwQA+A6IIgMw
BFVUVDx58uTAgQOOjo547ZaSkhISEuLi4hrwvZv6wTsHKyurTZs2Xb9+PSMj
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
5B/AKSonbuSo4rrRcG3wpCPxK6+lHYsoePS+MhvXWlbfWdva09JN6iZTe7Gp
jDp8sxk0CvX09CQnJ589e3bJkiVGRkYKCgri4uJ8fHysrN96Vvj3SElJOTk5
7dy588GDB58+faqoqGhsbOzs7KRQYDoegv5MMIoMQdC/6evr6+7ubm5urq6u
Li4ufvHixeHDh+fMmTMch9d/hYODQ1BQEC1LlJWVJ06cuGHDhps3b+bk5NB6
SCAIgqBRrKam5vnz5wcOHJg+fbralxQVFSUkJPj5+dnY2IZ8URMVFbW3t9+y
Zcvt27fRLru8vLyhoaGjo4NMHgV3ECEI+kEwigxB0A/q6elpaWlBu+ySkpK4
uLjjx48vWLBAW1t7yCsQJiYmbm5uERERWVlZtNpB6x8/Pz+0FkJ/Na3HABpt
/pwoMhWh9iKUHoTc2UdsIdakd3x82BQbWHN3TeLRGSeXWS6YqK4pO/iTiQzY
PXpWLJDMxcwqxcmrxydqIyIzW3nMersFp5cGRB56XninnPyqAclsQyp7kO4R
vrFGh1FkKh4hlyOkTIQQ11kZlnl/14ONMwMstJeyMk/FEoeK3w5kMgLAgsUh
ODmFVWRMZ+l7HLQ5EDXnTvXuV02hWfj31QQ8EUaRYRSZnsEoMg5GkSGINv72
KDJaQjB/riIYGDmYWbnYOHk5efl5BAV5BQX5BAX5BQUFBAUllbU17OaN8w6Y
dDBqbljlnuiGsIy2tKqejhGuLn4tiszABBhZADM7YOFkYuNmRd8gDx8PvwD/
/7879N8fRXO8oM1iwflHBDc81Q9M877/6VJKbWbNCHcSRKSvHqEWIuTUvt6X
pQknXgUsvexqvl1CcCEA9gDoYuem/OMvxQUYZQCTLmCewMY3S2vCLhffsA03
08/ndT+uRd62IMVdSPuvF9mDvlqkEaviMymk12VvziQcW3FzptVBWeEVHMxT
2ZjGMDOKMjIMcokxc/IKaVkpOq8zWHt9QlD20nsVJxMaXhZ2VLX3H/nyOc46
EonWvz2K/Hk26+89GZk4Wdi42bl4ufj4B05lKBlNY20nL7NVpxyPxS+6W3Uw
rvFBNj67jkCiwNAx9A0UCoVIJHZ1dbW3t1dVVYWHh2/dutXGxoaXl3cILllG
RlZWVk5OTvSnfTWR6+vre3t7X7p0KTMzk9ZjAEHQSIBRZAiCflBpaemdO3d8
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
s08kBrwsjKls+3wSR9vIZET/Cn1Y6YUuaiRqTz2pMrkr80Z7zN6m2wsi903e
5244ZaysmMCgHyt2QSCi258b11vGPmGfvufpOftD996MvJuUEpWeHpuenpie
npo+vD6kpb59eSfh9qGYs0sj/OwurjJY76I82VBMXmywXZEBMzsQUAayE4CW
Oxi3TdX93PSDz/Y+ynpY2JLRiRT1ILUkpINCt1FkFqz6RWtiYWYWSW4BeRFp
VRk1bdUxYzSGfjbT/99spq2sqSSpKsWvIMQqzQNEOAEvG2Bj+lZG/V8/3SyA
nQfwiAJBWQZxdR7ZCeLKc5Q01+rqH3KYFrJq98vAB9mPi5oyEKQQ64Dw2AUK
Qf9EIpFaWloqKysLCgq+mhMePXq0b9++6dOnq6io/Pi1OQhOTk5RUVEFBQVt
be3Jkydv3rw5NDQU5nYgCIJRZAiCfl9pael/Sxc9PT1lZWUJCQkeHp6heorq
38jIyDg5OW3btu327duZmZlFRUU1NTV4PJ5CgdU3BEHQX6q3t7etra2qqurT
p09oZ33t2rX169fb2NgMR6SHg4MD/bHy8vJaWlror0B/Efrr0F9KJo+CW4MQ
BA0tGEWGIOg3ofXDwNLli5tb+voqKiqSkpK8vLxMTIPv0fordHV13d3dAwIC
oqKicnJyysrKGhoauru7aT0kEN34Y6PI/0PuauypfNeeFdYYt7/s7uIn/k7+
nkZzLGS0JNgkuYEQB+BmBSzf+YqLDdu3ygAAewDmy+nusPa8uuRM3MF35Tdr
u6Kbez52kupJw/9tFZ1Gkf+D3N3SVviyOvbApxvT0g9K31wuuMmJZ5IuuyT/
4DMbFwDy2J5gjkzMi1RM9k1aeXPl1aRjWbV36rriWgl5Xb3NvX/JU58wijyK
wCgyDkaRIYg2fjGKzA6AEACyaL3AwmYsJjdRw8TFzMV96rIVs3x83H18Fvv4
LPcZEquwn+SN/UiPpZ6u7i5m0y1VHbQFrGSAvihQ4OsvvZh//NYiMxvgkwCS
WkDFAui7iFos0XXcNml2oIf3zS07ok5eSb0bW/ymrKUIQSqxkqYTm6ToBYwi
0zW07iJhh290kjtx+MIX9fFBZbdW5h6zCVtttMlZxU5HVISXbbA/FisP4FMA
EmOBoiOr7gIl+xUTFm523+S37fjJA6dPHz59+tjp0ydPD7NTQSf8tx3d6nlw
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
vVhxLeVy9Kf0vPrKqvb6pq6WDmInifLf2QzegoL+TVVV1ZMnT/bs2ePs7PzV
hCAtLS0sLMzDw8PKOvjjwD9KV1d30aJFp06dSkpKqqysbGhowOPxRCKs2iHo
b9cHo8gQBP223t7ejo6Opqam6urqjx8/Xrt2bfXq1WZmZsOR+xqIhYWFm5tb
SEhIUlJSU1PT3d09MDAwPj4efTG0HhIIgiCINurr6yMjIw8cOODm5oZ21hIS
EoKCglxcXMNxmrmGhsb8+fOPHz/++vXriooKtMtub28nEAh9ffDrXgj668Ao
MgRBvwmtH9AqAq0l0IoCrSsG3t/Kz88PDQ319fWdMGECLy/vkJc0bGxs6I8V
FRWVkZFBG3m0nUeberS1p/WQQHTjL4gi91GJfb3NVGIFpTuP0JxUmngu8fKK
uxvMTjry+BqDGWrAWAKIfec5AAYAmLH9e7nQ984iZcRpuoB/9iGRTY/1TqV7
hReeT6lNq+oY9j6BvqPIfaROakMW+dNDUspRQtSK5CDXwOXjZ1kpyYnxDDq2
jFgamb0/uckoyCpvxmXpLeAeKLr9hen5TJ+nxSHp9bn1f8mmBDCKPIrAKDIO
RpEhiDZ+MYosBIAOAJMA8OTm32XicGXx/pjjr4pedPemIUghlnEdokeq+rCd
ifFYfVHdUZdc9ubC+6urIrdahsyW2DtJxNNE0FqNT0GMW4Sfk4+LjZONmZlp
0MwkBy+QNwbj3IHLfrDsrt7+aK9rKedjCt4X1NTVtzW1dLZ2EDoI5G4KQqAi
vVSE0kdPMV0YRaZnfQSkrxWh1iKU0q76NyVxQUlnFt1fqX/aGviOAa7KQF8E
8A1NlI/eCSvqaU1ZarMpeF5w/qY40vkM8ssySnErlV6jyOLYOTVTAFgqLOVn
NePGysCEs+/KXyNIBoKUIEgjFuUdClTs09aO/ciq1vJXRTEn3p5b/HS98aUZ
4tttReYbCZop86FVMTr98nKxcrCik9mguWQeUaBiDsy9wIwjrD4PTQ+/Wh2a
FhJfmFtSX9/Q3tza1dZJ7CBSeigIkQ5nM4jWSCRSV1dXa2trfX19amrq2bNn
Fy9erKurO6STQT9GRkZ2dnYeHh4hISEJCQkHB4edO3c+fvy4urqa1mMAQRAd
gVFkCIKGFh6Pj42NDQgImDVrlqKiosQAYmJiAgIC3NzcQ/Wk1UCcnJwWFhbr
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
3Hpbnd7ALMcruc2deDe8q1eRefgnMfCWZn1LZUrl2ysFkdtTQ6Y/3DIk2Lvv
siFao7Sktf++KS/+tdWnSRIykppmiv1Ga42cZzZtq/O6U4uCI/dEpF5Krnqc
15zykUGtb2vqSXflOa2QUQYb3sGqF7Dkdt6jgMjA2Qfn2yy0pbjogsEqQF8G
UET+dz+hKjJfoCoyFVWREYQ/um8VGctgbc2QXtVe0K3NbCp8QU2+nvIg+PGl
TZcPzt231GW5c/+JhmoDSERDfBih4APH/xDCL3xYTJUXEtGVUbJVM5xkMHhp
/zG73JaHrQp6EhiVHZHbHFsL3zW1t5Gb+DuooipyF8ZuoDI+PG1KOVX7ZN27
sKmX1g/1HW860kBBET/2yHjrvZMfBu6yhOWBlDlQGgm0vKUHbraZc3r+oaeB
jwselXOT62FuM6xkwtZf0ervvlVkLrs9JLdUwIZCWPOuPvdpfvzlpHsH759f
F7Z35q75oxYNs3DVVrTEA6Eqnoz/5685AvjS7+L4f5QXFjeQVR2iYeJpZLvS
evw+z7WX152MOfa0ILKImVAHs2iwrBW2oOVpe5m6urr4+PiwsLCNGze6ubk5
OjqamZmpqqqKiHxmQviTtLS0Ro0atWLFiqNHj967dw/7ubm5uTU1NTweutog
CPJ5qIqMIMhvw2Qyy8vL37179+LFi4iIiH379s2ZM8fOzk5eXr7TQ5GkpCSW
i/r37z9ixIgZM2bs2rUrPDw8PT0d+x34vRsQBEGQH0GlUh89ehQcHLx06dJJ
/zR06FALCwt1dXUxMbGfv4IICwubm5u7u7tv3rz5woULNz9x9+7d2NjY7Ozs
qqoq9O4hBEE+harICIL8NjQaDctFb968efz4MZZV/Pz8PDw8sPTS6e8bEhQU
lJOTMzAwsLa2dnV1xTIYlsQePnyI/XR+7wPk9+ptVWTIay98shogsxLSi+kl
iZWJV/Mj9r49uuDhJucDMwbPcjSw0pUXJXVckv0vIklaQs5KXsdTva+fvsN5
18X31xx9HfK86GUNPRfCUryN3Gndnm5QRebgH9YKIb2tIbep8FF1ckjpw81v
z3pfXTdq6/i+noZKlgId3JT/B4KwmAhFRVLDRNbIVnXwOKspq119T8w7+sTv
HvVEQt29LFpqWWt1Szcobn4rNh02FcKKePghAr4/kXHD99K2Ses8+o02kTaV
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
du1aUlJSNSp5IAiCdGEMBiMzMzMyMvKv64Knp6ejo6OhoWGnXBr+RV5efuDA
gVOmTNmwYcPJkyfv3LmTmJiIzeuZTHSjC0GQb4KqyAiC8EVbWxuWWLDcgqUX
LMN8Oq0OCAhYsGDBiBEj9PT0OuV9Q1gGMzAwwPIYlspWrVoVHByM5TQsrWGZ
jd+7AfnFenkVmc2A9ErYkA8r37bmP8q6f/B+8OxjKwb4OotOGwSGGgIjZSD9
ldXRhPDipSrePbSkGEzWG+c30PfC6DOJCx5+OJhcEVnQkF/f2jm/bfeqInNa
/3NTnlESWxQTmhy6Psp/4rnpxn4jtTz7KVppSMqIdtw0+C8BAlFERllKy1zB
Ypiag6fJmIV2bmvGTd/mPf/AqjWndx++d+rW64jk0pcVrLRGWNjS3mls5fyK
rfppnDbYUtF+0pW+gvl3i2PPx4QHhwXv3LJp7bLFC5bNnbpshuuyKQ7LJlq6
D+ljZ6aqqyotLiLU4b5BVWS+QFVkKqoiIwh/9JgqMo8Dua2Q3QxZDdzmEnrh
q7rEix//3Flwdu6f/q7bpw2aMFhHU4Hc4UYJ4DFMBK/wSQqL6UrKWctrjFMz
nGs5bMvE5WGrj8cExxTfLYevamFmE6zAgslvfkwJVZG7Fja+/z7iYeRNRdql
lNBNfy4bf8Jaf7Ma2UtezF6SpCHcCTPrboiAt5GxMURCRFJb1WqixbTtw7bd
nXKlZPOTmvNvG+NLGDX0XxCse0wVmcdun/iwabCtnt1Q0Jz7tCb2bGmEf96p
GdfXjd7g3n+UpYb8V4Zowb9HMwkBQYqIhIGUgr2Clpu60cJBLrun+F7ZEJpw
MrEyqgIm1MGc5vbI9LvXeEd+i8zMzKtXr27cuNHFxcXMzExHR0dBQUFcvONX
5PwIMplsa2u7ePHiEydOxMXFZWVlFRcX19XVoRumCIJ8I1RFRhCEX+h0elVV
1YcPH969e/fmEykpKaGhoatWrRo2bJi8vPzP5yUCgSApKamioqKvr9+3b19P
T889e/ZERkaWlJTwex8gCIIgX0Sj0bBJLjbVxSa82LTXyMhIQ0ODQqEIC3f+
4gPq6urY5B2bwmMT+dTU1Ly8vLKysqamJg6na96cRhCky0FVZARB+ALLKlhi
wXILll6wDPPpzPrp06eHDh2aNWtWv379hIQ6bql9EyyDYUkMy2NYKrOxsVm0
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
FmoqipR/wH4zKYo0mSIlTpEUkRQXFhMRIgkRBL+y0uOXicoDpUHAwBMM3CTi
HGK99s8lZ5NOJxSnNDGLuLCSB5t4P9HHQFXkL0JVZCqqIiMIf/TMKvI/sBqK
Wwqj65NDKh+sexc65fKmoesnmzn3U1STFJQVBZIkIEIEX2klt4/BOviAM44o
NN/QZo/riqsrLyYey666Xdca29SWy2DXs3/9e1RRFbkr4bXROJVvWdnhrfEB
9Kj5Lw+N279gsLuDjrp8h1dsQWlAMgNiY4DkAiGlnf3GhnnveHrgQc6jWno6
HqSrOnGV4E7FY7cyK9Jp78Jrn+8uD/eO2T8qcL7VTEdtc1VJMfyJPqHPXKwB
/l808LmDMwCz9PvvHLfkyrrzSaE5tU8YMIUJC9mwvrNOnZ5ZRf4Ur602vzn3
QV38kYpIn+QTk86ucfAZb+RkIqskDigigEwCwgTwtUmANJ4r7QBwE5NaZjH8
4KQNEetvpp4ubrxX35pIaytsZdM4aEjoTphMZkNDQ3l5eWFhYVxc3LFjx+bN
m2dlZUUk/uijqZ8gkUhSUlKKiopaWlqWlpazZ88ODg5++fIljdZpzxAgCIJA
VEVGEKTL+/jxY2Rk5K5duyZNmmRgYKChoSEvLy8hIdEpK2RSKJShQ4euWbPm
4sWL7969KyoqqqysbGpqQrVkBEGQ34PL5dLp9Nra2tLS0ry8vL8GfHd3d11d
3Z8f5P9FSEhIUlISm2Vramqampp6eXkdPHjw2bNndXV1/N4NCIJ0e6iKjCBI
F4dNeLFpLzb5xabAenp6qqqq2HS4U17piMGSGzZhx1IcluWwRIflOizdtbS0
YEmP39uNdAZURf4vDr5Q7kd8xa/X1VnXUi9tjVo1+bSD2VZVmVnyZCdJER3h
ry3I9wkJWTWdwRMGe+0et+3R/IvVex42XH3TkljCrGrlMvBb5GxsxvRdv2D3
rSL/aztqC5vzHtclnKiI9H0TMu3i5tEbpw8cZ6troE7RUJCUlxaTECUROmMl
KCAkBiiGQGskMJ8LbLf38To2YevVTecfX4598zwnJy4n53VOTnpOTnZOZ0iN
y3l1I+fB4Zwb616f9Dq9duSSCX1tTFR+fLnjLxEQIAqLiUhSJORUpVX15A1s
VAZN0RzlqzvliMWSiKkHX+y88/5WRkUOnVUJYT1e+v3x7xdVkb8IVZGpqIqM
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
Tq1ow74UBv7ds9FY0TU0NDRERUX5+fkNGzasU1ZCJpFI0tLSqqqq+vr6VlZW
c+bMCQoKiomJwX4Qv7cVQZDeAlWREQTpvoqLi//888+dO3d6eHiYmZnp6Ogo
KSmRyWQCoeOp0ReZmJhMmzYtICDgwYMHmZmZRUVF1dXVdDqd3xuKIAjSozCZ
zPr6+tLS0tzc3MTExFOnTi1ZssTOzu6H3wmOTc/l5OQ0NTWNjIyGDx++Zs2a
CxcupKWl8XtDEQTpRVAVGUGQ7is9PR3LTliCwnIUlqawTIUlqx++/SEhIWFr
a4ulOyzjJSQkYHkPS31Y9sMSIL83FPlRqIr8DdiM+obCp6Wv9ufcmJpy2PDK
KjX/iXIelhKmFKIsvi/EvrpUryCh/UW6pmPA0GVgSqDW2hvux2L23s96klNX
gX0DDEhra1/V9itrWPXMKvKneHhfogLCfOy3ayiJyroX/HSXz8XJrn9YmPta
mHpbGDlb9BlgoWdioK6vrqBJkVQWIcnhyyFiXwEJL393LwSSCElCRlRWVUJZ
T0bDSEnHRKuPqYGJmQVm+ESLqWstVpyw2PV49On0dZGFl99Wvq/4vR1eVEX+
IlRFpqIqMoLwR6+rIrPa8w+9CDa9g7XxVSlX0q7terh77rnZTrtGGs+10hqq
K6/9tddUfEpMWl3ZeIzRsHWDvS64rE/yOZF55EHJg+yG/FZOFV70pePDXOdA
VWR+47aUsyoSW3NvtKQcKL7nE7nXfe906+kW6uYEQR280ir12QwvrATIfYHc
aKA6S3GQv+OC0MVHY468Kn5UB5OaYC4dVrXBtm7wHfDwjI+d2U3Yhbu5PLk0
7vS7i8tf7XAIn6u2w1V+qpVkXzURYWKH8VlUGVAGALUJoM9SeccAp2VXlp+K
PRlfEkuD6XRIZcJa9k/sit5WReYyIbMathTCxjRO5YuPcWEp57fc2+J1epqt
/zBDL0sNWy1ZFcmOR/J/IMvrq1m4mY7eYjs73M3/9bqzOSHPyqILm0q4PGwn
NOLffTdYvbsX6PQqMplM1tPTs7OzmzRp0rJlyw4dOnT79u309PTm5p70NxgE
Qbo0VEVGEKT7qqqqSkhIuHLlyq5du+bNm+fq6jpgwAANDQ0SifRj2UxTU9PJ
yWnu3Lm7d+++cOHCo0eP0tLSKisr+b2hCIIgPUpjY2Nubu6LFy9u3LgRFBTk
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
U1Nr9r0piSpx4cKFZ8+ejYmJaenBAQAAAAAA8HPj1zUEa8s/4vw3wlSvjDfX
Xt49fsFl99bN9nbibLGzO2hnd8bO7tbGzb5Hz7677Zf6OrU8mSfMI1siM9pw
eK9ehOsqcFVaQ34v62l51J3Ix2fvXXBy2r1V7Iz9g6OdnZOd3Vk7uzubHZ+5
XIi465/+JrMyVVifT3bmZX5xAtk0XJWBiyNx9nNazN33vuc8Lx3+fe+2pjxv
+7Vm7TqHvUd/O+t+2PPdyTcFt2OrX2XUJpZyKlkCMopMzHcdeeRW1VWllCX7
ZwZeibu7O+ik3YPf7c7vttu3xW7dGrFPsG2f3eHLdud97e7G7PDLvhJV/Dqj
OofW5rqDN4aAhTkluDYDV39g5wfmhHmG3zvrfWTPubVrnO3s9tnZbbezE7++
2G3aZrfvpN3J+3Y3367zyTgRWvg4qTKhpLaWK7bRK4/REKwt/YBzA+o+eSb6
X/a96Xzy8K/269eKf+Xs7A7b2Z23s7u3dYffiStRHq8zQ3Jo6eRFARXkydhm
k7RCPmaV4spkXPgWZz4ufOcW4nXq5un9u3dsbsq5tcPO7nc7uwt2du7bdr04
eT36flDW2/zqDDLIXYlxLdkYHPwJosgAAPBvEEUGAIA/EeViUFDQtWvXfv31
18WLF0+YMKFPnz46OjrNqxUhigwAaJMqKiqSk5OJ1fL+/fsnTpxYt27dxIkT
u3Xr1rylUkpKqkOHDv3797eyslq+fPn+/ftv37797t27kpKSlh4oAAA0AUSR
AQDgMzabnZSU9PTp01OnTm3YsOGXX34ZOXJkjx49VFWbcEvQv4IoMgAAAAAA
AI0l5GJOFWYUYFqKqPh9aUrIp/AXb/y8Pd3vuonj4eb2xM3tlZvbu3vucc9f
Z7xLKE4uZhQJRJVkmpPdhrNn9fWYx8SsElydicvjGdnhWbGvIwJ9fb09xc7Y
PxD/s6+b22s3t3B3z49+bzIjEktSypjFonoaOYGcL04gr7YhN0jPwuUfa3Mj
cuICo4KePvO535Tnbb9u3brt4fPc+3Xk06gM/xRaeF5dUimHWsNnckVkFFlI
NqImjlwWr7a4piixLDkkL+JRaoBb9FO3QG+3xx5ut2+JfYL7Pm5Pg9wC490i
ch8klAdn05NLWRW1bTaSL46Ii/l0zCnFdXk8WnJ5RlRmxOuYZ48Cb93yc3N7
TEyVm9sd8a+W+303nwA3/2i3t+m3P5S+TKuKpTIL6VyOQCTueQXshssEanJx
ZRKvMIqaGBT39rn/04d379wW/8q5uT11cwt0c4vwfJDwMjg7Mrk0raK2lOyR
zSRPRrHP2pqJhJhbg5lFuCodl8VWZYSlvQ94G/D40QP3ppxbD9zcnrm5vXFz
i7z/8JN/aE50ank6jViqGrq7M8mG4212ApsFosgAAPBvEEUGAIA/VVZWpqSk
hIaGPnz48NSpU/b29pMnT252vg6iyACANonYWQcGBl65cmX79u0LFiwYO3as
mZlZs6/akJGRMTExsba23rp164ULFx4/fhweHp6RkUGn01t6oAAA0AQQRQYA
gM94PB6VSo2Pjw8ICLh7966Tk9Py5cuHDx+uq/v/2Lvv+KjK/G/jCem0kNCk
hiq9SROQKgiICgLSXJQiLIhYgNhWEBAFUQRhAaWogIgUkRXpoDQREEIvSQgh
BdJI7/XznInP7k9dN8KUTIDr/Tov/yFl7om553tmrjmpaN64SIoMAAAA3Kq8
HFONnJms9Li8lKjUuOs3I0LCQ4ICA/wvFyTg8uXgy5fDLl+O8A+IuRaWEHEz
JTY1MyU3Lz0/6Pz1OrN3rdws09WkMxKUFpOZGJEQHRYZHhwcFFjgPfYHgf+5
AwMCY0LCEyJiU+NSs1Lz9OsdmPOnd6DxfbN//b43sxIjEmPM+L73tICr14LC
IoMjE0Lj0iOSsmNTc1Iyc7Nyfr2n8/J7SeP/3KycrJTMlNi0uOtJEUFxoZej
gi+HBV2+GvBXXz3w6uXg8MthMZcjkq7cTLuemBGbmp2WdU82mMaukpupnFRl
J+Wmx6XFRyZEhkUb9/3ly9cuX76a/39/wfvL5YDAy1dDL4dGXb4Rfzk6NSQ+
IzolKzkjJye3wH0lN1vZ6aZ3CqTH5iRHpsSGx9y4Fhp8xf8vvtn//TIGXrkZ
cj0xMjY1Ps34DTf9Mmb9r1/Gu0NennIylZWijHilRmck3IiPCr0RejXoyl/+
7/5bV/J/sOGXL0cGBt0MvZ4YZfzM042tyhQh3+V3oFlIkQHgv5EiA8B/pKen
x8XFXb9+/cqVKwcOHPj4449HjhxpjHzmzYqkyADuSufOnVuzZs2kSZO6detW
u3btKlWqeHt7e3h4mLdVGp/Yrl27559/ftmyZcePH7969WpERISxZ2ZmZtp7
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
wYKjR4/ae3EA7kikyABgI6TIAGAjlqfIhmLFijk7Oxtn1m5ubsY0+8ILL6xZ
syYwMNDei7O3LClZuildV8o5nVyjtZM0taue8lJXN7VwVU1XebnKzUUuznJy
UrFb7pCNo3QF1euiLs9r6CJN3qOPj2nLJfld181kZWSYdSQpI0YZ4coIUvRR
HVyqZWM1qY0eddGDDqrvoPsc5FHgTXJ0VLFicnKWs4ucXU1lsmv+4eamqver
8yCNnK13dmp1iKlG9su/xGgmXR+AIiA7QzdO6/Q67X5bXw7SJ8M1/3W9t1BT
v9G0w1p5VnuuKSBOmTn2vqEAAADAnYMUGQBsgRQZuEekpioqSlev6tw5nTz5
Pw/jX42PiY42fTwslJaWdvTo0WXLlk2cOLFz584NGzb08fEpW7asu7u7edNs
5cqVBw4cOG/evCNHjth7cQDuSKTIRZkxlicnKyJCV67ozJmCHqwvXJBx38fE
KD3d3jcawL+RIgOAjdy4cWPnzp1z587929/+1qJFi/vvv79KlSqenp7Ozs7m
TbNNmzYdN27cqlWrAgIC7L24Qpen3CzlpCo7UZmxSgpV5EVdPabze3X4a62Z
rplDNLK5urirmYNqOai8g9wLfPByclbx0vK6T/fVkk9j1W6ies3UuLmaP6CO
PdT/7/r7XL21SR+f1IbLOhyuoHilZZt747OM8xkpXopS8iWd/Vb/mq0Fz+ql
NhrRQgOaq2dTtW+iZvVVr7p8yqlCcZV2UIn8Jbg4yLHAhXhXUtOuevR5jV2o
Gdu05KA2ntL+QF2IVEi8opKVmE7jhzuJ6Tc9TdlJpt/05AhFXVOwvy6c1Uk/
nTynk5d1MkgnQ03/h1+LU0yK0rPsfYvx33Lz970M09aXdVNBB7X/U615Se89
otf76JXn9PxUjVqssd/o/f3adF6nIpSUbfqM7PxPzbP3zQcAAACKOFJkALAF
UmTgHhEVZeqadu7UF19o0aL/eaxapV27TB9pfDwslJmZefny5R07dhhDrK+v
77Bhw7p169awYUMvLy/zpllSZAAWIkUuynJzdf26TpzQ999rxYqCHqzXrtW+
faYgOTbW3jcawL+RIgOAjcTGxp44cWLjxo1z5859/vnn+/fv365du5o1a3p4
eJg3zd7LKXJerrJTTNcWTg1R0mWFHtXJbdq5Wmvma94b8v2bnumsR2qpqaup
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
eBJDQAJxybo+bCF0JyVJySHH+RH1mLDbeBzhxGrWTWRqL/o1pVUVKhclf3aM
U48ia8qnrKjyKu81m/I4NaZ+V7oOZ9RM5q5l3REO3sL1JQ8ieB5DUAKxn7ma
0rzHE7U90CNJDiHAjQcnObuZ3fNYNZpZvRjZgl5VaFWEmvkpkV1JI5ulerzm
NtgWIncFCjbAuRN1h9NhNgPXM/EYq1w54sE9f8LiPu8xCvGhJIqcMcS+IvAG
z/bjtoyT41jQlV51qOCgXUhijsoWVW5UDuSowVcDGLSMpedxCeNGJE9iCUwk
QWoh8Q+JIgshhBDCUPj64urKzp0sWMDkyW+M3r1p3JiSJbG21n2mKPUhUeR0
+ihR5Pz581evXr1jx44jR45cuHDhzp07XV1dfXx8dH1wQgiDJFFkfWNYUWQ7
O8qWpUULBgxgxgw2bsTFRUkjx8njBiGEEEJ8MumPIltYWBQrVqxBgwa9evWa
OHHiqlWrDh8+fPfu3ZCQEF0fXLqow4l/QfR9wi/i/ic7JjLhG1o7UURFfhXZ
VVipMEm9wMukbeiXS4kmWpWnak+++5Vfj3PUn2uRPIzFP4HYDPyUVq1tjByt
9EYOus+Nrewex4IWDC9Ch/zUyo6jFeapJ5FeG5ltKVyD2n3puJAfjrPwGnsf
cesVIVIqi89OosgGJMqfpye5tIi937OiBqMr06485ZyxLk7WMpSsScNmdO/E
sB60b0rNijgWwDxTWid264pU6s63s5myn62POeHHzWC8o4mW1cTiC5aiVvoh
Rz0m9BoBx7myjj8mMaEHHb5S2mmWtKdADmwt09B+PI82sliOHI2p0Yce05i+
ka2nOHSV8x7c9eVZJK/iCU0kOonEz1xNpWgbIycqdU5KDFGvePUYz5vcO8u5
bez+hVVDmNGaYRXp4KSkkQvZYp7qGgdTCyyykSUf2YqSuxKFW1GmH9Un03Al
Q/ay/BJnnvIq6vMeoxAfSqLIGUOED97nuLuBc5PY1ovJzehYntJ5tVFkU+2C
EWtlva1dKWp8S+9fmHucva84G8L9SPziZFmW+A+JIgshhBDCUDx6xL59zJpF
t240avTGqFKFYsXIlQtzc91nilIfEkVOp48SRS5evHjbtm3Hjx+/ZcuW8+fP
37179/nz5+Hh4bo+OCGEQZIosr4xrCiypSV581KiBNWr06oVP/2kpJGvXdNc
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
epwzb/iQxhcIVtjIQhIU5GOSFRqZfKwNIsGTt6c5t4A1PRhTmW7FaWyIZWGM
NDMwlJexprEDDiuYcYktbpz5zNMg/GJz+zK/G2nxpISS/IXEd4Tc4/Zmtgxn
TH1a6GArk8qh4jJ0lN80DUVjZANkxaT2yFXb8eNvTDvIXleuBeISjlcM4eKg
c0FuI1TkfER8CMGufL4kbeZyXsiWwYxpTctKmGpRRLFXtJAM9YzM0TSKo10N
3aYYdMNqAv028fsVrnnhr9iWGqXojayCU2EVJ+sqsra2drFixczNza2trRs3
bjxy5MjNmzffuXMnXHTUzWOkpUktKQ4dYto06YTWevX+Z/Towfz5nDqFh0du
v2mBQCAQ5CuSk3n2jH37mDxZkpBtbalYEVNTdHVzX8XJOyFU5Ezg4+Nz8eLF
5cuX9+vXr06dOlWrVi1durShoaGGhkbmKlihIgsEgmwkNTU1MjLSz8/v3bt3
Li4ujo6Os2bN6tKlS4UKFTKXo4SKnEWEivxXaGlhbEy5clhZSZP9IUMkhezG
DekYC4FAIBAI0o986nrzJuvXS0OJklXlRo0YMYJNm7h9mzDxYDHv8erVq8OH
D0+fPr1jx441atSwsLAoUaKEnp5e5kpWoSL/ryhpQcMeOCxm1gV2eHDuC09C
8IlVSRU5SdEJKwA+Ef+Sp3vZM4FJzfjBgJoyLGSYKh52p//eChVZkIsIFTmv
ER+O7xNcD3NzHscdWNKWgbVpUA7jwpiUoeGPDFzCoiscDeJaOC9i+JJIvNI8
HOXHZ2ee7+T6NA73Zm4rettQoxQ6SjVLDW3JRtYtLgnJFevTaRTTdrLfBZc0
3iHZyGGKXCgQ5FeSFD59sLSxKP4tzw9y+FdmNae7Po1lWMsoLZPUtW8P4mr/
ifI1aP0zIzaw8h5Hv3AjiNeRBBbg41T+vIEh4EeMK0/3cWA8M5rwoy5N1LBW
k26gbkZqIYvatB3KqC38/oijPtwM4k0kwQX4BgryCUJFzkfEfMX/Ee6OPFrB
uTEs607/BtQ2R1sLNTXU1FFXR0MR8n+R/ovat1KTEbLyyGoia0GZgXRZxrwz
nH2PVxr+aVJv5FhFi32BSvHy5ctt27YNGjSoSpUqGhoa6grU1NQyt/pUqFCh
5s2bz5gx49y5c8HCrckbpKWRmiq1qUxO5s4dVq6kWzdKlVKWKypXls5v3bKF
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
bwLtVzHJkV13uf+JsCTkiTlRkavkdZD8f6lJUiUmf6mkCD7clM642dKdKWXo
I5PKoeqKnVlKcpS6JsWrUbUrjafQZTvjz7PpobRr7LM44EbFyLqKrKampqur
W6xYsTJlylSqVKldu3byV3N0dHwnzmDLJZKTiYqSf7LSo1h3d44cYepUqStF
8eKZLGm0tTE0lJajK1Sgbl2GD2fLFh48kM7yEwgEAkF+R6jIORNCRU4PSUlJ
T5482bFjx6hRoxo2bFixYsVSpUoZGRlpa2tn7oGpUJEFAkGuIFTkXEGoyN8v
hIosEAgEBYx376RBc9o02rWjUiVKl6ZYMelAPbV02wX/DE1NafAdNozNm6UV
Y09P/P2lY/sSEnL7OlWVwMDAK1eurFixok+fPlWrVjU3Nzc1NdXX18/c0x+Z
aqjIaXGkhpDyheT3fLnGld9Z05+h1Wkiw1bR+qmYDC2lPwR9M8o1o+ZgWi2j
71EWXMfRlZf+xKueipwcRawn4Y8IPI/HThyn8VsPWtXAMN2nduoYUK4edQbR
YRk/n2bhXQ6/4ZEfwXG5fW0C1UOoyLlCcizhH/C5idtBnizj4Gimd6KLLRZF
MTGmSiMaD6aL/IafZ8k9HN/y1D+b/MY0RUPAJIWQHMeXx9zawK5+zKiEg4w2
ihGh5LdUZK2y6DXGqC+m06izkRGn2fmEF/7Z8fYEgpwi+AMu+zk5ktU1mCCj
l4zGMirI0E73BOFPFbn5CBw2MOUGG59z9iMvg1RYRf4Er+AerrvZPomf21G1
tFRbaipSivJe6/8VQkUW5B2EipzXSIog8h2Bt/E+xsu17B3PhE40s6JIYfRL
Y96C2kNps4L+x1h0k+OvcP1KotJDfL64cH8TRwewojJjtemmRT1NSivdw66u
SdFKlP+BGsNotpSB+1l2lTOv+RAspcMUxRkUaTl1QwS5SHBwsJOT0/z58zt2
7GhqampgYKCrq1uoUCF1dfXMLUxVrlx50KBB27Ztc3V1ze2LE5CWxv37rFpF
9+6UKpUNjyCNjKQeF4sWcf261H5ZIBAIBPkdoSLnTAgVOT0kJSU5OzsvW7as
S5cuxYsXz1wtqqGhoa2traenZ2hoaGlp2a9fv3Xr1t2/f1+oyAKBIMfIFhW5
bt26o0eP3rdv39u3b+UvGB0dHR8fn5yseipDuhEq8vcLoSILBAJBfictTT7b
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
jSYyciPrr+ORwHMIV3dS5JMslM95fRX5RUxMTJo3bz516tRffvklOjpa2xcn
eYmUFH79VTyOdnN7M1KZlRUdOzJ3rpCc8+ETSolEIsnzXLwoquR17UqJEtqf
MuS6JlXkf+L1VeRChQq1adPm66+/PnnyZEJCXj3uVCKR5GKkivxukCryqzZ9
fVxdfw8noaHa/v4kEolE8qZ58IA1a8RJdpUqvZmBo359xowRZfMDArR9bZK/
8foqspJU+/Xrt3z5ciW7avtqchCZ6UQ9xfc0d9dxYTqbBzOxLR2q42iV5f1i
gKaMWGzVdEczimoLGbabDTd4nEcfB/2Tq+lkl+WnpKeWRC4nPGRNCyp+TO+l
LDjBmeeicGCIWiMrSZa+lGgbqSK/MwLvcHkl2z9kbjk+LUhnK+qWx64Oui2p
OoIPl7PkDOeDf+8fYlQf9V2SFCMq+l5fx+FxrG3PlAb0dqKuDZZGWXZ0Rmoh
Uyc09dFrR50vGL6GVZe4EYU/hKlibcq7vRBtkRCBzwVRD/nnMaxuw1f16FmR
WtYUNnz5EyuApjCasqL0q6YZpT+i87fMPMThp78rl1FqYWSpIr9t4oJ4dp6b
azk+kc09mfo+PatRowTGBf/rxEGqyH/yRlTkompkqoumLXbD6LSIWYc5+kTc
FOFqT5Ik74v8R9hj7u7lxAw2dmdBA75swKAGdGxAwwY0eFetfj3qulCnGrWc
cHEU4b9UMYqYYaCvHoCi9PDmauAvgWkZbCpS3hmXOu/u7f2lvdeS7sP4ZB5T
d7L0Ojs9OefP40hic91I/NtWqTSRIdLj8LvC5TXsGcPSVoxzoUdVkaBsSmPo
QPXO9JrG9D1s9+JMKO7R+CUQl12RLymSwOvc28752RwcyLftGah8m/YUMc6y
+1J+BsXU2XE1jJpS71OGreCHc1yIwDMFvzQi0kmWU758wIMHD3bu3DllypTO
nTu7uLhUqFChRIkSZmZm2Xt+JVXknIxUkSUSiUTySnh4sHUrX30lBo6aNSlX
DhsbTLM8klK2P5pUkV8kNjY2ICDA09Pz+vXre/bsmTFjRrdu3SpWrJi9wClV
ZIlEksN5fRXZ2tq6RYsWo0ePXrNmzeXLl+/du/fs2bOIiIjUVLll/E+kivxf
moGBmP6XKUO1ajRuzCefsHw5586J6scSiUQiye1kZBAdjb+/kJCvXhXz94kT
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
UcmrSmoNk88s/pmUeKL9CbzD019x383hRfw4iqmdGViT9g7ULYFDISwM/nor
GVlgWYbSLlRqQeN+9J/O9E1suMS5EO5E4x0vbOTkXHHWfJrqIceJ0qCxXnid
5Pxqdk1mWV8mtqJ/Td63o6KhqIdcVC2JXPBvvUoRayrX5/3e9J3EuFV8d5Cd
17jgh0+q8PuihONMznysI1XkfItUkd8eym0VcE2UFz4+ji1tmVWHARVoZI21
MSaFqfwebT/nk/XMc2ezN6eCeBhNjBYF1Ay1A4xRBmAI4NER9s1kdif62NFI
Q1V1C4ZFlrGqgC6FKlC6HVVH0WgZffcy5zwHPHmSd9fQ02JI8iXuDlFn8dwq
hKXJXelQidIFsDaicFGMbdEth2ElileifCVqV6KZEy72OFpRzIyCehhZYd2Q
Ch9SZyZttjD2OGtvc+X5G6ruKPlnMlNEReu056Q+JuYql1aJ7VefN6KFGdU1
wka2+jf33sAMm5pU7knjSXRcL6r4/nRNVObUZm1zLZGhxLwAYt0JP0HgNk7M
Zs4AujXCvvgrzMuKVaRSR5pMoNs6Rh9n+Q2OP8U7StvXJsn3SBVZK6REE/EA
3xM82MDlb1g9jDGtaeWEnYl4hqMkqMYf03EJgw8x7yJ7HnInhMQ3kqAy1ala
spizZcaITalHZrOkAyOs6awRcaiiOg3MKgsVxLAcFs2xGojdDJqvYcIv7PDA
S26syGe8voqso6Njbm5uY2Pj6Ojo7OzcrVu3r7/+ev/+/d7e3tq+OAmZmcTF
ERTEkydiIXLfPmbMEI+Xy5XL5tNpPT3xlLtkScqXF/WX+vVj/nyxyinFc4lE
Isl7pKSInSZ+fjx8yM2bL7XXH1DyZJMq8ou8vopctmzZTp06TZ06dffu3e7u
7l5eXoGBgbGxsRkZuWL1TiKR5C8SExNDQ0N9fHzu3bt38uTJRYsWDRgwoGbN
mnp6etnoAKWK/E9IFfmPVqwY77/P6NGsW/fXnHb3Lt7ewkNOyH+FaCQSiSTP
I1XkfMXrq8hKFlUSqZJLlXSqZFQlqSp5VYmXSnbV9sXlXNJTSY4lLpQoP4Lu
c+sARxawZjizmvNxddwcqVFcFEb+y62kZyBsZHNrLO1xqE2LAQyfz7dH2O3L
r6HCRvZPJCFXnDWfAvHCQyaYiNvc2Co85G+78EllupehaXEqm2OlJyRkI9VD
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
NBhGi0V8t4vF5zjmwdOQP8dKSTk2VkqNJsmf+BfE3uXlUY7NZ353upWjkoIy
Cooq0P+/cqFiNtTvQd9FzDrDr96cfMfdUPziSCkIKnIqke94dw9PZ27/yunl
7JrPih/4YazYp+yTJv3LDwybx7BljNvMyhMcvsNtP7F+7WNfkPgfB9d5gdjY
2FevXt26devkyZNbt26dPn16jx49atasWbhw4cxNkhoZGZUrV65JkybS50yY
MGHt2rWnTp168eJFAZwkzeNku4qsq0uZMtSrR8eO4nlZupTDh3nwgMjI3D5V
GRkZGZmcJDGR589xcWHNGsaPp3t34SGXK4ehYS4YO7nbCriKHBERcf/+/cOH
Dy9ZsmTo0KEdO3a0s7MrU6ZMphe4ySqyjIxMPiUhIeHNmzd37951cXGRgtjs
2bN79+5dt25dExOTzMVDAwMDW1vbRo0ade3adcyYMatWrTpx4sTTp0/j4+Nz
+1y/NgVNRdbXp1o1unZl2jQ2b+b333F3x8eHmJjc/iVkZGRkZHKS1FRevsTV
lQ0bmDSJnj1p1owKFTDJuC7Zvzc9vT87lKlT5Q4lr/Pu3burV686OTlJOeSA
AQNat25drVo1c3NzVVXVTKSRBVxFTksiKVSUlop8Quh1fG/z6AFXn+D8nNO+
3P6Adzjh/8X7lT4wOVIoi9Jnhj3j5S1unsP5CE47WL+CFTNYMEyIaqPt6VJD
bFxraYSaKpp66BXHuDzmdbGxp3ZbWnaje3+GDmP8LGasZsFeVp7D6S5nvIQg
GpgTD2aq0g8OAT94yZtrXDrAtl+YMYVh3zOsP8N6MawLw9rRsSH1KlLGXNQv
/WcYUVWlaBkqNxUScq85jFjF1C0s2MPq4zidx/ku7n/wMpiwZDFVmqA0Z/6T
ahcehPdjbrty2omT27h6iocP8P0gDjlSOf2alPOVoGQVucAiq8jZS1wQgffw
PsqDVZydyMoefNeQ2qXR1qCINTU702EOow6y6A57nnPtHa8i82hlvNQYkj+Q
8JLY+7w+ifMiFvehTxUqq2ClfL4MFGhkmIAZlaBSG1pPYbATc9zZ9pRzb/AK
FzX58zGfdiheLhxbyk8D6VmbesWpaIKFPgZK/dLQhlIOVBtL0zX028NPBzh4
mEfHCT/O2cUsGEQ7O8w+DbAaWpStR5tRjNjK0rvsecXFAJ5FEiY7JjlMeiop
QSQ8J+Y6ESe4tZp1I+nfnHIWGY4yVJRBUlMpJOthVR+HUYzbyvq7nAjgRhhe
MYQUjN8uIRLvC1xewu6uLLZklCHtpfFXIYzVMrqAmvqYVqKM9JgMo9EChjux
+jxnn+MX/ec6rP+aTcnI5ASyivzViHlHwG28j/FoHc7TWNKLAfWpWQIDdcpU
onYX2kynrxPTXfn1Lhd9RQb1zx1kcoL0ONJCSPEj2Qu/c7guY2Vfvq9IAwVV
FJRWYPx/5UJmVtTsRKc5jD3Msgfse4mbP6+iSC4A0S0thRApU3Ll5kZcprB1
ID92YVALmtelUqVPWx0qtaBSZyoNwG4Sg9ez/DSnXvAq6c+VKXH/ccuhvEBy
cnJUVFRAQICvr+/Tp0/37t07derUVq1amZmZZW6StFChQkZGRiVKlLCxsalf
v/7IkSO3bNly+/bthAR5A4G8RbaryBoaGBhQrBhWVlSuTL9+rFghKmQWvHec
MjIyMgWL+Hhu3hSzmSNGiAUpNjaiHrKREYUK5YKxk7utgKvIQUFB58+fX758
ed++fStVqlSmTJlixYoZGBhkrnaTQlaRZWRk8i0pKSnR0dGBgYGvXr3y9PQ8
dOjQzJkzHR0dixcvnrl4qKmpaWhoaG5ubm1tXbt2bSk2rl+/3s3NTfqW3D7X
r01BU5GlhMrenokT2bWLx4/x9eXDB7HaN1muiiIjIyPzTZOSwr17bN/O2LFi
qa+tLSVKYGwsihtnvUN59EjuUPI0L1++/Jg9tm3btnz58iVLljQ1NdXV1VVR
UclEGlnAVeTUBOLfE+lB8BXeH+OJC5fOc+gqG2/x62NcfHgQSEDsf/jA9FQx
F58aR3IUCWFEBPDhLa+8ee7J3Stc3ofzCvZPYl0fJrQQ25qXK4a6KqoaaOii
ZYRuUQpbUKQ0ljbYlBNzjvUcaD2MbgsYvJOZrsJvvOTDm5yYu09RTmG+gxdw
j2eH2beYaUNo3ZRKFalUnkq2VLKmUmmszClmjIEuGp/KM6pqlKpC4170nc/0
w/xyhV23cH6M+0s8pYsQyIcIIuJJSBMT4h9nw/+TWhj4hoeXObWdrbPY8AMH
t3DxPI99eA/BShs5PucrQckqcoFFVpGzl2h/Xl/lwXbOT2dPL+Y0p0cVqpqj
pU7xstTvSZ9FzDzN5heceMudEN7F5lEVOT2etDBS3pH8koArXFzNuu8YUZ1G
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
cC+Sl7F8SCT2Kzxjacp+N0l0EJGveObMuSU49WdBLYaWp7UF5Q3RUc8wFzJC
rwImzSjei8qT6bNB5EIuXrxJEsPTKKW0m2diXnaQquxMo8XoO8WPFy64LGR1
N8bY0MWQhnqU1cLoy85UTblQRU+sVdEtQ80u9JnPfOlpesOlUB5FidTxa/zc
OUlERMSbN2+ePHly7dq1PXv2zJw5s1OnTpl+66Wurm5qamptbV2zZs3mzZuP
GDFi7dq1Fy5c8PeXR7m5T2oqYWHCRn74kCtX2L6dyZPF8vaSJbNnztTQkFKl
qFqVxo0/yUYcHZkyRXzdzZsUvEoMMjIyMt8I799z/jxr1jB8OPb2YiWLtTUm
JqhnmHB+801WkbOoImtpaUlJY//+/RcvXnzixImbN29+3FCjAE6YysjIfEvI
KnI2UtBUZCm1MDMTq72k823R4pORda9ewgk5cgRPz9z+VWRkZGRksoPAQPGG
duNGxowRMV+K/FL8l3oBzQwVl/+xySpyPiLrKnLRokWbNWs2evToDRs2XLx4
UcpFvb29g4ODkwreb/+ZinzVid92sWA33+9l5AlW3+C0l9iROXu+K5HESCFs
RL4m+AWvHvP0DrfcuHhBVGX5u508yNa5LOzO2Ir0UIjZ23r1qdCD4pOovoph
R/j1Ng9zYvbs31VkXUNs69C0L73nMnkPCw6x/jh7XHA5+8mRX7yI+x0evsDr
PW+jhD0YnkxsCsmZrs6Uopx7/gA+0n2Px2l2bWLcDBr2oWZfBixk6VFcZBX5
f0ZWkbOCrCJnlTSlvihdk1fwFF9nji3lxwF0qEW5oqIeslkddFug2pUKk+m/
iTUXuP6agARRDzk6hcS0vGqW/q3fJBIfwBs37jlxehY7ezKnOb2rUccCoy+3
2P5HU9OnkBW69TDsQImhtFvK7GMcfsIfcYT8pd/kO/ctJZ4obz5cxWc/T1aw
fxwzOuJYneJGn59+2dq0H83knfzqyelwbofjHU54uCgS+PwUJ+axvC1DTHFU
UFeBtQJDBSrqaJWgcE2KtMVyME3nM3Y3v97g5geClItXYpQ/SB69YfI76cqW
JrrbGH/eufN0P9cXc3QkCzrRpy7VLSmU4fSfijlqtVHvhOZoSi+m9z7WXOfW
t7vdZXIEMX8Q6o7/CZ5u4rfJTOxI04roawoDWU2BqnRNvrxQBspupQqKxhTt
TZufmHGIgx68TOFtKsFpxKTnobAQ9ZZ313m+j9tLODKWBd3o04DqZcT2uP9s
tlXpOIwZ2/ntKTcQNvIb5QObiycS6s3DfZwYzzo7punSX5cWulTUxUg6YEt0
66LbCd2RFF9Al10svcwVH+LzTDHqvIasIn8d0tOV+fwq9vRkkSUj9elQgloV
KVYPDUfqTmHEdra4cyecN2kEphGZLtZLfZUj+7NFf8D7EjfWc2w0G1swuTad
bahqhp5Ghl2DPqolUauGuj0mfWj5Ez8c4sATvBL//ygv7wS9bCBFeUphYhCb
4o3HIQ7PYEFr+prSTI3qqpRSwUDliwulomyqwknWMaJqC7pOY9p+fvXi5Adu
huETm4XdiPIGaWlpycnJiYmJcXFxnp6eO3fuHDlyZI0aNTL31ktFRUVNTU1T
U1NLS0tHR6devXoTJkzYv3+/r69vbp+ojCA1leRkEhJEdeL798W77oEDRbWN
bJkzVVVFQ0OUx9TR+SQbMTKiTRtRxOn0aVFUU0ZGRkYmP+LjI4rqjx+PnZ2I
81paYnpUTQ2VL9OngtRkFTmLKrKULtrb28+YMeP333//8OFDfHy8lJSmpKRI
CWpun5yMjIxM5pFV5GykoKnIUmYl5VdSgiHlWp+957exoW9f1q7l9u3c/lVk
ZGRkZLKDt2/FApOpU0VVBynOZ+8oW1aR8xFZV5EtLS27d+++YsUKNze32NjY
hISEpKSk1NTU9PQCZ+58piJf3s72HczeQZ8dfHeIpVc46ckf2fX2Jl3YjGkp
pCWTmkRyIonxxMcRG/tJC/Dhzj6OjOcXOyao0Ks4TetQrhMGoyizmL77WHeD
e++y6ZD+yb+ryIXNqN5KzHVO2cdGTw77cPUdnsEER31+8PHxJCSRpNSPU9JJ
TSctPQs+2MdDei08ZK7z4BAbV9F/Cja9KNGX9gv58SjHPIXYKKvI/wuyipwV
ZBU5q6QpSyK/FR4yN3mxh10zGNmR6tZoaqNhJeohq3YVd2CVZQw/hNMdngdl
Rxj5Cvyl3yRGEvSYlye4u4bzE1nbixFNaGyLqV6GOZguKiVQrYyqlN11pfFs
JkgX5x4eMfgrQ2CMMhbmL0SofM5rV578yvXZbBvEhFaiZO6XobJCPbpPZO4h
DvpxI5WnqfilEpVKWiI+V7i4hO0dmV2E7xS0UVBVgZlCGDgqpqjaom6HhgPl
R9FnLcvPcfEtfggbOVJZazBP3zPfBPGhhDzl9Tme7uLqIn4dxeT2tKuGjTFF
dTHSQkcDddUvbngTFBWUUmI3io2n3WrmncTZgw8xhMQTlURCinjq8zdKVfvj
IoU4fwLv8sdxHqzHdTor+jGoCbWt0MrQyitUhMJVKNqKUgOwm8mQbay6yPlX
IiZ8XKGQkJcKhEa9we8qz37DfQEHhjOnPV1qiDUmn52UhS1tBjJpC9uf4AaP
lfldWK7qhSF/cP83jo7gl6pMUIgFgA0VlJGu/8cbtQqKNigGY/gjbbez8AIX
/yAu34Xjr4WsIuccYvyYJAatyVEkhfLcFZcFrG3P+KJ016V5KarXpGRrjPvR
4iemHGDvfZ5Fi94wQjk4+sr3bFwI727yeDeX53K4Hwtb07+GWJZlkPF+2TrK
UvDSfVIDgzY0nszYHWy/xb1ovJPxTyUijaT83jX8g/Qk0iJI/UCyD3EPuevE
zglMbUZbQ2qqYqtBMeUsj4o+mvro6FNYH1N9jHXR1xLdh5oqWvrYNsR+JAM3
MfsGmz059ZYnoYR9JfX8a/D69ev9+/ePHTu2Vq1aWZ8wlahevfqoUaN2797t
7e2d2ycn8zk+Phw/zrx5dO5M5cqUKUPRoujpCaM4e+dSNTTErPH334s506tX
efFC7CcbGiqMaBkZGRmZPEt6OjExBAVJ6QHPnuHsLHZm7NFDbBqe0xJOPmoF
UEWOi4sLCQl58+bN8+fPL1y4sHLlygEDBlStWjVzuaKuru7ffl2kvHeCjIzM
t8KzZ8+kkfX06dMdHBwqVqxYqlQpMzMzHR2dzIVKbW1tOzu74cOHb9y48caN
G15eXn5+fmFhYQkFY0BV0FTkDJqZmaiNPGUKu3fz+DHe3vj7i42HkuU35zIy
MjJ5GClKS7FaithS3Jai9z+bqytLl4plJpUqZU9Poa0tti6ytKR8eTFQHT+e
HTtEMQq5p8hrpKamRkdHBwQE+Pr6enh4HD58eM6cOR06dChZsmTm0kUp2+zd
u/fatWvv3r2b2yeXy3ymIl/YxKbVTFpG+wV0/EWYt5svc/E5r8L4EEWY9MdJ
pObwSuioD3gcxWUKGxowVYW+xWlWm7Id0RtJqUX03sva69z1y4EvTiItmNQ/
SLlL0nlurWf1aHrZU6oohYtQvTVdpzPlIBtectSPG8H4xIiKx9lP+l9VRpNJ
jSbOl7DbfHDhlRMnVzBvBh2GYdGNIn1xWMisoxyVVeT/GVlFzgqyipxF0lNJ
DiLek2g3wn/n1irWjWRAc8pZoKqFVlkMWmE2hBILaLWDGWc58pRX+U1SSo4h
/AV+53nhxL0FOA1jogMtKmFmkGE+poXCDIU1iupoNafOGIZsZO1lLgfwLI7X
iYQkE5/fKnAkxRD4iOdHcF+CyxBWtWe4HU3KUERPGXAK/bm9uHTiVRzp+yNL
nTn9QSw68VVWzpaCeVoKfre5tYljQ1hXnWnm9DSmnh7mGspPkEKu9OhVRGGH
VR+6/Mz83znxEs8kXqcQlEpMGvntmuU/kqLFLg+BD3h9nsd7OfYzK4YysgWt
raldjLJGQkjW/rJCsoHyt6uCohGmPbCfybgdbL3GTX+ehvAmitB4kvKOZZsJ
0pW5SJKyoHkMkS/xPov7Jk5MZXNPpjSnUxUqFUMzw9rRhiWxakqt72j1EwOd
WHCGfY+4EyDWJkRCnPLj884dLqvIMsgqck6SnkJKNIlBYtAa9Zy7+9kzjR9b
0dOMZvrY2VK1MbY9sBpPF+XijuMeYpgWoVzK9PWXLSSGE/xYbH7xeANXf2BD
P0Y2o6ENhTPcIUIkBkYoiotbRb8e9YcybK3IhS6G8CgWnwSCkknIO1Evy6Ql
khxMgi9xjwm7wtX1bBjBiIY0KIyNOiV0MTJGqxiqluhbUtQSK0uqWFLOHEtj
ISRraaCpR4naVOtPy5/pc4zZ19jpwY13BH5D20fLKnKB4sMHbtwQk5jz5zN4
MG3bUqsWJUqgnmG+lIkmfaCtrSiMPGoUK1awfz+XLoktZeUKyTIyMjJ5mbQ0
MVv68CFnzrBzp9gQfNAgUaxJ6im+sniTl1sBVJGDg4M9PDwuXLiwZ8+eJUuW
DBs2rGXLllZWVpnLFWUVWUZG5pvkzZs3ly9f3r59++zZswcOHNi6detq1aoV
LVo0c6FSU1OzfPnybdu2lYbqq1atOnjw4JUrV168eBEeXiDe8ckq8t+tcGFq
1KBbN6ZNY/NmsbL45k18fUXBOhkZGRmZPEtcnIjVUsSW4rYUvf/ZFi1iyBDs
7SlVKnt6ChMTKlakeXP69BHFljdt4uxZ/vhDbJMnk6dISkp6+/bt3bt3XVxc
tm3bJmWMffv2rVevXpEiRTKXLsoq8t98piK7rmLVfIZPovEQGo6h72Jm7mbL
Jc684OYbXgQRGJPjhkxuqcjpSaQEkPicuBtEOwtndcUwejShZBEMzKjSkg5T
GLubFU/Y58OVD7yMJCYnfIw0ZfWuBOGiJQUSeA+v49xay5mprBnFiO9o2pOi
HWQVOTPIKnJWkFXkLJKWQqwfIbfx+52Xmzg1g597070eNsVQ18a4CqW7UG0a
jX/l+5P8cpOzPryLyu2D/o+kxBLjQ/AN/I7wcj2HJjOjCw7VKfpFfPikaSrF
WnNhIxeqQbV+9FrEvN85+JIrQTyO4G1c/ttuOzEKv1s82MHZKexxZL4d/ctR
rxim2ig0lOdbHIUtimpUH8Dglaw9j1vQn8E8QtkDpKUS+ISn+7k0m4OdWW7H
8Ao0L07JjzKzrtLflp678pRqS7vpTN/LnifciuFZPH5JRHwDlXXzPCkJxIcI
DTXkGa/dcNvJ3tks7s3I2nSxpUEJbIww0PzihpfuAWNlp2OLUSPspEC6jAUn
OPCcC294FIRfNPH57Yb/hHRlGhOnlIZDCX7Ag/2cnMuGnkyvS78KNLHAqjAa
GVb5My9H7S50ms3ofSy+zm8eXHqLV6QQC+OVHnJKXqr7LavIMsgqck6Slkhi
MLE+RDwk+CpXNrBhFKOa0NiESoaifGhlB6oMpeZ8Bjmx4gJnvXgfJ4JQojIa
fWWBNzmK6JcEX8PvEJ5r2DuBKR1pXgUj3QxzIXXlfWKIogh65andiwGLWHSK
4+9wi+BpDO8TifuGXlKlxpPoT8wzIq7z4QSuS1k6iD52VDKgaCGMjNAtgYYt
alUxrYpNVepUpVVVGpeligUWxugVQl0HoypYdqbiFOw2MvA4K27g6p3/kucM
kFXkAkVEhCjHcfOmsKc2bxa1lTp1Eu+rNb/MJLPWVFVFvWUpctrb07OnmDb9
9VcuXxa1kWVkZGRk8iwpKaKOvYsLq1czerQood+woSiJLGVNX1m8ycutAKrI
r169On/+/MaNGydNmtS9e/emTZtWrFjRzMwsc7mirCLLyMh8k4SGhr548cLN
ze3YsWNr164dN26co6OjjY1N5kKlurq6ubl51apVW7Ro0bt37xkzZmzfvv3q
1av+/gViLllWkf9u2tqULClWEDs4MGAACxaIdb5371IwnHQZGRmZ/EpEhIjV
UsSW4vbAgSKA/926dhWrfcuXFwpxtvQUlpbCQx4+nOXLOXRIvH19+pTAQLHQ
WCZPERcX9+TJEylRXLZs2dChQ9u3b29nZ2dlZWVgYJC5dFFWkf/mMxXZZTFL
JtKvL9VaUN5R7HnabzFT9/LLNTFjfu0V3qE5LiHkloqclkiSP7FPiLxMyBEu
LGHJYLo2xNIMfVMqNsdhAsN2sOAuTs8578fzcKJz4lKkKC20aAgn/hU+53Db
wMEJrGrLhNZ0bkONNhg5yCpyZpBV5Kwgq8hZJC2ZCG/eXMBjOzd+ZPdgfmhD
uyqUNkFTF4va1ByAw2IGnmCeO7s9cfcnMC63D/o/khZPwluiHxB2lsC9nJrH
/H60r0uxjCdH/tZvzNAsQ4X2tPuB8btYe5cjvrh9wCuC8Py23XZ8BL5XuLGa
I4NETeMpVnQrRs3CGGsoKx8WEwqxoj4KR2pNZsRWtl3nUSjBf1V8TVaW0Q5/
yaszPFzP5Yk49WBaU9pXwErKgVWUH6KvdAXNsWxEq9GM/5VNtzkXyt1I/ogT
paRlFTmnkX6j1ARRATshgoi3PD/PpfXsHcuKVoyrSSdbahTF5MsymGrKn09X
lEc2sKay8oYftZOlt9n9TCnchhGTlNvnlhXSlf5fFISAP+/duLqB7cOYbkcv
M5obUlUXc03UVTIKC1bVaDOEMZtYc5djgVwN51kMAUkiRUpVioV56u6WVWQZ
ZBU5J0mNJ/4dkY8JvsS7Q7gs5OcBdLfD1ogixpSuRaVu1JlC8/WMO8pmdzFi
DY3PtXCRFkfyOxKeECuNKA9zeiHz+uNYB5OMd4hQVaZDmmK5im4xqjvSYxaz
jrDTmzNB3I3gVRwx+XqVyqekxhL3hoh7BLny6jeOzeHHXrSvSQl9MZujWRR1
W1Rrod6EEk2o0QSHJgxsQrfawkYuWwxDHVSkPyuLbgsMB2M2l+Zb+eEMhz14
/Q09VrKKXKBISiIqiqAg3r7lwQO2b2fMGOrXR0srmydMVVTEU2ZkhLk5ZcqI
LWWnTRNv4F+8yO1LICMjIyPz7yQnc+cOW7YwYgR16ogyTUWLinJ8hQp9bfEm
L7cCqCJ7eHj89ttvEydObNKkSenSpYsVK2ZoaKilpZW5XFFWkWVkZL5JEhMT
pZgWGBj45s0bd3f3DRs2fP/99zVq1MhcqFRRUdHR0TE2Ni5evLiVlZWDg8PM
mTMPHz5cQEbZsor8d1NXR08PU1MsLLCxoUcPFi/G1VUM6mVkZGRk8ixSlD57
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
sFCgo0DdAL0qmLbHYgw2K+i+j8VXcH1J4Ge6tfTEhRLnTeQdQly5v4Xtk0R3
0KQMZgoMFegqXSYVBWalqdmRTtLDeJBlD9j3kmv++EblE4X1WyE1megAAp7h
K4XHY5xfh9NUFvRiWH06WNOgBOWMMdVG9VMVX1MbY0tK1qBiK+r2odcsZm5n
6yUuvOZJJD6xBCYSmy/iQJoy0MWJCJASiP9dHh3l3CpR6HJZL8Y1pUt56hgJ
Da+Y8u7VVnxuZWvrUqoidR3pMIKhi5n/G9su4PocjyjeKz3kaGWp0byJrCLL
IKvIOUl8KG+v82Ar5yaxz4H59egnhZSiGBbCqDjVHek4g3EHWOHBPh+uBuAd
RXwuPlcpymAYLtKhZB8eHWLvdGa0pIMRdRSUU2Cu7MEzemeli1l1bHtQdxat
dzHmDBvucel1PlmW9b8RH0bAA7yOcmclrmP5pRtDGlLfisLaKAxQWKOoL8od
a31HtWH0HM2cCeyZyprBjGpDiypYmCg31DBUjuDKo6hNhf70W8bKM1x+xxtl
KhqhTMrytWIbGRnp6el54cKFXbt2LVq0aMSIEQ4ODhUqVNDV1c3cC7EiRYrU
qFGjXbt2w4cPX7BgwW+//XblypVXr16lpckpY94iIUG8IXdz4+BBfvlFvLju
3JmaNXOkDKaREZUrC/Fs8GBhPm/bJl7Le3mJY5CRkZGRyV3Cw3n0SFi169aJ
Ykp9+gjP1sZGFCXO9u7AwoKGDcVXzJjB0qX/2qT/VfqbBg3E32f7MWS9FQQV
OTY2VsoPz5w5s2XLlpkzZw4cOLBly5ZSfmhgYJC5/NDU1LRmzZpdunSZOHHi
L7/8cvDgwevXr/v6+iYm5tkXMDIyMjKZJyYmxsvL6/Lly3v27Fm6dOno0aOl
AXKVKlUyHUVNTEyqVq3q6Og4ZMiQefPmOTk5Xbx40dvbOynpG9rX6h/kcRVZ
TY0yZcRi3kGDxPD2nznMwoUMHSpGvuXKiS2Hsv2rS5QQBTalkfvo0WKHo/37
uXFDrCmTkZGRkcl1pGjs7i4isxSfx4wRsVqK2FLczva+QOpfpF6mVSvR40j9
jpMT587x9KkY2svkNYKCgu7evXv06FFpFCyNhXv06NGgQYPSpUtraGhkLics
WbJk48aN+/fvP2vWrM2bN588efL+/fsBAQG5faK5TAYqsro2euaYVKBEA6wd
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
B3s/63n2utf93MX1PNf2sXMWs7vTvxINcmKjwkol1Pi6clYp3vEcqPSE76Vu
ftHroXApSlWgdjP6TWDOdvbc506SeI185BwvSwixFSmyAooUWe18EGHePeP2
DnaNYGYVeqpomYMaBpTKj0lhStahw2imbWevK/fBA/zkmTOTTIDJifjc4tZa
Dg9kdSUmmdPVmOq5Mcv+2VxI+l8LyBVfY/HMlJ/CwK1suM7DQLHnI1a+MVnS
xPbDv6knj45xYj5r+vBzNXqVpUFhiuclp1QIG6FbEQM78o2g6DzaLWb6Khw2
4LmDSwtYPIBu9cRM+slNsyxP8wGM3sC6h5yK4lYsngmEJGfxdPoDEhMT7927
t23btvHjxzdt2tTa2rpo0aL58+fPmTPn130cy5s3b926dYcPH25vb3/z5s0n
T568evUqJCTke20jm6Xx8BDeHTNm0KEDFStSvDhmZuTOrf5v5rq6Qu02YIBw
4LxwQXgyv3xJUJDi3aGgoKCQjkgTb2gor1/j5sbt2x+No0dFU9cuXYRrk1ri
fM6c5M8v5DHW1iLgfzj69mXxYmHc9Pn2oW/eCBmP9C+lf1+lijixQoXIk0es
Zah9GfcrxvcqRY6JiXn79u2LFy8ePXp05syZRYsW9enTp2LFitra2l+9Tvon
xYsXl35t3bp1Dx8+zOgLVVBQUPjWSLXw4sWLO3bs+NVS5A/JkydPixYtZs+e
7eTkpEiR03XkyoWpqWjuU6HCR/lMzZoMGSL0ZleuEPZxZ7G4OO7cET2ARo+m
YUOxMmtpibGxqILVfnpSwd60KePHs22bOKi7Oz4+vHuHsgtcQUFB4dsgxVtp
FpBirxSBpTgsRWMpJkuR2cxM/TFfmkek2USaU6SZRZpfpFlm0yZRzitfUzMb
KSkpERER/v7+Hh4eLi4u+/fvnzZtWtu2bS0tLdOeBErUqFFj3LhxBw8e9PPz
y+hrzUT8gxQ5MwzpTCxQVUBVn4J90lOKHEvUS4Jv4nMYj7UcmsS0zqIDbEHD
jL4Dfw4DIdJTpMhfjSJFVvjGpMSRGEycN9GuBF/hymrshzCqJk1yU9mYcrYU
b0fhUZRYRI+9LLnKlZfflcorxAsPR24u58Rw1toxphYtS2Jl9Nkop4XKFFU5
sfdE1YXiE+lhz1Inrr0U3rDhicQkk5CSSYUlSWHEeRHpTOgJnq1n5wRGt6Vm
6U8Vp7nzUbYhzccweAtzXNj6DCdf3N8R+dc/fYLsNPtOqJEDb3HNni1DmVyN
LgY01MM6BwW0ya6Bbj7y22DVCpvBNJrDyG2svchlL94miEkhTjaHzDzy1f8I
MSEEuvH8Ig/2cmkF+6azYjhTujOgKW2qUr0kRU3JlePT5z+fOaVqUKszdmMZ
sIBJm1h4hM1XOeYmXgG3QOE2n5BJ9GfSSxgvT+ryVouwJ7hf5MJedi1n0c9M
6EXv+jQtho0ORVWYyQ7eOu9nW105rzNBVRhDa0rVp24HOg1k+FTmb2LHeS48
xyNZ6JCD5Mc/S3yiU6TICihSZLXzfgYMFUVO8F0u27N2EMMr0UBFzTxUKkIZ
a6zqUK0XP/zKoqM4evJc1iGHfJOC6F+SkkjgQ1ylieAXDnRkUU0Gl6WhOYU+
3wtSW34Bi8r1bz3KDqLPclac45q/2PAUIofe+H8+eOYj4Y9Z4w1BLlzfwdaf
mdyWLqVoWBhrYwrmQkcLnfwYVaNwd8pModZaBm1k2TbO7MbnADeWsXwoPRtS
ouCnN61wWRr0ZtByFlxjrz/nQ3gcSWD895P/JCcne3l5OTk5bdy4cerUqX37
9m3atGn58uW/2iE5V65c5cqVa9OmzciRI5csWbJ3797Lly97eHgoXcMyIX5+
XL8uXCjnzGHwYNq0Ecu+BQsKBw/1fm7Knp2SJYV9x5AhoqHtjh04OfHkidDI
KSgoKCikE1FReHoKwcy+fWInyIdj+nT69BHmfoUKqSfOGxsLEbIU5/v1Eyuk
H44lSzh0SDSQfffZCkWaEaR/I/3LxYuFDKlTJ2rVEtrm9JDxfN1E9l1KkYOC
gt6LkLdu3Tp37twBAwY0atTIysrqq1vHfogiRVZQUPgvo0iRv5RMIkU2M6NS
JVq1YuDAj/KZceNYuZITJ3B1FSnWhyQkiE2+Z89iby9Shd69adyYsmUxTAf5
h/Sb0ul16PD7+Rw8KCr6Fy8UWZqCgoLCN0KKt1LUlWKvFIGlODx+vIjJUmRO
p5gvzSbSnCLNLNL8Is0yZ86IGUdx+8hsJCUl+fj43L59++jRo1L9O3ny5G7d
ulWvXt3U1DTtSaBKkSL/DYoU+U+SYol4TsAVnu/l8RL2juZnO1pUoEDejL4D
fw5Fipw2FCmywjcmKZoYH8IeEXiJ5wc4PpsFPeljSxU9yphSrgY2Pak4jbob
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
lbg4IU4LChKbbS9cYNEiunUTe77UfnpSqZ4zJ3nyiK2+lpaii8T8+WIbV0hI
Bv3ZFBQUFP5jhIaKqCvF3s6dRRMfKRpLMVmKzGr/lCoNaR7p2pWFC8XMIs0v
0iwjzTXSjJP6vaxKfDfExsZeu3ZtxYoVUv1btmxZU1NTQ0NDPT29bNmypT0J
VClS5L9BkSL/SWI0oe54n+HxBq5PY2M/xjShcZn/R2SbYUORIqcNRYqs8I2J
CyXoES9P8sieS1NZ3ZcfG1KvOPlyYFJIGPo1HE1Xe8Y4sfIuJ71wDyE+S3iA
/jtiAwh9IFyCn2/h4iyW9KN3Pcr/RT3y6dBClR2VLqpcFLShfl8GL2PRJRz8
uBzMkwgC4kjKlClc2Gu8znFrNSdHscGOibWxKyWMYbU/7p5saEqtdgxcwJJL
nIrDOYGnSQSkCPnlp6TKgqoUEdnDX/PsNJeWsHcAS+oywoZWlpQxJKc2Glpo
6ZBNDx0DjIpQtxNDF7LqEhejhdbxBcIoMi4D7kcWJjWZlESS40SOJM16cTFE
xxIZR3g8UYliv0BSyhdowFLiifUj/CFBF/Ddz7lFLB3BD22oYo15QQqYYpYP
k7zkz03enOTSQUcbTQ1ySP9NBYrbYTuKRosZuo3FJznmjJsXvv74vyUglLcR
BEcTHkd0AgnJ6VPapPwhiU8QO7ZiwgkLJjAAn9f4PMHnFj5O+Bzm6gqWDadX
E0oX+fSN1tJGJyd6BsIP3LAQxuUxqU2BVpj3oMFURm1lw3WcA4U8LVhOEuK/
RF+XkkyidHujiAwjPFj8Z0w08Qkkpoizfi9H/AbRQpEiK6BIkdVNShiJL4l3
IcYJz63s/ImRdlQtKWS6RsUp3pJqo2mxmiFHWHodx2c8D83oM/7/SE0hPpDI
JwRfwv8gVxezcgj9GmJTiBwqsst28Zr/VABaWtNiIGM3sv4xZ2K4E4dXIiHJ
WU+KnPKO5Jck3if+Ih7b2P4Tw9pS6S+LPtJMYd2SlpMYvJPZN9l2kws38bxJ
3E2e7mbbZH5sTWULcsl++9nlrS7S/8tISopa0GAs3dcz4Qxr7nDKi2chJKT+
bzr4nvD09Ny2bduQIUOsra3V8q3Mxsamf//+q1evdnZ29vf3DwkJiYyMTFA6
yWU+QkJES9lff6VjR7Gm+aFirUABoVjLnVttirUSJcTK7KJFwlfqr4q1d++E
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
5Z07wuvjz3HypPgA3qMH5cur5+uTrq5Ye7W0FD8oEr8PRs+e/PabWDNVHD8U
FBQUvgIphu/bx9SptG1LhQoUKybcg9XivPfJyJ1bGOYPGcLq1UL8LE3s3t5C
oxsXp4arSE0lMlL4+Hl6cu/eR1OSdKxVq8TKbI0a6XJdfze+GylyZGTkjRs3
7O3thw8fXrdu3XLlyllYWOTLly9Hjhxpz/q0tbUrVqzYt2/fxYsXnz179tGj
Ry9evHj79m1MTExGX7eCgoLCtyYqKiogIMDLy+vBgwdHjx6dM2dOly5dSpcu
/XUBVktLy8DAwNzcvFSpUpUrV+7Zs+eCBQscHR19pPrteyGjpMhSZdqwoVji
37RJZBpubmJjV2goCZ/vM/r3xMYSFMTLlzx+/FEOI41du/jpJ7GTq1AhNZy5
hobIx8zMKF6cihU/Kqvr1mX4cOHMfOOG0m9IQUFBIa1IZemhQ8ycKXr0VKok
oq4Ue6UILMVh9U5JOXKI7Sr9+7NsGefPi3lEmk2kOUXZVJIJ8fX1PXXqlJSP
SVmZlJtJGZqUp+XJk0fK2dJeWUsVeoMGDUaNGrVp06bbt2+7ubm9fv06NDQ0
4auzk++RLCBF1pLVyDmFINm0HI37M8aezfdwhidyX/tQNelMFCnyV9ylz0iR
dXNhaErBYhSrQJmqlK9KharYVv10GetbDpsylC5MUUPMswsRch7ZiCybSpEi
K6iVBFmH/E7o997e5uZGdoxkRj36FKC5JZVKYW5D9mpYdKHNTKbsZ68rLpE8
i8EvnvCkrOdx9xlSE0mOFdKRhBDe3OfqBrYOYlpFeqhooqKi3Fk7x2eDnn5B
ijag2lBaLWXAERZc5ZAbroHEZ6B070NSZdPVSDn+BvD6EueXsa4v42zoqE89
PcrokF9bdjs0RFUSVS0RZExH0HY5cx0550lEqojbcf+ib3hCGO/c8DuHxzZu
z2PDYIY3o3Yp9D92mMmRi+I1aTSUfmuZfo0N7px6zaMQQuO/0S35DkhNEc6N
4Q95ew6fXTzczun9bD3K/DNMvsL6h5x5KYyR49TxEMZHEPSY5ye4v4bLk1jT
i+GNaFAaEwPRNebDoaWFliaaGuJxypWfgjUo24uaM7Dbxs+n2O7CXV+i0yO9
jQAfOd+6gfde9vzCyA5ULikeNqmCk4amdFZaYmi9H9qfnnmhUtTrTv9FzDvP
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
RUX5+Pg8fPjw4sWL+/btmzVrVvfu3StVqqSWFt6KFDmLEheHv78wibpyhSNH
RP3Vr58wn8ybV/3fTwwMhOVypUo0bkyfPsybJ9TIT56IfogKCgoKCn8lPJzb
t9m+nSlTxFJmvXqUL0/BgkJyo/YQXaiQsGkaMYLVq3F0FFqaZ88ICvqmIVo6
lnRE6bg3b4pz+PD7wO7d/PKL6LFubY2OjpqvPUtLkaXUzsnJadWqVSNGjGjZ
smX16tVLlixpbGyspaWV9uwuf/78derUGTRo0OLFi48fP37t2jU3N7eAgICE
hG/wvURBQUEhaxATE+Pn5/f48ePLly87ODjMmzevd+/eVatW1dfX/7rYa2Bg
YGFhIdXpjRs3ln5K+kHpZ588eZKUlIUXZ9JViqyvT9Wq9O4tCkyHj5cYzpzh
zh2x0Sk0NN2vUUrbvL25dw8nJ3bsEMlbx46ip4O2tpqvV0sLY2NKlhRS55Yt
RfK2apU4qI9Pul+jgoKCwndATIyI1VKBOX26cEto0EDs9pXKYT099YRoKfJL
xbs0C0iF/IdT0okTwoT56VMCA7/phl+Ff0NycrKUax06dEjKu/r06SPlYFIm
JuVjUlaW9rJaJfe8aNWq1fjx4zds2HDmzJk7d+54eXmFfoPsJMuiSJH/JD4S
Pxce7uHCTPb3YF5j+lWkZmGM1RGy1DMUKXI6DUWKrKAmUlOI9ifoPq9P8XQL
Z2eytC8D61DTHGMN8mQXKVD2PGgYo1eEguUoU4OaTWlqR3M7WtrR2g6773S0
bEr9ylQrSvk8WMkyXSPZy1frs++mdg5hjKxfCKNSWNam9XAmrWebM3diRcNu
f9k9MQO/m6cmkvBWOGCH3SToJNdWsHoYAxtSpYDQBueRLzC7LEXOXwLr9jSd
Sp89TLnORlfOv+ZF+BeoMVPjSQoh4RVxT3h3jatrWDuUH2tRNzdlVBSR72cO
FZrZyVkEw2oUaEfRoTSbz4R9bLuNS5CYK9/reRKzRCf3jOMTKfKdTezfzIIt
DNlCx51MPcuu+7j4Ea2OJy81VaiRkxNIiiUxitgIIsMICyU4iLdv/zcC/Lhz
lMPTWNGMCUb0ykuTctg0w7Q/eX+h+SZmnuPMM8K/oRRZSxurSjTqJ3TIc86z
6SFHn3LjJR5+H525NEJCCZOuS8o2E4QCOSGFpNQ0WCIjC+/8hQ6ZO7xy5MB6
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
OPIdP33K7FoMKUWrQpTPjZ0J+oYYW2ORD5si5ClNrS58MpNFXvgEcBMeau8O
73w4JeNERUU9fvz42rVrx48f37Jly9SpU7t27Vq+fHkTE5OMPXyztbV1dnau
UKFCgwYNevfuPWvWrF27dvn5+en6QhX/gdhYmfi9eVNWiXxZTqRvX/mk3do6
azdMX1aqdHWVr5XO3fXuzaxZ7NqF+igpFIqcRVycrIfs6Sm3RNu3T6NsL8vO
Fy1K7twyOZy5impoKHtzd+rE11/L/Vkvr7/H/v0yzSvk9PlzclyRnshIWSH/
yhWZ7n71osT47js++0xGu+3tXzcz+fJRv76MNomf37dPHnK5fZvgYNms/B0n
Li7u4sWLnp6eEydObN++fe3atcuUKVOwYEFLS8uMebbcuXOLXzJw4MAFCxZ4
eXmdOnXq1q1bQUFB8fHv8SE8hUKhyBJSU1NfFq6/cOHCwYMH16xZM2rUqBYt
Wri4uGRMoo2NjV8Wrq9atepHH330xRdfLF++/MiRI8HijpWj+Lel5evPDRUq
RJMmDB/O99+nv93/8QfXr8uI77t/hggZdpJhuZdFO4UbnDBBxoPd3LJ2WS2G
lRVOTtIK1q2bfmX9xRcsXy5bdQQF6Xp2FAqFIqMkJ8tzLr/8wjff0LlzGpVr
3FiexSheXJ5qEYviTBdYoeFCyYWe//ST1Hah8ELn1eGOnIVwU8JTrVixYujQ
oU2aNBFeSzgu4buE+8qYbStSpEjz5s2F9xMOUPhA4QaFJxTOMCVFZWsUiqzl
zaPIhdyo044eE5jwEwu9+N6LjV5s90q/1sjOsX4hcwcyqja9ctNMQzUNxTTk
0qgosuLtSNVmS7TtxVNjiAok8DZ3znH5AGfEatqLI1746PST/36Mffs5cpLT
V7l0n5vPeRBOULQsiZyQzYeQ4rXZQW139aiT/PEDS0cwsAlVnCiWiwKW2Jpi
bKBVFWNtGlloYx6sCuNYCreqVGtA/aY0bIpHUz56i2Bqg5rULEflopTNT/Fc
OFrKUsz/7OqeqzAlm1B7KO2WMWQPi07x+218n5Ok7NK/85oosphSPX2ZcTIw
xlD8oc0xtcDcUj4OsrbO2mFpgYUpZoaY6GFsgaEjBmXQq4NZO2pPYOhG1p/n
WjQB2o9nlFaQMoV/iyKLqdA3wMAII5M/58HMEgsrrLJuEqy0wxJLc8xNMDHE
SA9DMwwc0HdDT0WRM4SKImcuQj1Sk0lNIiWRpHjiY4mJltvrERFERBERTUQs
EXFEJxCXRGIyKTkuSZvpJPx9uif8Iqd/YN1gxtagjSl1ClCmIgWaYdaXApNo
t4Y5Bzl2j4QUklJlCFnMXs6bv1TtSJG+MTGKR2c5u57dY/m+FRNq0M2NGgXI
Z/G6h2N65ugXx6A+Rt0xHkPNpYz8jV+v8ChM15f2/yMmhIcnOLeGvWNY34pJ
dehSmsoO0imlidYYU7YuXb5i6g62BnEimespPE4l6v/7B/7fHMZH4H+asz+y
exSrWzChGl1dqeZAXjM0eugZoK8tjyxuE2Vq0+lLpvzK1kecAV9ZlJr3uDZc
SkpKQkJCbGxsVFSUv7//li1bRo8eXa9ePTMzs4w9fDMwMDA2NjY3N7eysnJ3
d+/fv//3339/6dIlXV+o4j+QkiLLeMaJG1C0DKrt2SOTbM2aybBclm6Y6uvL
uqCmprIhbzpf5+5Ov35yJ1p9lBQKRc4iJkaGPWbPljlkJ6c0ymZlJUsCmpjI
HVI9vUxWVCGntWrJSk2bNsmyzHJ98coQ7yo+XuaQU3OaP05Olpnh2FiiotJf
1Kvz/JqZKVRI1rCaM0duHIv/S9zpxP0uR0xFTEzM4cOHZ8+e3b59eycnJ0tL
S+HWhOnS19fPmGdzcHBo3br1jBkzfHx8IiIioqOj4+LiEhMTU9/9uVAoFIp3
j6SkpPj4eKHVkZGRFy9eXLlyZb9+/cqUKZMxidbT0zM0NDQ1NbWwsLC2thYr
9DFjxmzduvXRo0e6vtD/xqtLy5AQ9u6VsbHmzcmT53U365Il6dmTJUvkiaF0
t3thAMRvE78zR6R7/vItkZGyBcOGDQwZQtWqWbus1mi7YxgbY2aGpWX6lXW9
eoweLQs1+/vrenYUCoUio4i7wB9/yILzXbrIHkPphM7CIqtW2WIIDRdKLvRc
qLrQdqHwQudV7duchXBTwlMJZ1W/fn3hsoTXEo5L+C7hvjJm24TfE65PeD/h
AIUPFG5QeMKkHHfwW6HIgbx5FNm1Cm0GM2496305EMGZCHwjeBKRfq2RneO6
D3tn8H1rJjjQR0NTDeU05NOoKLLirUn9OxqRkkhiHPExxEYSLVbTEUTq9GP/
Po2oaKJjidGGuBKSZWf25NRs31+IgSDwgwtEeLN/PlP70aKa7DZuYoCRPgb6
//PDelptMUCjTa4amcq45sus5tvHNa0ssTSTgUwzo3+87ivD2onCDSg/gAaz
6L6JaQfZcpVrgSqK/DpeH0V+J4a5ttp2aTS1MGtDrXF8sYF157ga/Wf+NhOj
yGIqXlwiwJt76zg8jQV96VmfMoV0PQN/DTM0Dmjc0OSEKHK+wtRqRa/JTN3O
+utsu86+65y4zpXrsv6DTsbxPfwyg4WdGF2CHhqaaKigwVGDsUZFkRXZQUos
Sc+If0DsdZ744DOf73rzWQXqGVDJUXZXKdKR/CNwX0DfX1l+inOPdf2OM4+k
OAKvcn0rR75lax/mNuWTytQvguPri5SaohEKXBlNMzS9qfgNn27khxNcDZSV
oqOTiNdGtXVJ6v9qFycS9RQ/H44sksI4vzZflKVVEcrmxtpYa5BMtCe2bDFy
oGIrek9jvrBVoVyF+xD8fxUuTogm4CJXN3NoKlt6MOsj+lWiTmHyWaaftOKV
aPk5o9exxpf9MZyP514iLz4MIxQWFrZnz56JEyc2atTI3Nw8Yw/fXsXR0bF5
8+bjx4//5Zdfbty48eDBg6CgoMjISNWeLAeRmCiLZ65ezeDB1K4tG9//Ndzc
cHaWxSctLTO/nme64egoN6zHj5c1T9KZEz8/2QnxxQu5Ja1QKBQ6ITX1z7Mb
/v74+qbRqHPnpIQOGSIl1Moqa6XSyEjWGHRwkLux5cvLevILF8qArlDID4Fr
12RlqlGjZCGsV+9W6Yb419Gj5U+Kv867T0JCgrBnT58+vXv37rlz51avXj1k
yJDatWtbWVllzJuZmZnlzp27YMGCJUqUaNCgwYgRI9atW3f58mVdX6hCoVC8
V/j7++/atWvq1Knt2rVzc3Nzdna2t7e3tLQ0MDDImHqXLl26e/fuc+bM2b9/
/61btx49ehQSEhKTI+oCv0JSkvRFP/zwpy96zc26VSsmTWLbNu7e1fWbzjyC
g2Vnijlz6N49/fWWKEHBgtjZyfBwVm+OiJcTb0C8DfFm0q2s798nMFBuqqrw
lEKh0BVCf4QKCS0SivSabUqxfFm3Th68bdBAimeWyqahoYxY5M9PkSJSQrt1
kxK6bx85rU3Bh45wTcI7CQclfJRwU3PnzhXOKsNHxoSjE75OuDvh8YTTE35v
ypQpwvs9fPhQ1xeqUHxYvHkUuVQNOo7kmy1secIpuKEtI6rbClQPT3J0Phs6
MM2RTzR8rKGihvwaFUVWKBRvSkoUSY+Iv0zsYQI2s+MbxnWhYXlZsTarHyxk
YFjkI39lSrSj0jCaz2XUZtb8wcmHsul5rDaimUQOrCqZxago8qvEPOX5Ofx3
47sS7wnM7k632pQuqOsZ+GvkqChyLntK16BxD3pPZvQqJq9i5ioWrmLlKlbp
aCyYzoS+fFaPjgVppKGStltEHrEe16gosiI7SIwg5iFhQm8Pc9OTrZOY2oEu
ZShnII88uNfDvQ9lv8FjDV/uZcNFrgTq+h1nHsnxPPflzh7OLcFnJCu7MKw+
H7nilOu1omeMxh5NCTRV0DTG/XN6LmaBF4fuczeap3G8SCBWt5nQl41C4iCa
iHtc28Xe6azszPjS9HahUX5crbE01F6ILZoCaIpjVImq/fhkMSuOcCpM5pDF
3zlM24biNSTG8Ow6frs5s4h9w1jakcF1aVgCh3+sSYuU56P+fL6CBWfZEsSR
F9yI5tk737M7U8j0KHLu3LmrVq3atWvXCRMmrFmz5rfffjt79qy/v3+cyozm
HJKSZOf6vXtlTaoRIxg48O/Rp4+MB1eqJLdNjY2z1sLlzi0Lj3TtKnsgpjMn
v/wiK1vevEloqK4nS6FQfKikpMjm45cvyx3JDRvSaNTSpVI8W7WiTJksj5dY
WlK0KDVr0qYNn33G3LkywyPeVVSUricoW3jwgIMH5Zx/9VWau1W6MXas/Bnx
kzlikzAiIsLPz+/48ePbtm1bunTpiBEjWrduXaZMmQx3r8ibN2/p0qUbNmzY
pUuX0aNHr1ixYv/+/ffu3dP1hSoUCsV7RXBw8MmTJ3/66acpU6b06dOnefPm
lSpVcnJyynDjb2dnZyHdAwcOnDlzpqenp4+Pz9WrV4OCgnR9of+N5GS5tPTy
+tMdveZmPXmyzJgdPy791XtDWBgXLvDrr8ycmf56u3ShYUOZcMubN8s3RwoX
lq8lXlS8jXQr6127OH1axv9yWshdoVC8Pwj9ESoktEgo0urV/7pNuWKFPF7a
rh3lymX5gV9zcxlCrlZNLuoHDJDiKZT8/Hmp6oochPBmwjsJByV81KxZs4Sn
Es5K+KuMGTPh6ISvE+5OeDzh9ITf27hxo/B+wSqhrlBkLyqKrFAoPmSSwom5
Q/hJnu3i9ko8RzGiDXVLywLFWf1gIQPDNBd2JXCsRfG21BzMgIUs+A0vX/yT
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
c/g7lvdlSHkaaaisobi29LqJBj1bDEtj3ASz/uT6mqY/MHk/e3wJeeP6AykJ
xD4h/BLB++TN2nsaM3vTsSbF7OV5CgPt7OlpZ8m+BOVa02Qsvdcz4RA/XOLA
A+6FvfwM/vl5fF8JDw/fv3//jBkz2rRp4+joaGNjY2FhYWJiYmBgkLHncq9i
bGxcq1at4cOHe3p63rlzR7xWdHR0fHx88gcSkHofiYmRxSfnzJH1lJydsbGR
QTsTkyzfBUg3XFzkDsX8+Rw7RmhomhEeTnQ08fEfSgxPoVBkNUlJMr8aFSWL
Nb2qNkFB/PYbkybRtCm5c2erBhoaykiJpaUs1lSunGy3vWoVOS2apEhDUlJS
XFxcVFRUWFjYuXPnli9f3qdPn9KlS7+9GRNUrlx56NChmzZtevjwoa4vVKFQ
KD4IYmJifHx8pk6d2qxZM1tb27dX8vz587ds2XLatGne3t6haRE3DnH7EDeR
JBWQylE8esS2bbLdT8OG2NnJQ7jm5vI0rp5etrrKKlX4/HPZWePGjfQr64gI
ufxPTJR5coVCoXhLhJIIPYmNldqSTm2E/ggVGjyYqlWzVQBfs8ouVUoWYV66
VBZDVuQgUlJSEhIShA2LiIgQHkm4JuGdWrVq5eDg8PZmzMbGpmnTpsLdCY8X
HR2t62tVKD5cVBRZoVB8yEQH8eQUNzw5MZ0dnzCjJT2qUNEJUyNdGuk3Gda5
qf4x/aYz9wB7ojmdhG8ygSnEqgcOackBUWQTbUy0kIzgmtWixiAGreD7E5yJ
4i4EQFjmJcxVFDkDs6SiyArFvyLuOMnauu1CpGIJ8eXmbo7M59fPWNCSwfVo
WoESxTCwp3Ad6n9K38VMPcBaX7z8ufScwPeoT1ZqMgkhRN8j7IJMI59axeoR
DG1CQyectcuTXNoq5Xqv/Z46lqJGFzrNYNRvLLrC1rucFi5Fpw9LUqJJCibh
HnFX8N/LnlnM7kYvd7nmKqmhoAZbbel149zYVsaxI8XHUGk5/baz+CRHHhD2
xjnq1ETig4i6yYsTBP/G0YV89yn96lMpP7k12Ggw176QmKVczhRtRNVPaDqb
/j8z6yDbrnElWHwA5ccwUfuRfF+tUFRU1Llz5zZu3Dh+/Ph27drVqVOnTJky
jo6OFhYWb/+MztDQ0N3dvWPHjpMmTfr5558PHz58+fLlhw8fqs5lOZe4OJl2
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
U1pyQBRZDD3t0MfUikqN6TWZ2V78Hs5ZuIWMV8Vk0myoKHIGZklFkRWKfyVF
e1IiTOaQ8eeeF3tmML8DA1xobEbl/BQtiV1V9BpTdgi9l7HoEMcCeZhCUCph
qZlW7/1dIVUOcdNJTSbgKqe+Z1NfZroySEMbDdW0hZENX/s9tSmCswcVPqPh
XHpt5ttD7LiOr06LhSY8J/IGzw/z5BdOz2fF5wz8iEpFZfxYXxsM1tO+89wF
qdKSzl8zbier7rHrKWdCeRhNXPIbv1KK9lb3gtQAUu9z93d2T2V2G/oUpr6G
8hqKaAsjy1e0Ra8I+hUwaIhjLz6eyeQd7PDlofZ2+UL7a978ZXMcKSkpSUlJ
iYmJ8fHxZ86c+e6777p161a0aNG3f0an0aaRDQwMjIyMTExMSpcu3b9//9Wr
V1+9elXXF63IOCkpJCXJ8sjx8Vy6xIoV9O4t+7pmpwPR08PAAEND2b7WxCTN
KF+ezz5j3TpZbkWhUCjenlOnWLiQLl1kt9Z0gmNkJIVIX1+KUnZqYPXqspf3
pk3yYEhCghTk5GRSU3U9U4qMIjzYsWPH5syZ0759e0dHR2NjY2GchH3S09PL
FDOmosgKhUKRzWR6FFncEcTK2tDQUNwjTNJSokSJnj17Llu27Pz587q+bsV/
QDg34d/Eylp4uagomUaePp2PP5Zn3LLTVQofK1bWwtOmW1lbWso08oQJ/PYb
z5/rerIUCkXORyjJ77/LoK/QFiurNIIj9EeokNAifZ0Wc6tYkc8/Z/16bt/+
e5Wd8r6WJnlPCQgI2LFjx1dffVWvXj1TU1PhmoR3Eg4qU1bWKoqsULwjqCiy
QqH4kAn25eyPbP2E+e4MM6CjPjX1cdbDSHcu+g2HmQ3FalL3E7ou5ssDfHeB
nXe4FMyL9y3a9bbkjCjy/4apBZU86DWJ2Xv/jiIHZF4UOew+Dw5yaTWHx7O+
F2M/onVZitvr/sL/HCqKnHVDRZEVWUBqMknhJDwh9hZR57n8Ez9/xaRmtC9I
FSNc7XAsjHUZ9GpQvAstxzFmFT/6sPcCBy5w9AKnLnDhPR37t7B+ErNaM6wI
nTU01OCuXaS8viqyZQEcqlKiHZWG0nIuX21m3QnOPpLSF6OtP52kzTtnJ7GB
PL+A/2/4fs+BSczvSc+6lC2sfcMGaIzRmKOxIq8btbrRdw4z97MlgMMhXI3g
aRzxb/4M8GWFbXGpIfK29/Ag++ezrAfDy9DWijrmuJmQ10CbfLbU3ilKoKmE
fSsaj2PUT2y8xNUE7iYSkEx4CkkfRsLn9u3bW7ZsmTRpUuvWrcuWLVu0aNF8
+fJZWlpmyiO7QoUKffzxx+PHj9+8efOlS5f8/PwCAgIiIiKSk9/joPd7zr17
7NghK3O2by8f2r863NxkqWQ7O7mtkJ3mxMWFNm1k/dKtW9Or6M2b+PsTGipD
1AqFQvEqMTGyMN39+7L20au6cf687Jo9fDgNG2Z3MsTcHHt7ihSRFaJeVddK
lejbV6ajDx5UyZAcTEJCQmho6KNHj3x9fU+fPr1q1aohQ4bUrVs3UxJrhoaG
NjY2jo6OJUqUqFChQo8ePebMmePt7S18l66vW6FQKD4I4uLizpw5s3r16i++
+KJevXqlSpUqXLhwnjx5TE1N317k0+Hg4NCkSZPRo0dv3Ljx4sWLYkX/5MmT
8PDwpKT3qWfYe474WwnbuXYtI0bQqFEa41e+PMWLU6CALF9sYJB9RtTQUL56
nz4sWMCBA2ns8aVLspjz06dERKCe5SgUilcRmiCUQeiDUAmhFa9Kh1ASoSdC
VYS2CIXJzpX1q8PMTK7rnZ1lNfh0jzF79GDOHLy9UWumnEVMTMyzZ8/u379/
7do1seYVK1+x/i1btmymuCzh3HLnzi1cnPByYrUu1uxi5S7W77GxmdV0WqFQ
/GdUFFmhUHxwJGvjjLGyp/zT8xxdxprejHWli4ZGGspqm4AbajAwxtgSs9wy
GpTLGYfiFHHDzZ0KFdP73kwe5anoTkXhrl0pV4xijjjkxto8/TFDE2sKVqFC
Tz6aTvetTD7ChqucfMzzzAqtvi+oKPKrhN7hrjdnl+E9glUd+bI+LUpRLHs3
al83VBQ564aKIiuygJRE4oKJ8OX5SZ7u4egiVgziiwZ4OFDCECcrcttj7oye
G471qd6ZjsMYOZNpS5i5hLlLWLiEJe/p+HYCo7rRrwZt8lHvf0V97bSVhF/z
PRWWw64kjrUo3po6Q/h0MYv34nNHCuAzCNc6l2zeOoh8zNMT+G7i7Cy2D2Fq
WzpXpbSj9g2boLFGkxeNI/mq0+BTPl/GkuPsD+VsBH4xPEsg4c0jweInE7VX
GCHuVTw+ybGVrB/EN7XoV5DmealoTQET9PW0dwo7+aKa4uStR/0hDFnJyhMc
j+RyDPfjCUn6L6+bk3n8+PGxY8fWr1//zTff9O/fv3nz5hUrVixQoIC+vv7b
P76zt7evVq1aly5dxo0bt3Llyp07d54+fdrf3z8hQbXfyKkEBsquhT/9xLRp
DBmSZnTpQr16sr9hNjdYzJ9f9nbs3l3WWkmnops2ceQIt26pBosKhSI9wcFc
uSK3HdetSy8dI0fKPq3ly2e3mtnbU7YsTZrIyvPpBHb+fLZvl3u7Ss1yLpGR
kX5+fkePHv3ll18WLVo0bNiwVq1aubu7W1pavr3jMjMzK1KkSI0aNdq2bfv5
55/PmTNny5Yt58+fDw0N1fV1KxQKxQeBWOHeunXLy8tr+fLlo0eP7tatW8OG
DUuVKmVnZ/f2Ip8O8TsrVarUoUMH8ULi5bZv337y5Mn79++rkEwOIjmZO3fY
v5/vv2fs2DSu79NPad2aatUoXDhbD/kaGFCsGI0b88knzJyZxhuvXMnOnZw+
zcOH6pCvQqFIQ0KCVAahD0IlhFa8Kh2zZkk9EaoitCU7D1akG3nyyKO+Hh4y
eJxulT1nDlu2yMPIas2UswgODr5y5cq+ffvWr18/Y8aM/v37C9MllsOZ4rJy
5col/Jv4hcLLjRo1atmyZcLdCY+n9jIUCh2iosgKheLDIjVN2T3/I3jNY35X
+pVIExYy0GBkiaUjud0oUJ1ijanamiZd6NKXzwen972ZPD5lSF+GdGdIRz75
mJY1qeKKkz1GaY8fireXpzxFO1BxLA1WM2g3S05z8B6BUbqe4XcMFUV+lee3
ufU7Jxaw6zOWtGRoDZoWx8VO9xf+51BR5KwbKoqsyAKS44l6xLNzPPwd3zXs
nsSsbvSqTuW85NMnlymW1hjnlt9r25K4VKGyB43b0aYb7brRsRudu9HtPR3t
WtCkGrVdqGBNCQ1OGvJosPi/oshGFljkJ1cx7Mvj/jFdxjH1Z7Ze4yY8gCCt
BmZzrZywB9w/yIVVHBzL+u6M9aCNO64va+lbaHPIzmhK4dCEj0bx5TrWnudM
NDfieJTAi+T/Up049X8nxeIgmsBLnN3ItjEsas6o0nR2ppY9hSy0UWQj7Uvn
QmNP7nLU6sWA+cw7wO/POBHGTfH/xv+Xasw5mRcvXvj5+Z08eXL37t0rVqwY
OXJky5YtXV1dDQwM3v7xnZWVVZEiRapUqdK8efO+fft+++23W7ZsuXz5ckyM
OvOWUwkP5+5ducvw++94eqYZ334r63bWrk2+7HU7NjYULSr3alu0SK+i48bJ
6qbHjxMUpOuJUygU7xj37skc8pIlDB2aXjoaN6ZCBZycZAGl7FQzFxeZQx4y
hMWL0wvs/v1cvMijR6iQUc7l+fPnJ06cWLdu3YQJE7p06eLh4VG+fHlHR0cT
E5O3d1zW1taVKlUSv3bSpEkbNmzw9vY+f/78w4cPVRtZhUKhyB6SkpICAwOv
Xbt2+PBhseadM2fOwIED69evL3T+7UU+HRYWFoULFxay36RJk549e06dOnXT
pk1C9iMjdbvNrvgPpKTIY3E3bnD0KNu2pXF9a9fKZWyHDpQrJ1tmZJsR1deX
x+JKlaJuXdq1S+ON+/SRi/0tW7h8GfUsR6FQvIrQBKEMQh9ePhJ8VTrat5d6
IlRFaEu6CmnZOQoVksXnP/tMHu9Nt8r28pI55IcPUWumnMX9+/fFgnfJkiVD
hw5t27ZtnTp1XF1d8+TJkykuSzg34d+Ei3t5vFf4OuHuhMdTvScUCh2iosgK
heLDIkVGXGSo8ZFMed77jW3TmdSBlsXSh4VM7WQO2ak+rp2o/jntxvLFTGYt
Y8NP6X1vJo+1eC7Dcx6e0/hhNF91pV0dyhTBxDiNJhtYYFka+xYUHozrXDp4
Mv0Qv/vyJELXM/yOoaLIr/LMl+s7ODyTX3sz34NBlWhchCK2ur/wP4eKImfd
UFFkRRaQFEfYHR4d5uYGznzLT4MY9zGtylHMDlM9jA0wNELfRH61ja2xzE3u
/DgUwsmZQs4U1g7n93Q4OeKQh7yW2BlhrcFcg4m24YLea7+n+oYYirmywjQX
Tu407ceXy1lzTq68rouFj6wWTDZ/ZUPucGsPfyxgx6csac7QajQrLv++8g1b
axdcpaViO3amxRQmbGHrDXyT8E/mWQpRqf+xhnOq1qQly7z1s1tc3c6+aazv
yowaDCiNhxNFbbRRZLHQM0QjTJGpbFpRtS3dp/LNb3g+Zl+wvF88iiX2w+g7
mZCQEBkZ+ezZs8ePH58/f37VqlWfffZZ1apVDQ0N3/7xnZGRkaWlZe7cuR0d
HUuVKtWjR48FCxYcOXJEbZLmXBITEX+958958oQHD9KMPXtkqeS2bWX5puw0
J0ZGWFnJOieOjulVtHlzWSp5+3a5s6BQKBSvcuWKTHp88QW1aqWXDgcH7Oyw
sMju2k1ly8qkx3ff8ccf6QU2IEBWaoqOVk2xczDCaO3atevrr79u2bKls7Nz
/vz5c+XKZW5unimHv+zs7Dw8PMaMGbN582Y/P7+nT5+GhoZGR0erDVOFQqHI
HlJTU2NjY8PCwoKCgvz9/ffv3z9r1qxOnToVK1bs7UU+HWKpbmFhIZS/QIEC
xYsX79y58+zZs318fFQl/BxEaipxcfKcb3Aw/v5pXN/Nm7IJ0ciR1K+PtXX2
GVE9PUxN5Tlfe3uZ3HvVG7u5ySZE8+dz+DARatNQoVC8QmSkbEa2YIGsOVyq
VBrpEEqSL59UFaEtQmGyc2X96vhLwQ4dSr/KfvqUkBC5ylZrppzF1atX161b
N3To0Nq1azs5Odnb29vY2GTKCV+BcG7CvwkXJ7yccHTC1wl3JzyecHq6vm6F
4sNFRZEVCsWHRYq2x/kT8IVz3N7Exgl80YpqRWRYyOKVsJBFfhyqyRxy1VG0
WMiwDSzZi9cZ7txL73szedzkwRkeHOTBTq6uYd1Yhrajtjvmafs66ZljWALT
hlj0wno89VYweg9bruIfpusZfsdITSE+mIgbPD/Kk22c+I6VIxncjrqV5E7l
uzaci9KkE0PnsPQQPhFcgrsQrG1Znyk898N3D8cXsWMwS9sxuhEdq1C1hO4v
/M9RBIfyONTFoSWFetFiGmM343mBq5Eyjx0KUdkSw3vDKLKBISZmWNhgk5fc
DuR1wN6BfDqdwHx5yWNLLnOsjaSamWow1tZ4l+lHFUVWZBapf0dGEyMJvsKt
nZxayN6hfNeRQXVoICQle5tiv5cjdwHqtOOTOSw8hncCpxO5lUyQuKNl9bOT
v/LAifLsR+BVLv7C79+wqjOTa9KrNPWcKPxyS0X8lZ3QlEFTC4dOfDSBUetY
f4KzAVwOwDeAewE8CZAJnAyMG6c4uoFtk/i+C1Nq0dedhoVwsdVGkV+ZJdt8
VGgiD4t9+QtLb7PVnz+ecTeK6A/vOeTz58+9vb2nT5/etm1bJyenPHnyWFtb
m5mZZUpIxtzcvG7duiNGjPD09Lx161bAKwQGBoaGhkZFRcXHx6snezmX69dZ
v17m+mrUSG8t8uSRu6hmZtmd6ytdml69ZK7v5Mn0+vD8udxFjY1VuT6F4r0i
JUW2jY6MlFuKgYGvMwl798rTE61bU7BgtuqSkZEscGdrK2Me6aSyWTN5emLn
Th4/1vU8KjKJhISE6OjoFy9eBAUFnTlzZvny5f369StXrtzb2yqN9sCXMFe2
trb29vZlypTp06fPkiVLTp06peLHCoVCoXNu3779888/jxw5sl69evnz57ez
s7O0tDQxMdHT08uUW8Cr94Lq1asPGTJk7dq1165dCw4ODgsLi4mJSUxUD2pz
KmKJeuwYCxfK7FzJkmm8Yv788ricpSUmJtma6xML+Tp1GD5cZqRv3UrjqIXf
Dg0lKko6cPUsR6F4XxHfbvEdF9908X1Pt8oWmuDpyYgRUiWys5B7umFoKF/d
xoa8edOvshs14quv+PVX7t/X9TwqMkpKSkpcXFxkZGRISEhAQICXl9f06dPb
tGnj5OT09lZKeDPh0IRPE25NeLa6desK/+bp6Sm8nK6vW6FQ/ImKIisUig+L
ZJKfk+hH/Blivbm4ghVD6fMRboXSi561E84NqfgJjefS61dmHJZN0q8HkZTV
Xb9jtdnTu3CJiP3sX8D0vrSsgr0ZZv9LSssO76barujV0LRG8wkVvuWzTaw9
zc1gWQwwPkV2RU9RjxGQqarEMGIeEn5FppGvb2P3MhZNZugnstHMuza6dGP0
FL7bxI6LnI/hDogb1wuIz6TJCH+M/ymubtGmkSexQtzWP+WzHrq/8D9HV9oP
oP1Q2o+j07eM3cCqQ/jc5l4MIRCh/XJkw+bcG0aRzSzJV5jiFWQh63rtadSe
pu1p2Z62upvAj5vQsDLVi1DWhmIaHDXk/l+ZdxVFVmQaKdrvYYL8QsY/w/8E
Z9fy23h+6MjE+nQrSzUn8lro7PnVezPsHKjWkh5TmerFpmf4hHEpmsfxxGa1
CUnR/nGjIUwWo3/4B4dWsWY4E5rQqwxNilDOnnwv/77iv/Zoisg0cu76VOlB
57GMW8qKrfywlfVb+XkrW7ayNUNj3TIWj2dqL75sSB93mrlQIR8OlumjyNZ5
Kd2QJsMZsIYpZ/jxJvsfcfMFUR+esoWHh589e3bjxo0TJ07s2LFjgwYNypUr
V7BgQXNz87d/smdqalq2bFnxa8Uv37Bhw9ZX2L179x9//OHr6xscHJysgqE5
lgcP8PZm8WIGD05vLRo0kO1lCxbM7o0JZ2eaNGHoUJYuTa8Phw7JJpKPH6sO
swrFe0ViotwbvXFDRjh27nydSZg9m379qF1bblZmpy7Z2ODiQuXKUp3SSeWY
MaxZw/HjPHum63lUZBIhISF+fn6nTp3as2fPihUrhg8f3rx586JFi769rRLY
2Ni4uLhUrly5SZMmffv2nTVr1vbt22/cuKGslEKhUOicx48fHzhwYNmyZcOG
DWvZsmWtWrVcXV3t7e0z5ZDvqxgaGpYqVapt27Zjx4798ccfvb29z507d+/e
PbG01/UcKDJIfLxs3rFlC9On07NnGq/YqpVs5+HqKk+0ZechXxMT2byjQwcm
TGDDhjSOetcu2c7D11eWd1YGRKF4XxHfbvEdF9908X3fvTuNCAhNEMrQsaNU
CROTLJejfxtWVvIBYMWKNG6cfpU9ciTffy+LugcE6HoeFRklPj4+ICDg2rVr
R48eFWveOXPm9O/fv3bt2nnz5n17KyW8mXBowqcJtyY829ChQ4V/Ey7usToi
rlC8M6goskKh+KBITSLuCWEXCNqL/1p8vmF2LzrXprhDetGzc8a1KXWH03El
w7z57gx7/LgVkvVR5Hht9lTo1R2iTnNsJYsH0acG5cwprMFeI6s3G2u0rcnz
o3GT1Qg1LXEfTu9lLN7P8YeyNXlwPOGJMpCsIJWkaJmXi3lI5E0enea8N3t+
4cfvmTfvnRuLFrNxC3v/4Ox97sUTqC0FHJ15pYBjQmRhZP9Tsjby2V/Yv55f
V7Fqie4v/M+xiHkrmLeWeT+zYDueR/G5xtUA+XmO0uaQE7SlOrOaN4wi2+Sh
ZGXqtqfTl3w+j5HzGD+PqfOYo7sJnDKW4V3oXYNWDtTRUE6Ds5Ay7fkFFUVW
ZBrJ2vtUtGwxEOePnzcHFrB2IFNr8UkpmhembG5y6e751XszbPNRsRntxzN6
C8vvsv0JJ0K4F01MVotgsvaPG6LtH3GX23vYMZdv+9KjmqyHXM5elkS2ffn3
NdEWRraXtZGtSlO0DjXb0KYfA7/ksy8Z/CXDvmTkl3yZoTG4P33b0rkuLctQ
vxAV7CliQ65/dIWzzEOxOtT5lE6LGbqfhWfZeZvLwURk1gGenENMTMydO3eO
HTu2efPmBQsWDBs2rE2bNuXLl8+VK9fbP9kzMjIqXLhwjRo12rVrN2TIkC9f
YeLEiatXr/bx8fHz81Plm3Iuz57JcO/evfzwQ3prMWwYbdpQvjy5cmWrBubN
KyPQzZrRv396fVi0iB07uHSJFy90PXEKhSLziI2VO6ReXqxcydixrzMJ3bvL
UxKurtna+VqMAgVk6fiuXeXbSyeVP/0kT0mI9686X783PHjw4MiRI+vWrZsy
ZcrAgQNbtGhRoUKFfPnyvb2tEhQoUEDYqq5du44dO3b58uU7duw4c+bM48eP
U1LUIzyFQqHQMSEhIVevXt23b9/atWunTZs2YMCAxo0bFy9e3NjYOFNuAX+h
r69fsGDBqlWripX7559/PnPmzJ9//vnkyZNPn6o97JxKYiL+/pw6xbZtLEm7
2zJ9OgMGyKBd8eIYG2effTUyolAhqlenXTuGDEnjqCdMYPVq9u/Hz4+EBF3P
nUKhyBrEt1t8x3185Pd94sQ0IiA0QSiD0IfChaVWZOfK+tWRLx9Vq9KpE6NH
p19lr18v3/mNG+rpXw4mOjr6+vXre/bsWbZs2ZgxY3r06NGwYUNXV1dra+u3
t1JGRkbCoXl4eAi3JjybcG7e3t7CxQkvp+vrVigUf6KiyAqF4oMiJZGIezw9
wq2NnP+WXz5nYktaV8DlHxV18halfCuaj2OgJ1NOsu46hx5xL5zkrN4cSNSm
gEIhkOgbnNnAj8P5sg5NzamsoYRW5czEOzREY6vVupJoKuHalY7TmLqVHTe5
GIZfFAFxRKnujlrEHz05hsRw4p8T8YSnd/G7zqXzsuPzuzZOnebKDe484sn/
Y++sw6rKuj9+6Q4RUERCRQkDUdFBxcTWsXMsdMyxlRnbsR07xsLurjFQQQwU
URHBRlK6u+v72xt/7ztwfWUcvXjwsj7PevzDP7jnnrvXOt919tprJSOp4O/6
W0kturwsXo2cEs4LkiNeItAXr57i6SPhv/j/mxc8n8DzGTxf4OEbPA9FUCxi
05BRwG9CXnGJ3Ddo9f2Zpch6RmjRDUOcMO8w1xiHPHHWE9c94SHcDbx2CvsX
YlUfTDXDIBE6iNBIBAMRFERUikxIDvZkyeR1yIhDpj/vsn5hEdb3waTa6KOH
llowU4GmvGDvr6TGNPXRwAHdZ2HiQaz0wSF/uEXgbXL59/vNL/5xWdLkD/jA
7zgOLsT0vrA350XI1dV4HbLyh99XvrgaWY0XJCvqQccERhawsEETOzSzQ3M7
tLDjFTtfZrZN0NgC9U1QTx+mWsWfq8w/V6b0XVLVgfEPaDIKXVbipzP43R3H
/PA4AsnZ5XyXKh55eXmJiYmhoaEvXrx4+PDhvn37ZsyY4eDgUL169a9/sycn
J6elpVWzZk1LS8vmzZvblaBz586zZ88+cODAkydPcnIqXwm4tJCRwZuRBgTA
x0dcWuzbx8e5OjjwkbLfMgaqqfFPNDODjY14fBgzhg+9dXXl10wQhNSQns5j
jrMzpk7llcZliIRGjVCrFnR1v3Xvprp10bcvFi3iI2LFQqWfHx8aGx8PehJK
Dc+fPz9+/Pj8+fN79erVpEmTunXrGhgYqKurf72sYrC/1rdv30WLFp0+ffrx
48dv3ryJiIhITU0tovnoBEEQQpOVlRUbGxsYGPjs2bMbN25s2LDB0dGxWbNm
ysrKEnkE/BcZGRlNTU1DQ0MLCwtbW9tBgwYtW7bs/PnzASwrI75PCguRksLH
97x+jUeld1tu3sSGDXB05PM1lJW/nXyVleVzPWrWhKUlL/Yrqag7deIdR/fv
x5MnyK5879AIopLAvJv5+IED3N87dy4VBFhMYJGBxQcWJVis+JaZdUkzNUXP
npg3D8eOiWfZvr4ICuLNEyhGfb8kJyd7eHjs3Llz8uTJbdq0adSoUa1atXR1
dZWUlL5eSjFtxhTa6NGjmVpjmo0pN6bfmIpjWk7o700QxP9DpcgEQVQqCnIR
/xrvLsNrM1ymYkd/TLNHZ3MYa4sHPYO6aDEAg5bD6RK2vsS5YDyMRVg6Csp7
c6Dw/wffIx1Z4fA9hzO/YVV7OKqhuwjNRaglgsaHQKcMkSZEuhAZwKwjes7E
nAPY642bsXiShMAMJNKJZoL493xmKXLNuugyEjN3Ya8f7gG+QEjxGQIBTwDE
v4P3IZydgA2NMF2EgSK0Ko4YSiIqRSYkR15xAhDPu+am++Hxfhyagrkt0VuZ
rzcrEWqIoCrQyytpMnVd1GuLdpMxbDucbuNPH1wOxPM4pJb3kz2v+McN4nXI
uIPHO7FlCoZ0gPFHMbAimLI2qjeFxWD8MB/d9mLWZex5hPshSMws57tU4Xn8
+PGWLVuGDBlibGz89W/2ykBbW7t79+7Lly93c3PLzKz0910aefwYW7ZgyBDe
JkVwl/9gtraYNg0nTiA0VOi7QxCE5EhO5r3ZFy5Ex45QVRU+1Hxs1taYNInP
saUSocrAgwcP1q9f379//xo1akhcPllbW0+cOPHw4cNUb0YQBFGRSU5Ovnbt
2qJFixwcHFRVVSX+OCiJmZnZyJEjd+7c6evrK/T3JiTPB6G7aBE/5FtBhK6W
Fh9CtGwZP+SbkSH0DSIIonzIzISbG/d05u/aH5VAVASztOQNB/bu5d2PCekj
Pj7+0qVLc+fObdu2rcQHTDBt1rFjx4ULFzK1xjSb0N+VIIj/AZUiEwRRqcjP
QeQzPDuOG4uKo4c9RjeAfU3UUBcPejUt0HYYxqzHSnccfc/re31TeKvhwm/Y
pyQ7BW9dcGMxdnfCfDWMEqGTCPVFqPKRYjdpiA6jMG4L1njgeBjcYvE8FTHU
k4cg/j1UikwQZVGiK3JWAF5fwbUN2DEBv7XDhJYY1hI/tkT7lmhJ9nXWsRsG
T8Yv6/H7OV6HfNYf9yMQmIyMcvbZohzkRyH7JTLuIfUCbq/FH2PRvzWMPhoe
URFMUQM6FjDpiPoj8cM8jNmJdddw9SWC03iW+mGsQEH53rAKyuvXr0+fPr1o
0aK+ffs2bdrU3Ny8Ro0aGhoakn3jx2B/087Obty4cVu3bnV3d/f19Q0KCoqL
i8umjhXSwuvXvP/n4sW8F2jJGGVnhwYNePeSqlW/6YTZD/sUAwdi6VKcP48H
Dz5pT5/yMZTR0bzVKkEQAsIeCHFxvJ2Rr29ZPnvjBm8WN3r0t24WJ2YqKtDX
R506aNxYXJuNHIl16+DiwpvdEdJBenp6VFSUv7+/t7f3g9Ls3r176tSp7dq1
09XV/Xq9JC8vX6VKFSMjIysrqxYtWowcOXLt2rUuLi7htJgIgiAqMOwx8fDh
Q2dn52nTpnXo0MHa2rp27dp6enoS75DMqFmzZrdu3ZycnA4dOuTl5fXq1auw
sLDk5OT8fJp5KQ2wnPThQz7+Y9o0dOhQSmHa2sLCAoaG0NSEjMy3E73q6vjh
B4wbx48e37pVlkqn8R8EUQFh/si8kvkm89Ay/Nfdnfs483Q7O+71QmXZLMHX
00Pt2vx4r1iWPXQoVq3CX38hJEToe0p8KQUFBUyxMN3C1AvTMCXT6mvXrv3x
xx8jRoywsbFhSfHX6yWmwZgSY3qMqbL27duznJ3pNE9Pz3R6+UsQFRIqRSYI
QvopKq5EyeclKfmpPHR4OuPMdGxxwGxrDKiN5vqoplIcOpQg0iiu2TOAaVt0
nYoZztjlhesxeJyEgHQk5H7TUuScNITcxYPNODMSWxpithH666GZBvQUxEO0
oRVaDsHQ1Zh7Ddtf4UIIHschgk40E8S/h0qRCaIs2PM0B8jg1cg5kQh7jCfn
cXUb9v+GbbOxdjaWzsbc2ZhN9nU2fzHW7MCOczj2gPdDvh+BVwmIykBOOVfW
FmYj6z1SniD2KsIP4PIi/D4UPzaHYVXBXleWYfIq0KgJ/ca8GtliEPotxMLD
OO4F3yREAQl8vgQq54CIsLCwe/fuHTlyZMWKFRMmTOjVq1fTpk0NDAy+/o2f
GCoqKhYWFl27dmWfsnr16sOHD7u6ur569Yp6EUgNYWHw8MCRI1ixQjxMDR2K
tm1Rty7U1L6p4xsZoXVrDB+OBQuwfv0nzdkZV67AxwcxMULfRIKo3CQl8QZH
rq44dKgsn12+HD//zDvFsaii8NHrjm9mVauiYUN06cKLosWC3oYNOHsW3t58
z5eQDqKjo318fK5cueLs7Ly+NFOmTGHyqVGjRpqaml+vl5SUlGrVqtWqVauB
AwdOmzZtw4YNZ8+e9fb2jqfFRBAEUYHJysp68+bN9evXd+3aNW/evJEjRzo4
OFhZWWlra3/9o0EMXV1dlrP3799/1qxZW7ZsOXPmzP3794ODg3Oo+lMqyMrC
mze4fh27dmHevFIKc/Jk9OmD5s1RsyZkZb+d6FVW5iXQTPROmMDrAMtQ6UeO
8Fpldv2pqULfR4Ig/gPzR+aVzDePHi3Lf1ev5j7etSv3dxUVwbJsbW1YWfFk
f+RI8Sx77VqcOgUvL3p39x3DtApTLA8ePGDqhWmYkmn10qVLHR0dO3ToUKdO
HTk5ua/XS0yDMSXG9BhTZXPnzmUKzcXFhak1ptmEvg0EQfwPqBSZIAjpp7B4
4Hg2L0nJi0WAG25twv4xWGKLsbXQrToaaUFXCSI5iFjoqwFRPYiawGwQ+i7B
4lM48xxPk+GfjshspObjG1Yi8xAd+QR+h3BrLk72xuqWGGMF+xqo/tEgp+rm
aNIPvRZhwkmseIjDr3A3HKGp3/RqCUI6oFJkgiiLwv8/2oMs5KcgKRTvffHi
Njwv4PZZ3DyLq2dx8Swv1SD7Grt4GTfu4u4zPA7C8zjeDzkqAyk5yC8s3583
PxNpAYi5h+CTeLkRJ6djbh90awyDKoK9rizDZBWgXIVXI+uYo3pTdHDE1E3Y
eQt34+FfnKsmFvdGroQkJSUFBAQ8evTo2rVrzs7Oc+bM6dWrV7169b7+jZ8Y
CgoK1atXt7Kysre379279+zZs9nH3blzJzo6Wuh7QEiGpCQEBODRIz5PVixM
rVyJUaN4J6Uq3zY+sI8zM+N7td26oX//T9rEidi0iV92YKDQN5EgKjdRUbh9
G7t3Y9assny2Vy+0asV3SPX1IScnmLSoWRMdO/KakC1bxIOemxs/3fD+PfVa
lx4CAwOvXr26cePGCRMm9C9Bv3792rVr17BhQ0NDQ4m0vlRTU2vSpMmQIUOW
LFly/PhxNzc3Hx+f9+/fU+8mgiCIikxeXh5LbF+9enXv3r2LFy9u2LBh/Pjx
bdu2LY9Dvurq6sbGxjY2Nh07dhw2bNjvv/9+4sQJ9rDIyKBGM9JAXh6f1/Pq
Fe7dw8WLpRTm/v2YO5cPIbKygrz8txO9CgqoXp1/qL09evcuS6X/+iv27uUn
lOPihL6PBEH8B+aPzCv37eMeWob/Mu9mPs48nfm7gAd+2ae3bYvx4///eG9J
u3mTn/YNCaHDDt8xmZmZTLEw3bJ06VKmYUpm1j179rSzszM3N9fV1ZWVlf16
vVS9enWmxJgeW79+PdNmTKExncbUGtNsQt8GgiD+B1SKTBCE9FNQXIecxktS
csPw+i9cXo7NAzC1Lvrrwl4T5iqowjJ9JsX1IbKAyA6iHrCYgmFbsd4F7oF4
n4nYHKTkIbvgmxb35mcVh+jL8NmK2zOwZzBmtEVnc9TUFg/Rumaw6oF2szF4
D2bdwPYnuB6IgEQqRSaIfw2VIhNEWRQVWyF/thblIS8TWalIS0BSNBKiEBeF
mChER/GyE7KvsegYxCUgIQXJmUjNRUaxAskvRFE5P9dZbpj4GqE38GIPPBdj
7xjM6AwHK1T7KDesCCYjy6uR5VWgqA5lbTTpjBELsYbJvGg8Bd6B90aunBUe
eXl5GRkZSUlJsbGxPj4+zs7O48ePb9q06de/8RNDVlZWSUlJQ0OjatWq1atX
d3BwmDt37pkzZ0Jorp60kJeHjAwkJyM2tlSMiozk8xMXL0b37qj2kUYqV1NQ
4H2YtbV5vaKBwSeteXNeTLhvH59WSRCEgAQH4/Rp/PYbL/Etw2erV4eODh8a
q6T0TYdTi1m9ehg2jO+Q3r0rrs3i45GSwpva0aR0qcHX13fv3r2TJk2ytbU1
KA0TNpqamsrKyhLp3cT+VIcOHX799ddTp04FBQXFx8enpKRkZWXl02IiCIKo
wBQWFubk5KSlpSUmJkZHR7u5ua1Zs2bAgAG1atX6+keDGPLy8ioqKlpaWnp6
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
utSxNP3797e3tzc3N69SpYpE3ijWqlXLwcFh4sSJ69atO3nypLu7+8uXL+Pi
4oS+B8Q3JSeHj268dAkbN/ItGEfHv+2nn9CpE6yt+cZHxax+NDJC+/a8iHrN
Gj4P91N28iTc3fHyJWJjhb7dBFGa5GT4+8PDgzcnL2MNb9mCqVPRvTvq1YOc
XLl71leaqipMTdG8Oe/hXDKkMHNywq5dvPdUSIjQt54of5KTk/39/T08PM6f
P//nn3/OnDmzV69eVlZWioqKEpExn0JTU9PMzKxly5a9e/f+IHIuXLjw/Plz
OmxFEARRaWGPpCdPnrCcd8WKFSyz7tGjh62trampqaqqqsQfQ0ZGRu3atfv5
559Xr159/PhxNzc3Pz+/6OjoQmpPKe0kJMDLC8eO8VEmYhq4f3/Y2/ODtDo6
wmv1j01REVZW6NULM2fizz/LykouXuRnJAMCeJ0nQVRY2Ppkq5StVbZiy1jP
27fzNf/jj3z9V8xjAiximJvz6MFiiFhUYXGGRRsWc+Ljhb7dRDnD9ANTESyf
ZYqC6Yr9Jdi1a9ecOXP69u3bsGHD8pA0+vr69evXb9++/eDBg9kHsY9zdXUN
prl0BPGdQ6XIBEFIJ7nFA8eTgFjEPsWDIzg8D4t7Y0R9dKmFJtVQUwOKcrwO
Wa0aqpihmg3qdUGfWViwH8ce41kWmMSJBlKK/1IF4UOxUNRNBP2nWGi8A5qb
QaH0fr2SNqo1g/lQtFiErocxwwW7vXEvFAmZQn8BgvgeoFJkgiAqFRmRiHoI
/5N4shZ/TcXqfvipBayNIFe6FFlDD5bt+cyF0bux4AF2P4dLCF4mIK28dVJh
8akwlnYmAFHwv4YLy7CqN4Yboq0I1iKYiHh7ZH6RqhDpQWQCkSUMOsNhBmbs
wV5P3E/A8xSEZCIxF3m0I1eCtLS0wMDABw8eXLhwwbk0H7ZN27RpU7NmTYm8
UdTT06tfv36HDh2GDh3q5OS0c+fOmzdv0hjZykZ+Pm+i8vQpXFxw8CDvCfNf
27IF06bxYkJLS747KfguzMdWtSq/tnbtMHgwbxj7KXNyws6duMnyNVrdRAUj
MpLXITPXW7SorDU8fDg6d+bnAqpXr6AtykuatjaaNsXAgZg7t1RIYXbiBG7d
4ucCaMO0MhAVFeXh4XHw4MHFixePHDmya9euNjY2hoaG5dGCsiT6+vp2dnbD
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
VRUP0VVqoFFX9HTC5CNY/RRH/OEegXcpyKyYAq/iERER4erqunXr1kmTJnXq
1MnW1tbMzExXV1cig86rVq3aunXr8ePHb9q0yaU0d+7c8fX1DQ0NTU0l2Vq5
SE/H48c4dAhz5/JS3q5d/7YOHdCkCWrXRpUq30GP1qpV0bo1n7+5aRNcXCRg
Hh548YI3d6VRmJWc5GSEhPCNeHf3L1xLu3fzvcUuXXjTY8E95R9NQwNGRmjU
CG3alAoIYvbTT3yA7LlzvNE6IfVkZmZGRka+fPny/v37Yvph9+7dM2bM6NKl
i7Gx8dcLFTFUVFQMDAwsLS3t7Oy6lmbMmDHr1q27evVqcHCw0LeHIAiCqIi8
fv363LlzK1as+Omnn9q2bWttbW1iYqKlpSXxpxX7mz/88IOjo+PatWsvX75c
8inp7u7+7NmzkJCQZCYoCWknMhJubvyk3uTJ4sqZJaoNGqBmTV6FKLja/0er
XRs9emDOHOzbJ4G0+sYNfnTR3x+xsbz0lCA+kJLCh3b5+uLOnS9cWmx9slXK
1ipbsYJ7zT8a830WAVgcYNFALD5MmoStW/mZ+kiqpKpkZGVlRUVFMbni6el5
5coVlt4yLcEURTlpFaaCmBZiikgss545c6azs7OHh0dCQoLQt4QgCIlBpcgE
QUghRcVVu3HFpYGvEOUOtwPY9jsmjxEX2H2GYfhsTFiP2cd4HfIhb7gHIjAB
uRXzjHg2wFRYGPAWqZ7wOokDf8BpMnr2KP29+qDrWHR1Qtc16LoHMy5htxfu
BSMhQ+jrJ4jvASpFJghCyikqrkNmoiIdSEbEIzzYg2NTsbIdJprix+qwrQJD
leJSZHWIDCAyh6gZ9H+Ew6+YdQCHHsInGf7piMhCch7yvm0pcuI7vLuMh+tw
5Wfs6oJZtuhZB/WqiIdozeqw6ID2U/HTTjjdxvanuBKIl/HIoKD3eSQmJvr6
+l65cmXXrl0LFy4cNWpUhw4dzMzMlJWVv/7Fo4aGhqWlZefOnceMGbO4NBs3
bjxz5oyXl1ckvfuuZGRnIyCA11gePswnQi5d+rf9+iuGDuUbJSYm30H7Jg0N
WFqic2feFWfxYgnYtm24eBFPnyIuTugfiRCUsDA8eICTJ7Fu3ReupUmT0KsX
bGygqyu8p/yjVWdqxJZPuZ0+vVRAELONG3HmDB4+5OX6hNSTkJDw7Nmzv/76
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
///HP+37RiulUFSStYSyJCEMsmeb7NuESIzsEY19zdgj+5K1QlmmxRJapEiK
0r7v+/P3usz3N5+r5q0ZdDnF4357/q3jdZ3X9Xg9zznX6xiQyWgavpbmX6RN
T+hUDAV+oPfc7k9Y9nFT40yiD5T1hIL/oKNzaVl3spWm3pLUXoyaiZCkEP0k
ST+x7+029JMJiVmTyUKacYD2PqCgDHpTTh8qKbuKSqs5/Y80WjExMSdPnlyw
YEHPnj2VlZUVFBSkpaXFxcWFhITq93KlmJhYjx49HBwcTpw4ER0dncYnPT09
JyensLCwrKysuhofJPCwE+HxY9q3j7e7b/v2vGd3P1VNmvAe7pWSatw3m+q9
xMR490wdHHi7D0VH8+5Pof61Hj6k3btpyhQyNOT+E+S2RFj4SvLu4Sop1TX7
dHRo1CjatIn8/Xk3QAH+Ul5eXlRUlJubm5mZyR/3SUlJ3t7eLi4uAwYMEMQe
TaKiolJSUvLy8uwfV63JxsZm9erV165dS8WrtQEAQPDevn179uxZJyenPn36
qKioKCoqysjICKLLZrp27TpnzpzDhw9HRET8zy67tLS0qorbO//ApcxM3guJ
1q/nvcqkWbO61vZs5c/W/xISvD2HOe9HGk6pq/N+qbpmDd24wX3H2hjr6VM6
cICmT6eOHbn/NLktNrPY/PrXLpvN059/5s1ZHx/CW1zgbxUVFcXFxXl5ebW6
bObGjRtr164dOnSourp6vS8z/u6ymzRpoq+vP2nSpJ07dwYFBZXjd+YAAAAA
APADw6PIAPB9qyyh3FhKuksxJyjUjU7OJechZNOBNJvU/qLTMiLzCTTBnVbc
Io8YuvKOnmTQhyJOj77847t58nhPI+e+oOdn6JILbR1Gv+rSKE0yV6bWsiQj
Sj+J009K9JMW/aRPYqbU4Rey20yu1+hyHIVk08sC+lDC+4EtfIH379/funVr
9+7d8+bNs7GxMTMza9OmjYqKioiISL1fujQyMho5cuSKFSs8PT29+Vy7di0o
KOiv55NxJRP+Ul3Ne4DW25v3lKO9Pe+26afKyoo6d+Y9Eikvz/2tpYZToqK8
99WOHEkrVvBeNMZGEvWvtW8fLVjA24ibnU6cf4LclrQ0b9/m9u2pd++6Zt/Y
sbRqFZ06xbu/XMTtcgIakqysrNjY2MePH/v6+vLH/YULFzZs2DBp0iRTU1N5
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
MJbdqqqqioqKUlJSIiIiAl0/NG3a1NraetmyZefPn3/79i07jJycnKKiosrK
Sq6HBAAA4P+prq5mXXZeXh7rspOSkvz9/X///fdx48bp6ekJNCVZly0hISEn
J6esrNysWTMLC4uFCxeeOHEiKiqK6yGBBoqt/PPzeV3Ahw91dQoPHtD27TRx
Ihkact/doFANoQwMeDOCzYu/3iv0qWIzi80vNsvQZcN/kZWVdevWLTc3t9Gj
R7dq1UpNTY112dLS0qKiovW+ZmBrkrFjx7q7u7NVyvuaUlJSsrOzCwsL8bJC
AAAAAACAv+FRZAD4DvE/inyb/PfS7wto3CDSa01aWv9XrQyo00DqPYuGbqSJ
XrTKj048pZB3lNkw94orI95mzQlEkVQdTE+O0YHfaOZI6tK+xn9KS5u0TElr
KGnNIC0X6rWPFl3h/b9epnF9/N+dqKgoT0/PBQsWmJuba9X09/VPQT9lpKCg
0Ldv3yVLlpw+ffr169f810I/fPiQkZGRn59fWlrK9VBBI5CXx3sP5u+/07hx
pKdX81ulZqmpkaIiSUuTiAj3t7RQqP9SwsIkKUkKCqSiQpqadZ3egwfzXgt7
5QolJXE9J6GxqaqqKi4uzs3NTUtLS0xM5E/kJ0+eeHh4zJgxo3PnzvW+EhAW
FpaUlGTrARUVFU1NTf7VSMeOHadOnbp3796HDx/ixigAADQKrKtlvS3rcC0t
Lf/ZZSspKcnIyAjiKSMdHZ2RI0du3LjRz8/vn08ZZWVlFRYWlpfjsjL8u/h4
unCBli8na+u6+o7mzXm9ibw8r08REuK+Y0KhPrfYecvOXnYOszOZnc91nO1s
LrAZwebF27dcz09obGrtCsKfzmFhYYcPH543b56ZmZmYmFj9rgr+3hVEWVn5
ry2R/772zvWQAAAAAAAANAJ4FBkAvkOlRNlEH4hiqTCUnnnTmT20zpkmTqAx
Y/6v7KbQjKW0cCv95kUb7tDRJ3TrNUWlUl4J18f/P7Ev3DyiFKK3VP2CXvnS
tYO0dTXNmlbjPzVmHI2ZQ2NW0JgtNOYwLfCmvUF0+zW9w0vk61t8fPytW7f2
7Nnj4OAwpiYrK6u/3gonLS1dv9dCa5GRkWF/aOzYsStXrvT09OR/Q5y3t/ef
f/4ZHR2dnp5eXV3N9WhBQ1dYSM+e0ZkztH49TZpU81ulZllZUadO1KIF72lk
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
8P1zZQWU854+hNGbAIrwpsfe9MCbbnnTVXbAN8k7gLyDyfsZ3YimkAR6lU7p
hVTJ4ZPTAADww8jJyYmLi3vy5Imfn9/hw4eXLl36888/t23bVqCXTGuRkJBQ
V1c3NDQ0Nzdnf33x4sUHDx78888/09PTuR4eaNxycigujp484d1yqrVc/II6
c4bWrqXx46lzZ5KW5v5+HKoBlqoqb8+lGTNoy5YvPM1u3ODt1BQTQ+z7rxK/
TISvUFhYGBoa6uXltXLlyjFjxgzjM2jQoG7duunp6TVt2lTQz0RpaWlZWVnN
nz9/z549N27cCAkJiYmJYfleifMbAAC+X7m5ufHx8U+fPr19+7anp+dvv/02
cuTIdu3aCfplBHJyctra2h07drS0tBxW04IFC/bv3x8QEJCcnMz18EAjU15O
qam8Vw4FBdG1a/XQWR88SIsX05AhpKvLfQeHavjVpAl170729rRp0xeecuy8
ZWcvO4fZmYwfRMLXKC0tDQ8PP3v27Lp16+zs7Phz1sbGpnv37m3btlVRURH0
D341NDT69Okze/bs7du3X7t2LSgoKDo6OjU1FT/4BQAAAAAA+FzVlVRVThUl
VF5IpflUmEu52ZSVQWlpNSozi3LyqKCYSiqItV4VRJWcbonMVFXyDpsdc1EW
FaRRXhpls+NMo3R2wOz4sygth9LyKaOQckuoqIzKKrl8cBoAAH4cFRUVxcXF
eXl5mZmZ4eHhhw8fnj17dteuXQV6ybQWYWFhCQkJGRkZRUVFFRUVa2vr3377
7fLly4mJiVwPDzRuFRW8HW/y8igzs/Zy8QsqPp7On+ftqGNpSfLy3N+PQzXA
0tIiW1vauJFu3frC0ywjg3JzqbCQysqoGv0AfIXc3Nw7d+5s2rRp5MiR2tra
qnyUlZUVFBSkpaXFxMQEHfFt2rSZMGHC9u3bAwMDMzIy2FEVFhaWlZVV4/wG
AIDv199ddlZW1suXLz09PR0cHLp37y7o5BUVFZWUlJSTk2vSpIlqTX369HFy
cjp79uzbt2+5Hh5oZNiqjfUmrEPJyeH9XvLrO+unT+nAAZo+nTp25L6DQzX8
UlfnPbi+Zg3vd7tfdsqx85adveiy4euxcL9///7WrVvHjx+vq6v7zy5bRkZG
XFxcSEhIoHHfsmXL0aNHu7u7BwQEpKen5+TkoMsGAAAAAAAAAACAhiY1NdXH
x2fjxo2jRo3SrUlbW1tNTU1BQUFCQkKgV1OZ9u3bT5kyZceOHffv34+tKTEx
MSMjo6CgoKKiguvRgh9OUREFBtLu3TR1KnXqxNvBSXClrU1qaqSgQBIS3N/4
a+wlLMzbxbpJE2rWjFq1EuwH17s3LVxInp4UGcn1+Qo/hqqqqqKioqysrA8f
PsTFxfEn5tOnTw8dOjRv3rwePXpISUkJNLjFxMTk5ORUVFS0tLRqrR8GDhy4
fPnyc+fOvXnzhuvRAgAA4ACL6Tt37vz+++92dnb6+vr8Kamjo6Ourq6oqCgp
KSnQpGbYnx4/fjw7DHYwb9++TU5Ozs7OLi4uxmNL8O0lJfF2qV23jkaMEGx3
xkpLi1RUSFaWREW570y/pxISIikpUlIiDQ1q2VKwH2KPHjRvHh06RM+ecX3u
wo+BJSPLR5aSLCtZYvJ32ZGRkcePH1+4cGHv3r3l5eUFGtyioqKysrLKysqa
mpq1uux+/fotWbLEy8vr5cuXXI8WAAAAAAAAAAAAwP+WnZ39+PFjLy+vtWvX
TqrJ1tbWwsJCX1+/adOmAr3Q+tPHvR2sra3nzp27bds2z5p8fHxCQ0PfvXtX
XFzM9WjBD6e0lF68oMuX6fffadYsmjRJgGVrSxYWpK9PTZtyf5OxsZeoKO/2
qLEx9etH48YJ9oNzdKR9+3hbImO3Ofg2KioqkpOTw8PD79y5c/r0af7E3L9/
/+LFi4cNG9auXTtxcXGBBrecnFyrVq26des2ZMiQWuuHZcuWHTp06P79+x8+
fOB6tAAAADiQn5//7Nmzs2fPbtiwwd7enj8lR40a1bt3b0NDQxUVFYEmNdOi
RQtLS8uZM2e6u7uzgwkICIiMjExNTa2q4vZFgvAjysigkBA6cYJWrRJsd8bK
xoZMTEhHh2RkuO9Mv6cSFub9etrIiPr2pTFjBPshOjjQrl108ybFxnJ97sKP
gSUjy0eWkiwrWWLyd9kHDx50dnYeOXKksbGxtLS0QINbRkZGR0fHxMTExsam
Vpe9ZMkSDw8Pf3//d+/ecT1aAAAAAAAAAAAAAP9bYWFhXFxcUFDQpUuX9tfk
6uo6derUPn36tGjRQqAXWhlVVdX27dtbWVlNnDhxNp85c+a4u7tfuHDh2bNn
ubm5XI8W/HDKyykxkUJD6fp1OnyY9u8XYLm68vZe7tOHWrTg/iZjYy9xcd5D
3TY2NH8+bdsm2A/u5Em6fZu3JXJ6OtfnK/wYysrKoqOjb9y4sXv37kWLFvGH
JkttGxubLl26NG/eXFRUVNDBbWZmZmdnt2LFilrrhzNnzty9e5cdZHZ2Ntej
BQAAwIGSkpL4+PiHDx96e3sfOHCAPyU3bdo0c+ZM1vm2atVKoEnNNG3a1NDQ
0NLScvz48UuWLNm3b5+vr+/r168rKyu5HiH44eTn854pDQykCxcE252xWraM
96Bs1674kW89l4gI6enRgAE0Zw65uwv2Qzx+nPz8KCyMUlO5Pnfhx8CSkeUj
S0mW1E5OTvxd9vTp04cOHWpiYtKiRQtBvzewSZMmXbt2HTNmzLJly2p12adO
nfL393/x4kVmZibXowUAAAAAAAAAAADwv5WXl+fm5n748CE2Njaspps3b7q5
uY0fP97Q0FCgF1oZaWlpZWVlbW1tAwODDjVNnjx569atd+7cScdzfvDNVVXx
7pmmpvI2vI2M5N0IE1zdvElubjR+PBkacn+TsbGXlBSZmfE2st67l3e/W6Af
3MuX9O4db5svbNwO30ZxcXFISMiBAwfmzp3bs2dP/sQ0MjJq2bKlmpqarKys
sLCwQIO7RYsWQ4cOdXFxOXfuXK31Q0xMzPv377OyskpKSrgeLQAAAA5UVFTk
5eUlJye/efMmPDycPyVv3769ZcsW1uSy4BZoUjNSUlJNmzZlka2vr9+nTx8H
B4fDhw+Hhoayw+N6hOCHU1ZGOTmUlESvXwu2O2N16hQ5O9PAgdSsGfed6fdU
oqLUpQvvB9Q7dtDdu4L9EKOiKD6e92vfwkKuz134MbBkZPl45MiRBQsWsMTk
77Lbt2/fqlUrdXV1OTk5ERERgQa3hobGwIEDnZ2dvby8anXZ0dHR7969y8zM
xEsDAQAAAAAAAAAAoDFKSEg4d+7c4sWLzc3NZWqSkpKSkJAQFRUV9JNOQkJC
ZmZmDg4OXl5eb968KayppKSkrKyssrKyurqa69EC+FoJCXTuHC1eTObmvDfJ
or6mVFRoyBBav55u3aK8PK4/WoAvwtKtvLycJV1RURF/9qWnp1+7ds3FxaV/
//4KCgoCTeFaRERExMTEJCUlpaWljY2NZ8yYcejQocjISK6HCgAAoNFITk6+
fPny8uXLLS0tWWfNUlVcXJx11qzzFWiIKysrDx48eO3atb6+vjk5OfxLC7bS
KC0tZauOqqoqrocHoB48fcrbVveXX8jAgPvO9HsqRUWytqaVK3kvjcrI4Ppj
BvgiLOlY3rHUq9Vl5+bm+vn5rVu3jmUlS0yBJnItwsLCrMuWkJBgXba+vv6U
KVP27dv3lH2RAQAAAAAAAAAAAHxHUlNTAwIC9uzZM3fuXKuaevTo0a5dO01N
TVlZWYFejxUSEjI0NBw1atSqVavOnDlzm8+dO3dCQ0NjY2PT09PLy8u5Hi2A
r5WaSgEBtGcPzZ1LVlaor6ohQ2jpUjp2jB4/xjZK0ChVV1dnZ2fHx8eHhYXd
u3ePP/6uXbu2efPmKVOmmJiYyMjICDSFayWykpKSjo5Ohw4devfuzQ6AHQY7
mLi4OK5HCwAAoNHIzMx88OCBh4eHg4MD66xZmrdp00ZVVVXQ73xXUFDo3r37
tGnTtm7d6uPjw7+0YMcTHh6ekJCQm5vL9fAA1INXr+jyZdqwgSZM4L4z/Z5q
4EBydKRDhyg4mPBtAY0USzqWdyz1WPbxRyFLRpaPLCVZVioqKgo0kf8Z0Nra
2sbGxhYWFhMmTNiwYcPly5dfsS8yAAAAAAAAAAAAgO9ITk5ORETEjRs3PDw8
VtU0b968YcOGdenSRU1NTdCXZLW0tHr06DF27NglS5as5ePq6nrs2DF/f/9X
r14VFRVxPVoAXysnhyIi6MYN8vCgVatQX1Xr1/OeQ/b3573/t6SE648W4PNV
VlYmJCQEBgaeOXPm999/548/FxeXKVOmWFpa6unpSUpKCjqF/yYiIqKtrd2z
Z8+/EnnHjh0XL158/PhxSkoK16MFAADQaOTn50dFRfn6+h48eJB11lOnTu3f
v7+BgYGcnJxAc1xGRkZfX5/9LfYXV69ezb+02LZt27lz50JCQhITE7keHoB6
8OEDPXxI58/Ttm3cd6bfU61ZQ4cP8148FB2NH/xCY8WSjuXd+fPnWfbxRyFL
xr8SmWXlt/zBL6OpqWlmZjZq1KhFixZt3br1r0ROSkrieqgAAAAAAAAAAAAA
6lNxcXFycvLLly+Dg4N9ajp06NDixYttbGxatmwp6EuyioqKOjo6nTp16tu3
70A+Q4YMcXJyOnLkSEhISF5eHtejBfC1iospOZlevuRtMeTjg/qqunWLtx9y
bCzvvbEVFVx/tACfr6KiIiIi4uzZs2vWrBk7dix//PXv39/ExERPT09ZWVlU
VFTQKfw39rfat28/ZsyY1atXnzlz5sGDB+wI379/n5+fz/VoAQAANBqlpaWp
qanR0dGsjWWd9bZt22bMmGFubt60aVOB5ri4uLiqqmqbNm1MTU2tra35lxYT
JkxwdXW9ePEi6/25Hh6AepCbSwkJFBZG9+5x35l+T+XnR48e8TadTkujsjKu
P2aAL8KSjuUdSz2WffxROGDAAJaPf72ngCWmQBO5FgMDA1tb2xUrVpw8efLe
vXthYWF4TwEAAAAAAAAAAAB8f6qqqsrLy0tKSgoLC/Nqevbs2f79++3t7du1
ayfoS7IiIiLi4uLS0tJycnLyfJSVlW1sbNasWXPz5s3MzEyuRwvga1VVUXk5
bwvfwkLKy0N9bRUVUWkp7znk6mquP1qAz8fyNzAwcNu2bePGjWvVqpV8TSwT
JSQkREVFhYSEBJ3CfxMTE+vZs+eiRYtOnz4dFxdXUFBQXFxcVlZWWVnJ9WgB
AAA0GtXV1fxd9u3btzds2DBs2DANDQ2B5jhbM7CVg6SkpIyMTK11Rdu2bSdN
mrR79+5Hjx5xPTwA9YAtTsvKeD/1zc/nvi39zqqwkHfJAl02NF4s6VjesdRj
2VcrDVk+spT8xl02Y2pqOn/+fE9Pz5iYmPz8fHTZAAAAAAAAAAAA8KNJSEjw
9vZeu3btiBEj2tWkq6vbrFkzJSUlCQkJgV6qFRMTMzExmT59+p49e/78888X
fF6+fBkfH5+WllZQUICLtwAA0CiUl5fn5uYmJyfHxcU9f/782LFjCxcu7Nu3
L4tUgeZpLdLS0k2bNtXS0mrbti1/vnfs2HHKlCnbt28PCAjIzs7merQAAAC+
B/yJzx+7hoaGLVu2VFNTk5OTE/RLEFRVVfv37+/k5HTy5MkXNb169SoxMTEr
K6u4uJjroQIAAPhsFRUVeXl5KSkpb9++Zbnm5eXF8s7a2ppln0CztRYpKakm
TZpoamq2adOm1oV0Ozs7d3d3Pz+/tLQ0rkcLAAAAAAAAAAAAgAOpqanBwcEn
TpxYs2bNjJpGjRplYWHRtm1bRUVFgV7FFRUVbdOmzaBBg+bPn79t27Y/+Bw9
evTGjRuhoaGJiYlleG0kAAA0BgUFBW/evAkKCrp8+fL+/fuXLFlia2vboUMH
WVlZgeZpLWpqau3bt7eysrKzs+PP99mzZ//+++8XL14MCwtjh8r1aAEAAHwP
WPTfunXrr9znj91p06YNGTLExMREW1tbUlJSoNHPOvfOnTuPHj162bJlf9R0
+vRpf3//Fy9epKencz1UAAAAn62oqOjt27cPHz68cuXKwYMHWdKxvOvSpYug
r1rXoqys3K5dO0tLy3HjxtW6kO7m5nbu3LnQ0NCcnByuRwsAAAAAAAAAAACA
A3l5ebGxsUFBQd7e3kdqcnV1/eWXXywsLAT9hllhYWF1dXVjY2MrK6vx48fb
8/nrcanLly9HRERg+yYAAGgUMjIyHj58ePLkybVr106ZMmXQoEFdunRp0aKF
oB9AqkVXV3fAgAHz5s3btm0bf74fO3bs5s2boaGh7969Kykp4Xq0AAAAvgdp
aWmRkZEBAQFnzpzhj92DBw86OzuPGjWqY8eOcnJyAo1+aWlpHR0dExOTwYMH
29e0ZMkSDw+P27dvx8fHcz1UAAAAny0nJ4f1sCxkN2zYwHKNJZ2pqSlLPZZ9
As3WWthf7Nev36xZs9zd3WtdSL9+/fqjR49YzhYVFXE9WgAAAAAAAAAAAAAc
KCsry83NTU1NjY+Pj6np+vXr69evHzlyZOvWrQV6FVdISOivl8hramrq6uq2
5dOpUyd7e/tdu3Y9ePAgPz+f69ECAAD4d0lJSX9nKMuyFi1aqKioyMrKioiI
CDRPa/krQ3fu3MkytFbEv3v3Lj09vaCgoLKykuvRAgAA+B4UFxdnZWWxNcCb
N2/4MzcyMvLEiROOjo6WlpZNmjQRaPSLiorKycmpqqpqa2u3rYn9dXYM7EjY
8XA9VAAAAJ8tLS3Nz89v8+bN48aN09fXZ0nH8o6lHss+gWZrLUZGRhMnTtyy
ZYu/v3+tLjshIYEdZH5+fkVFBdejBQAAAAAAAAAAANCwxMTEeHp6/vrrr2Zm
ZkpKSnJyclJSUmJiYkJCQt/sAq+0tHSfPn2cnJzOnTsXHx+f9Wm5ubmFhYWl
paV4qgoAAL6BqqqqsrKyoqKivLy8WpEUFhb2xx9/zJgxo2PHjoIOSlFRUUlJ
SVlZWUVFxSY1DRw4cOXKlVevXk1JSeF6tAAAAH5Q5eXlQUFBO3bsmDBhgp6e
Hn9Sf8suW0tLy9bW1s3Nzd/fv462Ojs7Oz8/v7i4mB12dXU114MHAAA/FhY9
LIBYDP2zy46Kijp27Ni8efNMTU0FmpiMiIiIhISEjIyMgoJCrS7b0tLS2dn5
woUL79+/53q0AAAAAAAAAAAAABqNd+/e+fn57dy5c/bs2QMGDDA1NdXT01NW
Vv6WmzpKSkp27Nhx3Lhxa9euPXv27PVPe/DgQWRkZFJSUmFhIdcjBwAA37+S
kpLk5OSoqKjAwMBakXT48GEnJ6ehQ4fq6uoKOigVFRV1dHQ6depkaWk5mM+Q
IUOWLFly6NChoKCgrKwsrkcLAADgB1VRUcEa1fPnz69bt87Ozo4/rAcOHNit
W7e2bduqqqqKiYkJdMHA/kSvXr1mzZq1ffv2OtpqHx+fhw8fxsTEpKWllZeX
cz14AADwYykrK0tNTY2Ojg4ODr5x4wZ/Qh0/fnz58uUjRowwMDAQaGIy8vLy
2traHTt27Nu37+CaFi5c6OHhce/ePRaUXI8WAAAAAAAAAAAAQKORkZHx/Pnz
69eve3h4uLi4TJ48uW/fvq1btxb0TVJ+7G+1bNnS3Nx83Lhxixcv/u3Tdu/e
feXKFXbAmZmZXI8cAAB8//Ly8iIjI2/evMlSslYkzZs3b/jw4V27dtXQ0BB0
UDZv3rx79+5jx451cnLaUNOxY8fu3LkTHR1dUFDA9WgBAAD8oCorK9+9excc
HHzu3Lnt27fzJ/Xq1aunTp1qZWXVpk0bSUlJgS4YFBQUDA0Nra2t7e3t62ir
16xZc/jw4du3b7969aqkpITrwQMAgB9LYWEha2D9/PwOHjy4cuVK/oRycHCw
tbXt1q2bpqamQBOTUVdXNzU1HTVqlKOjY60u+8iRI+zwXrx4kZuby/VoAQAA
AAAAAAAAADQahYWFycnJ0dHRjx49unr1qpub26RJkzp37iwhISHoS75/ExER
UVJS0tHRMTY2trCw6Ptp06dP3759+61bt5KSkrgeOQAA+P5lZGTcv39/3759
8+bNqxVJ3bt3NzQ01NTUlJOTE3RQtm3b1tbWduXKladPnw6o6enTp2/evElP
Ty8tLeV6tAAAAH5Q1dXVOTk57969i4iICAwM5E9qHx+fLVu22Nvbm5qaysrK
CnTBICkpqaqqqqen16VLlzra6oEDBy5evPjIkSOPHj3CT5kAAOAby83NDQoK
+uOPPxYuXNi/f3/+hOrRo4eRkZGWlpaCgoJAE5Np3br10KFDly1bduLEiVpd
9pMnT16/fp2amoof7AAAAAAAAAAAAAD8d9XV1ZWVlRUVFX+9Hc/b23v58uV9
+/aVkpIS9CVffsLCwqKiomJiYhJ1MjEx+fXXX728vN68ecP1yAEAwPfvw4cP
ly5dWrp0aa9evWpFkri4OIstERERISEhQadkly5d5s2b5+np+fr169KaWHyz
EK+qqmKBzvVoAQAA/LhYFrPOury8vFZSZ2dn37x5c9WqVQMGDBD0g1VsTcJW
JqyzZquUOtpqJSWlQYMGrV271tfXF/s9AgDAN5aRkXH9+nUXFxcrKys5Obn/
2WULCwsLNDGZ9u3bz5gx49ChQy9evPifXTaLdXTZAAAAAAAAAAAAAF8mPz8/
MDBw3759s2fP7tGjR2c+xsbGrVu3VlNTk5WV/QbPXH1KmzZtRo0atW7dOm9v
76c1RUdHv3//Pjs7u6ysjOuBBACAxqSioiI3NzcpKenVq1fPnj3jDxdfX193
d/eJEyeyHBR0xklJSamoqOjo6LRr165zTewA2GGwg0lOTuZ6tAAAAOAzlJSU
PHr06ODBg7/++mvv3r0NDQ21tbWVlZUlJSUFvbT4FPanTU1Np0+fvmvXrnv3
7vGvfMLCwmJjY9l6Iz8/v6qqiuvBAwCAxqqysjIvL+/Dhw+vX79+/vw5f9bc
uXNn27Ztv/zyC2t1RUVFBR15TZs2ZcnL8rdWlz1u3LgNGzZcu3bt3bt3XI8W
AAAAAAAAAAAAwPemuLj4xYsX165d27Vr16JFi+bzmTZtmo2NTefOnZs1a/YN
Nqb4lObNm1tYWEyePHn16tW7azp37tyDBw9ev36dn5/P9UACAEBjwuLv7du3
wcHBFy9e3Lt3L3+4uLq6sgS0tLRs2bKloDNOWVnZyMjIyspq0qRJ82tyd3c/
f/58aGhoVlYW16MFAAAAn6GsrCwmJsbHx2ffvn1OTk52dnZsXWFoaNikSRNB
Ly0+RVxcvG3btgMHDpwzZw5bY/CvfP7444+rV68+fvz4/fv3FRUVXA8eAAA0
Viz+EhISHj586O3t7eHhwZ81mzZtmjlzZv/+/XV1dUVERAQaeUpKSixzWfKy
/K3VZbu5uZ05c+bRo0fp6elcjxYAAAAAAAAAAADA96asrOzDhw/h4eH+/v5n
z5714rN//35HR8ehQ4fq6+sL+ipx3ReQ9fT0unfvzo7EriYXF5fjx48HBwdn
ZGRwPZAAANCY5OXlhYaGnj59et26dZMmTeIPl+HDh5ubm7PsU1ZWFnTGaWtr
W1lZzZkzZ9u2bV41+fr6siNMSEgoLCzkerQAAADgM1RUVKSkpERGRt69e/f8
+fPu7u4zZszo06dP8+bNBb20+BRRUVF1dXUjIyN2GKNGjeJf+UyfPn3z5s2X
Ll1iB1xaWsr14AEAQGNVVFQUFhbGgm/jxo329vb8WTNy5MhevXoZGhqqqqoK
er8LlrYs7Fjysvyt1WXfvHnz8ePHb9++xaYWAAAAAAAAAAAAAPWuqqqquLg4
Ozs7JSUlISEhnk9oaOgff/wxe/ZsU1NTQb87rw7i4uJycnIqKiqampo6Nf38
889r1qy5evVqUlIS1wMJAACNSWZm5u3btzdv3jx27Fg9PT3+cNHS0lJVVZWX
l5eQkBB0xhkYGEyYMGHr1q13796Nr+nDhw9ZWVmFhYXYnxAAAKBxqa6uZl12
Tk5Oamrqu3fvbt26tWnTpjFjxujq6gp6afEpQkJCUlJSioqKampqLVq04F/5
GBsb//LLL7t27QoMDGSHzfXgAQBAY5Wfn3/v3r1t27ZNnDjR0NCQP2tY9LAA
UlBQkJSUZJEk0MhjacsylyUvy99/dtmZmZkFBQXl5eVcjxYAAAAAAAAAAADA
DyQjI8PX19fV1XXEiBFaWloafNTU1JSUlGRkZMTFxQV69bhuHTt2nDZt2v79
+x8/fpxcU2ZmZl5eXklJSVVVFdcDCQAA3GARUFpamp+fz0IhJSWFPyYiIyOP
Hj06f/58MzMzQf/chv370tLSCgoKKioqGjVZWVk5OzufP38+Pj6e69ECAAAA
gXj9+vWpU6ccHR179+5dayXA1gZshSAlJcXhj3/l5eUtLS2dnJzOnj375s0b
/vVSampqdnZ2QUFBWVlZdXU11wMJAADcY3HAumwWDVlZWbW67JiYGC8vr0WL
FllYWLAWWKDhxXKTpSfLUGVl5VrZ2qtXL5a57EhevXrF9WgBAAAAAAAAAAAA
AE9ubu7jx49PnDjh4uIyevTokXxsbGy6deump6fXpEkTgV5Yrpuuri47kkWL
Fnl4eFzgc/Hixbt370ZERCQlJZWUlHA9kAAAwI3y8vKUlJSoqKgHDx54e3vz
J8WRI0ecnZ1HjBhhaGgoIiIi0LSSl5fX0dHp0qVL//79R9bk6Oh44MCBe/fu
sePkerQAAABAIBITE+/cubN3794FCxbUWgn069evU6dOLVq0kJWVFehqpA4y
MjLsGMaNG7d69WovLy/+9dK1a9eCg4NjYmIyMjLwI18AAGAqKyvT0tKio6MD
AwOvXr3Knxqenp4rVqwYPXq0sbGxoN8xxHKTpSfLL5aktbLVwcGBZS5LXpa/
XI8WAAAAAAAAAAAAAPAUFRXFxsY+ePDgzJkz27Zt28Jn5cqVkydP7tWrl7a2
tkAvLNdNXV29c+fOgwcPnjFjxuKadu/effXq1YiIiLy8PK4HEgAAuFFcXBwd
He3j4+Ph4bFs2TL+mJgzZ87w4cNNTU01NTWFhYUFmlZqamrdunUbM2aMk5PT
lpqOHz9++/btqKionJwcrkcLAAAABCIzM5N1pn5+fkePHq21EnB0dBw5cmTX
rl2VlZUFuhqpg4SERMuWLXv27Dlq1CgHBwf+9dKqVauOHDni7+8fFxdXWVnJ
9UACAAD3ysvLX79+zdrYgwcPuri48KfG/PnzbW1tzczMtLW1xcTEBBpeLDe7
dOny1897a2UrS1tfX1+WvCx/uR4tAAAAAAAAAAAAAOApLy/PyspKSEiIjIwM
CQkJ5nPlyhVXV9dx48YZGRkJ9MJy3WRlZTU0NNq0adOlS5fufHr06DFz5szd
u3ffvXs3IyOD64EEAABuFBQUsMz6448/HBwc+vbty58UJiYm+vr6zZs3l5eX
FxISEmhatWzZcujQocuXLz916lRwTWFhYXFxcenp6djDHwAA4HtVXFyclpb2
5s2b58+f11oJHD9+3MnJadCgQZqamgJdjdRBVFRUUVFRS0vL0NCwW7du/Osl
GxubpUuXenp6siOvqKjgeiABAIB7rHV98uTJ0aNHHR0dra2t+VPD1NTUwMCA
JZqCgoKgf/DL/srAgQNZhrIkrZWtLLNY5rLkZfnL9WgBAAAAAAAAAAAAwL9I
Sko6f/68o6OjmZmZQC8sfxkhIaEePXosXrz4woULycnJXI8WAABwIycn5+bN
mytXruzXr5+0tDRXqWRoaDht2rTDhw+/fPmS6yEBAACABiQsLGz//v2TJ0/W
1dXlaqFSBxUVlZ9//tnNze3evXvl5eVcjxYAAHCvqKjozp0769atGzRokKKi
IlcJxXJz0qRJLENZknI9JAAAAAAAAAAAAADw5dLT0wMCAnbt2jVjxoweNXXu
3FlPT09dXV1WVpary9FCQkLt27cfP378xo0br169GvRpz549i42NTU1NLSoq
4npQAQDgvyopKWFJFBcXFxYWVseXvJ+f39atW3/55ZeuXbtKSkp+sxgSFhZW
UFDQ1NQ0MDAwNTW1s7NjeXTt2rX4+HiuRw4AAAAaENaNXrp0ad26dWPGjKnV
WRsbG7ds2VJZWVlCQuKbrWFqUVRUNDc3nzNnzt69e+/fv1/HoisiIoKtczIz
M8vKyrgeVAAA+BKlpaUZGRlv374NDw+v4ws/ICBg586dM2bM6N69+7e89isk
JCQvL9+8eXN9fX0TE5PRo0ez9GQZ+vr1a65HDgAAAAAAAAAAAAC+XG5ubnh4
+JUrV3bt2rW4phkzZgwePLhTp05qamrf7HL0P+no6PTu3XvKlCmrVq3a8mmH
Dx/28fEJCwtLT0/nelABAOC/ys7OjoqKun379vHjx+v4kl+/fv306dOtrKz0
9PTExMS+WQaxv6WtrW1mZmZrazt//nx3d/ezZ88+evQoNTWV65EDAACABuTD
hw/BwcGnTp1yc3Or1VlPmDDB0tJSX19fXl7+m61hapGRkWnXrp2Njc3cuXM3
b95cx6KL/Rfu3bv36tWrgoICrgcVAAC+RF5eXnR0dEBAwMmTJ+v4wmeBNWvW
rIEDB7KEkpKS+maRJCwsrKmpaWpqOnz48Dlz5rDDYNHDMpQlKdcjBwAAAAAA
AAAAAABfrri4OCkpKTw8/O7duxdq2r9//8KFCwcNGtS6detvdjn6n5o2baqn
p2dmZmZjYzPy0+bPn79r1y4/P7+EhASuBxUAAP6r5ORkFkAHDhxwdHSs40t+
6NChPXv21NfXV1VVFRER+WYZJCEhYWxsPHr06BUrVnh6et66devp06fx8fH5
+flcjxwAAAA0ILm5uXFxcU+ePPH19a3VWW/evHnatGnm5uYqKirfbA3zzyWN
hoaGkZFRr169RowYUceia/ny5ceOHQsJCcnKyuJ6UAEA4Eukp6f/+eefhw8f
Xrp0aR1f+MOGDbOwsDA0NFRXV/+WP/hlHT37oyyMnJ2djxw5wnKTpSfLUJak
XI8cAAAAAAAAAAAAAHy5ysrKkpKSvLy8jIyM5JoePXq0d+/eqVOnGhsbf7PL
0f8kLi4uIyOjpKSkpqam8Wk9e/Z0cHDw9PSMiorielABAOC/evv27blz55yd
nfv161fHl7y6unqTJk1kZWUlJCSEhIS+WQZJS0tbWFgsWrTIy8srJiYmPT09
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
DR48eNWqVRcuXEhJSRE9xgBQPiIjI729vRcsWNC9e/fSAlBSp06d6tWrGxgY
qKury8nJiU7uf/F2Sj/8p+jo6KSkpKysrKKiItHjDQAAUFYFBQUZGRmJiYlS
wVaivDlx4sSSJUvc3Nysra1FV2H/oaKioqura2JiUrNmTRlVZcuWLSdOnOjp
6Xnr1i1qMwBfpNjY2P+mtIw8tLGxsbCwMDQ01NDQqJg/+K1Tp06/fv1+/vnn
M2fOlDiGoqKipOMpMzOzsLBQ9HgDAAAAAAAAAL5GqampZ86cWbRoUZcuXfT1
9au8RUtLS11dXVlZuYK8LbkEOTm5pk2bTpo0ad++fREREVlllpOTk5+fX1RU
9ObNG9HDD+ArIsWOFD5SBL18+VJGRt24cWPjxo1Dhw6tU6eO6KB9N+mAkI4J
NTU1TU3NKv/Upk2bWbNmeXt7x8XFiR57AACATys8PHzv3r0TJ05s0qRJiaJI
KpNUVVWVlJQq5hfbDAwMXFxcfvrpp7Nnz6alpZWxrZYK2tzc3IKCAl6kDEAg
KYKkIHpnl33v3r1t27aNGjXK3t5edOi+m3RYlNZlN2/efOrUqQcOHIiMjBQ9
9gAAAAAAAAAA/ENmZmZQUNCOHTtmzpzZrVu3Lm9p06ZNgwYNLC0tdXR0RH8M
/y/k5OTq1avXu3fv+fPn79+//1zZXLhw4ebNm0+fPk1NTeWNTwA+m9evX6en
p0dFRd25c8fX11dGTG3btm3q1KmdO3euXr266KB9Ny0tLXNzcwcHB2dn5y7/
NGnSpN9++83Pzy85OVn08AMAAHxasbGx58+fX7t27Q8//FCiKGrRooWtra2J
iYm6urro2u1faGtrf/PNNyNHjvTw8Dh16lQZO2upxrt///6zZ88yMzNFjz2A
r1dGRkZMTMy9e/euXLkiI7L++7GnlZWV6NB9N01NTTMzMzs7u5YtW5Y4UMaN
G7dhw4aLFy8mJCSIHnsAAAAAAAAAAP4hOzs7PDz80qVLu3fvXrp06eK3zJw5
s3///s2bNzc3Nxf9Mfy/ky6sWbNmffv2nTZt2sKyke5RulNfX98nT57k5eWJ
Hn4AX4vi4uKYmJiAgID9+/evWLFCRkyNGzeue/fujo6OBgYGolP23apVq9a4
cWM3N7cpU6Ys/idPT89z5849fPiQL6gAAIAvXkpKyt27d0+ePLlly5YSRdH4
8eOl6q5BgwZ6enqia7d/oa6uXrt27fbt2w8fPnzevHll7KzXrFlz+PDh69ev
83U4AALFxcUFBgYePHhw1apVMiJr4sSJPXv2dHJyMjIyEh2672ZoaNiwYcMe
PXpIl13iQNm6devp06dDQkLS09NFjz0AAAAAAAAAAP9QUFCQkpLy9OnTW7du
Xbp06eJb/vjjjwULFvTu3dvGxkb0x/D/TkdHx8LCwsHBoVWrVh3KxtXVddas
Wbt3775582Z2drbo4QfwtSgqKgoJCflvrsqIqWbNmtWrV8/ExERDQ0N0yr6b
tbV19+7d/87Vi/9048aN8PDwpKQkfvcBAAC+eFJ3mZCQ8OjRo6CgoBJF0dat
W6dMmdKxY0dTU1PRtdu/UFZWNjQ0rFmzppOTU/v27cvYWQ8ePHj58uXHjh2L
iIgQPfYAvl5S6h4+fHjJkiUDBgyQEVl/v53ezMxMS0tLdOi+W/Xq1bt06TJ9
+vTff/+9xIESHBwcFhaWmJiYk5MjeuwBAAAAAAAAAPiHN2/eFBcXFxQU5OXl
Zf/T06dPvby8Jk2a1KRJE9Efw/87eXl5JSUlFRUVdXV1jbIxNDR0dXVdunTp
hQsXsrKyRA8/gK9FYWHh1atXV69e3bdv3+rVq8uIKTU1NSnWFBUVpYgTnbLv
Zm9vP3r0aE9PzwcPHpQ4RHJzc6XDpaioSDpoRA8/AADAp/X69Wup7MnPz5dK
oBJFUXBw8Pr16wcNGmRtbS26dvsXcnJyCgoKysrKqqqqZWyrJTY2NsOHD9+y
ZcudO3dEjz2Ar9eNGzc2bNgwePDgmjVrfjFddp06dYYNG7Z58+bbt2+X1mVL
h47osQcAAAAAAAAAoKySk5MvXLiwevXqoUOH1i+dg4ODtbW1sbFxlSpVFBUV
RX9g/w5qamrffPPNmDFjNm/efO3atftl8/Dhw5iYGGlAsrOz+U4dgJycnNTU
1GfPnj1+/LiMMXL79u0dO3ZMnjy5devWurq6orPwHeTl5TU1NY2MjGrUqGFn
ZyfjCOjbt++yZctOnToVFxcneloAAAAqooiIiEOHDs2bN8/V1VVGWVWvXj0L
CwtDQ0N1dXXRxeC7GRsbd+nSZfbs2QcOHChjPSwJDw+Xisb09HT+NQNACbm5
uWlpaVJEhIWFlT1V9u7dO2PGjA4dOlStWlV0Lr6DnJychoaGdJ2Wlpa2trYy
joOePXsuWrTo6NGjUVFRoqcFAAAAAAAAAIBykJGRcefOncOHD3t4eIwt3Q8/
/PDtt982bdrU0tJSVVVV9Ef776CiolK3bl0XF5eJEyeuWbPmt7LZvXv3uXPn
7t69m5iYyItHAKSkpDx48ODixYv79u0rY4xs3Lhx+vTpPXv2dHBw0NTUFJ2F
76CoqGhmZtaoUaNu3bp99913Mo6AZcuWHThw4Pr169KYiJ4WAACAiig+Pj4g
IEBqKhcuXCijrBo2bFinTp3q169vZGQkuhh8Nz09PScnp379+s2ZM6eM9bDk
4MGDV65cCQsLe/HihehpAVCxpKWlPXr0yNfXV2owy54q7u7uvXv3dnR01NHR
EZ2L7yAvL29sbCxdapcuXUaMGCHjOFi8ePHevXuvXbuWmJgoeloAAAAAAAAA
ACgHOTk5z549u3Xr1tmzZ/eWbufOnXPnzu3bt6+jo6OWlpboj/bfQVFR0djY
2MHBoX379gMGDBhaNhMmTFi7du3p06fDw8OLi4tFzwwAwaKjo318fDZv3jxt
2rQyxsjgwYM7deok5aSZmZmKioroLHwH6QptbW179Ogxc+bMrVu3yjgCTp06
df369aioqJcvX4qeFgAAgIroxYsXERER165dO3bsmIyyav369ZMmTeratWvN
mjVFF4PvpqGhYWlp2bhxYxcXlzLWw5I5c+b8/vvvfn5+CQkJoqcFQMUSFxfn
6+u7bds2d3f3sqeKlJlOTk4WFhYV/33yCgoKderUcXV1nTp16qZNm2QcBydO
nAgKCnr69GlmZqboaQEAAAAAAAAAoBwUFRW9evUqNTU1Pj7+aekeP368f//+
mTNntmvXTldXV/RH++8gLy+vrq6up6dnYmJiZWVVs2yaNGkyduzYbdu23bx5
UxoW0TMDQLAHDx7s2bNn6tSpzs7OZYwRa2trU1NTfX19DQ0NBQUF0Vn4Dmpq
ai1atJg4ceKOHTvu3r0r4wiIi4tLSUl5+fJlYWGh6GkBAACoiPLz8zMzM58/
f/7s2TMZZVVgYOCmTZu+++47R0dH0cXguykqKmpqahoYGJibm5exHpZ07tz5
xx9/PHTokHS/oqcFQMUSFhZ24MABd3f39u3blz1VzMzMpCCS4kgKJdG5+A7S
FTZu3HjMmDFbt269ceOGjOMgNjY2OTk5KyuroKBA9LQAAAAAAAAAAPD5FBYW
BgYGrl+/fsiQIXXr1q36FkNDQx0dHQ0NDWVlZTk5OdGf+n84AwODLl26zJ8/
/8SJEwkJCcmlSElJefHixatXr/Lz81+/fi16ZgD8R3FxcV5e3suXL9PT00vb
v+/Fx8dn+fLlvXr1MjMzE51P70dBQUFVVVVTU1NXV7dq6SwsLPr06bNixQpf
X9+srCzREwgAAPDlS0pKOnXq1MKFC11cXErUZvr6+lWqVFFTU6v437WTrXbt
2oMGDVq7du3Vq1dlFNupqamZmZk5OTn82A2oUKQtKW1MqUNMS0srl876bVeu
XFm1alW/fv2srKxEZ9X7kZeXV1FReWeXbWJi8u233y5duvTcuXPSAIqeTAAA
AAAAAAAAKpyioqLQ0FBvb+9ly5YNHTq0x1tcXV2bN2/+9/eTlZSURD8c+HDa
2tpNmjQZNmzY8uXLjxw5crx0AQEBDx8+TEhIyMvLEz0zAP4jOzs7Li7u/v37
ly9flrF/y2716tWjR49u1aqVoaGh6Hx6P+rq6mZmZvb29q1bt+5Ruv79+y9c
uPDAgQN37tzJyckRPYEAAABfvvT09KCgoJ07d86ePbtEbdaxY0cnJycrKysd
HR3R5eRHMTc379Chw8SJEzdu3Cij2D579uz169efPHmSlpbGj3yBikOKqcjI
yJs3b54/f75cOuu3rVu3buzYsW3btjU2NhadVe9HVVXVxMTE1ta2VatWMrps
Nze3uXPn7tmz58aNG5mZmaInEwAAAAAAAACACqe4uDguLi44ONjb23vDhg0r
3rJkyZLRo0d37NixTp06qqqqoh8OfDh1dfVatWq1bt160KBBM2fOnF26LVu2
nD59OjQ0lPeIAhVHamrqnTt3jh49unbtWhn7t+yGDRvWvn17GxubKlWqiM6n
96Orq9ugQYNvv/120qRJK0q3Zs2agwcPXr16NSoqKj8/X/QEAgAAfPlevXoV
Hh5++fLlffv2rVy58u3abM6cOQMHDmzRokWl+0uOEvT19R0cHLp27Tpq1CgZ
xfaSJUt279595coVqRYtLi4WPTMA/iM2NjYgIEDKqOXLl5dLZ/22kSNHdurU
yc7OTmpaRWfV+6lSpYp02d26dRs/fryMLnvVqlX79+/38/N7+vQpP/gFAAAA
AAAAAOD/evPmTWZmZlxc3MOHD4ODgwPe4uPjs2bNmu+++65p06YaGhqiHw58
OCUlJX19/Ro1ajg4OLRs2bJVKZydnceNG7d582Y/Pz/+bBGoOOLj48+dO7d6
9eoRI0aUtn/fS4MGDaytrQ0NDVVUVETn0/upVq1ahw4dpkyZ4unpGVC6wMDA
Bw8ePHv27MWLF0VFRaInEAAA4MtXUFCQmpoaFRV1//79ErXZoUOHFi1a1Lt3
77p164ouJz+Kurq6VI7WqlWrUaNGMort7t27z5kzx8vL6969e9SiQMXx8OHD
gwcPLliwoFevXuXSWb+tYcOGNWvWrFq1qpqamuisej8GBgatW7eeMGHCli1b
ZHTZV69eDQkJiYmJSUtLKywsFD2ZAAAAAAAAAABURG/evHn9+nXx/yp6S2Zm
5vnz53/66afOnTtra2uLfjjwUeTk5OTl5RUUFBRlatWqlbu7+9GjRxMTE0VP
C4D/ePr06d69e8ePH+/o6Ch7C5eRFAVSIEixIDqZ3puFhcWAAQPWrVt348aN
otL9nedSsEvxLnr2AAAAvhb/7axL1GZRUVFeXl4TJ05s1KiR6HLyo8j9r3d2
1tWqVevZs+fKlSv9/f35wh5QcQQHB69Zs6Zfv37Vq1cvl876X7vsStdoGxsb
u7m5eXh4XL16VUaX/XejTZcNAAAAAAAAAMAHyM3NvXHjxu+//z5lypR27do1
KZ2dnZ2lpaWBgYGqqqroZwgfTk5OzsHBYfDgwStWrDhz5syN8hYaGhoTE5Oa
mpqXlyd6boFPqLCw8MWLF3FxcY8fP7558+bH7x1vb+9Fixa5ubnVqlVLdE58
KhoaGkZGRtbW1vXr15cRtj169Jg/f/6ff/4pja3oeQYAAECZJCYm+vj4rF69
evjw4TIqPScnp7p165qZmWlraysoKIiuTz+cjo5Oq1atJkyYsHXr1sDAwI9v
B95269atsLCw+Pj4zMzM4uJi0XMLfEK5ubkpKSnR0dEPHjwol+3z38/3DA0N
RefE56Curl61alUrKysHBwcZ2evi4jJ79mwvLy9pnEXPOQAAAAAAAAAAX6aC
goLw8PDz589v3bp1zpw5U0o3ePDgdu3a2djY6OjoiH7U8FFq1KjRtm3bkSNH
Ll68eF158/Ly8vX1ffz4cUZGhui5BT6h3NzcqKioa9euHT58eMOGDR+/d+bN
myeFTPPmzU1MTESHxKdiZGTUoEGDrl27fvfddzLCVoqmPXv2BAQExMXFiZ5n
AAAAlEl6evqdO3eOHDny66+/yqj0JkyY4Obm1qxZM0tLSxUVFdH16YfT1NS0
s7NzdXWdOHGidMsf3w68bdOmTdJIBgUFxcTE5Ofni55b4BOSouPhw4cXL17c
u3dvuWyfqVOn9ujRo379+pX9j8/KyMDAwN7evlOnTsOHD5eRvQsXLty5c+fl
y5elVBE95wAAAAAAAAAAfJmKioqeP3/+6NEjf3//o0eP/lm6lStXjho1ytnZ
uVq1aqIfNXwUAwODOnXqNG/e/Ntvv+1X3mbNmuXp6SkNZlJSkui5BT6hrKys
W7du7d+/f9GiRQMHDvz4vePi4tKkSRNra+vK/mMHGaS769q165QpUzZt2iQj
bE+fPh0cHPzkyZMXL16InmcAAACUSXZ2dmxs7N27dy9cuCCj0tu7d+/8+fOl
6rdBgwbq6uqi69MPp6KiYmJi4uDg0LZt2z59+nx8O/C2oUOHLl26VBque/fu
5eTkiJ5b4BP666+/Ll++vHXr1unTp5fL9mnfvr0UL2ZmZmpqaqJz4nOwsLDo
2LHjhAkT1q1bJyN7T548GRgYGB4enpaWJnrOAQAAAAAAAAD4Mr158yYvLy8r
KyslJeWvv/6KK9358+eXL1/u5uZmaWkp+lHDR1FRUdHS0tLX1zcxMTEvb507
d547d663tzcvWsGXLS0tzcfH5+eff+7Tp0+NGjU+fu8YGxvr6elpamoqKSmJ
DolPpX79+iNHjty0aVNwcLCMsE1MTJSG99WrVwUFBaLnGQAAAGVSVFSUk5OT
kZHx/PlzGZVeRETEgQMHZs6c2bZt2ypVqoiuTz+cvLy8mpqatrZ21apVzczM
Pr4deFvt2rUHDhy4atWqy5cvZ2VliZ5b4BN68uTJwYMH3d3d27VrVy7bR9qS
Ojo60vZUUFAQnROfg42NzZAhQ9auXfv3/wqVJiEhQeqyX758yYvWAQAAAAAA
AAAQ7tGjR3v37p0yZUrLli1lPPUwMTHR19fX0tJSVlYW/URCgHr16g0dOnTd
unVXr16V8RCk3CUlJaWnp2dnZxcWFopeKRApPz//5cuXaWlpCQkJn3TJ3bt3
b8eOHePHj2/atKmioqLonSeSvLy8qqqqtra2oaGh7K9hdOvWbeHChSdOnPjr
r79ErxQAAAAIkJubK7WKUsMotY22trYySkcjIyNdXV0NDY2vsNhWU1Nr2bLl
lClT9u7d+/Dhw0/a18iQmJgoddmvXr2iy/7avH79WtqqmZmZycnJ8fHxn3SZ
Xb58edWqVQMGDKhVq5bonVeByMnJSV12lSpVpC7b1NRURlR26tTpxx9/9Pb2
jo6OFr1wAAAAAAAAAABAmTx79uzChQubNm2aPHmyjP+C7N69e/PmzWvXrq2v
ry/62YUA//1ryPXr18v4a8hyd+7cuZs3b0ZHR/POqK9campqeHh4YGDgiRMn
PumS8/T0dHd379Gjh42NzVfytqXSKCkpGRsb29nZtW7dunfv3jLi8ccff9y1
a5c0O9I0iV4pAAAAECA/P//Bgwfe3t4///zzyJEjZZSOnTp1atSokaWlpaam
puiC93NTUVGxt7eXSmupft65c+cn7WtkOHPmzPXr1yMjIzMyMkQvHHxW0j5N
SEgICQm5fPny4cOHP+ky+/XXX8eOHduuXTszMzPRO68CUVBQMDIyqlevXqtW
rXr16iUjKt3d3T09Pf39/ZOSkkQvHAAAAAAAAAAAUCYpKSkhISHnz5/ftWvX
utItXrx4xIgRbdq0sbS0FP3sQgBDQ0MHB4fOnTtLgzDlM/rll1/++OOP69ev
P3/+XPRKgUjR0dGXL1/euXPnwoULP+mS++GHH7p37+7k5GRqaiovLy9654mk
pqZmY2Pj4uIyfvx4Dw8PGfEobVI/P7+IiIiXL1+KXikAAAAQoLCwMDY29saN
G8ePH//tt99klI7u7u59+/Zt3Lix1GOKLng/N0VFRXNz8yZNmvTo0WPs2LGf
tK+RYdmyZV5eXteuXeM/Tb42r169Cg0NPXXq1MaNG6dPn/5Jl9nQoUM7dOhg
a2urp6cneudVIMrKyrVr1+7UqdMPP/zwyy+/yIhKaZP6+vo+fvyYnwwAAAAA
AAAAAFBZ5OTkJCcnR0VFhYSE3Cjd6dOnf/nll0GDBtnb24t+diGAurp61apV
raysHBwcmnxG/fv3X7Zs2cmTJ2NiYkSvFIgkbU8vL6/Zs2e7uLh80iXn6OhY
q1YtY2NjLS0tOTk50TtPJGkEmjdvPmbMmE2bNvn7+8uIx4cPHz579iwtLS0/
P1/0SgEAAIAAr1+/zsrKSkhIiIiIuH37tozS8b9Vvbm5ueiC93OTl5evUqWK
iYlJ7dq1GzVq9En7Ghnc3Nx++umnI0eOPHnyRPTCwWeVkZEREBCwefNmqcuT
er1Puszs7e1r1KhhaGiopqYmeudVIKqqqo0bN/7uu+/Wrl3r6+srIypDQ0Nj
YmJSU1Pz8vJELxwAAAAAAAAAAFCeEhISvL29Z86c2aJFC8UyU1BQkJeXl/tf
op94VEr16tX77rvvPD09Q0NDiyqz4uLi169fv3nzRvRC/hDSZUsXL92CwAEM
CAjw8PBwc3MzNjYWvSorvb8TSYomKaBkxJe+vr6rq+uyZct8fX1zcnJEL0MA
AAB8CUJCQrZt2zZixIi6det+QGctupT+EtSsWXPIkCGbN2++c+eOwBbvAxT/
r0raWf/dVovtrJOSko4dOzZr1ixnZ2clJSXRK/FLU5Yuu0qVKp06dVq4cOG5
c+d43TEAAAAAAAAAAF+n1NTUK1eubNq0aezYsa3KzMnJqXbt2sbGxhoaGqKf
ilRKlpaWrq6us2fP3rdvX0Bldu/evcjIyJSUlEr32ti8vDzpsqWLv3v3rsAB
3LJly/jx41u3bq2vry96VVZ6ampqRkZGNWvWbNiwoYz46tq1q7u7++7du2/f
vs2LmAAAAFAunj59evz48WXLlg0cOLDsnXX9+vWtrKwMDAyUlZVFV9OVnpmZ
WefOnWfMmLFz506BLd4HCAoKCg0NjY2NzcjIKC4uFr2W38+rV68SEhLCwsJu
3rwpagBPnjz5yy+/DB48uEGDBoqKiqJX4hdFRUXF0NDQ2tpaGlsZUdaxY8ep
U6f+/vvvwcHB0pIQvSoBAAAAAAAAAIAAWVlZDx48OHXq1ObNm2eX2ffff9+t
W7cGDRoYGhqKfjBSKRkZGTVu3LhPnz4zZsxYUZnt2bPn0qVLjx8/lhaS6LX8
fjIzM6XLvnjx4u7duwUO4Pjx46WtZGdnV6VKFdGrstLT1dWVRrJTp04jR46U
EV+LFi3auXOntG6fPn1aWFgoeiUCAADgS5CYmBgcHPznn396eHiUvbMeMmRI
27Zt69Spo6mpKbqarvT09fUbNmzYq1evKVOmCGzxPsC6desOHToUGBgYExNT
6TqUpKSk27dvnzx58rfffhM1gAsWLBg+fHibNm2srKwUFBREr8QvSpUqVWxs
bDp06DBs2DAZUTZ//nxPT08fH5/w8PDc3FzRqxIAAAAAAAAAAAiQl5eXkJAQ
Ghrq7+9/vMy2bNkyZcqUzp07W1pain4wUilpaWlZWFg4Ojq2a9euR2U2Y8YM
T0/PgICAlJQU0Wv5/SQnJ0uXvX37dukWBA5gq1atbG1tTUxMVFVVRa/KSs/Y
2Lht27Zjx45dt26djPg6c+ZMcHBweHi4tGgr3TvHAAAAUDFlZWXFxMTcuXPn
4sWLZe+sV65cOXLkyObNm+vp6Ymupis9DQ0Nc3Pz+vXrt2nTRmCL9wEGDRq0
ePHiP//88/79+5Xu/4aePn16+vTp1atXf//996IGsGvXrk2bNq1Vq5a+vr68
vLzolfhFMTQ0bNWq1ejRo6UplhFlp06dCgwMDAsLe/78eaX7Oj0AAAAAAAAA
ACgXr1+/zs/Pf/Xq1YsXL5LLLDg4eOPGjcOHD69Xr57oByOVkqKioqqqqpaW
lp6eXtXKrFOnTnPnzj127Fh8fLzotfx+4uLijhw58uOPP3bs2FHU6BkaGurq
6mpqaqqoqPDA9ONZWVn169dv1apVV65ckRFfqampmZmZ2dnZBQUFb968Eb0S
AQAA8CUoKirKzc3NyspKT08ve2d95syZxYsXu7q6VqtWTXQ1XekpKChU0i67
Zs2aAwYMWL16tb+/f05Ojui1/H7u37/v6ek5ZsyYhg0bihpAAwMDbW1tdXV1
JSUl0cvwS2NmZtarV6/ly5f7+PjIiLKUlJSMjAy6bAAAAAAAAAAA8L5iYmKO
Hj26YMGCbt261Swzc3NzQ0NDLS0tHg99Mezt7YcNG7Zu3Tp/f/+nlYqfn9/a
tWuHDh1qZ2cnehRRkqKioqampoGBgZmZWdkTpkOHDu7u7gcOHAgLCxOdkQAA
AMC73b17d8eOHRMnTmzevHkZi14rKysTExM9PT11dXV+z/hl0NLScnZ2njp1
6p49ex48eCC6V34/x44dW7Bggaurq6mpqeiBhCwKCgoaGhr6+vrSTFlbW5cx
cN5emaLzEgAAAAAAAAAAfIGSkpKuXr26a9euefPmDS0zV1fXpk2bWllZaWlp
iX4Ig/JRo0aNTp06jR8/fs2aNXsrlV9//XXcuHEdO3aUbkH0KKIkdXV1CwsL
Jyenrl27lj1h3N3dt23b5uvrGxcXJzojAQAAgHd7+vTp2bNnN2zYMHny5DIW
vYMGDZK6mAYNGpiamiorK4uu3FEOpPbHwcHBzc1t9uzZnp6eonvl97N48eIh
Q4Z88803BgYGogcSsqioqJiZmTk6Onbq1Gnw4MFlDJxp06Zt3rzZx8cnOjpa
dF4CAAAAAAAAAIAvUGZmZnh4uL+//6FDh34rs3nz5g0cOLBp06aGhoaiH8Kg
fEhTaW9v36FDhyFDhoytVAYPHixdtp2dHauxAtLR0WnYsGHv3r3d3d3LnjAH
Dhzw9fV99OhRWlqa6IwEAAAA3u358+f379/38fHZu3dvGYve9evXT5kypXv3
7ra2tmpqaqIrd5QDZWXl6tWrN27c2NXVdfTo0aJ75fcjdW0tW7asWbMmPzmv
4DQ1NR0cHHr27Dl9+vRNmzaVMXC8vLwuXrz44MGDlJQU0XkJAAAAAAAAAAC+
QPn5+S9evIiPj4+IiLhfZn/++ee8efNcXV3Nzc1FP4RB+VBXVzcwMLCwsLCx
salfqUgXXL16denieXxfAVWtWrVDhw4zZszYu3dv2RMmLCwsLi4uLS0tLy9P
dEYCAAAA75aTk5OSkvLs2bNHjx6Vsei9fv36tm3bxo8f37JlS778+WVQUFCQ
prJatWpWVlb29vaie+X3U6tWLVNTUx0dHd7RXcHp6uq2bt168uTJO3bsuH37
dhkD5/Hjx1JApaamSmElOi8BAAAAAAAAAAD+IyQkxNPTc/To0fb29hqlU1dX
V1FRUVJSkpeXF/2sBkCZKCgoSHtWVVVV2r8ydncZ1axZc/DgwRs2bLhx44bo
3AIAAAAqkJycnMuXL69YsaJXr14mJiYyimo1NTVlZWVFRUU6a6BSkJOTkzas
tG2lzfvxbXUJ1atX79u37+rVq69evVpYWCg6yQAAAAAAAAAAAD5cZGTkyZMn
V6xYMWzYsA6la9WqlYODQ/Xq1bW1tUU/CALwbgoKCnp6elZWVo6Ojm3atJGx
u8towIABS5YsOXz48KNHj0TnFgAAAFCB5OXl3b1718vLa+7cuT179pRRVH/z
zTd169Y1NjZWV1cX3TEAeDdVVdVq1arVqVOnSZMmH99Wl9C7d+8FCxb88ccf
ISEhRUVFopMMAAAAAAAAAADgwyUlJd28efPIkSPr1q1bWLpp06b16dPnm2++
MTMzE/0gCMC7KSkpWVlZOTs7Dxo0aNasWTJ2dxmtWrXq4MGDgYGBcXFxonML
AAAAqEAKCwujoqL8/Pz27dv3888/yyiqx4wZ4+Li4uDgoKenJ7pjAPBu2tra
tra2Xbp0GT169Me31SWsWLFi//79AQEBMTExxcXFopMMAAAAAAAAAADgw718
+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
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAL5G/w92CI9E
    "], {{0, 1630}, {3801, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{180.7779886148001, Automatic},
  ImageSizeRaw->{3801, 1630},
  PlotRange->{{0, 3801}, {0, 1630}},
  ImageCache->GraphicsData["CompressedBitmap", "\<\
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
4e9C+SY97ODtxjlfIF2G0nikDIJYvF8iC96u0dpb335ydRvSpcqCSxHy97MQ
ZEyZEpMW7rLROLY30mctlAiNn7eoibK1PvtbNAYh9OxO+Hl44K23S6JChfKo
8G5FvF+/PgrnzQqfdDlFgqoEMOxZbYk5Xz8/ppN5qITIjPAW4IxcsNEe98aR
NUiTOjOuRVt/T+7ZFPnebQHb/ImLRJlCWZEpe36ZqgKz8lCrTj1ULFMcTG8b
NXeVy2QR9O7dW03JAI4gw2TJuOMxg8YjrV5zREWu+umnn1wF9T0eUzGCqI0I
0oh+LzEyM+rnmTRXvXp19TwTKElDgZroT2xdLBgV8j0dojLNrgcfxXul8qNU
jU95dvNnhMaQ8UKPwkeG+uG3s9Ztf4TfPIvWrVrgw1YfoXblkuIJZmL2iEJu
hoCUmLHimM2k674e9Bcm/afYNXowCHuCI21D5eWTh3i/dE7krdRCPbzr56nw
ylgAp27c4ymthzKPAxAWFoaY5y/dRo1F7WJZ0eHLxYobs6YUx2LlAfvoisI2
c1oMnrretmZ5njWx30cC1Ey48uhFoAYwU/mosgjg9957T0WUjNPojtx0GppM
0aVWpDNguCwiIqKwnqVjx47qMjXh7NmzzUjuqE2vZ75x44YSC3ycBqE8rt3v
NDizyzoD8/cPUCSkM6SRKdd/MO7bH2GMdYNbnhSFHvtVpkqBTefuWnAIwP1r
p9C8YX2V5dqoSVN06jEcj17whDIE+TKnQr5CJWlIeXDnsnjaVEXyZEO2wmXx
OB7/HsP7LjrKfkb/xvDOW0Y9uHv51/DJVgyyBHOyt+HbocjzTm0s/2480ucq
ishXbieQCo1pMHTaJpsEr+y2kkf2X4/SwUkfxXAMotBd5D0m84qQNLERdzSm
1XRHQ57KkY8z0Ymsr4+P6TIX1MxBt49hB8YfaZ2K+6ce40kw83XF77FdKHcc
p9Urows1Y8YMdXLE91q3bs3IcmqN5pPblggHp8aMhb+q08LNW7Zi966dGDO4
i3p89Lx1Cm6b3Fg46tpeeMm9n3ZfNOfT8ZE3kCdjKpSuWFcIsIMH0xo1LVYp
WRhZC76DyP85OoMUOqn3xs78CTvFJN6+fTt2yvJ++Gaccg1a9puiXti+7Gu4
UmbGso3bsWP7dg8+SFNp61YcOvmHCogYDfzq0VWUKpgVaYNSoee4BZ6aUC1M
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
L/M4A2CGwMxkKf4fcnPDXA==\
\>"]], "\[IndentingNewLine]", 
 RowBox[{
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzt3U2OJEFWruHkMmHIFu4u7pRZIWYgFtCIBjFpRBMSYi+5l1hKLcVvVXtl
VLi7uf2eY+eY2fsohZruSg9z+ztfenh4/N9/+c9//Lf/8/Hx8d9/8+P//OMf
/ufv/vznP/zvP/3tj//nn//03//x73/647/+/Z8ef/z3P/75//3LX//4L//r
rz4+/uHHf/j5nzcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADCsj49fPwAA
AJjAK92R8QAAAOZAwAMAAJjJKd2R8QAAAIYWTHcEPAAAgHHdBTwyHgAAwIgi
6Y6MBwAAMCICHgAAwEyS6Y6MBwAAMBYCHgAAwEwy0x0ZDwAAYAhF6Y6ABwAA
4F9pwCPjAQAAeFaR7sh4AAAAnhHwAAAAZlKd7sh4AAAAPhHwAAAAZtKY7sh4
AAAAroikOwIeAACAH1IBj4wHAADggWC6I+MBAAB4QMADAACYiXi6I+MBAADY
IuABAABMhoAHAAAwH9IdAADAashvAAAAkyHgAQAATIaAB3TGcgMAaCPgAT2x
4gAAHVBugJ5YcQCADig3QDd8Mh0A0Ae1BuiDpw8BALqh0AB9EPAAAN1QaIAO
eIQ4AKAnqgzQAV8TAwDoiRIDaMtJd6w+AIAgSgygLTPgsQABAFKoL4Cq/HTH
AgQASKG+AHqK0h1rEAAgheIC6KkIeCxDAEA7KgugpC7dsQwBAO2oLICS6oDH
SgQANKKsABpa0h0rEQDQiLICaGgMeCxGAEALagogrj3dsR4BAC0oKIAsqXTH
egQAVKOgALIEAx5LEgBQh2oCCJJNd6xKAEAdSgkgiIAHAPCAUgJI0Uh3LEwA
QAXqCCCFgAcAcII6Akgh4AEAbH38diolYdbtBcZAugMAyLrLZilZAS9xCGBJ
rDgAgIi6chCvFe3lJnxcYHyCK+K1MlhxALAywZ0/XhaUys35ZQDf9Cb/aSmw
4mx9//zW1LPfPr+fjvh8CB5M7Gwez+KDHU+k8QDvv97QQ/JdBliRWwaZOpWb
w0sCbvSZ8+/Tv/+K+2DRvXEV8L4Uh6n8syg49PlEiltFwANO5KZ+ga+XTt/O
3aclQDfaUzoyzz2suI+1F53LgBc87o2al8s7+PXIhRGPgAdsOnt4VTNaP69n
fgpADtmJWj1jva24ilMYndeA95ETp1peKp2MQkcvingEPKysfXZLt0flgQze
ThPL8jYV3a448TN16xDwRNLCIb7kB6LiOHUTk4K/U/JvE79U0Ed3Aa/k9whw
GMztlhrVpWE9nrhVd/rdOmEYpb2xcO+5nWz+V9z0i85NwLu2JtagwIXH9EsF
fil2xncX2qrePSbgYXp5G+pB3+b1fqRqRYeY9IwjpY++XftRuc7nlcnIsOje
+Qp451+/adE5epW0O/93799JzXw9Ah5WkL19/mLXTuMgUNpRtt1l4xrY4j1Q
+u+nMMoU8jAsiy86dwHvdJ0tcIDThbjyRp+S290BDvnss+JFZwp4km0SuQcx
1AjBG0q5TzJHfh9Yt/QnD+XmrTHFjFvcBwEvaqzZ4m1YFlx0/gJe6gDNj6e7
HOPmtE/5rDxXEvDSx6pGwDOVeerWzTzwVm52pbPJur2agmktMlql/35kI04P
t2OyzqIbLuAd/tf6BmfExEs+K414BLz0saoR8CxknrF1M8Pclptd0Zyybqwa
ruAdDT0f/A/L9IvOX8CLRy+hfJeT8AL5rCziEfDSx6pGwOsr81ytmxnjv9y8
TNDblQh4XyaYA2MNywQdfuUt4CUilFi+yzjzYD4riXgEPP1jHchP5lsex0hJ
aJM7s25jlrHKzW6Oni9QmtZmTHesOFtzdP7OV8BLfTuYaGtTYfEmn50vE92f
IgFP/1gHBDxZl40twLqNBQYtN7tpRiFX6UlN0QmsOFcmGIjqd7VuE0tdwAu9
JZb4loy6z1f8lvq47n0+OzX2riEEPP1jHRDwpIRW/Jl1G4uNXm62KSoO7rDi
fBp6UJQDXoPUu6bNAa/k47rRWwHvmkLA0z/WAQFPRHxdWreu3hzlZpt3gJY1
64BOs+K2YcfIacAL10zhAt4Q8LIiHgFP/1gHBLxG8UVp3bpW65SbCQZrEXMP
4kwrbhtz0TkMePf10lPAy4h4BDz9Yx0Q8KrFl6R162RMVm62NUZtYtOP3Xwr
bhtt0Sl/yKJIMgQlv+SioaU1+SwR8Qh4+sc6IOBViK9J69ZJmrLcbCuN4DQW
GbJZV9w2zggafYr2cuEwLwA5+ZDFTYNin8Ug4Okc64CAV+q8MR1Zt07YxOVm
W+By0DTWGam5V9w2wlBaPiblfK0v/fIeHpMSP4n3f0jA0z/WAQEv32VDOrBu
nYrpy802QsVZ2Wqjs8KK2+6H1bpdPxk/B+98JS/VAq0HHYcampvPThHvd6sI
eOlj1bnpTfkbSrv0R3+RrrBumqLFy83cg+vfguOyyIrbHA+u/YOOy67jiSW8
9P18+fns5ustCHjpY9Uh4DW46wTrdqlbp9xsjitOgc9v5zEL/jTfjN3B8GNR
ZakVt7kcZfuAV3hDnlDCS38VbVE+C0Y8Al76WHUIeLXuesC6XT1QbkYd7ufj
kuu+bd+tW5VtklEot9qK2/yNtYeAVxbxjvGgrsmn15N4TnEg4hHw0seqQ8Cr
Ejx360b1s2C52aaJeaeM97RuT7bhe74BK8583H0EvKKIl/9lsDktvD/r0nx2
iXifBDz1Yx3wIYuIjxDrRnW1ZrnZnFWcSt8/h7t8N3yfN1t2xW1uRt9LwDv/
YvR3Kx+yEnyV+3MuvwAXuYJEwNM51gEB705wTlo3qreVy83mpuJke2bdgOf1
at5ova2CFWc+BxwFvKaIV/EuauqMa95hvY14BDydYx0Q8IKCE9K6UQYWLzeb
j4qTcLhSV/jz7dO69b8M0M9dsOLMZ4KrgFcS8e7u5Ep+XiK7dXW30N1EPAKe
zrEOCHhXwYlv3SgblJud1ynxfft2/0mKu7dor5+/sP5QbbB7ffRwb6y4neF8
cBbwiiJe/U31WU2r/YxEsFUEPJ1jHRDwToIT37pRZig3L+4mxunC3fVaXPwe
vPN1v0enZl+461hTrLgXq4nhLuCVRby6kJd3nrUBL3AKBDytYx0Q8N4Fp751
oyxRbt55mh7H2+2Ce2X6QxbHC4AWb9d66lIXWHHvTKaHw4BXGvG2kpRX+XGM
1k/qEvCUjnVAwHsJTn7rRhmj3Jx4mSGPjItvWZ+iPQbFvsuSFXfFijvpP0Nc
Brz6fHT3iLWaM2sKeFmPUs74TS/hgYB35HGMXoJLwLpR9ig3V/bzJPMBd5mP
STl8+UW/p6mw4oJYcVfMEzhEwDvyG/CoNXcoN0HGsyXn8t2W/xw8m4t4rLgg
VlwQswXeEPCORgp41i3ygnITZPoXQcbdd7vcgGdwJx4r7g4rLsh0xQEBBLwj
pwGPfSOCcnPHrOKcPv0aWUj532SReUlQCCsughV3h4wHV5q+P/b0h3n7d9H+
xTVXLR7wrl1k3SJfKDcRwSWm/qr53zCbH/D63obHootgxUXYrDgghIB33x8u
Al6wi6wb5QvlJs5g/gwe8Fhxcay4OOYPnCDg3feHfcAL9o9xm/yh3CT1nkUj
BzxWXBIrLolZBA8IePf94THgGTfIJcpNjq4TaeR78Fh0Say4HMwiAHcoNJko
Nzn6TqdRP0XLosvBisvBXAIQxOaQj3KTqeuMGvA5eCy6TKy4TEwnAFfUmnyU
m0xdZ9SA32TBosvEisvEdAJwxc6Qj3KTqXeAUfou2trvyYwj3eVjxWViUgE4
YVsoQrnJ13deZQSzdMCzuftO6VXmwIrLx7wC8I49oQjlJl/vvx1OH6e9xrN4
wDv9escPz+q90ARYcfn4ax3AOzaEIpSbIt1n1/M8Qu9B7i7gnW7hU3tndkcV
LsKKK8LUArCj1pSi3BSxmWDna3ElP2pvy76w4oqw4oqwpQPYsRWUotyUMp1j
x3vqIj+al+xOWHRFWHGlmGAANraCcpSbUo7mWP43WajhAkspVlwpJhiAja2g
HOWmlKM5dnjAXfRba9U46o1BsOJKMccAcDGhAuWmlJdpFrwx79m7FS66Yiis
uFJeVhwAO2wCFSg3FSxn2umqnek9eFTeCqy4CktMs+sn5o0vzwOOLLEJSKPc
VGCm7eiHCqy4CjPPtGiuu/7ofJU04N3Mm4Aayk0FZtqOfqjAiqsw50wLfSY+
cOk99M+IeVjNnJuAMspNBWbajn6owIqrMN9Mu95Cm8hsl5in/4RLwJH5NoEO
KDcVPi6sW2SDTqjAiqsw2Yo7p7vsRxyd78BV/PpBwBfVHWDWDZlyU2emclON
Tqgw/YpTOrV5JtuzMt3tThmP63hYhN4OcL3TdRqznpe2ecpNAzqhwsQrTnWf
nGSyXd5pLb6brv0IwIB6BrxxN5iTKU+qg0nKTRs6ocKUKy64QxLwrp4Pgetv
53d4eaMWC+gc8ObYnyc7nW7mKDeN6IQK8624PtvjDJNN6uIbF/Eq8JjBwZkE
vAl26TnOorMZyk0zOqHONCuu58Y4wWSr/mzFFXfi5eIxg21+TNqndRt2hgFv
ju0amT4urFtkg05YVuctcY4VJ/L+7E4wK06LxwxK+PGnRJevRUozD3hj7joo
NkGtEUE/LKjoeojci84w006X3Zrq5uXCVMvB5jP9YwZ/naD27ZdPR38+eAh4
xLwVOCo3pvPPUT+gC6udcI6Z9kheTcpHwLu3wmMG+wS8V4d4uKTpJ+AR8+Zm
Vm6czb85yi5y2O6Bc8y0U8BrKpqXK05PoUYOb43HDPYIeO896SDregt4xLxZ
9S43LfNPs3kfF3qvBSsept4c0+wUHgh48pZ5zGCHgHe6ZfSp+FJZ9MqN1wIL
G/3KTePM05+Fc1ReBPmZdHNMM8V78HzcJWVunccMqgc8lzcl+gx4xLw++nR1
j8tWgrlOeRb2rLwspZ78TLdpLhSfkoNkwHMZQnpb6TGD2gHvFJWd/BHhOeBR
m1R162fdWtM+pfpOwW7Fl3XUjbftbo5099MxOQg+JsXJgyxsLfWYQe2A99g7
8OlrmvkPeEPvT2717GTFciM4ezrOQpOAxzpS4nCvmyfgnZJDQwLxdn+UB0s9
ZlA14O0H3zvwMGOtLxQrXU9wuOnh3QwBT2nS6E9EAt5MHO51MwW801ur1e/9
vX8g1+H1JRNLPWZQNeA93k75lHXN360m4K3GMN2JlRv9Gql3fK0+CbwQS0md
t72u2+zq5nChqapAH2quv4tLVpZ6zKBewHu/fLdz9deE84AHWZ17WH52dZso
HTNe+wHvX4gFpc7VdjdZutu9X2sqziHHG/kyf/uVKpP//tGQPG0t9ZhBvYC3
T87n23/j6n4Ajb/4nOx1OOncz/JTq/9c0ZmghgGPlaXEw6Y33+W7l/eMVxBF
qtLdtkbAm+wxg4+qFXf6Kf7z4Rka/WNvzPdRC/ONDkGd+3n4dBd/3YaX7lmI
WVzdmO97s6a73fs7rVnvfL2/b1j4zuyCAW/0xwyaBLy9D6/ZWOrDQSLEyw3R
ziHbdNc6qcyni3LGE2xp6LVYZf1Y7X6TXb77EeeC1fb9/a/bmJfx0YxHtOyu
EPCWesygylu0+5W64DGFPhwkwk/Ag5L+Xa2e7voTnbWdy7GH/luHh4AndCpm
flTk+GW6R6ReP1NV9Zm4rrJCwFvqMYMaAW+fJHcne7iiaD09ZMsN6c4Pk96W
nE7e5opcY3pmPG+9OLf+AW+yy3db6MOJJ5GAt//ubczYgw0Bb6XHDMoHvNQs
OoXep9wr1xHcIqr3t/G3JV+sOnnadHfXqsrDGF/Ec9KdkzHZ/SZLd9v12bnB
n5vy2vK7u0UC3jqPGRQPePHLd395SdcftbAKeFNsTi44SXfCAc8JMh4uGve9
6oGY7/Ld1hbSAl8MSsC7schjBsUD3iPjZEUukP4+SHPfSm0U+VsZFUcJ6U6X
XNvIeHNIdqxSwJsy3W2ZAe8mgAkGvNyfYQPetsZjBmUDXvL+gV/aL5Aeu7f9
wxoi20XRJkbFkWXYn9fJU19u/E8IoRb2L9CsOHH5XSob8CRXnDMtAe/0ABAC
XtL0jxmUDXiP7PNt/KjFr2Z/+/mhb5H2i+wYFTsYRUeEbTcqpjufU2HYjLdZ
T5WZSO11IgGv5UTwslrA22Z/zKBkwHtmd1HzRy0+v3Ld6zilR7hSCnh1v8WO
lW+SdLeNcPluJ9fdZLxBVXdge8+T7vRMfw/eao8ZFAx4dw83vnnhhmfRfPXz
z5F6/8/NGreO6o0r8icSIsz7bcV0txs54G0OZs642vut7XdJd4pWCHhLPWZQ
LOA9i49zuBpccqnz1EuP8iNESGW88tel6BTw0FfXqVJfbkYc8nkz3hDd359s
d4mkOwKerBUC3sdKjxmUCnhll+92xwue+ZfgTuf+epdW5HsxbPcQik6Sky4S
nieDDvbgGW9zM508i3dRt14i3XWwSMBL/PCYwZPId5NFHT71k/nr1/dkv97t
lXrSoOeMt/KW5qpnSHc/qQW8novO1bxyJV3OTP+k6vfayxg1gWTjMYMV0g83
vnHq7ZxLcK9M+Ez9ly3M/1r0s6964K03SHe/TZHxNn9zzJaraLeR7noZNIHk
4zGDxTLeeo4o+7KP10czjif+GjXB78Uwrzjb8kXHW5X5apXolPBwSo2E2s+K
88DhoiPddUPAi5z+mo8ZLG5zece+3N5u9wp+ot8Y4qHibC63XFWZU8WobaLz
wclZNZI7BVacFbeLzsN8WMf0Ac/WeAHv+LST9p/4JbhfETqU4l7pWuSjFi9O
Ks7meAeWkj9JjJqnMBM8nFg76RFysug8z0Ypns/RyTRYCgFPFd0b88zai6Q+
avHiap9xnoIqFOV/u0bqp7uBxuxK+kT8LDr/k7OC/5PyMwGWQgJRRfdG5F/e
fCq8uqvdZohQFFd0Cg4LjcDoOzlDEQoD5qrEDzFXk0Y5C1dDD0gh4EU8srcm
wY9avPO27ZRmJNute6CmvrVZLd1tcwW8TeV0WHEmDTaku+IAUwS8W1/vz8be
gX29h6vWLT43n+q6o7Gx+2lJ21koFxqH59xI7YwcLjpXK06qPeYcDjQgiIB3
J/MzFK+rfLIftXjn+W9Mqbpj9eNEjyH2eeaN1E6KFbfsorNuFyCGgBd28/i7
wD/8eo6K+Ect3nnOeDvzqjFiidm6jaznLmiheVLOF535ImLRAc4R8IIKnmOs
80C8oCH2JfM6MkSJ2fUbUOcdUU15jFlx6yw663YB8gh4QUXfRPbqQ6WPWrwb
ouKcUFyuuo7jQP1SQf/Uhlt0JLqg4cYRaETAC8j5eEXo33frnDl2qhVqylVk
7LSGb9zOytFlNrDiWHTAcAh4g2K/Gku8xOgO3LiFOVOXEyQkDMdsxQFAM/Yu
/3KineLADX3lJZPyCdoMHBowXgAmwD7mVmYw0B216dPdZvBAPFacWwwQgMmw
rbmSPxy6Q7bC5bud9Gkmx4UV5w0jAmBWOfsbW5y2iiFQHK9F0t0mfKb5I8KK
84BRALCCnL2OHU9ce4erDNayAa/2ZCtGIXe9zd3/FuhzAAvKLzrsgS3Ee1hy
pNZ5f3bXdrKNPZ85E2rGEUd0MgBs1B0d2l0qc8yl0t1Wf76yI5g/N6qnx5ro
VQAIou6069mHAgdfPODlnbLeIPacLROjGwEgR9FuyZ65M+yx+hda7f3ZXckp
9xnE0skjO3/GRacBQJ2KurPaLuqnc2ped8F0t+Wetck4lk4n7UnlE/0DAFKo
Oy/Ou6KsDQS8mxM3H0rn06wzegMAtNXttKPvt2Odcm6T1nx/dnd/4t4GtHru
WU0/EWueNQB40LID+9+KJzivdAuXTXdb+Nydj2njnPRzIkGznhcADK19c+65
Ucu2tmfLK8RaS8B7+5lmWOuM1dpuLQcAvKhu5j5Zd3lCuM2LB7ztnPEGHdxt
yRX3McK4AMCsrCuAIuuurXE+hcXT3ZYOeNbtK9Zh5huy7l0AQJh1fWhl3X8y
fp9OKN5Yt66fux6YqR96rQwt1v0HAKhkXUASrLtH0ccC8ebO79NcMuL2Wj01
rPsGAKCIUtLHx1zvTmY6nCPvU39hxQEAMJN1inL4BAl4AABgUnPHvNipEfAA
AMDU5ot56TMi4AEAgNnNlPGyzoWABwAA1jB6zCtoPwEPAACsZMSYV9xmAh4A
AFjPQBmvpqkEPAAAsCT/l/LqW0jAAwAAC/MZ81pbxZNSAADA8vzEPLGWEPAA
AMDyPGQ8yTYQ8AAAAP7CKubJvy4BDwAA4E3PmKf1WgQ8AACAC+2Yp3t8Ah4A
AECIXgbTTo8EPAAAgAjZMKYe7b5ehoAHAAAQ1x7MOkW7rxcj4AEAAOSoTmj9
ot3X6xHwAAAAMpVeiOt64e7tVQl4AAAARXJim020+3ptAh4AAA5RnP2LRzib
aPfVMgIeAADeUJ9H4THdbUwgAAA8oj6PxVG0+2oQEwgAAFdOxZkS7V/XgBec
H/EfAABgihI9lt5v0VakOxIgAADWKMIDKU13AhlPKeAxvQAAUEMRHkVOhFOJ
eQQ8AABGQxH2rzS2ycc8Ah4AAOOgDvtXHdUkMx7pDgCAcVCKPWu/ECd5KY90
BwDACCjIbkkGM6mjEfAAAHCPguyTbLQTPjLpDgAA3yjLDumlO5njk+4AAHCM
4uyNdrQTey0CHgAAXlGc/egZ7QRel3QHAIBLlGgnrKJdaxuYOgAA+EPA88BD
uqtsCVMHAABnGtMdhbqdn2hX3yomDQAAboikO2p1NZ/R7l1uC5kxAAC4IRXw
qNgVnEe7d/IZDwAA6BBMdxTtIv4v3F2l28xEAQDAAQJefyNGu3eJ9jNLAAAw
JZ7uqN5xo0e7dwQ8AAB8IuD1NFO621VmPAAAoImA18d80e5dWcADAAD6SHeq
5o5273IzHm7Ep8rckwcA0KK0gtzU6qpDrGfNDrmbNMumu7r10s76vAEAwjRq
RXvAuz30pNY861183li3Tp7sitBm3VsAgLRuNUEv4AVebHBzn12++Lyxbl0l
tVkfmCl9ltvHsGMBAPPpsOefKkDPgBd4+UHMcRbCopPGunG5xKd0ivGK+xhn
aABgdIabfM5dVJ2b5M2Ibe5pxP6Rm7MFvl7a0Yr78DpAnTwf1f327fN7+vjf
P7/9/o3Hs6KFhyNUtODuZCsac/v7Db3YfFKAS3JL4reqZrTeJu/kRJSM0k5b
Q/SS3PSsPzuRz6Z4OJFJCESTaFKqDnhFDcs8MAEPUNa+AqTbo/U5yPYzFT9Z
wfYbNswtnz3mahKqfv64/UzFz9c7mWhyH0oqAl7kkl1U+ugEPEBH3WTv0rB+
D7poWfe6LStpZ8+WjMhJ7zmcZnfpTu9l6zqh/2CZEYsmN3mpMODVhrtfEuGI
gAdIq5jjfZtn+SQzh53jZFxG53MEDUc2ku46Lz2f/WOjMvOEEk3wt0sC3l1M
uok84TAYew21gFfyi74DnPY9mSJRuLALD69Z0f3afTKm0q6wa6dlwDu2xLjH
fA7QuFwNn/mA+gl4x1a57jR1LZnnnLBC1Sw74IXiWlZ7Lr94X1QJeEna92T2
D3g5s9S2T0aTf9rWLf3JQ5U5KZo6HV5R5CWWZT58HoYyme7MV19+H061Ihoz
z7H2BWpnZsArSGkZv373OgS8JO17MrsHvMAfDqUjr90n48g8VetmHvgpMVf5
s0fpJQTPZXEmw+dnHDMDnoOWDpCWJbVmnmP9vB4gL+CdSmhNLcw5EQJekvY9
mb0DXvB9/MKh1+4T9zJPz7qZYd7qS5BSD484XuMS7G2l+aAkP925afJPY3Vy
pdbMkzpATsDLvP6WkPFKBLwk7XsyO/fE28s9Ho/KV9buE8euZxBk3cwYt/Ul
SKq3xx2v0TX2/IgrrijgOWv7T8N1eAEHAS/5Nm9NU5LpgoAXpH1PZt+eeB4y
3bMy4Wn3iUsfGazbmMV5cblT3fMTDNkEKkZh0BVXmu5cnsQvw3V+mmjmqQp4
qSOUNObT6DEpJb/ou8Rr35PZtSfOiS75F0DyMCp94sxHBus2FhiluAQVjcI0
QzaNzBEZesVVBDzHZ/PToAMR1la8Ttcnaj5kkbqJTxIBL0n7nsyOPRGYenUJ
T7tP3PjIYN3GYgNVljs5IzLZqE0jOS5Dr7i6dOf7nH4Zd1AOWorX+SajZH4L
/IOuxY+Al6T9ln2/ngjOvKqX1+4THz6irFtXb7jKcic+QPMN3ExmHbjqgDfI
+Y2/K9bVntD94+F6mQp4rQ+hLSL5hRMEvKoDdOuJ94n39kI1rz97wIvPc+vW
tRqxrNzJ2JbmGbj5TDZwLeluoMU49nhJZZ67YlkU8LRrHwEvSfuezF49cfs6
FSeo3Sd24jPcunUyRqwpcYmNaY6TnNccA9ee7oY63WG3Su3nkiUCXt/bkwh4
Sdr3ZHbqicjLFH478qbfJxbic9u6dZLGrSlx64zgNGYaMpGAN9pJDziCzZkn
UbCkA174C2gz20XAS9K+J7NLT8Qn3eF/zWmDdp90F5/Y1q0TNnRBSVpnHEc3
00hJpbsBT/2nkYayPvPklSq/AY8PWYRo35PZnrHTjSr6YE/GcGj3SUfxrrVt
m5IJCkrSamM6lvlGRzDgDdsHt8Nq3a6jrOJ1SVX54Ub6QxYEPF3a92R2CHji
X2mi3Se9RJpm2i5dc1STpDUH17/5xkU23Q29KgcY3PxSdy5zeeVK+jEpBDxd
2vdk6ge8rL4uGsne35+r4q5dpo3qYY5SkikyAa2btqIpx4KAd+J6lIsqXcX3
LiUvp0g+J+Xm0Rjh1yLghWjfk6ke8DK7umTaafeJvruG2baqj5lKSY7IPLRu
2kJmHQWNdDfBwvQ71qWZpfQ6XuFXlbWVQgJeM+17MrV7Ivv4BTfiafeJsmDL
rBvVz0x1JF9kUlo3bX4T9zwB747TFVeeWcpuyCu9IaqpJhLwmmnfk6nbE9lv
4F/EzkC7T9Tcnax1u7qarI7ki8x266bNbO4+J+DFuRv9msxSUstynjp2ukJS
XxkJeM2078lU7Yn6fBc9V+0+0XF3omYNMjJlHcnHNOhphd4m3cX5mgN1mSU/
4mU9Vrbi3r7kcQh4VbTvydTsiZZ8F2uNdp8ouDtJg6ZYm7iUZGIydEAnv7Di
HE0GkcwS+d3M7w241Oaaupi8m4+Al6R9T6ZiT7R+FkLmI7eBhvQe8bsT7NoI
Nyg3O6aEHlbcO1bczsWUaMg8WREv+4uhQpdfsitjoLYT8Kpo35Op1xNVg5P1
lB7tPhF1WQg/9Xpxjyg3L8wNDcFeXbljWXEv9hOjKfNkRLySb/68fYut4qm5
wV8h4CVp35Op1hOVY5OT8LT7RE5wKXR4Xc8oN++YIbKC/bl4l7Li3hlPj8bM
k4x4pV/tLvFQ2duXIeAlad+TqdQTxd8vG/5Nyb8Luke84FrQfckRUG5OmCSC
6MwrVtyJ5SRpzTypiFca8EKHLBB/BQJekvY9mTo9UZ/vchKedp8Iua4GzVcb
BuXmiqkigm4MYsVdmU2V5oCXKGM1AS982Lisqk7AS9K+J1OlJxqflZ16EKN2
n0i4rgilFxoO5SaICdOIDrzDiguymTACAS9axuoDXvgQH7evVNpOAl6I9j2Z
Gj3R/F0oiYSn3SfNrutC/jWGRbkJCmym9E4Jeu8OKy6IFQd72vdkStxj+XGM
ceIXoc8ZUbtP2gT7R/QVxka5ucPMqUa/RbDi7rDiYEz7nkzxgJf1oJOk6I14
2n3S5to5ggefAOUmIri4rBvlHT0Wx4qLYMXBkvY9mdIBTybfXe4DuG+zQp80
uPaMzHEnQrmJYwqVosfiWHFxzB+Y0b4nUzjgSeW7aMLT7pNa125pPuSEKDdJ
TKR89FUSKy6JWQQgjl0iB+UmBxMpBysuBysuBxMJwB1qTSbKTQ6mUw56KQcr
LgdzCUAQm0M+yk0mZlQciy4TKy4T0wnAFbUmH+UmEzMqjv7JxIrLxIwCcMXO
kI9yk4m/GiLonHysuExMKgAnbAtFKDf5mFd36Jl8rLh8zCsA79gTilBu8vG3
wx26JR8rLh8rDsA7NoQilJsizK4rqnARVlwRphaAHbWmFOWmCBPsig4pwoor
wooDsGMrKEW5KcUcO6FDirDiSjHBAGxsBeUoN6WYY++4wFKKFVeKCQZgYyso
R7kpxRx7R2+UYsWVYo4B4GJCBcpNKabZO7qiFCuuFCsOAJtABcpNBWbajspb
gRVXgWkGLI5NoALlpgIzbUc/VGDFVWCmAYtjE6hAuanATNvRDxVYcRV0Z9rz
PCjvP0/hFwNQg3JTgXJTgZm2ox8qsOIqqMy0aK67/nx+l3nZaXz/JP2iH8pN
BcpNhY8L6xbZoBMqsOIqCK+479u3S357PLP+GTHv5fNbqNMAHZSbCtOXG6VT
Y7Jtyp0w65ycfsUpkZps3z8LM9sl5n37rH7xiezXP7/96B5U4caAQtTcChOX
m+uqET04k02xE1THztas56VNZLKd0112Pvn8dvzFR93rz+PVIVzSLMONAbWo
uRWmLDd3i0X0JZhsXQPeNH085Ul1IDDZTrW18OrTKeMtfR3vvSeXz7q5uDGg
DTW3wmTlJv7XkOgLMdl6B7wppygytU62S90sLprtR5jF83Hoh6d1e/zjxoB2
1Nw609Sa5OVu0ddistkEvAnm6hxn0VnjZDtlkrpyeS7Ta168InsU4sYAEdTc
ZSXzgGw9/bgQO/RQDAMeAWkprStO6uIbF/EuUbkosayIGwOEUHMXlJkEVAOe
2HFHYx7wFu77tTTOtOpLKFcU3MfegcfcwvNSwrgxQA5ldylF0Y6Ap8FDwCPm
raBxpom8P7sTzIoj2k9/78BD1l373cM73BggiLK7iIpoR8DT4CfgEfPm1jjT
Tpfdmi43XR5z0XKw4TzeTvkUPJa9snSLGwNEUXanVx3tCHgaPi7kjmw/yvCj
cZo9jjOEgFfn/fLd7r1jF3y3Oo4bA2TplZubl6OgdNWY7qRGqvM0c85hwFt7
QLrq0+HtK+4U8JougFwupzwbDjaWPWY83/4bnpcSwY0B4rpVXgpKT+3RTi/g
yRx0WD4DHquyg2693T7HThdAhg54j+Z1Udnm/dLl6QawY2/wUYt33BggjoA3
GaloR8BTonQ909ug46RnP4sHPMlS2/1ailXA2/vwmo0PfbvqlaUgbgwQZxXw
qCMaZNMdAU+J84DHEGkYK+Cd3uGSLLWLfKRxv1IXPNljh6x5/38QNwaIU7qe
cPNa1BFdDgNezwk2CgLeagzTXeUEO9ZHwbuhFnlTcr+d7O5kD0lmkcSbYaYb
A/wg4E3Df8ATOOL4NEKvt3HHS+fulZpaUu8krvixgj1d3HfaKfQ+OzbNs5lu
DPCjZwmmlGhzVei5fHfHc8CDrJ49LLnihN5JXPDBIPHLdz/xUYsQbgzQ0LkK
U1A6cFLrSXd3fAY8iOvcybLz6nDxrapEHkr2MldRHhknW3GBNPCdtsef4fMz
NwboIODNx7zic/kuQrxzSHcO2aY7kRX3nkOKq+SxXmf+9ivGJP/9oyF56rk+
3Dis/AJpMuDlH8otbgzQwEW8WfkJeEInNA8/AQ9KbAOe1GHfa25BeKhKd9v4
Ae+Rfb6lH7XIDHhj5xluDFDQ/2ILVaYnAp5DsouOdOdN/67WW3Hvb3hllcv3
Ml14HWbsgPcsSBSlH7X41TP3/fkoGiOvTG4MGHvWZTC/iEetUVJd+ltGpP+f
DCMS7CXSnSvm6a5lLv2oj8F3Y98r722EyLgC84jW3KFL7d3DjcMKbzlLBrzt
1SeD3+7IjQEaPGQ8io6slnQnGPDkTmgq5gGPFafBpJMFV9yPgBcPG49IgXum
Es4zET8GLrXB7yaL/8b71apUKssJeL+ikZ8+qcWNAeL6X3Wh4qhqTHfVA8Hl
u3xSfWWV5PHOqntlV1zyYwKRgLf/7u1Vl9QD4raRS23Z5bvd8YJn/GpV/hW8
od+ifeHGAHFkvGkkO1ap7pPuSon0WP5osuKUzJHutsu9YeGfmwLa8ru7UUtt
5LvJog6fG43+eu49eGO+P8uNAX2Q8UaX35/iAe86eQh4SR0CXuY/RjU/6c42
4GV90nPGUpt+uPGNU29HLgC2961n3BjQh1WNpuiIqOhGqYBHuqvW3m8Vg8iK
kzJTutsyA95NKRQMeLk/HkptxlvPEZnP9Jj7OXjcGNCNVZmm4jRq6cDGnifd
NWrsvbrhY8W1s+pAvRXXEvBOXye6SMArbnN5xxa9yohf3MCNAT15y3gUnTiR
fmv7XdJdE/GAV/2LrLhMtv0264obL+AdP7nZ/nMXz5L34P1O1wO+UevkxoBh
Zl0zhxlvlj1MknhfVfz6rLWmM6mMV/66rLgy5t018Ypb7VpKvpxP0b56b7iL
eNwY0Nl1D+m5jVB0kpx00cS1pj9WnGfJbb9XM2ZecQS8OzkB7/V50uGelMKN
Af15znhz7Wpl/PSM7QyZT7A/u3Wpn3nlTc6e36slk684At6duQOerWVnnfl+
4mRfdcJVb5jPjSnZZrzN2Rwz5yfabWusuGVLbVJOwHtdByPgFVl51plXnG35
ouOqynw1af5aY4UV54G3RWc+JfpYudTGFXxV2YD34NlafNZ5qDibvy1XW875
Ool2U9YaQ0462eH00+Zw0TmZDH0sXmojcr/JIq/38I5Z52eTcbgDy8o8QZNz
9DMNVuCkt93ORkFuz9HJHOiGUntn7ufg2WLWbc62Gs8pqE7+GbkqNBPXGg/8
9LnnyVnN+Un5Gf1uKLV3MgMed99VYNa9uNpwnIeiHEWn4K3QzF1rnHDV8/7n
ag7/Z7HsiqPU3kkHvGW6Qhyz7p23nac0I1lv3cM0dVu40LjibRTGWnHVDbZr
raOx7oxSi/6YdSc+t6DquqOxsftpScMp+MoVi3M4Fq5WnFR7bDkcZWBuBLwr
z9Vfqu5Y/ZjzPLgrczsu5kuGRQegDgEvKLIjOdmUzKvGWCVm53xMF+d8dMwX
0WSLzrpdAJbmP+ZtvuuOH/7HETv/I2W+rFh0ANBuiIx3QnF5N+IILm64ISPR
nQw3ggCWNcd+NXdNuZpj1JY1wdhNH+SuWHQARsTeNYr4SDFYo2AQB8KiAzA6
NjHnGKDJMKD+MUYA5hDfzdjTrDAiE2PF+cSgAJgPMc8PRmEFrDhXGAgAc6Po
2KLnV8OKM0fnA1hHTtFh6xNEby+OFdcfHQ5gWRQdbfQw3jEfOqCTAeCFLVFW
Zn/Spctieohj0QHAHXbIRvkdSB9iY8VJYNEBQKaiDZM9c6PH0Ib5U4FOA4Bq
pVvoUrsonQNxTKo4+gcABFVsqvPtq3WdMGVXQBvTbGtbcfP1BgCoatxyB9p1
2890oJOFW+tMwvYzHet8AcAnqd3YfGee5kQwN42JajJXpzkRAJie0o4ttZ87
bBLQotuUrpvePlsFAGjRc2/3wLq/sTrrFWDAussBYGnWRUCFdacCt6wXhwrr
TgUAZLEuF2WsewtoZb2Gylj3FgBAHmUF6IwVBwBwhYIC9MSKAwAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAODN
/wfbTNNb
     "], {{0, 369}, {843, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{167.83301707779876`, Automatic},
   ImageSizeRaw->{843, 369},
   PlotRange->{{0, 843}, {0, 369}}], 
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
     "], {{0, 341}, {863, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{177.0749525616685, Automatic},
   ImageSizeRaw->{863, 341},
   PlotRange->{{0, 863}, {0, 341}}], 
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
APDwXzpSHaM=
     "], {{0, 367}, {869, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{186.5483870967738, Automatic},
   ImageSizeRaw->{869, 367},
   PlotRange->{{0, 869}, {0, 367}}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["\[CapitalOmega]", "1"], " ", "front", " ", "speed", " ", 
  "propeller"}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["\[CapitalOmega]", "2"], " ", "right", " ", "speed", " ", 
  "propeller"}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["\[CapitalOmega]", "3"], " ", "rear", " ", "speed", " ", 
  "propeller"}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["\[CapitalOmega]", "4"], " ", "left", " ", "speed", " ", 
  "propeller"}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["\[CapitalOmega]", "H"], " ", "houvering", " ", 
  "speed"}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["U", "1"], " ", "vertical", " ", "thrust", " ", "respect", " ",
   "to", " ", "the", " ", "body", " ", "frame"}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["U", "2"], " ", "roll", " ", "\[Phi]", " ", "torque", " ", 
  "respect", " ", "to", " ", "the", " ", "body", " ", 
  "frame"}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["U", "3"], " ", "pitch", " ", "\[Theta]", " ", "torque", " ", 
  "respect", " ", "to", " ", "the", " ", "body", " ", 
  "frame"}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["U", "4"], " ", "yaw", " ", "\[Psi]", " ", "torque", " ", 
  "respect", " ", "to", " ", "the", " ", "body", " ", "frame"}]}], "Text",
 CellChangeTimes->{
  3.7714541269090757`*^9, 3.7714543577440186`*^9, 3.7714544647464223`*^9, 
   3.771454546471277*^9, {3.7714555625718746`*^9, 3.7714556054498854`*^9}, {
   3.7714556380019307`*^9, 3.7714557304188995`*^9}, {3.7714557656378355`*^9, 
   3.771455776603939*^9}, {3.7714558683388495`*^9, 3.771455906182*^9}, {
   3.7714559362514925`*^9, 3.7714559595663013`*^9}, {3.771455990292899*^9, 
   3.771456001403268*^9}, {3.7714560407066793`*^9, 3.771456115895269*^9}, {
   3.771494614340152*^9, 3.771494636066578*^9}},
 TextAlignment->Center,
 FontFamily->"Times New Roman",
 FontSize->9,ExpressionUUID->"04558071-56dd-45f2-a2d5-45b6609e036d"],

Cell["MODELO DO MOTOR", "Text",
 CellChangeTimes->{{3.7709255543726683`*^9, 3.7709255613799477`*^9}, 
   3.770925593569269*^9, {3.7714625135615864`*^9, 3.7714625238776093`*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,ExpressionUUID->"d4b1b2b1-66be-4fdb-9f4f-a9e96a1114cf"],

Cell[TextData[{
 "(",
 Cell[BoxData[
  FormBox[
   SubscriptBox["J", "P"], TraditionalForm]],ExpressionUUID->
  "99768218-a22b-4f60-a8c6-8b4c420eef17"],
 "+\[Eta] ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["N", "2"], TraditionalForm]],ExpressionUUID->
  "6978b1a4-d15b-412b-abfc-2bac805c9b71"],
 " ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["J", "M"], TraditionalForm]],ExpressionUUID->
  "e009f731-12de-4515-bf15-f08210d144e2"],
 ") ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["\[CapitalOmega]", "."], TraditionalForm]],ExpressionUUID->
  "ecb0c99b-506b-487c-b133-6d7687e21282"],
 " = ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{
     SubscriptBox["K", "E"], 
     SubscriptBox["K", "M"]}], "R"], TraditionalForm]],ExpressionUUID->
  "ea22e377-c32c-43dc-85ec-c359c4eca1d0"],
 "\[Eta] ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["N", "2"], TraditionalForm]],ExpressionUUID->
  "935810ed-a651-4cc6-aae7-06fad4b67715"],
 " \[CapitalOmega] - d ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[CapitalOmega]", "2"], TraditionalForm]],ExpressionUUID->
  "59a5046a-5713-47c5-9bf9-2ce9ec175047"],
 " + ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    SubscriptBox["K", "M"], "R"], TraditionalForm]],ExpressionUUID->
  "3c1aac79-45d3-4f9c-989d-5e06281cd79f"],
 "\[Eta] N v"
}], "Text",
 CellChangeTimes->{{3.771445476932877*^9, 3.7714457075288763`*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,ExpressionUUID->"2eeced54-6417-487d-9b7e-7a2eb1134e8a"],

Cell["MODELO DO SISTEMA", "Text",
 CellChangeTimes->{{3.7709255543726683`*^9, 3.7709255613799477`*^9}, 
   3.770925593569269*^9},
 FontFamily->"Times New Roman",
 FontSize->9,ExpressionUUID->"943dc5b9-7b3f-4a21-bf89-e51d4ba0eecd"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "eq1final", ",", "eq2final", ",", "eq3final", ",", "eq4final", ",", 
     "eq5final", ",", "eq6final", ",", "eq7final", ",", "eq8final", ",", 
     "eq9final", ",", "eq10final", ",", "eq11final", ",", "eq12final", ",", 
     "eq13final", ",", "eq14final", ",", "eq15final", ",", "eq16final", ",", 
     "eq17final"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"eqssysmod", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"eqssysmod", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"eqssysmod", "[", 
       RowBox[{"[", "3", "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"eqssysmod", "[", 
       RowBox[{"[", "4", "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"eqssysmod", "[", 
       RowBox[{"[", "5", "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"eqssysmod", "[", 
       RowBox[{"[", "6", "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"eqssysmod", "[", 
       RowBox[{"[", "7", "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"eqssysmod", "[", 
       RowBox[{"[", "8", "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"eqssysmod", "[", 
       RowBox[{"[", "9", "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"eqssysmod", "[", 
       RowBox[{"[", "10", "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"eqssysmod", "[", 
       RowBox[{"[", "11", "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"eqssysmod", "[", 
       RowBox[{"[", "12", "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"eqssysmod", "[", 
       RowBox[{"[", "13", "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"eqssysmod", "[", 
       RowBox[{"[", "14", "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"eqssysmod", "[", 
       RowBox[{"[", "15", "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"eqssysmod", "[", 
       RowBox[{"[", "16", "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"eqssysmod", "[", 
       RowBox[{"[", "17", "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eqfinal", "=", 
   RowBox[{"{", 
    RowBox[{
    "eq1final", ",", "eq2final", ",", "eq3final", ",", "eq4final", ",", 
     "eq5final", ",", "eq6final", ",", "eq7final", ",", "eq8final", ",", 
     "eq9final", ",", "eq10final", ",", "eq11final", ",", "eq12final", ",", 
     "eq13final", ",", "eq14final", ",", "eq15final", ",", "eq16final", ",", 
     " ", "eq17final"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eqfinal", "//", "MatrixForm"}], "//", 
  "TraditionalForm"}]}], "Input",
 CellChangeTimes->{{3.769715158725037*^9, 3.7697151623435383`*^9}, {
   3.7697152175864086`*^9, 3.7697152983229237`*^9}, {3.769715337450314*^9, 
   3.7697153668079815`*^9}, {3.769715466563672*^9, 3.769715508130222*^9}, {
   3.7697155421580563`*^9, 3.7697157715902824`*^9}, {3.7697191298750553`*^9, 
   3.7697193826064205`*^9}, {3.7697196632377057`*^9, 3.769719666684967*^9}, {
   3.7697384682380743`*^9, 3.7697384695654454`*^9}, {3.769738532638795*^9, 
   3.769738534798457*^9}, {3.7697389111511946`*^9, 3.769738912516963*^9}, {
   3.769759999863204*^9, 3.769760000481139*^9}, {3.7697606192312994`*^9, 
   3.769760634445753*^9}, {3.7697734201228037`*^9, 3.769773420499255*^9}, {
   3.7697734812550745`*^9, 3.7697734821212254`*^9}, {3.769773610070675*^9, 
   3.7697736340411425`*^9}, {3.7697844618526464`*^9, 
   3.7697844632868123`*^9}, {3.770562847252463*^9, 3.77056294829699*^9}, {
   3.7709123296848664`*^9, 3.7709123583764668`*^9}, {3.7709216618510666`*^9, 
   3.770921663937518*^9}, {3.7713296419109926`*^9, 3.771329643518695*^9}, {
   3.771329734170114*^9, 3.7713297399496574`*^9}, {3.771331653591583*^9, 
   3.771331655019333*^9}, {3.7713317156999493`*^9, 3.7713318543363037`*^9}, {
   3.771332201440668*^9, 3.771332373486705*^9}, {3.7713324422223454`*^9, 
   3.7713324493183937`*^9}, {3.771357761788469*^9, 3.7713577780098734`*^9}, {
   3.7713579512180924`*^9, 3.771357962817314*^9}, 3.7713580162244673`*^9, 
   3.771358477879968*^9, 3.771456937739512*^9, 3.771497015801094*^9, 
   3.7714986059286375`*^9, {3.771501681661205*^9, 3.771501688457985*^9}, {
   3.7715017280027037`*^9, 3.7715017776379924`*^9}, {3.771532256471549*^9, 
   3.771532386150127*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[68]:=",ExpressionUUID->"8503d0de-11f3-4ebe-bd77-d93198b04e3b"],

Cell[BoxData[
 FormBox[
  TagBox[
   RowBox[{"(", "\[NoBreak]", 
    TagBox[GridBox[{
       {
        RowBox[{
         RowBox[{"g", " ", 
          RowBox[{"sin", "(", 
           RowBox[{"\[Theta]", "(", "t", ")"}], ")"}]}], "-", 
         RowBox[{
          RowBox[{"q", "(", "t", ")"}], " ", 
          RowBox[{"w", "(", "t", ")"}]}], "+", 
         RowBox[{
          RowBox[{"r", "(", "t", ")"}], " ", 
          RowBox[{"v", "(", "t", ")"}]}]}]},
       {
        RowBox[{
         RowBox[{"-", 
          RowBox[{"g", " ", 
           RowBox[{"cos", "(", 
            RowBox[{"\[Theta]", "(", "t", ")"}], ")"}], " ", 
           RowBox[{"sin", "(", 
            RowBox[{"\[Phi]", "(", "t", ")"}], ")"}]}]}], "+", 
         RowBox[{
          RowBox[{"p", "(", "t", ")"}], " ", 
          RowBox[{"w", "(", "t", ")"}]}], "-", 
         RowBox[{
          RowBox[{"r", "(", "t", ")"}], " ", 
          RowBox[{"u", "(", "t", ")"}]}]}]},
       {
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{"g", " ", 
            RowBox[{"U1", "(", "t", ")"}], " ", 
            RowBox[{"cos", "(", 
             RowBox[{"\[Theta]", "(", "t", ")"}], ")"}], " ", 
            RowBox[{"sin", "(", 
             RowBox[{"\[Phi]", "(", "t", ")"}], ")"}]}], "m"]}], "-", 
         RowBox[{
          RowBox[{"p", "(", "t", ")"}], " ", 
          RowBox[{"v", "(", "t", ")"}]}], "+", 
         RowBox[{
          RowBox[{"q", "(", "t", ")"}], " ", 
          RowBox[{"u", "(", "t", ")"}]}]}]},
       {
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"Iyy", "-", "Izz"}], ")"}], " ", 
           RowBox[{"q", "(", "t", ")"}], " ", 
           RowBox[{"r", "(", "t", ")"}]}], "Ixx"], "-", 
         FractionBox[
          RowBox[{
           SubscriptBox["JJ", "TP"], " ", 
           RowBox[{"q", "(", "t", ")"}], " ", 
           RowBox[{"\[CapitalOmega]", "(", "t", ")"}]}], "Ixx"], "+", 
         FractionBox[
          RowBox[{"U2", "(", "t", ")"}], "Ixx"]}]},
       {
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"Izz", "-", "Ixx"}], ")"}], " ", 
           RowBox[{"p", "(", "t", ")"}], " ", 
           RowBox[{"r", "(", "t", ")"}]}], "Iyy"], "+", 
         FractionBox[
          RowBox[{
           SubscriptBox["JJ", "TP"], " ", 
           RowBox[{"p", "(", "t", ")"}], " ", 
           RowBox[{"\[CapitalOmega]", "(", "t", ")"}]}], "Iyy"], "+", 
         FractionBox[
          RowBox[{"U3", "(", "t", ")"}], "Iyy"]}]},
       {
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"Ixx", "-", "Iyy"}], ")"}], " ", 
           RowBox[{"p", "(", "t", ")"}], " ", 
           RowBox[{"q", "(", "t", ")"}]}], "Izz"], "+", 
         FractionBox[
          RowBox[{"U4", "(", "t", ")"}], "Izz"]}]},
       {
        RowBox[{
         RowBox[{
          RowBox[{"u", "(", "t", ")"}], " ", 
          RowBox[{"cos", "(", 
           RowBox[{"\[Theta]", "(", "t", ")"}], ")"}], " ", 
          RowBox[{"cos", "(", 
           RowBox[{"\[Psi]", "(", "t", ")"}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"v", "(", "t", ")"}], " ", 
          RowBox[{"sin", "(", 
           RowBox[{"\[Theta]", "(", "t", ")"}], ")"}], " ", 
          RowBox[{"cos", "(", 
           RowBox[{"\[Psi]", "(", "t", ")"}], ")"}], " ", 
          RowBox[{"sin", "(", 
           RowBox[{"\[Phi]", "(", "t", ")"}], ")"}]}], "-", 
         RowBox[{
          RowBox[{"v", "(", "t", ")"}], " ", 
          RowBox[{"sin", "(", 
           RowBox[{"\[Psi]", "(", "t", ")"}], ")"}], " ", 
          RowBox[{"cos", "(", 
           RowBox[{"\[Phi]", "(", "t", ")"}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"w", "(", "t", ")"}], " ", 
          RowBox[{"sin", "(", 
           RowBox[{"\[Theta]", "(", "t", ")"}], ")"}], " ", 
          RowBox[{"cos", "(", 
           RowBox[{"\[Psi]", "(", "t", ")"}], ")"}], " ", 
          RowBox[{"cos", "(", 
           RowBox[{"\[Phi]", "(", "t", ")"}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"w", "(", "t", ")"}], " ", 
          RowBox[{"sin", "(", 
           RowBox[{"\[Psi]", "(", "t", ")"}], ")"}], " ", 
          RowBox[{"sin", "(", 
           RowBox[{"\[Phi]", "(", "t", ")"}], ")"}]}]}]},
       {
        RowBox[{
         RowBox[{
          RowBox[{"u", "(", "t", ")"}], " ", 
          RowBox[{"cos", "(", 
           RowBox[{"\[Theta]", "(", "t", ")"}], ")"}], " ", 
          RowBox[{"sin", "(", 
           RowBox[{"\[Psi]", "(", "t", ")"}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"v", "(", "t", ")"}], " ", 
          RowBox[{"sin", "(", 
           RowBox[{"\[Theta]", "(", "t", ")"}], ")"}], " ", 
          RowBox[{"sin", "(", 
           RowBox[{"\[Psi]", "(", "t", ")"}], ")"}], " ", 
          RowBox[{"sin", "(", 
           RowBox[{"\[Phi]", "(", "t", ")"}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"v", "(", "t", ")"}], " ", 
          RowBox[{"cos", "(", 
           RowBox[{"\[Psi]", "(", "t", ")"}], ")"}], " ", 
          RowBox[{"cos", "(", 
           RowBox[{"\[Phi]", "(", "t", ")"}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"w", "(", "t", ")"}], " ", 
          RowBox[{"sin", "(", 
           RowBox[{"\[Theta]", "(", "t", ")"}], ")"}], " ", 
          RowBox[{"sin", "(", 
           RowBox[{"\[Psi]", "(", "t", ")"}], ")"}], " ", 
          RowBox[{"cos", "(", 
           RowBox[{"\[Phi]", "(", "t", ")"}], ")"}]}], "-", 
         RowBox[{
          RowBox[{"w", "(", "t", ")"}], " ", 
          RowBox[{"cos", "(", 
           RowBox[{"\[Psi]", "(", "t", ")"}], ")"}], " ", 
          RowBox[{"sin", "(", 
           RowBox[{"\[Phi]", "(", "t", ")"}], ")"}]}]}]},
       {
        RowBox[{
         RowBox[{
          RowBox[{"u", "(", "t", ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"-", 
            RowBox[{"sin", "(", 
             RowBox[{"\[Theta]", "(", "t", ")"}], ")"}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"v", "(", "t", ")"}], " ", 
          RowBox[{"cos", "(", 
           RowBox[{"\[Theta]", "(", "t", ")"}], ")"}], " ", 
          RowBox[{"sin", "(", 
           RowBox[{"\[Phi]", "(", "t", ")"}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"w", "(", "t", ")"}], " ", 
          RowBox[{"cos", "(", 
           RowBox[{"\[Theta]", "(", "t", ")"}], ")"}], " ", 
          RowBox[{"cos", "(", 
           RowBox[{"\[Phi]", "(", "t", ")"}], ")"}]}]}]},
       {
        RowBox[{
         RowBox[{"p", "(", "t", ")"}], "+", 
         RowBox[{
          RowBox[{"q", "(", "t", ")"}], " ", 
          RowBox[{"tan", "(", 
           RowBox[{"\[Theta]", "(", "t", ")"}], ")"}], " ", 
          RowBox[{"sin", "(", 
           RowBox[{"\[Phi]", "(", "t", ")"}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"r", "(", "t", ")"}], " ", 
          RowBox[{"tan", "(", 
           RowBox[{"\[Theta]", "(", "t", ")"}], ")"}], " ", 
          RowBox[{"cos", "(", 
           RowBox[{"\[Phi]", "(", "t", ")"}], ")"}]}]}]},
       {
        RowBox[{
         RowBox[{
          RowBox[{"q", "(", "t", ")"}], " ", 
          RowBox[{"cos", "(", 
           RowBox[{"\[Phi]", "(", "t", ")"}], ")"}]}], "-", 
         RowBox[{
          RowBox[{"r", "(", "t", ")"}], " ", 
          RowBox[{"sin", "(", 
           RowBox[{"\[Phi]", "(", "t", ")"}], ")"}]}]}]},
       {
        RowBox[{
         RowBox[{"sec", "(", 
          RowBox[{"\[Theta]", "(", "t", ")"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"q", "(", "t", ")"}], " ", 
            RowBox[{"sin", "(", 
             RowBox[{"\[Phi]", "(", "t", ")"}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"r", "(", "t", ")"}], " ", 
            RowBox[{"cos", "(", 
             RowBox[{"\[Phi]", "(", "t", ")"}], ")"}]}]}], ")"}]}]},
       {
        RowBox[{"b", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"\[CapitalOmega]1", "(", "t", ")"}], "2"], "+", 
           SuperscriptBox[
            RowBox[{"\[CapitalOmega]2", "(", "t", ")"}], "2"], "+", 
           SuperscriptBox[
            RowBox[{"\[CapitalOmega]3", "(", "t", ")"}], "2"], "+", 
           SuperscriptBox[
            RowBox[{"\[CapitalOmega]4", "(", "t", ")"}], "2"]}], ")"}]}]},
       {
        RowBox[{"b", " ", "l", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"\[CapitalOmega]4", "(", "t", ")"}], "2"], "-", 
           SuperscriptBox[
            RowBox[{"\[CapitalOmega]2", "(", "t", ")"}], "2"]}], ")"}]}]},
       {
        RowBox[{"b", " ", "l", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"\[CapitalOmega]3", "(", "t", ")"}], "2"], "-", 
           SuperscriptBox[
            RowBox[{"\[CapitalOmega]1", "(", "t", ")"}], "2"]}], ")"}]}]},
       {
        RowBox[{"d", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox[
             RowBox[{"\[CapitalOmega]1", "(", "t", ")"}], "2"]}], "+", 
           SuperscriptBox[
            RowBox[{"\[CapitalOmega]2", "(", "t", ")"}], "2"], "-", 
           SuperscriptBox[
            RowBox[{"\[CapitalOmega]3", "(", "t", ")"}], "2"], "+", 
           SuperscriptBox[
            RowBox[{"\[CapitalOmega]4", "(", "t", ")"}], "2"]}], ")"}]}]},
       {
        RowBox[{
         RowBox[{"-", 
          RowBox[{"\[CapitalOmega]1", "(", "t", ")"}]}], "+", 
         RowBox[{"\[CapitalOmega]2", "(", "t", ")"}], "-", 
         RowBox[{"\[CapitalOmega]3", "(", "t", ")"}], "+", 
         RowBox[{"\[CapitalOmega]4", "(", "t", ")"}]}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     Column], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.7714970324257045`*^9, 3.771499074371306*^9, 3.7715017823942747`*^9, 
   3.7715061862381926`*^9, 3.7715320215124245`*^9, 3.7715322699189587`*^9, {
   3.7715323003865194`*^9, 3.7715323231158943`*^9}, {3.7715323654594417`*^9, 
   3.7715323882435303`*^9}, 3.7715366612453365`*^9, 3.7715610132383738`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->
  "Out[70]//TraditionalForm=",ExpressionUUID->"b2ed09af-64d3-46e5-a784-\
e6353e5c3d9a"]
}, Open  ]],

Cell["REPRESENTA\[CapitalCCedilla]\[CapitalATilde]O EM \
ESPA\[CapitalCCedilla]OS DE ESTADO", "Text",
 CellChangeTimes->{{3.7709256157728243`*^9, 3.7709256275355787`*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,ExpressionUUID->"a544770f-1b5d-4340-ad10-e26d1fa7b501"],

Cell[BoxData[
 RowBox[{
  RowBox[{"substituicoes2", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"X", "''"}], "[", "t", "]"}], "\[Rule]", 
      OverscriptBox["X", "\[DoubleDot]"]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Y", "''"}], "[", "t", "]"}], "\[Rule]", 
      OverscriptBox["Y", "\[DoubleDot]"]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Z", "''"}], "[", "t", "]"}], "\[Rule]", 
      OverscriptBox["Z", "\[DoubleDot]"]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"X", "'"}], "[", "t", "]"}], "\[Rule]", 
      OverscriptBox["X", "."]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Y", "'"}], "[", "t", "]"}], "\[Rule]", 
      OverscriptBox["Y", "."]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Z", "'"}], "[", "t", "]"}], "\[Rule]", 
      OverscriptBox["Z", "."]}], ",", 
     RowBox[{
      RowBox[{"X", "[", "t", "]"}], "\[Rule]", "X"}], ",", 
     RowBox[{
      RowBox[{"Y", "[", "t", "]"}], "\[Rule]", "Y"}], ",", 
     RowBox[{
      RowBox[{"Z", "[", "t", "]"}], "\[Rule]", "Z"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"u", "'"}], "[", "t", "]"}], "\[Rule]", 
      OverscriptBox["u", "."]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"v", "'"}], "[", "t", "]"}], "\[Rule]", 
      OverscriptBox["v", "."]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"w", "'"}], "[", "t", "]"}], "\[Rule]", 
      OverscriptBox["w", "."]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Phi]", "'"}], "[", "t", "]"}], "\[Rule]", 
      OverscriptBox["\[Phi]", "."]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "\[Rule]", 
      OverscriptBox["\[Theta]", "."]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]", "'"}], "[", "t", "]"}], "\[Rule]", 
      OverscriptBox["\[Psi]", "."]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"p", "'"}], "[", "t", "]"}], "\[Rule]", 
      OverscriptBox["p", "."]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"q", "'"}], "[", "t", "]"}], "\[Rule]", 
      OverscriptBox["q", "."]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"r", "'"}], "[", "t", "]"}], "\[Rule]", 
      OverscriptBox["r", "."]}], ",", 
     RowBox[{
      RowBox[{"u", "[", "t", "]"}], "\[Rule]", "u"}], ",", 
     RowBox[{
      RowBox[{"v", "[", "t", "]"}], "\[Rule]", "v"}], ",", 
     RowBox[{
      RowBox[{"w", "[", "t", "]"}], "\[Rule]", "w"}], ",", 
     RowBox[{
      RowBox[{"\[Phi]", "[", "t", "]"}], "\[Rule]", "\[Phi]"}], ",", 
     RowBox[{
      RowBox[{"\[Theta]", "[", "t", "]"}], "\[Rule]", "\[Theta]"}], ",", 
     RowBox[{
      RowBox[{"\[Psi]", "[", "t", "]"}], "\[Rule]", "\[Psi]"}], ",", 
     RowBox[{
      RowBox[{"p", "[", "t", "]"}], "\[Rule]", "p"}], ",", 
     RowBox[{
      RowBox[{"q", "[", "t", "]"}], "\[Rule]", "q"}], ",", 
     RowBox[{
      RowBox[{"r", "[", "t", "]"}], "\[Rule]", "r"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7715557920827417`*^9, 3.771555814253756*^9}, 
   3.771558926033832*^9, 3.7715650680543914`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",ExpressionUUID->"f05b552d-69f7-49f5-82da-f928a8edb6e8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"substituicoes3", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"g", "\[Rule]", "9.81"}], ",", 
     RowBox[{"l", "\[Rule]", "0.24"}], ",", 
     RowBox[{"m", "\[Rule]", "1"}], ",", 
     RowBox[{"Ixx", "\[Rule]", 
      RowBox[{"8.1", " ", 
       SuperscriptBox["10", 
        RowBox[{"-", "3"}]]}]}], ",", 
     RowBox[{"Ixy", "\[Rule]", "0"}], ",", 
     RowBox[{"Ixz", "\[Rule]", "0"}], ",", 
     RowBox[{"Iyx", "\[Rule]", "0"}], ",", 
     RowBox[{"Iyy", "\[Rule]", 
      RowBox[{"8.1", " ", 
       SuperscriptBox["10", 
        RowBox[{"-", "3"}]]}]}], ",", 
     RowBox[{"Iyz", "\[Rule]", "0"}], ",", 
     RowBox[{"Izx", "\[Rule]", "0"}], ",", 
     RowBox[{"Izy", "\[Rule]", "0"}], ",", 
     RowBox[{"Izz", "\[Rule]", 
      RowBox[{"14.2", " ", 
       SuperscriptBox["10", 
        RowBox[{"-", "3"}]]}]}], ",", 
     RowBox[{
      SubscriptBox["JJ", "TP"], "\[Rule]", 
      RowBox[{"104", " ", 
       SuperscriptBox["10", 
        RowBox[{"-", "6"}]]}]}], ",", 
     RowBox[{"b", "\[Rule]", 
      RowBox[{"54.2", " ", 
       SuperscriptBox["10", 
        RowBox[{"-", "6"}]]}]}], ",", 
     RowBox[{"d", "\[Rule]", 
      RowBox[{"1.1", " ", 
       SuperscriptBox["10", 
        RowBox[{"-", "6"}]]}]}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"substituicoes4", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"U1", "[", "t", "]"}], "\[Rule]", 
      RowBox[{"b", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[CapitalOmega]1", "2"], "+", 
         SuperscriptBox["\[CapitalOmega]2", "2"], "+", 
         SuperscriptBox["\[CapitalOmega]3", "2"], "+", 
         SuperscriptBox["\[CapitalOmega]4", "2"]}], ")"}]}]}], ",", 
     RowBox[{
      RowBox[{"U2", "[", "t", "]"}], "\[Rule]", 
      RowBox[{"l", " ", "b", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[CapitalOmega]2", "2"]}], "+", 
         SuperscriptBox["\[CapitalOmega]4", "2"]}], ")"}]}]}], ",", 
     RowBox[{
      RowBox[{"U3", "[", "t", "]"}], "\[Rule]", 
      RowBox[{"l", " ", "b", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
         SuperscriptBox["\[CapitalOmega]3", "2"]}], ")"}]}]}], ",", 
     RowBox[{
      RowBox[{"U4", "[", "t", "]"}], "\[Rule]", 
      RowBox[{"d", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[CapitalOmega]1", "2"]}], "+", 
         SuperscriptBox["\[CapitalOmega]2", "2"], "-", 
         SuperscriptBox["\[CapitalOmega]3", "2"], "+", 
         SuperscriptBox["\[CapitalOmega]4", "2"]}], ")"}]}]}]}], "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7697630297723417`*^9, 3.769763161523394*^9}, {
   3.769763200499197*^9, 3.769763214833438*^9}, {3.77091551125887*^9, 
   3.770915651548698*^9}, {3.7709156842676086`*^9, 3.7709156846207356`*^9}, {
   3.7709205330764627`*^9, 3.7709205334604406`*^9}, {3.7714364094563437`*^9, 
   3.77143641618058*^9}, {3.7714370271426725`*^9, 3.771437038523075*^9}, {
   3.7714380335208597`*^9, 3.771438057657526*^9}, {3.7714380914612455`*^9, 
   3.7714382562908645`*^9}, {3.771442349785141*^9, 3.7714423516811132`*^9}, {
   3.7714427191005335`*^9, 3.771442735951953*^9}, {3.7714427993392167`*^9, 
   3.771442874856078*^9}, {3.7714435685507307`*^9, 3.771443627502838*^9}, {
   3.771443662602412*^9, 3.7714437407510605`*^9}, {3.771443922575907*^9, 
   3.7714439532643857`*^9}, {3.7714439850094814`*^9, 
   3.7714440280286407`*^9}, {3.771446067827352*^9, 3.771446072857719*^9}, {
   3.7714469881834383`*^9, 3.7714469975783167`*^9}, {3.771456485387984*^9, 
   3.771456518260361*^9}, {3.771456582142125*^9, 3.771456615752098*^9}, {
   3.771458149694414*^9, 3.7714581821275845`*^9}, {3.77145828833317*^9, 
   3.771458469602213*^9}, {3.7714585737139077`*^9, 3.7714586165890617`*^9}, 
   3.771458662229021*^9, 3.771458780791381*^9, {3.771458877824703*^9, 
   3.7714590907735996`*^9}, {3.77145917396461*^9, 3.771459242437248*^9}, {
   3.77145928253822*^9, 3.7714592973904815`*^9}, {3.7714593651705627`*^9, 
   3.7714593794538784`*^9}, {3.7714594650695434`*^9, 3.7714594731168633`*^9}, 
   3.771459507165715*^9, {3.771459570644978*^9, 3.77145964628788*^9}, 
   3.7714596784996758`*^9, {3.771460288585981*^9, 3.7714602920409145`*^9}, {
   3.7714603240603013`*^9, 3.771460349817148*^9}, {3.771460400293721*^9, 
   3.771460413692681*^9}, {3.7714604562972727`*^9, 3.7714604602627296`*^9}, {
   3.771460576056899*^9, 3.7714606160641394`*^9}, {3.7714606958783107`*^9, 
   3.771460811385132*^9}, {3.7714608629887533`*^9, 3.771460887438429*^9}, {
   3.7714609368397965`*^9, 3.771460969010437*^9}, {3.771461709288742*^9, 
   3.7714617098115444`*^9}, {3.7714619641657133`*^9, 
   3.7714620680918455`*^9}, {3.7714621026246915`*^9, 3.771462129130583*^9}, {
   3.7714651420842733`*^9, 3.771465142987589*^9}, {3.771465271518284*^9, 
   3.771465338462473*^9}, {3.771487754551977*^9, 3.7714877631660843`*^9}, 
   3.771487803760169*^9, {3.7714878427516117`*^9, 3.7714878550198526`*^9}, {
   3.771554187213997*^9, 3.771554194765001*^9}, {3.771554633076912*^9, 
   3.7715546392071466`*^9}, {3.7715561927487*^9, 3.771556196639153*^9}, 
   3.771556235956846*^9, {3.771558014882291*^9, 3.771558031749374*^9}, {
   3.7715580965451965`*^9, 3.771558110589278*^9}, {3.7715650775553775`*^9, 
   3.7715650791351533`*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",ExpressionUUID->"87914a47-1d6f-46df-b8bf-7076f5c5d19e"],

Cell["VETOR DE ESTADOS", "Text",
 CellChangeTimes->{{3.7697628221663065`*^9, 3.76976282798378*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,ExpressionUUID->"2520c04a-8067-4484-9d24-b9c08d3ef948"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"VVEE", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"u", "[", "t", "]"}], ",", 
     RowBox[{"v", "[", "t", "]"}], ",", 
     RowBox[{"w", "[", "t", "]"}], ",", 
     RowBox[{"p", "[", "t", "]"}], ",", 
     RowBox[{"q", "[", "t", "]"}], ",", 
     RowBox[{"r", "[", "t", "]"}], ",", 
     RowBox[{"X", "[", "t", "]"}], ",", 
     RowBox[{"Y", "[", "t", "]"}], ",", 
     RowBox[{"Z", "[", "t", "]"}], ",", 
     RowBox[{"\[Phi]", "[", "t", "]"}], ",", 
     RowBox[{"\[Theta]", "[", "t", "]"}], ",", 
     RowBox[{"\[Psi]", "[", "t", "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"VE", "=", "VVEE"}], 
  RowBox[{"(*", 
   RowBox[{"/.", "substituicoes2"}], "*)"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ptooper", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["u", "po"], "[", "t", "]"}], ",", 
      RowBox[{
       SubscriptBox["v", "po"], "[", "t", "]"}], ",", 
      RowBox[{
       SubscriptBox["w", "po"], "[", "t", "]"}], ",", 
      RowBox[{
       SubscriptBox["p", "po"], "[", "t", "]"}], ",", 
      RowBox[{
       SubscriptBox["q", "po"], "[", "t", "]"}], ",", 
      RowBox[{
       SubscriptBox["r", "po"], "[", "t", "]"}], ",", 
      RowBox[{
       SubscriptBox["X", "po"], "[", "t", "]"}], ",", 
      RowBox[{
       SubscriptBox["Y", "po"], "[", "t", "]"}], ",", 
      RowBox[{
       SubscriptBox["Z", "po"], "[", "t", "]"}], ",", 
      RowBox[{
       SubscriptBox["\[Phi]", "po"], "[", "t", "]"}], ",", 
      RowBox[{
       SubscriptBox["\[Theta]", "po"], "[", "t", "]"}], ",", 
      RowBox[{
       SubscriptBox["\[Psi]", "po"], "[", "t", "]"}]}], "}"}], "/.", 
    "substituicoes4"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.771555922689786*^9, 3.7715559301980247`*^9}, 
   3.771556514301859*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[74]:=",ExpressionUUID->"786af2af-83d8-4fc4-a6ba-5f1b3f632cbe"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"xis", "=", "VE"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xisp", "=", 
   RowBox[{"{", 
    RowBox[{
    "eq1final", ",", "eq2final", ",", "eq3final", ",", "eq4final", ",", 
     "eq5final", ",", "eq6final", ",", "eq7final", ",", "eq8final", ",", 
     "eq9final", ",", "eq10final", ",", "eq11final", ",", "eq12final"}], 
    "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7697628316480036`*^9, 3.7697629145428543`*^9}, {
   3.7697629486962943`*^9, 3.7697629854650044`*^9}, {3.7697715990079813`*^9, 
   3.769771696656921*^9}, {3.770554431897317*^9, 3.770554441194121*^9}, {
   3.7705544749945774`*^9, 3.7705544757234135`*^9}, 3.77055453503161*^9, {
   3.7713550667880344`*^9, 3.7713550685343623`*^9}, 3.7713565779515057`*^9, {
   3.7713571592663746`*^9, 3.7713571730035458`*^9}, {3.77135896374712*^9, 
   3.771358969560304*^9}, {3.7713590344024057`*^9, 3.771359040870304*^9}, 
   3.7713598975991573`*^9, 3.7713599774427776`*^9, {3.7713606319515333`*^9, 
   3.77136063677499*^9}, 3.7713607039111366`*^9, {3.7713610769294786`*^9, 
   3.7713610782316008`*^9}, {3.771361748844406*^9, 3.771361808035673*^9}, {
   3.7713641026485434`*^9, 3.771364108576561*^9}, {3.7713641618972363`*^9, 
   3.7713641681124067`*^9}, {3.771364543017329*^9, 3.771364576421236*^9}, {
   3.7713767479764185`*^9, 3.7713767743357215`*^9}, {3.7713993723813667`*^9, 
   3.7713993758291445`*^9}, {3.771417953820345*^9, 3.771417957319955*^9}, {
   3.7714184387892466`*^9, 3.7714184472112355`*^9}, {3.7714184832026176`*^9, 
   3.77141848939605*^9}, {3.77142056573763*^9, 3.771420567744611*^9}, 
   3.7714332993746195`*^9, 3.771433760859576*^9, 3.771434144077574*^9, {
   3.771434174407892*^9, 3.7714341759906693`*^9}, {3.771465034696124*^9, 
   3.771465042701087*^9}, {3.7715540240744457`*^9, 3.771554026299305*^9}, {
   3.771554336765004*^9, 3.771554446099798*^9}, {3.7715550131599784`*^9, 
   3.771555051711774*^9}, {3.771555837721855*^9, 3.7715558522922544`*^9}, {
   3.771555997232873*^9, 3.7715560056946716`*^9}, 3.7715650929190116`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",ExpressionUUID->"76d5acec-655d-406d-b358-090e72acfc1c"],

Cell["C\[CapitalAAcute]LCULO DAS DERIVADAS", "Text",
 CellChangeTimes->{{3.7697628221663065`*^9, 3.76976282798378*^9}, {
  3.769763007152197*^9, 3.769763019495267*^9}, {3.76976327584284*^9, 
  3.7697632834530096`*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,ExpressionUUID->"fdd4efd2-59fd-4083-812d-1f18d54ce6a5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"vetorentradas", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"U1", "[", "t", "]"}], ",", 
     RowBox[{"U2", "[", "t", "]"}], ",", 
     RowBox[{"U3", "[", "t", "]"}], ",", 
     RowBox[{"U4", "[", "t", "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["AAA", "lin"], ",", 
      SubscriptBox["BBB", "lin"]}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"xisp", "/.", "substituicoes3"}], ",", 
        RowBox[{"{", "xis", "}"}]}], "]"}], ",", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"xisp", "/.", "substituicoes3"}], ",", 
        RowBox[{"{", "vetorentradas", "}"}]}], "]"}]}], "}"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"Matriz", " ", "Jacobiana"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.7697630297723417`*^9, 3.769763161523394*^9}, {
   3.769763200499197*^9, 3.769763214833438*^9}, {3.769763293228866*^9, 
   3.7697633057852907`*^9}, {3.7697676948454657`*^9, 3.7697677051129866`*^9}, 
   3.7697683187844067`*^9, {3.7697684270575094`*^9, 3.7697684603840995`*^9}, 
   3.7697688121744385`*^9, {3.7697691764022417`*^9, 3.7697691836478543`*^9}, {
   3.7697709235963545`*^9, 3.769770925575113*^9}, {3.7697787212730513`*^9, 
   3.7697787452622633`*^9}, {3.7697805312824793`*^9, 3.76978055272931*^9}, {
   3.7697860280048256`*^9, 3.769786033047655*^9}, {3.770355696138486*^9, 
   3.7703557117118926`*^9}, {3.770564811978223*^9, 3.770564823932248*^9}, {
   3.7709155210766973`*^9, 3.7709155265276556`*^9}, 3.771362179000825*^9, 
   3.77143442037573*^9, {3.771434685302425*^9, 3.771434718280175*^9}, {
   3.771556586972579*^9, 3.771556614296717*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[98]:=",ExpressionUUID->"504543cc-0992-4a74-b455-f582b1af8eaa"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["AA", "lin"], ",", 
     SubscriptBox["BB", "lin"]}], "}"}], "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["AAA", "lin"], ",", 
      SubscriptBox["BBB", "lin"]}], "}"}], "/.", "substituicoes4"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7697630297723417`*^9, 3.769763161523394*^9}, {
   3.769763200499197*^9, 3.769763214833438*^9}, {3.77091551125887*^9, 
   3.770915651548698*^9}, {3.7709156842676086`*^9, 3.7709156846207356`*^9}, {
   3.7709205330764627`*^9, 3.7709205334604406`*^9}, {3.7714364094563437`*^9, 
   3.77143641618058*^9}, {3.7714370271426725`*^9, 3.771437038523075*^9}, {
   3.7714380335208597`*^9, 3.771438062776523*^9}, {3.771460296217628*^9, 
   3.771460303079858*^9}, 3.771461801118701*^9, 3.7715546769988437`*^9, 
   3.771554722584859*^9, 3.7715562419268274`*^9, 3.7715566513323765`*^9, 
   3.7715594903045607`*^9, 3.7715596363354816`*^9, {3.7715611023632774`*^9, 
   3.771561116383012*^9}, {3.7715614334059873`*^9, 3.7715614341240697`*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->
  "In[116]:=",ExpressionUUID->"1434bd8b-1d0e-4638-81ed-c7c417bb40cf"],

Cell[TextData[{
 "ATRIBUI\[CapitalCCedilla]\[CapitalATilde]O DOS PAR\[CapitalAHat]METROS DO \
SISTEMA E \nPONTOS DE OPERA\[CapitalCCedilla]\[CapitalATilde]O PARA OBSTEN\
\[CapitalCCedilla]\[CapitalATilde]O DAS MATRIZES ",
 Cell[BoxData[
  SubscriptBox["A", "lin"]],
  CellChangeTimes->{{3.7697630297723417`*^9, 3.769763161523394*^9}, {
   3.769763200499197*^9, 3.769763214833438*^9}, {3.77091551125887*^9, 
   3.770915651548698*^9}, {3.7709156842676086`*^9, 3.7709156846207356`*^9}, {
   3.7709205330764627`*^9, 3.7709205334604406`*^9}},
  FontFamily->"Times New Roman",ExpressionUUID->
  "b5f991d7-ee10-4c15-b8b8-82ae9152a806"],
 " e ",
 Cell[BoxData[
  SubscriptBox["B", "lin"]],
  CellChangeTimes->{{3.7697630297723417`*^9, 3.769763161523394*^9}, {
   3.769763200499197*^9, 3.769763214833438*^9}, {3.77091551125887*^9, 
   3.770915651548698*^9}, {3.7709156842676086`*^9, 3.7709156846207356`*^9}, {
   3.7709205330764627`*^9, 3.7709205334604406`*^9}},
  FontFamily->"Times New Roman",ExpressionUUID->
  "b29e82cb-6550-426e-9b6f-8594063fe617"]
}], "Text",
 CellChangeTimes->{{3.7697628221663065`*^9, 3.76976282798378*^9}, {
  3.769763007152197*^9, 3.769763019495267*^9}, {3.7709156921805487`*^9, 
  3.7709157071296854`*^9}, {3.770920543914426*^9, 3.7709205747768707`*^9}, {
  3.771559574991878*^9, 3.7715595987851095`*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,ExpressionUUID->"0007194e-a84e-47ef-843a-e005d9dfad5f"],

Cell[TextData[{
 "PONTOS DE OPERA\[CapitalCCedilla]\[CapitalATilde]O ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["x", "*"], TraditionalForm]],ExpressionUUID->
  "8ce7d8a9-d0e9-41fa-a161-e55adf943205"],
 " e ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["u", "*"], TraditionalForm]],ExpressionUUID->
  "40d91379-67a0-485c-9d03-2b3dbeaf15e7"]
}], "Text",
 CellChangeTimes->{{3.7697790469997897`*^9, 3.7697790652783785`*^9}, {
  3.7697791677004175`*^9, 3.769779178951362*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,ExpressionUUID->"319ee5e9-4128-4262-9cad-5a989e259c55"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[CapitalOmega]", "H"], TraditionalForm]],ExpressionUUID->
  "9baed567-1c90-4f05-819e-3e659bbb5dd0"],
 "=215; propeller speed in hovering; \n",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[CapitalOmega]", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4"}]], TraditionalForm]],
  ExpressionUUID->"e08609df-eee3-4fd9-89f6-7a7ab926e9ca"],
 " = ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[CapitalOmega]", "H"], TraditionalForm]],ExpressionUUID->
  "0a84ea4b-fbf0-4ccd-a521-ded806f6374e"],
 "\[PlusMinus]",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[CapitalDelta]", 
    RowBox[{"A", ",", "B"}]], TraditionalForm]],ExpressionUUID->
  "4ea9ffd7-abbc-48ea-9bbc-b36d5dc95371"]
}], "Text",
 CellChangeTimes->{{3.7714432319559965`*^9, 3.771443288498601*^9}, {
   3.7714566962340403`*^9, 3.771456743626931*^9}, {3.7714567913259335`*^9, 
   3.771456809537902*^9}, 3.771465260052309*^9},
 FontFamily->"Times New Roman",
 FontSize->9,ExpressionUUID->"5367d3d2-38fa-4760-bd61-65e0e83faaef"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["\[CapitalOmega]", "H"], "=", "215"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"houvering", "=", 
   RowBox[{
    SubscriptBox["\[CapitalOmega]", "H"], "+", 
    SubscriptBox["\[CapitalDelta]", "A"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox[
     OverscriptBox["H", "_"], "houv"], "=", "1"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"apenas", " ", "1", " ", "metro"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"substituicoes4", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["u", "po"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
       RowBox[{
        RowBox[{
         SubscriptBox["v", "po"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
       RowBox[{
        RowBox[{
         SubscriptBox["w", "po"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
       RowBox[{
        RowBox[{
         SubscriptBox["p", "po"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
       RowBox[{
        RowBox[{
         SubscriptBox["q", "po"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
       RowBox[{
        RowBox[{
         SubscriptBox["r", "po"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
       RowBox[{
        RowBox[{
         SubscriptBox["X", "po"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
       RowBox[{
        RowBox[{
         SubscriptBox["Y", "po"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
       RowBox[{
        RowBox[{
         SubscriptBox["Z", "po"], "[", "t", "]"}], "\[Rule]", 
        SubscriptBox[
         OverscriptBox["H", "_"], "houv"]}], ",", 
       RowBox[{
        RowBox[{
         SubscriptBox["\[Phi]", "po"], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
       RowBox[{
        RowBox[{
         SubscriptBox["\[Theta]", "po"], "[", "t", "]"}], "\[Rule]", "0"}], 
       ",", 
       RowBox[{
        RowBox[{
         SubscriptBox["\[Psi]", "po"], "[", "t", "]"}], "\[Rule]", "0"}]}], 
      "}"}]}], ";"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"substituicoes5", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"u", "[", "t", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{"v", "[", "t", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{"w", "[", "t", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{"p", "[", "t", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{"q", "[", "t", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{"r", "[", "t", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{"X", "[", "t", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{"Y", "[", "t", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{"Z", "[", "t", "]"}], "\[Rule]", 
      SubscriptBox[
       OverscriptBox["H", "_"], "houv"]}], ",", 
     RowBox[{
      RowBox[{"\[Phi]", "[", "t", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{"\[Theta]", "[", "t", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{"\[Psi]", "[", "t", "]"}], "\[Rule]", "0"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"substituicoes6", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[CapitalOmega]", "[", "t", "]"}], "\[Rule]", 
     RowBox[{
      RowBox[{"-", "\[CapitalOmega]1"}], "+", "\[CapitalOmega]2", "-", 
      "\[CapitalOmega]3", "+", "\[CapitalOmega]4"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"substituicoes7", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[CapitalOmega]1", "\[Rule]", "houvering"}], ",", 
      RowBox[{"\[CapitalOmega]2", "\[Rule]", "houvering"}], ",", 
      RowBox[{"\[CapitalOmega]3", "\[Rule]", "houvering"}], ",", 
      RowBox[{"\[CapitalOmega]4", "\[Rule]", "houvering"}]}], "}"}], "/.", 
    RowBox[{
     SubscriptBox["\[CapitalDelta]", "A"], "\[Rule]", "0"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7714879079010725`*^9, 3.7714879643521852`*^9}, {
   3.7714880628399096`*^9, 3.7714880634572744`*^9}, {3.7714881010477276`*^9, 
   3.771488103001504*^9}, {3.771488188882507*^9, 3.771488325005125*^9}, {
   3.771488369741523*^9, 3.771488375050133*^9}, 3.77148840817872*^9, {
   3.7714884578101683`*^9, 3.77148845943981*^9}, {3.7714886974991693`*^9, 
   3.7714887187776613`*^9}, {3.771498663819567*^9, 3.7714986795105906`*^9}, {
   3.7715080224707794`*^9, 3.7715082211870985`*^9}, {3.77153246299776*^9, 
   3.7715325117742705`*^9}, {3.771552872710159*^9, 3.7715529330183096`*^9}, {
   3.7715530393163977`*^9, 3.7715532893171573`*^9}, {3.771553353703131*^9, 
   3.7715533553396473`*^9}, {3.7715537403324285`*^9, 3.771553758360493*^9}, 
   3.7715539696511917`*^9, {3.7715540819735065`*^9, 3.7715541579280205`*^9}, {
   3.7715542322591963`*^9, 3.771554264393916*^9}, {3.771557678530782*^9, 
   3.7715577801453547`*^9}, 3.77155804726927*^9, {3.7715581914860325`*^9, 
   3.771558319876122*^9}, {3.771558480642243*^9, 3.7715585469833126`*^9}, {
   3.7715585885614634`*^9, 3.7715586200754395`*^9}, {3.771558687014036*^9, 
   3.7715587138541307`*^9}, {3.771558765449378*^9, 3.7715587776717973`*^9}, {
   3.7715588256703105`*^9, 3.771558835573208*^9}, {3.771558955357419*^9, 
   3.771559004439478*^9}, {3.771565279026902*^9, 3.7715652881286883`*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",ExpressionUUID->"38cff7bc-ed03-47fc-8886-162bcef5af6b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  SubscriptBox["X", "*"], "=", 
  RowBox[{"VE", "/.", "substituicoes5"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["U", "*"], "=", 
  RowBox[{
   RowBox[{
    RowBox[{"vetorentradas", "/.", "substituicoes4"}], "/.", 
    "substituicoes3"}], "/.", "substituicoes7"}]}]}], "Input",
 CellChangeTimes->{{3.769779720243549*^9, 3.7697797284187107`*^9}, 
   3.7697798742907853`*^9, {3.7697808132481165`*^9, 3.7697808151211133`*^9}, {
   3.7697809587063355`*^9, 3.769780968932115*^9}, {3.769781093963991*^9, 
   3.7697811191200085`*^9}, {3.769781411347231*^9, 3.769781452754771*^9}, {
   3.7697818366807127`*^9, 3.769781885110444*^9}, {3.7697824386807203`*^9, 
   3.7697824992539797`*^9}, {3.7697829747751036`*^9, 
   3.7697830291473107`*^9}, {3.769783139189659*^9, 3.769783158312441*^9}, {
   3.769783681160166*^9, 3.76978368841177*^9}, {3.7703559032127695`*^9, 
   3.7703560362342668`*^9}, {3.77155782076153*^9, 3.771557997917062*^9}, {
   3.7715580616382236`*^9, 3.7715580724248056`*^9}, {3.771558133593104*^9, 
   3.7715581450407553`*^9}, {3.77155904694536*^9, 3.771559052182351*^9}, 
   3.771559090644953*^9, {3.771560514983138*^9, 3.771560531605802*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[85]:=",ExpressionUUID->"b83e2358-46f6-42fe-a7cb-f327c395714e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "1", ",", "0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7715590916024237`*^9, {3.771560517648486*^9, 3.771560532555263*^9}, 
   3.7715610307442026`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[85]=",ExpressionUUID->"e0dc3857-3d17-4441-8efd-9ad2e9d1a605"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"10.02158`", ",", "0.`", ",", "0.`", ",", "0.`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7715590916024237`*^9, {3.771560517648486*^9, 3.771560532555263*^9}, 
   3.7715610307531805`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[86]=",ExpressionUUID->"ca5135a6-b06e-4964-8b8f-7f9d522c917c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  SubscriptBox["A", "lin"], "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["AA", "lin"], "/.", "substituicoes4"}], "/.", 
      "substituicoes6"}], "/.", "substituicoes7"}], "/.", "substituicoes5"}], 
   "/.", "substituicoes3"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["B", "lin"], "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["BB", "lin"], "/.", "substituicoes4"}], "/.", 
     "substituicoes3"}], "/.", "substituicoes7"}], "/.", 
   "substituicoes5"}]}]}], "Input",
 CellChangeTimes->{{3.7697630297723417`*^9, 3.769763161523394*^9}, {
   3.769763200499197*^9, 3.769763214833438*^9}, {3.77091551125887*^9, 
   3.770915651548698*^9}, {3.7709156842676086`*^9, 3.7709156846207356`*^9}, {
   3.7709205330764627`*^9, 3.7709205334604406`*^9}, {3.7714364094563437`*^9, 
   3.77143641618058*^9}, {3.7714370271426725`*^9, 3.7714370422072*^9}, {
   3.7714385030539*^9, 3.7714385910579185`*^9}, {3.7714386216614056`*^9, 
   3.7714386699222593`*^9}, 3.771442182815339*^9, {3.771442269858206*^9, 
   3.7714423068005023`*^9}, {3.771442341580085*^9, 3.7714423827871923`*^9}, {
   3.771460306448408*^9, 3.7714603146100783`*^9}, {3.771461157012946*^9, 
   3.771461198521104*^9}, {3.7714618057673388`*^9, 3.771461837763996*^9}, {
   3.7715564440559387`*^9, 3.771556448220176*^9}, {3.771559483023033*^9, 
   3.7715595015291543`*^9}, {3.7715596816931763`*^9, 3.771559725308996*^9}, {
   3.771559840737216*^9, 3.7715598601267242`*^9}, {3.771559892445201*^9, 
   3.77155992010573*^9}, 3.771559962518403*^9, {3.7715603939766912`*^9, 
   3.7715603971062803`*^9}, {3.7715605383707113`*^9, 
   3.7715605592438955`*^9}, {3.7715606894718904`*^9, 
   3.7715607012394238`*^9}, {3.7715607397967777`*^9, 3.771560768269667*^9}, {
   3.7715610679466057`*^9, 3.7715610776187415`*^9}, {3.7715611707980824`*^9, 
   3.771561229192975*^9}, 3.7715612701280394`*^9, 3.7715613243091297`*^9, {
   3.771561372003811*^9, 3.77156138506688*^9}, {3.7715614479930353`*^9, 
   3.771561453215659*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->
  "In[119]:=",ExpressionUUID->"7e069b4c-be08-4269-abf9-1f4a62e6d554"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
      ",", "0", ",", "0", ",", "9.81`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
      ",", "0", ",", 
     RowBox[{"-", "9.81`"}], ",", "0.`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
      ",", "0", ",", 
     RowBox[{"-", "98.3116998`"}], ",", "0.`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0.`", ",", "0.`", ",", "0", ",", 
     "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0.`", ",", "0", ",", "0.`", ",", "0", ",", 
     "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
      ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
      ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
      ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
      ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0",
      ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0",
      ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0",
      ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7715598229215856`*^9, 3.7715598612626457`*^9, 3.771559893777656*^9, 
   3.771559925791164*^9, 3.7715599687023726`*^9, 3.77156039742047*^9, {
   3.771560539665249*^9, 3.771560561590621*^9}, 3.7715607020253215`*^9, {
   3.7715607417246237`*^9, 3.7715607702343683`*^9}, 3.7715610364210577`*^9, {
   3.771561069020729*^9, 3.771561079504695*^9}, {3.771561155063176*^9, 
   3.7715611723728714`*^9}, 3.771561229966407*^9, 3.77156127253057*^9, 
   3.771561325477029*^9, 3.7715613730659714`*^9, {3.7715614402307878`*^9, 
   3.7715614542355704`*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->
  "Out[119]=",ExpressionUUID->"dbc84a15-7b5c-48f2-b57f-9d86014336e6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "123.4567901234568`", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "123.4567901234568`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "70.42253521126761`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7715598229215856`*^9, 3.7715598612626457`*^9, 3.771559893777656*^9, 
   3.771559925791164*^9, 3.7715599687023726`*^9, 3.77156039742047*^9, {
   3.771560539665249*^9, 3.771560561590621*^9}, 3.7715607020253215`*^9, {
   3.7715607417246237`*^9, 3.7715607702343683`*^9}, 3.7715610364210577`*^9, {
   3.771561069020729*^9, 3.771561079504695*^9}, {3.771561155063176*^9, 
   3.7715611723728714`*^9}, 3.771561229966407*^9, 3.77156127253057*^9, 
   3.771561325477029*^9, 3.7715613730659714`*^9, {3.7715614402307878`*^9, 
   3.77156145424654*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->
  "Out[120]=",ExpressionUUID->"c1f32cc4-1331-4bae-8192-fe0f945c15e1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  SubscriptBox["A", "lin"], "//", "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["B", "lin"], "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.7697630297723417`*^9, 3.769763161523394*^9}, {
   3.769763200499197*^9, 3.769763214833438*^9}, {3.77091551125887*^9, 
   3.770915651548698*^9}, {3.7709156842676086`*^9, 3.7709156846207356`*^9}, {
   3.7709205330764627`*^9, 3.7709205334604406`*^9}, {3.7714364094563437`*^9, 
   3.77143641618058*^9}, {3.7714370271426725`*^9, 3.7714370422072*^9}, {
   3.7714385030539*^9, 3.7714385910579185`*^9}, {3.7714386216614056`*^9, 
   3.7714386699222593`*^9}, 3.771442182815339*^9, {3.771442269858206*^9, 
   3.7714423068005023`*^9}, {3.771442341580085*^9, 3.7714423827871923`*^9}, {
   3.771443013970543*^9, 3.7714430420816083`*^9}, {3.7714622237181797`*^9, 
   3.771462291403386*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->
  "In[121]:=",ExpressionUUID->"deb0b6c8-a763-4c04-aafb-d2825a0bcbb0"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "9.81`", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{"-", "9.81`"}], "0.`", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{"-", "98.3116998`"}], "0.`", "0"},
     {"0", "0", "0", "0", "0.`", "0.`", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0.`", "0", "0.`", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.77156146285886*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->
  "Out[121]//MatrixForm=",ExpressionUUID->"8c8d9f2c-85b2-4dcb-bad1-\
649e37bd02f9"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0.`", "0", "0", "0"},
     {"0", "123.4567901234568`", "0", "0"},
     {"0", "0", "123.4567901234568`", "0"},
     {"0", "0", "0", "70.42253521126761`"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7715614628648443`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->
  "Out[122]//MatrixForm=",ExpressionUUID->"edc62cfd-68e8-43c8-a504-\
08a095d8aab0"]
}, Open  ]],

Cell["VARIAVEIS DE PERTURBA\[CapitalCCedilla]\[CapitalATilde]O", "Text",
 CellChangeTimes->{{3.7697790469997897`*^9, 3.7697790652783785`*^9}, {
  3.7697791677004175`*^9, 3.769779178951362*^9}, {3.769782212791107*^9, 
  3.7697822260731215`*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,ExpressionUUID->"b79b7d55-48d6-415e-a9d0-6b9dd3286963"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   UnderscriptBox["\[Delta]X", "_"], "[", 
   RowBox[{"xis_", ",", "var_", ",", "xisestrela_"}], "]"}], ":=", 
  RowBox[{"xis", "-", "xisestrela"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   UnderscriptBox["\[Delta]U", "_"], "[", 
   RowBox[{"us_", ",", "var_", ",", "usestrela_"}], "]"}], ":=", 
  RowBox[{"us", "-", "usestrela"}]}]}], "Input",
 CellChangeTimes->{{3.7697832333248167`*^9, 3.769783240843726*^9}, {
  3.7697835351854925`*^9, 3.769783538258275*^9}, {3.769783572080862*^9, 
  3.7697836184747815`*^9}, {3.7697837134677687`*^9, 3.7697837264670143`*^9}, {
  3.7697861940686264`*^9, 3.7697862496066055`*^9}, {3.7703552366648784`*^9, 
  3.7703552396397295`*^9}, {3.770355776518129*^9, 3.770355782052251*^9}, {
  3.7704051397935624`*^9, 3.770405155275699*^9}, {3.771559115347451*^9, 
  3.7715591190854564`*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->
  "In[148]:=",ExpressionUUID->"c3fb5f96-0e8b-40a6-a107-5e2bc40449b1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  UnderscriptBox[
   SubscriptBox["\[Delta]X", "1"], "_"], "=", 
  RowBox[{
   UnderscriptBox["\[Delta]X", "_"], "[", 
   RowBox[{"xis", ",", "t", ",", 
    SubscriptBox["X", "*"]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox[
   UnderscriptBox["\[Delta]U", "_"], "1"], "=", 
  RowBox[{
   UnderscriptBox["\[Delta]U", "_"], "[", 
   RowBox[{"vetorentradas", ",", "t", ",", 
    SubscriptBox["U", "*"]}], "]"}]}]}], "Input",
 CellChangeTimes->{
  3.7703549340075674`*^9, {3.770355055994995*^9, 3.7703550793900537`*^9}, 
   3.7703552515351553`*^9, {3.770355794227875*^9, 3.7703558071779823`*^9}, {
   3.77040516236578*^9, 3.7704051853651037`*^9}, {3.7704055751734266`*^9, 
   3.7704055767733693`*^9}, {3.7704056090266886`*^9, 
   3.7704056136433816`*^9}, {3.770407800759828*^9, 3.7704078458306556`*^9}, {
   3.7704080379322863`*^9, 3.770408082716705*^9}, {3.770409883977872*^9, 
   3.7704098868028255`*^9}, {3.771559125153279*^9, 3.7715591436697645`*^9}, {
   3.77156383305307*^9, 3.771563944182757*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->
  "In[152]:=",ExpressionUUID->"96a63257-9be7-4a9f-96ee-4c58e9f06637"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"u", "[", "t", "]"}], ",", 
   RowBox[{"v", "[", "t", "]"}], ",", 
   RowBox[{"w", "[", "t", "]"}], ",", 
   RowBox[{"p", "[", "t", "]"}], ",", 
   RowBox[{"q", "[", "t", "]"}], ",", 
   RowBox[{"r", "[", "t", "]"}], ",", 
   RowBox[{"X", "[", "t", "]"}], ",", 
   RowBox[{"Y", "[", "t", "]"}], ",", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{"Z", "[", "t", "]"}]}], ",", 
   RowBox[{"\[Phi]", "[", "t", "]"}], ",", 
   RowBox[{"\[Theta]", "[", "t", "]"}], ",", 
   RowBox[{"\[Psi]", "[", "t", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.771563895753693*^9, 3.771563944960672*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->
  "Out[152]=",ExpressionUUID->"a52b98fd-b105-451b-8c71-68fe53a60b17"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "10.02158`"}], "+", 
    RowBox[{"U1", "[", "t", "]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"U2", "[", "t", "]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"U3", "[", "t", "]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"U4", "[", "t", "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.771563895753693*^9, 3.771563944971676*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->
  "Out[153]=",ExpressionUUID->"fa331afe-2d5b-4e8b-a959-1cd6f1c871c2"]
}, Open  ]],

Cell["OBTEN\[CapitalCCedilla]\[CapitalATilde]O DA MATRIZ DE OBSERVA\
\[CapitalCCedilla]\[CapitalATilde]O", "Text",
 CellChangeTimes->{{3.7697790469997897`*^9, 3.7697790652783785`*^9}, {
  3.7697791677004175`*^9, 3.769779178951362*^9}, {3.769782212791107*^9, 
  3.7697822260731215`*^9}, {3.7709206026059523`*^9, 3.7709206353701963`*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,ExpressionUUID->"7b22c3fd-b3ca-4a21-97b8-eddbe1dcc4be"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["C", "*"], "=", 
    RowBox[{"IdentityMatrix", "[", "12", "]"}]}], 
   RowBox[{"(*", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", ",", ",", "0", ",", 
        "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}], "*)"}], 
   ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "Semelhante", " ", "\[AGrave]", " ", "Matriz", " ", "Identidade", " ", 
    "para", " ", "visualiza\[CCedilla]\[ATilde]o", " ", "dos", " ", 
    "resultados", " ", "de", " ", "velocidade"}], "*)"}]}]], "Input",
 CellChangeTimes->{
  3.7704098756165047`*^9, {3.770904065498969*^9, 3.7709040689522343`*^9}, {
   3.770904447387348*^9, 3.7709044504012566`*^9}, {3.7709195378085113`*^9, 
   3.7709195786924186`*^9}, {3.7715591749039392`*^9, 3.771559220631695*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->
  "In[127]:=",ExpressionUUID->"cc11e3c2-ce82-4c74-9fa8-d37ed71b7891"],

Cell["OBTEN\[CapitalCCedilla]\[CapitalATilde]O DO VETOR DE OBSERVA\
\[CapitalCCedilla]\[CapitalATilde]O", "Text",
 CellChangeTimes->{{3.7697790469997897`*^9, 3.7697790652783785`*^9}, {
  3.7697791677004175`*^9, 3.769779178951362*^9}, {3.769782212791107*^9, 
  3.7697822260731215`*^9}, {3.7709206026059523`*^9, 3.77092066164919*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,ExpressionUUID->"0edf0482-26b3-4e5c-9bc9-9e72b223d662"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["\[Delta]y", "1"], "[", 
   RowBox[{"Ce_", ",", "t_"}], "]"}], ":=", 
  RowBox[{"Ce", ".", "xis"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Delta]y", "1"], "[", 
   RowBox[{
    SubscriptBox["C", "*"], ",", "t"}], "]"}], "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.7704095862185755`*^9, 3.770409678728657*^9}, {
  3.7709206663552732`*^9, 3.7709207050340233`*^9}, {3.7709207386724215`*^9, 
  3.7709207660332537`*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->
  "In[128]:=",ExpressionUUID->"5210cdc9-403c-466b-b171-385f014b6981"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{"u", "[", "t", "]"}]},
      {
       RowBox[{"v", "[", "t", "]"}]},
      {
       RowBox[{"w", "[", "t", "]"}]},
      {
       RowBox[{"p", "[", "t", "]"}]},
      {
       RowBox[{"q", "[", "t", "]"}]},
      {
       RowBox[{"r", "[", "t", "]"}]},
      {
       RowBox[{"X", "[", "t", "]"}]},
      {
       RowBox[{"Y", "[", "t", "]"}]},
      {
       RowBox[{"Z", "[", "t", "]"}]},
      {
       RowBox[{"\[Phi]", "[", "t", "]"}]},
      {
       RowBox[{"\[Theta]", "[", "t", "]"}]},
      {
       RowBox[{"\[Psi]", "[", "t", "]"}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7709207023471684`*^9, 3.7709207671233487`*^9, 
  3.7709276412500763`*^9, 3.7709277555948*^9, 3.7709279432127423`*^9, 
  3.771559259702689*^9, 3.7715614941412334`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->
  "Out[129]//MatrixForm=",ExpressionUUID->"fc42e98f-fb53-416b-9997-\
24cf40ce38a6"]
}, Open  ]],

Cell["VETOR - FUN\[CapitalCCedilla]\[CapitalATilde]O DE \
TRANSFER\[CapitalEHat]NCIA", "Text",
 CellChangeTimes->{{3.7697790469997897`*^9, 3.7697790652783785`*^9}, {
  3.7697791677004175`*^9, 3.769779178951362*^9}, {3.769782212791107*^9, 
  3.7697822260731215`*^9}, {3.770556814502597*^9, 3.77055682046976*^9}, {
  3.770916299160947*^9, 3.770916304465166*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,ExpressionUUID->"b9d02f44-0797-415d-aaa7-402f2a31930d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Id", "[", "n_", "]"}], ":=", 
  RowBox[{"IdentityMatrix", "[", "n", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["G", "*"], "[", 
   RowBox[{"ess_", ",", "Ce_", ",", "AA_", ",", "Be_", ",", "De_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"Ce", ".", 
     RowBox[{"(", 
      RowBox[{"Inverse", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"ess", " ", 
          RowBox[{"Id", "[", 
           RowBox[{"Length", "[", "AA", "]"}], "]"}]}], ")"}], "-", "AA"}], 
       "]"}], ")"}], ".", "Be"}], ")"}], "+", "De"}]}]}], "Input",
 CellChangeTimes->{{3.7705572745170755`*^9, 3.7705572772796106`*^9}, {
  3.77055752391603*^9, 3.7705575446291656`*^9}, {3.77092085437879*^9, 
  3.770920854685975*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->
  "In[130]:=",ExpressionUUID->"2bdea0fb-f3a7-4101-8ce6-eb24ffd3e494"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["G", "*"], "[", 
    RowBox[{"s", ",", 
     SubscriptBox["C", "*"], ",", 
     SubscriptBox["A", "lin"], ",", 
     SubscriptBox["B", "lin"], ",", "0"}], "]"}], "//", "MatrixForm"}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{
  3.7709149148619375`*^9, {3.7709149475111785`*^9, 3.770914954937191*^9}, 
   3.7709203441290946`*^9, {3.7709208774095635`*^9, 3.7709208911847863`*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->
  "In[167]:=",ExpressionUUID->"7ec0d838-e3f3-4f9c-8206-bc9e01a8438f"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.`", "0.`", 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       FractionBox["1211.1111111111113`", 
        SuperscriptBox["s", "3"]]}], "0.`"},
     {"0.`", 
      RowBox[{"0.`", "\[VeryThinSpace]", "-", 
       FractionBox["1211.1111111111113`", 
        SuperscriptBox["s", "3"]]}], "0.`", "0.`"},
     {"0.`", 
      RowBox[{"0.`", "\[VeryThinSpace]", "-", 
       FractionBox["12137.246888888889`", 
        SuperscriptBox["s", "3"]]}], "0.`", "0.`"},
     {"0.`", 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       FractionBox["123.4567901234568`", "s"]}], "0.`", "0.`"},
     {"0.`", "0.`", 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       FractionBox["123.4567901234568`", "s"]}], "0.`"},
     {"0.`", "0.`", "0.`", 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       FractionBox["70.42253521126761`", "s"]}]},
     {"0.`", "0.`", 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       FractionBox["1211.1111111111113`", 
        SuperscriptBox["s", "4"]]}], "0.`"},
     {"0.`", 
      RowBox[{"0.`", "\[VeryThinSpace]", "-", 
       FractionBox["1211.1111111111113`", 
        SuperscriptBox["s", "4"]]}], "0.`", "0.`"},
     {"0.`", 
      RowBox[{"0.`", "\[VeryThinSpace]", "-", 
       FractionBox["12137.246888888889`", 
        SuperscriptBox["s", "4"]]}], "0.`", "0.`"},
     {"0.`", 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       FractionBox["123.4567901234568`", 
        SuperscriptBox["s", "2"]]}], "0.`", "0.`"},
     {"0.`", "0.`", 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       FractionBox["123.4567901234568`", 
        SuperscriptBox["s", "2"]]}], "0.`"},
     {"0.`", "0.`", "0.`", 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       FractionBox["70.42253521126761`", 
        SuperscriptBox["s", "2"]]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7709208818616858`*^9, 3.7709208919567547`*^9}, 
   3.7709277194089184`*^9, 3.7709279625170407`*^9, 3.771561508109881*^9, 
   3.7715681748800287`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->
  "Out[167]//MatrixForm=",ExpressionUUID->"eb9571fe-4f5c-487e-8394-\
75a02f90e48f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Ys", "=", 
  RowBox[{
   RowBox[{
    SubscriptBox["G", "*"], "[", 
    RowBox[{"s", ",", 
     SubscriptBox["C", "*"], ",", 
     SubscriptBox["A", "lin"], ",", 
     SubscriptBox["B", "lin"], ",", "0"}], "]"}], " ", 
   RowBox[{"LaplaceTransform", "[", 
    RowBox[{
     RowBox[{"50", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"10", " ", "t"}], "]"}]}], ",", "t", ",", "s"}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Yt", "=", 
   RowBox[{"InverseLaplaceTransform", "[", 
    RowBox[{"Ys", ",", "s", ",", "t"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Delta]us", "[", "s_", "]"}], "=", 
    RowBox[{"Ys", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], ";", 
   RowBox[{
    RowBox[{"\[Delta]ut", "[", "t_", "]"}], "=", 
    RowBox[{"Yt", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"\[Delta]p", "=", 
    RowBox[{"p", "-", 
     SuperscriptBox["p", "*"]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Delta]vs", "[", "s_", "]"}], "=", 
    RowBox[{"Ys", "[", 
     RowBox[{"[", "2", "]"}], "]"}]}], ";", 
   RowBox[{
    RowBox[{"\[Delta]vt", "[", "t_", "]"}], "=", 
    RowBox[{"Yt", "[", 
     RowBox[{"[", "2", "]"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"\[Delta]\[Theta]", "=", 
    RowBox[{"\[Theta]", "-", 
     SuperscriptBox["\[Theta]", "*"]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Delta]ws", "[", "s_", "]"}], "=", 
    RowBox[{"Ys", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], ";", 
   RowBox[{
    RowBox[{"\[Delta]wt", "[", "t_", "]"}], "=", 
    RowBox[{"Yt", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"\[Delta]p", "=", 
    RowBox[{"p", "-", 
     SuperscriptBox["p", "*"]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Delta]ps", "[", "s_", "]"}], "=", 
    RowBox[{"Ys", "[", 
     RowBox[{"[", "2", "]"}], "]"}]}], ";", 
   RowBox[{
    RowBox[{"\[Delta]pt", "[", "t_", "]"}], "=", 
    RowBox[{"Yt", "[", 
     RowBox[{"[", "2", "]"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"\[Delta]\[Theta]", "=", 
    RowBox[{"\[Theta]", "-", 
     SuperscriptBox["\[Theta]", "*"]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Delta]qs", "[", "s_", "]"}], "=", 
    RowBox[{"Ys", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], ";", 
   RowBox[{
    RowBox[{"\[Delta]qt", "[", "t_", "]"}], "=", 
    RowBox[{"Yt", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"\[Delta]p", "=", 
    RowBox[{"p", "-", 
     SuperscriptBox["p", "*"]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Delta]rs", "[", "s_", "]"}], "=", 
    RowBox[{"Ys", "[", 
     RowBox[{"[", "2", "]"}], "]"}]}], ";", 
   RowBox[{
    RowBox[{"\[Delta]rt", "[", "t_", "]"}], "=", 
    RowBox[{"Yt", "[", 
     RowBox[{"[", "2", "]"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"\[Delta]\[Theta]", "=", 
    RowBox[{"\[Theta]", "-", 
     SuperscriptBox["\[Theta]", "*"]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Delta]Xs", "[", "s_", "]"}], "=", 
    RowBox[{"Ys", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], ";", 
   RowBox[{
    RowBox[{"\[Delta]Xt", "[", "t_", "]"}], "=", 
    RowBox[{"Yt", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"\[Delta]p", "=", 
    RowBox[{"p", "-", 
     SuperscriptBox["p", "*"]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Delta]Ys", "[", "s_", "]"}], "=", 
    RowBox[{"Ys", "[", 
     RowBox[{"[", "2", "]"}], "]"}]}], ";", 
   RowBox[{
    RowBox[{"\[Delta]Yt", "[", "t_", "]"}], "=", 
    RowBox[{"Yt", "[", 
     RowBox[{"[", "2", "]"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"\[Delta]\[Theta]", "=", 
    RowBox[{"\[Theta]", "-", 
     SuperscriptBox["\[Theta]", "*"]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Delta]Zs", "[", "s_", "]"}], "=", 
    RowBox[{"Ys", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], ";", 
   RowBox[{
    RowBox[{"\[Delta]Zt", "[", "t_", "]"}], "=", 
    RowBox[{"Yt", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"\[Delta]p", "=", 
    RowBox[{"p", "-", 
     SuperscriptBox["p", "*"]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Delta]\[Phi]s", "[", "s_", "]"}], "=", 
    RowBox[{"Ys", "[", 
     RowBox[{"[", "2", "]"}], "]"}]}], ";", 
   RowBox[{
    RowBox[{"\[Delta]\[Phi]t", "[", "t_", "]"}], "=", 
    RowBox[{"Yt", "[", 
     RowBox[{"[", "2", "]"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"\[Delta]\[Theta]", "=", 
    RowBox[{"\[Theta]", "-", 
     SuperscriptBox["\[Theta]", "*"]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Delta]\[Theta]s", "[", "s_", "]"}], "=", 
    RowBox[{"Ys", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], ";", 
   RowBox[{
    RowBox[{"\[Delta]\[Theta]t", "[", "t_", "]"}], "=", 
    RowBox[{"Yt", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"\[Delta]p", "=", 
    RowBox[{"p", "-", 
     SuperscriptBox["p", "*"]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Delta]\[Psi]s", "[", "s_", "]"}], "=", 
    RowBox[{"Ys", "[", 
     RowBox[{"[", "2", "]"}], "]"}]}], ";", 
   RowBox[{
    RowBox[{"\[Delta]\[Psi]t", "[", "t_", "]"}], "=", 
    RowBox[{"Yt", "[", 
     RowBox[{"[", "2", "]"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"\[Delta]\[Theta]", "=", 
    RowBox[{"\[Theta]", "-", 
     SuperscriptBox["\[Theta]", "*"]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     OverscriptBox["\[Delta]ps", "."], "[", "s_", "]"}], "=", 
    RowBox[{"Ys", "[", 
     RowBox[{"[", "3", "]"}], "]"}]}], ";", 
   RowBox[{
    RowBox[{
     OverscriptBox["\[Delta]pt", "."], "[", "t_", "]"}], "=", 
    RowBox[{"Yt", "[", 
     RowBox[{"[", "3", "]"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"\[Delta]", 
     OverscriptBox["p", "."]}], "=", 
    RowBox[{
     OverscriptBox["p", "."], "-", 
     SuperscriptBox[
      OverscriptBox["p", "."], "*"]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     OverscriptBox["\[Delta]\[Theta]s", "."], "[", "s_", "]"}], "=", 
    RowBox[{"Ys", "[", 
     RowBox[{"[", "4", "]"}], "]"}]}], ";", 
   RowBox[{
    RowBox[{
     OverscriptBox["\[Delta]\[Theta]t", "."], "[", "t_", "]"}], "=", 
    RowBox[{"Yt", "[", 
     RowBox[{"[", "4", "]"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"\[Delta]", 
     OverscriptBox["\[Theta]", "."]}], "=", 
    RowBox[{
     OverscriptBox["\[Theta]", "."], "-", 
     SuperscriptBox[
      OverscriptBox["\[Theta]", "."], "*"]}]}], "*)"}], "\[IndentingNewLine]",
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Delta]ps", "[", "s_", "]"}], "=", 
    RowBox[{"Ys", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], ";", 
   RowBox[{
    RowBox[{"\[Delta]pt", "[", "t_", "]"}], "=", 
    RowBox[{"Yt", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"\[Delta]p", "=", 
    RowBox[{"p", "-", 
     SuperscriptBox["p", "*"]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Delta]\[Theta]s", "[", "s_", "]"}], "=", 
    RowBox[{"Ys", "[", 
     RowBox[{"[", "2", "]"}], "]"}]}], ";", 
   RowBox[{
    RowBox[{"\[Delta]\[Theta]t", "[", "t_", "]"}], "=", 
    RowBox[{"Yt", "[", 
     RowBox[{"[", "2", "]"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"\[Delta]\[Theta]", "=", 
    RowBox[{"\[Theta]", "-", 
     SuperscriptBox["\[Theta]", "*"]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     OverscriptBox["\[Delta]ps", "."], "[", "s_", "]"}], "=", 
    RowBox[{"Ys", "[", 
     RowBox[{"[", "3", "]"}], "]"}]}], ";", 
   RowBox[{
    RowBox[{
     OverscriptBox["\[Delta]pt", "."], "[", "t_", "]"}], "=", 
    RowBox[{"Yt", "[", 
     RowBox[{"[", "3", "]"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"\[Delta]", 
     OverscriptBox["p", "."]}], "=", 
    RowBox[{
     OverscriptBox["p", "."], "-", 
     SuperscriptBox[
      OverscriptBox["p", "."], "*"]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     OverscriptBox["\[Delta]\[Theta]s", "."], "[", "s_", "]"}], "=", 
    RowBox[{"Ys", "[", 
     RowBox[{"[", "4", "]"}], "]"}]}], ";", 
   RowBox[{
    RowBox[{
     OverscriptBox["\[Delta]\[Theta]t", "."], "[", "t_", "]"}], "=", 
    RowBox[{"Yt", "[", 
     RowBox[{"[", "4", "]"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"\[Delta]", 
     OverscriptBox["\[Theta]", "."]}], "=", 
    RowBox[{
     OverscriptBox["\[Theta]", "."], "-", 
     SuperscriptBox[
      OverscriptBox["\[Theta]", "."], "*"]}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["p", "*"], "[", "t_", "]"}], ",", 
     RowBox[{
      SubscriptBox["\[Theta]", "*"], "[", "t_", "]"}], ",", 
     RowBox[{
      SubscriptBox[
       OverscriptBox["p", "."], "*"], "[", "t_", "]"}], ",", 
     RowBox[{
      SubscriptBox[
       OverscriptBox["\[Theta]", "."], "*"], "[", "t_", "]"}]}], "}"}], "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Delta]pt", "[", "t", "]"}], ",", 
      RowBox[{"\[Delta]\[Theta]t", "[", "t", "]"}], ",", 
      RowBox[{
       OverscriptBox["\[Delta]pt", "."], "[", "t", "]"}], ",", 
      RowBox[{
       OverscriptBox["\[Delta]\[Theta]t", "."], "[", "t", "]"}]}], "}"}], "+", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["p", "est"], "[", "t", "]"}], ",", 
      RowBox[{
       SubscriptBox["\[Theta]", "est"], "[", "t", "]"}], ",", 
      RowBox[{
       RowBox[{
        SubscriptBox["p", "est"], "'"}], "[", "t", "]"}], ",", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[Theta]", "est"], "'"}], "[", "t", "]"}]}], "}"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7705756750769176`*^9, 3.7705757217652183`*^9}, 
   3.7705758044359*^9, {3.77057815439005*^9, 3.770578161123704*^9}, {
   3.7705782946608458`*^9, 3.770578307583511*^9}, {3.7705783954334507`*^9, 
   3.770578436610564*^9}, {3.770883576416314*^9, 3.7708835894259443`*^9}, {
   3.77090426245887*^9, 3.77090430832786*^9}, {3.7709148624496694`*^9, 
   3.770914938504821*^9}, {3.770915770992673*^9, 3.770915973191541*^9}, {
   3.77091600811565*^9, 3.7709160329899936`*^9}, 3.7709161950213842`*^9, {
   3.7709196921834373`*^9, 3.770919875814159*^9}, {3.770920947637501*^9, 
   3.770921262486328*^9}, {3.7709214076441545`*^9, 3.7709214579783096`*^9}, {
   3.770921496395183*^9, 3.770921588063266*^9}, {3.7709279774760675`*^9, 
   3.7709279778984423`*^9}, {3.7715616952164583`*^9, 3.771561715628318*^9}, {
   3.7715617564770885`*^9, 3.7715619648677955`*^9}, 3.771566455771974*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",ExpressionUUID->"5f0fb54e-fe39-4bdf-99c4-5303d8a16f7a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", 
     FractionBox[
      RowBox[{"5000", " ", 
       RowBox[{"(", 
        RowBox[{"0.`", "\[VeryThinSpace]", "+", 
         RowBox[{"123.4567901234568`", " ", 
          RowBox[{"(", 
           RowBox[{"0.`", "\[VeryThinSpace]", "+", 
            FractionBox["9.81`", 
             SuperscriptBox["s", "3"]]}], ")"}]}]}], ")"}]}], 
      RowBox[{"100", "+", 
       SuperscriptBox["s", "2"]}]], ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", 
     FractionBox[
      RowBox[{"5000", " ", 
       RowBox[{"(", 
        RowBox[{"0.`", "\[VeryThinSpace]", "+", 
         RowBox[{"123.4567901234568`", " ", 
          RowBox[{"(", 
           RowBox[{"0.`", "\[VeryThinSpace]", "-", 
            FractionBox["9.81`", 
             SuperscriptBox["s", "3"]]}], ")"}]}]}], ")"}]}], 
      RowBox[{"100", "+", 
       SuperscriptBox["s", "2"]}]], ",", "0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", 
     FractionBox[
      RowBox[{"5000", " ", 
       RowBox[{"(", 
        RowBox[{"0.`", "\[VeryThinSpace]", "+", 
         RowBox[{"123.4567901234568`", " ", 
          RowBox[{"(", 
           RowBox[{"0.`", "\[VeryThinSpace]", "-", 
            FractionBox["98.3116998`", 
             SuperscriptBox["s", "3"]]}], ")"}]}]}], ")"}]}], 
      RowBox[{"100", "+", 
       SuperscriptBox["s", "2"]}]], ",", "0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", 
     FractionBox[
      RowBox[{"5000", " ", 
       RowBox[{"(", 
        RowBox[{"0.`", "\[VeryThinSpace]", "+", 
         RowBox[{"123.4567901234568`", " ", 
          RowBox[{"(", 
           RowBox[{"0.`", "\[VeryThinSpace]", "+", 
            FractionBox["1", "s"]}], ")"}]}]}], ")"}]}], 
      RowBox[{"100", "+", 
       SuperscriptBox["s", "2"]}]], ",", "0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", 
     FractionBox[
      RowBox[{"5000", " ", 
       RowBox[{"(", 
        RowBox[{"0.`", "\[VeryThinSpace]", "+", 
         RowBox[{"123.4567901234568`", " ", 
          RowBox[{"(", 
           RowBox[{"0.`", "\[VeryThinSpace]", "+", 
            FractionBox["1", "s"]}], ")"}]}]}], ")"}]}], 
      RowBox[{"100", "+", 
       SuperscriptBox["s", "2"]}]], ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "0.`", ",", 
     FractionBox[
      RowBox[{"5000", " ", 
       RowBox[{"(", 
        RowBox[{"0.`", "\[VeryThinSpace]", "+", 
         FractionBox["70.42253521126761`", "s"]}], ")"}]}], 
      RowBox[{"100", "+", 
       SuperscriptBox["s", "2"]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", 
     FractionBox[
      RowBox[{"5000", " ", 
       RowBox[{"(", 
        RowBox[{"0.`", "\[VeryThinSpace]", "+", 
         RowBox[{"123.4567901234568`", " ", 
          RowBox[{"(", 
           RowBox[{"0.`", "\[VeryThinSpace]", "+", 
            FractionBox["9.81`", 
             SuperscriptBox["s", "4"]]}], ")"}]}]}], ")"}]}], 
      RowBox[{"100", "+", 
       SuperscriptBox["s", "2"]}]], ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", 
     FractionBox[
      RowBox[{"5000", " ", 
       RowBox[{"(", 
        RowBox[{"0.`", "\[VeryThinSpace]", "+", 
         RowBox[{"123.4567901234568`", " ", 
          RowBox[{"(", 
           RowBox[{"0.`", "\[VeryThinSpace]", "-", 
            FractionBox["9.81`", 
             SuperscriptBox["s", "4"]]}], ")"}]}]}], ")"}]}], 
      RowBox[{"100", "+", 
       SuperscriptBox["s", "2"]}]], ",", "0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", 
     FractionBox[
      RowBox[{"5000", " ", 
       RowBox[{"(", 
        RowBox[{"0.`", "\[VeryThinSpace]", "+", 
         RowBox[{"123.4567901234568`", " ", 
          RowBox[{"(", 
           RowBox[{"0.`", "\[VeryThinSpace]", "-", 
            FractionBox["98.3116998`", 
             SuperscriptBox["s", "4"]]}], ")"}]}]}], ")"}]}], 
      RowBox[{"100", "+", 
       SuperscriptBox["s", "2"]}]], ",", "0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", 
     FractionBox[
      RowBox[{"5000", " ", 
       RowBox[{"(", 
        RowBox[{"0.`", "\[VeryThinSpace]", "+", 
         RowBox[{"123.4567901234568`", " ", 
          RowBox[{"(", 
           RowBox[{"0.`", "\[VeryThinSpace]", "+", 
            FractionBox["1", 
             SuperscriptBox["s", "2"]]}], ")"}]}]}], ")"}]}], 
      RowBox[{"100", "+", 
       SuperscriptBox["s", "2"]}]], ",", "0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", 
     FractionBox[
      RowBox[{"5000", " ", 
       RowBox[{"(", 
        RowBox[{"0.`", "\[VeryThinSpace]", "+", 
         RowBox[{"123.4567901234568`", " ", 
          RowBox[{"(", 
           RowBox[{"0.`", "\[VeryThinSpace]", "+", 
            FractionBox["1", 
             SuperscriptBox["s", "2"]]}], ")"}]}]}], ")"}]}], 
      RowBox[{"100", "+", 
       SuperscriptBox["s", "2"]}]], ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "0.`", ",", 
     FractionBox[
      RowBox[{"5000", " ", 
       RowBox[{"(", 
        RowBox[{"0.`", "\[VeryThinSpace]", "+", 
         FractionBox["70.42253521126761`", 
          SuperscriptBox["s", "2"]]}], ")"}]}], 
      RowBox[{"100", "+", 
       SuperscriptBox["s", "2"]}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7715619660645943`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->
  "Out[141]=",ExpressionUUID->"81a06d98-312e-4f83-9ab8-4e4e523eec11"]
}, Open  ]],

Cell["PARTE II - REPRESENTA\[CapitalCCedilla]\[CapitalATilde]O UTILIZANDO A \
EDO", "Text",
 CellChangeTimes->{{3.770925702864029*^9, 3.7709257407174673`*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,ExpressionUUID->"fc70a002-12e6-46e3-9300-42823e9fa4a2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"sys1", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"eq1", "[", 
       RowBox[{
        RowBox[{"p", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]", "[", "t", "]"}], ",", 
        RowBox[{"u", "[", "t", "]"}]}], "]"}], ",", 
      RowBox[{"eq2", "[", 
       RowBox[{
        RowBox[{"p", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]", "[", "t", "]"}], ",", "0"}], "]"}]}], "}"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"p", "[", "t", "]"}], "->", 
       RowBox[{"u1", "[", "t", "]"}]}], ",", 
      RowBox[{
       RowBox[{"\[Theta]", "[", "t", "]"}], "->", 
       RowBox[{"u2", "[", "t", "]"}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"p", "'"}], "[", "t", "]"}], "->", 
       RowBox[{"u3", "[", "t", "]"}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "->", 
       RowBox[{"u4", "[", "t", "]"}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"p", "''"}], "[", "t", "]"}], "->", 
       RowBox[{
        RowBox[{"u3", "'"}], "[", "t", "]"}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Theta]", "''"}], "[", "t", "]"}], "->", 
       RowBox[{
        RowBox[{"u4", "'"}], "[", "t", "]"}]}], ",", 
      RowBox[{
       RowBox[{"u", "[", "t", "]"}], "->", 
       RowBox[{"500", " ", 
        SubscriptBox["s", 
         RowBox[{"10", " ", "t"}]]}]}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"sys1", "//", "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"solseqs", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{"sys1", "\[Equal]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"u3", "'"}], "[", "t", "]"}], ",", 
        RowBox[{
         RowBox[{"u4", "'"}], "[", "t", "]"}]}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol1", "=", 
   RowBox[{
    RowBox[{"solseqs", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol2", "=", 
   RowBox[{
    RowBox[{"solseqs", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.770926661374818*^9, 3.7709266613867865`*^9}, 
   3.770926702545282*^9, {3.7709267375241337`*^9, 3.7709268565167737`*^9}, {
   3.770927008817968*^9, 3.770927038991823*^9}, 3.7709271101922283`*^9, {
   3.770931539257978*^9, 3.770931545956653*^9}, 3.7709352778440666`*^9, {
   3.770935985854435*^9, 3.770936006503343*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->
  "In[233]:=",ExpressionUUID->"dd113f17-8e85-44fd-924e-22df4628eb30"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{
        RowBox[{
         RowBox[{"-", "500"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"10", " ", "t"}], "]"}]}], "+", 
        RowBox[{
         SubscriptBox["cc", "amort"], " ", 
         RowBox[{"u3", "[", "t", "]"}]}], "+", 
        RowBox[{"l", " ", "m2", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"u2", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{"u4", "[", "t", "]"}], "2"]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"M1", "+", "m2"}], ")"}], " ", 
         RowBox[{
          SuperscriptBox["u3", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"l", " ", "m2", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"u2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["u4", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}]},
      {
       RowBox[{
        RowBox[{
         RowBox[{"-", "g"}], " ", "l", " ", "m2", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"u2", "[", "t", "]"}], "]"}]}], "+", 
        RowBox[{"\[Gamma]", " ", 
         RowBox[{"u4", "[", "t", "]"}]}], "-", 
        RowBox[{"l", " ", "m2", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"u2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["u3", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"J", "+", 
           RowBox[{
            SuperscriptBox["l", "2"], " ", "m2"}]}], ")"}], " ", 
         RowBox[{
          SuperscriptBox["u4", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7709266681722803`*^9, 3.770926857950283*^9, 
  3.7709270508964124`*^9, 3.7709271134841604`*^9, 3.770928002839887*^9, 
  3.7709315489402847`*^9, 3.7709319245214205`*^9, 3.770935280415943*^9, 
  3.7709360188393116`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->
  "Out[234]//MatrixForm=",ExpressionUUID->"2a494a47-0ae1-40f2-b0ba-\
2c94a9b009ec"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"vars", "=", 
   RowBox[{"{", 
    RowBox[{"u1", ",", "u2", ",", "u3", ",", "u4"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eqcs", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"u1", "'"}], "[", "t", "]"}], "\[Equal]", 
      RowBox[{"u3", "[", "t", "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"u2", "'"}], "[", "t", "]"}], "\[Equal]", 
      RowBox[{"u4", "[", "t", "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"u3", "'"}], "[", "t", "]"}], "==", "sol1"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"u4", "'"}], "[", "t", "]"}], "==", "sol2"}], ",", 
     RowBox[{
      RowBox[{"u1", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{"u2", "[", "0", "]"}], "\[Equal]", "\[Pi]"}], ",", 
     RowBox[{
      RowBox[{"u3", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{"u4", "[", "0", "]"}], "\[Equal]", "0"}]}], 
    RowBox[{"(*", 
     RowBox[{",", 
      RowBox[{
       RowBox[{
        RowBox[{"u1", "'"}], "[", "0", "]"}], "\[Equal]", "0"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"u2", "'"}], "[", "0", "]"}], "\[Equal]", "0"}]}], "*)"}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"tini", ",", "tfin"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "6"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sols2", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"eqcs", "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"M1", "\[Rule]", "10"}], ",", 
        RowBox[{"m2", "\[Rule]", "80"}], ",", 
        RowBox[{
         SubscriptBox["cc", "amort"], "\[Rule]", ".1"}], ",", 
        RowBox[{"J", "\[Rule]", "100"}], ",", 
        RowBox[{"l", "\[Rule]", "1"}], ",", 
        RowBox[{"\[Gamma]", "\[Rule]", ".01"}], ",", 
        RowBox[{"g", "\[Rule]", "9.81"}]}], "}"}]}], ",", "vars", ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "tini", ",", "tfin"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"pnl", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"sols2", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"\[Theta]nl", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"sols2", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  OverscriptBox["pnl", "."], "=", 
  RowBox[{
   RowBox[{
    RowBox[{"sols2", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "[", 
    RowBox[{"[", "3", "]"}], "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  OverscriptBox["\[Theta]nl", "."], "=", 
  RowBox[{
   RowBox[{
    RowBox[{"sols2", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "[", 
    RowBox[{"[", "4", "]"}], "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["p", "nonlin"], "[", "t_", "]"}], "=", 
   RowBox[{"pnl", "[", "t", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["\[Theta]", "nonlin"], "[", "t_", "]"}], "=", 
   RowBox[{"\[Theta]nl", "[", "t", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox[
     OverscriptBox["p", "."], "nonlin"], "[", "t_", "]"}], "=", 
   RowBox[{
    OverscriptBox["pnl", "."], "[", "t", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox[
     OverscriptBox["\[Theta]", "."], "nonlin"], "[", "t_", "]"}], "=", 
   RowBox[{
    OverscriptBox["\[Theta]nl", "."], "[", "t", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.770929846644512*^9, 3.7709298793818426`*^9}, {
   3.770935642942375*^9, 3.770935661957056*^9}, {3.770935788003145*^9, 
   3.7709358895947585`*^9}, {3.7709359215233536`*^9, 3.770935922035984*^9}, 
   3.770936033103177*^9, {3.7709360855938044`*^9, 3.7709361395253873`*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->
  "In[250]:=",ExpressionUUID->"32d07137-949e-45d3-b77b-4b14606ed9b7"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["InterpolatingFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"], 
               ImageSizeCache -> {22., {0., 22.}}], Appearance -> None, 
              ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{{}, {}, 
               TagBox[{
                 RGBColor[0.368417, 0.506779, 0.709798], 
                 AbsoluteThickness[1], 
                 Opacity[1.], 
                 LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA88dx3mtMez4AwE7RmKGCPKm+gdgd
Crk/HNgrA7briz8vlAOEtBfKP/NbQea4wLo/j/RD6Ati0z9fWuFtkdPQP8yH
F2FrmNk/KGqRfHnm2j+j2m5OyyrgP5n3qPozWuA/ZlmCWdBP4z9IyQvw6izg
P0YlD0Y7uOY/d5PyFkTw3T+JpeQbvRDqP9yQgyrdNN8/0o3qXq4v7T+IIsVK
eojiP5zhtMECSfA/GBmt7cZG5j9SsIwKZt3xP5oIemCQwuc/OdkIyNRp8z9B
0ZvxPovmP6+oQXb2F/U/HIjt0PsV5D8orBLbT6n2P2LErlTwdOM/MFagMFxc
+D+UKuOHQfXlP2pa0vpzB/o/iCU/ss8Y6j+mkpx7w5X7Px+Ana5v4ew/cXEj
7cVF/T+c376AB1LtPz+EQhUA2f4/4a+lhNaR7D/OHg+X9kYAQNc4wFFuZ+0/
lijP3XIdAUDCBC12CcDwP19M2/+K5QFAtk5iYg+P8z9ww0WafL4CQF0ytLp0
FfY/glT8DwqJA0BTaZx2ARL3P60SBUCdTwRAL53Jbgsj9z8fJGzoCScFQMYM
bPxzi/c/k08fbBLwBUAeUm7D+SP5P07OMGj0yQZAnmrJoD3Q+z8iepQe3J8H
QA5j3cah9P0/9z9EsF9nCEAkwKJSEor+PxRZUrq8PwlARqI6DRLg/T8yjKyf
tQkKQAUj9Qt8RP0/aexYP7TPCkDVupl26bv9P+efY1eMpgtAnbxq4pFj/z9n
bbpKAG8MQBOMeeTJcwBALo5vtk1IDUBMndNcT6IAQPfIcP02Ew5APel+IKgw
AEDYMMT+JdoOQIZBPB5Kcv8/Aex1eO6xD0ASJVBCzrP/P5bguWapPRBAtDdF
R4avAEDO9GdNyKoQQN4maoJA1QFAkx8/EeoVEUAywzJRtoACQFhXvMLZeRFA
qLa42kuOAkDBuGgwNuYRQIXAnpFYfwJAKye7i2BLEkDDSrKJHPgCQCGsNsSN
rhJA1K5HtAoeBEC7WuG4JxoTQHBpgXblqgVAVhYym49+E0DdYiOB8rYGQJT7
sTlk6xNA3IFfl4kSB0Bf91q1O1YUQEyrYnGhBwdAKgCqHuG5FEDpBuq/g0gH
QJkyKETzJRVARujJCoI2CEAJckxX04oVQFZ1tCl+XAlAHdufJiD4FUAeNpR9
9CwKQL1aHNNvYxZA+vf21JMlCkBe5z5tjccWQJK/eo72qglAop2Qwxc0F0BM
Hk+7r2UJQOdgiAdwmRdAr1bUZIbOCUAI5Sz5//8XQNYUZ+e1pgpA5ZG65A==

                  "]]}, 
                Annotation[#, "Charting`Private`Tag$62174#1"]& ]}, {}, {}}, 
             AspectRatio -> 1, Axes -> {False, False}, 
             AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction -> 
             Identity, Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
             Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], 
             FrameTicks -> {{{}, {}}, {{}, {}}}, GridLines -> {None, None}, 
             GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImagePadding -> All, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], 
             Method -> {
              "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
               AbsolutePointSize[6], "ScalingFunctions" -> None, 
               "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                   (Identity[#]& )[
                    Part[#, 1]], 
                   (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                   (Identity[#]& )[
                    Part[#, 1]], 
                   (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
             PlotRange -> {{0., 6.}, {0., 3.3314016416867203`}}, 
             PlotRangeClipping -> True, PlotRangePadding -> {{
                Scaled[0.1], 
                Scaled[0.1]}, {
                Scaled[0.1], 
                Scaled[0.1]}}, Ticks -> {Automatic, Automatic}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "6.`"}], "}"}], "}"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"scalar\"", "SummaryItem"]}]}}, AutoDelete -> False,
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], Appearance -> None, 
              ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{{}, {}, 
               TagBox[{
                 RGBColor[0.368417, 0.506779, 0.709798], 
                 AbsoluteThickness[1], 
                 Opacity[1.], 
                 LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA88dx3mtMez4AwE7RmKGCPKm+gdgd
Crk/HNgrA7briz8vlAOEtBfKP/NbQea4wLo/j/RD6Ati0z9fWuFtkdPQP8yH
F2FrmNk/KGqRfHnm2j+j2m5OyyrgP5n3qPozWuA/ZlmCWdBP4z9IyQvw6izg
P0YlD0Y7uOY/d5PyFkTw3T+JpeQbvRDqP9yQgyrdNN8/0o3qXq4v7T+IIsVK
eojiP5zhtMECSfA/GBmt7cZG5j9SsIwKZt3xP5oIemCQwuc/OdkIyNRp8z9B
0ZvxPovmP6+oQXb2F/U/HIjt0PsV5D8orBLbT6n2P2LErlTwdOM/MFagMFxc
+D+UKuOHQfXlP2pa0vpzB/o/iCU/ss8Y6j+mkpx7w5X7Px+Ana5v4ew/cXEj
7cVF/T+c376AB1LtPz+EQhUA2f4/4a+lhNaR7D/OHg+X9kYAQNc4wFFuZ+0/
lijP3XIdAUDCBC12CcDwP19M2/+K5QFAtk5iYg+P8z9ww0WafL4CQF0ytLp0
FfY/glT8DwqJA0BTaZx2ARL3P60SBUCdTwRAL53Jbgsj9z8fJGzoCScFQMYM
bPxzi/c/k08fbBLwBUAeUm7D+SP5P07OMGj0yQZAnmrJoD3Q+z8iepQe3J8H
QA5j3cah9P0/9z9EsF9nCEAkwKJSEor+PxRZUrq8PwlARqI6DRLg/T8yjKyf
tQkKQAUj9Qt8RP0/aexYP7TPCkDVupl26bv9P+efY1eMpgtAnbxq4pFj/z9n
bbpKAG8MQBOMeeTJcwBALo5vtk1IDUBMndNcT6IAQPfIcP02Ew5APel+IKgw
AEDYMMT+JdoOQIZBPB5Kcv8/Aex1eO6xD0ASJVBCzrP/P5bguWapPRBAtDdF
R4avAEDO9GdNyKoQQN4maoJA1QFAkx8/EeoVEUAywzJRtoACQFhXvMLZeRFA
qLa42kuOAkDBuGgwNuYRQIXAnpFYfwJAKye7i2BLEkDDSrKJHPgCQCGsNsSN
rhJA1K5HtAoeBEC7WuG4JxoTQHBpgXblqgVAVhYym49+E0DdYiOB8rYGQJT7
sTlk6xNA3IFfl4kSB0Bf91q1O1YUQEyrYnGhBwdAKgCqHuG5FEDpBuq/g0gH
QJkyKETzJRVARujJCoI2CEAJckxX04oVQFZ1tCl+XAlAHdufJiD4FUAeNpR9
9CwKQL1aHNNvYxZA+vf21JMlCkBe5z5tjccWQJK/eo72qglAop2Qwxc0F0BM
Hk+7r2UJQOdgiAdwmRdAr1bUZIbOCUAI5Sz5//8XQNYUZ+e1pgpA5ZG65A==

                  "]]}, 
                Annotation[#, "Charting`Private`Tag$62174#1"]& ]}, {}, {}}, 
             AspectRatio -> 1, Axes -> {False, False}, 
             AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction -> 
             Identity, Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
             Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], 
             FrameTicks -> {{{}, {}}, {{}, {}}}, GridLines -> {None, None}, 
             GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImagePadding -> All, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], 
             Method -> {
              "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
               AbsolutePointSize[6], "ScalingFunctions" -> None, 
               "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                   (Identity[#]& )[
                    Part[#, 1]], 
                   (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                   (Identity[#]& )[
                    Part[#, 1]], 
                   (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
             PlotRange -> {{0., 6.}, {0., 3.3314016416867203`}}, 
             PlotRangeClipping -> True, PlotRangePadding -> {{
                Scaled[0.1], 
                Scaled[0.1]}, {
                Scaled[0.1], 
                Scaled[0.1]}}, Ticks -> {Automatic, Automatic}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "6.`"}], "}"}], "}"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"scalar\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["3", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Hermite\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["False", "SummaryItem"]}]}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  InterpolatingFunction[{{0., 6.}}, {
   5, 7, 1, {414}, {4}, 0, 0, 0, 0, Automatic, {}, {}, False}, CompressedData["
1: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
Rx4sdWrmoI2Rdqf2EAf//eXI4/8Ct5ysEg==
   "], {Developer`PackedArrayForm, CompressedData["
1:eJwV04FGIAgUBdC2TZIkSZKkTZIkSZIkSUaSJEmSJEmSNklGkiRJkiQjSZsk
SZIkSZIkSZIkSZIkSZIkyRh7epz7A/e+fxr+rWj7KyAg4L/vcIEEEUwIoYQR
TgSRRBFNDLHEEU8CiSSRTAqppJFOBplkkU0OueSRTwGFFPGDYkoopYxyKqik
impqqKWOehpopIlmWmiljXY66KSLn3TTQy999DPAIEMMM8IoY4wzwS8mmWKa
GWaZY54FFllimRVWWWOdDTbZYpsddtljnwMOOeKYE04545wLLrnimhtuueOe
Bx554pkXXnnjnQ8++eI3fwiwgUCCCCaEUMIIJ4JIoogmhljiiCeBRJJIJoVU
0kgng0yyyCaHXPLIp4BCivhBMSWUUkY5FVRSRTU11FJHPQ000kQzLbTyPfJ2
Ouiki59000MvffQzwCBDDDPCKGOMM8EvJplimhlmmWOeBRZZYpkVVlljnQ02
2WKbHXbZY58DDjnimBNOOeOcCy654pobbrnjngceeeKZF155450PPvniN3/4
fv5AgggmhFDCCCeCSKKIJoZY4ogngUSSSCaFVNJIJ4NMssgmh1zyyKeAQor4
QTEllFJGORVUUkU1NdRSRz0NNNJEMy200kY7HXTSxU+66aGXPvoZYJAhhhlh
lDHGmeAXk0wxzQyzzDHPAossscwKq6yxzgabbLHNDrvssc8BhxxxzAmnnHHO
BZdccc0Nt9xxzwOPPPHMC6+88c4Hn3zxmz8E/K1/gggmhFDCCCeCSKKIJoZY
4ogngUSSSCaFVNJIJ4NMssgmh1zy+B+DF8ZT
    "], CompressedData["
1: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
QMkYjrY0KlQ/WVn+nkZEXSS5CGfm+v8BwIXF+g==
    "]}, {Automatic}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7709360516535635`*^9, 3.7709361407860155`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->
  "Out[254]=",ExpressionUUID->"47fb9109-1f23-4522-b2ed-93d862db30c4"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["InterpolatingFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"], 
               ImageSizeCache -> {22., {0., 22.}}], Appearance -> None, 
              ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{{}, {}, 
               TagBox[{
                 RGBColor[0.368417, 0.506779, 0.709798], 
                 AbsoluteThickness[1], 
                 Opacity[1.], 
                 LineBox[CompressedData["
1:eJwV0Hs01ncAx/GH0u/7+5U8Lo+n82w8KJGajI7J7fupMJXLmdxzUG2uFY9N
a7FOiYYxiVlCzGKYkaFc21zCpkOLjltaLrmlTs3tkdvsj/d5///SPBni9Jks
j8czX+//z7RKngXbRVhu+8DKeUmTReH9y71qXDUd/+SJd7qAxd7UDdEVwr9o
mnHSpe4mgqTZQxObT3bRqZc5daMmBA+/EZ4IvtFHxYf+Zq2qGPzUf9ahXe85
dW06nj0RzcDPI8rjkeMIFVWaW0vvMrDRVrAxqxqjB9pF54NFBHF5o+/V86do
vKglKsmF4HHilHfJ3lc0tF3jt9RjBJlDFQ2yh99QJn5yWHSUwOlOAuc3+JYW
JTS12cUQ7O8jbd2BM/TqpStnrfgsSgsOnJsXztERZJcMt7LQLVYacCycp8eq
YpwOW3AwcM0x8PKS0o+D5YMeunAI8nz87nPmHd2d1OmwzYBD/vXMiKbvl2ie
4mp6iZiDRLL91QPrFTpQPmeWdYQDjT4o4PWtUjQm8c9d5dChrvDDvA0PyWU5
GWGxHNJ0OwfD1GTw+or0+gM1Dj52A2vxL2QwUCsZm45kEdpkfTPyvixMbtlO
Lo4TRDkvK3BxG/CPlu+W1WKCX5XkkOW4EfJsXtVcEYF4x+kJVkcOgabJFgcz
CFIcxaeV3sihW7x9ucKewKHDIGD2z03YGanNZnYw0LqQqv40m4HX5A373yMZ
LFCrOz7+BHJxt9vqrzFQ8XCqqaMspAsFt2RkCAwTirMrWQ5+dRuda8MJAqfd
aUUnhwT1wHTzcoLx7FNuCfmb8bUkuIitIfA/U3OEF7IFWjqlvV+2EOh/F3LX
3lYeArFjRa4Gi4W20BVj5a0Q/Ujz42tY9Bo0r2r3b8WHC19YdzpwkJkOP/+6
TAHUPbwx4ea61/Nqv0ILPkx8S9tML697zvrbtxXx8SS6xsTIlEOKmCpOCRQh
KTC77Szi4O5W19j3lSKUNTdJbQ05NFQFGBiPKWKPi1pPsh2H3Tq13/oeVUKx
6s8asuv+msXGzYklSlBK4Y2MprGo9Ryq0hEpQ/dtVk/3IIGrqmFG0kVlXGzu
4WudIEhdKtv/6UtltIZoqvebEvgseFaauargQtAu5NgR6PGK1IeqVXBvX7Wj
pTVBuqGu1Yy2AF339B+1rDBgw+zcuuIFSDNfjtUuYKA2kL1TQypASoSwQS+R
Qb3n+10hp1SRO0jUdwwz8B63PJPYqooY146P/pAQ5GZdaxLuE6L/qdFxz8V1
f99YJjRdCPxr79ajz4K82LO4tibErmflAb8YsfgPFtmUWQ==
                  "]]}, 
                Annotation[#, "Charting`Private`Tag$62228#1"]& ]}, {}, {}}, 
             AspectRatio -> 1, Axes -> {False, False}, 
             AxesLabel -> {None, None}, 
             AxesOrigin -> {0, 2.9359117567338853`}, DisplayFunction -> 
             Identity, Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
             Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], 
             FrameTicks -> {{{}, {}}, {{}, {}}}, GridLines -> {None, None}, 
             GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImagePadding -> All, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], 
             Method -> {
              "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
               AbsolutePointSize[6], "ScalingFunctions" -> None, 
               "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                   (Identity[#]& )[
                    Part[#, 1]], 
                   (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                   (Identity[#]& )[
                    Part[#, 1]], 
                   (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
             PlotRange -> {{0., 6.}, {2.9359117567338853`, 3.32546379013641}},
              PlotRangeClipping -> True, PlotRangePadding -> {{
                Scaled[0.1], 
                Scaled[0.1]}, {
                Scaled[0.1], 
                Scaled[0.1]}}, Ticks -> {Automatic, Automatic}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "6.`"}], "}"}], "}"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"scalar\"", "SummaryItem"]}]}}, AutoDelete -> False,
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], Appearance -> None, 
              ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{{}, {}, 
               TagBox[{
                 RGBColor[0.368417, 0.506779, 0.709798], 
                 AbsoluteThickness[1], 
                 Opacity[1.], 
                 LineBox[CompressedData["
1:eJwV0Hs01ncAx/GH0u/7+5U8Lo+n82w8KJGajI7J7fupMJXLmdxzUG2uFY9N
a7FOiYYxiVlCzGKYkaFc21zCpkOLjltaLrmlTs3tkdvsj/d5///SPBni9Jks
j8czX+//z7RKngXbRVhu+8DKeUmTReH9y71qXDUd/+SJd7qAxd7UDdEVwr9o
mnHSpe4mgqTZQxObT3bRqZc5daMmBA+/EZ4IvtFHxYf+Zq2qGPzUf9ahXe85
dW06nj0RzcDPI8rjkeMIFVWaW0vvMrDRVrAxqxqjB9pF54NFBHF5o+/V86do
vKglKsmF4HHilHfJ3lc0tF3jt9RjBJlDFQ2yh99QJn5yWHSUwOlOAuc3+JYW
JTS12cUQ7O8jbd2BM/TqpStnrfgsSgsOnJsXztERZJcMt7LQLVYacCycp8eq
YpwOW3AwcM0x8PKS0o+D5YMeunAI8nz87nPmHd2d1OmwzYBD/vXMiKbvl2ie
4mp6iZiDRLL91QPrFTpQPmeWdYQDjT4o4PWtUjQm8c9d5dChrvDDvA0PyWU5
GWGxHNJ0OwfD1GTw+or0+gM1Dj52A2vxL2QwUCsZm45kEdpkfTPyvixMbtlO
Lo4TRDkvK3BxG/CPlu+W1WKCX5XkkOW4EfJsXtVcEYF4x+kJVkcOgabJFgcz
CFIcxaeV3sihW7x9ucKewKHDIGD2z03YGanNZnYw0LqQqv40m4HX5A373yMZ
LFCrOz7+BHJxt9vqrzFQ8XCqqaMspAsFt2RkCAwTirMrWQ5+dRuda8MJAqfd
aUUnhwT1wHTzcoLx7FNuCfmb8bUkuIitIfA/U3OEF7IFWjqlvV+2EOh/F3LX
3lYeArFjRa4Gi4W20BVj5a0Q/Ujz42tY9Bo0r2r3b8WHC19YdzpwkJkOP/+6
TAHUPbwx4ea61/Nqv0ILPkx8S9tML697zvrbtxXx8SS6xsTIlEOKmCpOCRQh
KTC77Szi4O5W19j3lSKUNTdJbQ05NFQFGBiPKWKPi1pPsh2H3Tq13/oeVUKx
6s8asuv+msXGzYklSlBK4Y2MprGo9Ryq0hEpQ/dtVk/3IIGrqmFG0kVlXGzu
4WudIEhdKtv/6UtltIZoqvebEvgseFaauargQtAu5NgR6PGK1IeqVXBvX7Wj
pTVBuqGu1Yy2AF339B+1rDBgw+zcuuIFSDNfjtUuYKA2kL1TQypASoSwQS+R
Qb3n+10hp1SRO0jUdwwz8B63PJPYqooY146P/pAQ5GZdaxLuE6L/qdFxz8V1
f99YJjRdCPxr79ajz4K82LO4tibErmflAb8YsfgPFtmUWQ==
                  "]]}, 
                Annotation[#, "Charting`Private`Tag$62228#1"]& ]}, {}, {}}, 
             AspectRatio -> 1, Axes -> {False, False}, 
             AxesLabel -> {None, None}, 
             AxesOrigin -> {0, 2.9359117567338853`}, DisplayFunction -> 
             Identity, Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
             Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], 
             FrameTicks -> {{{}, {}}, {{}, {}}}, GridLines -> {None, None}, 
             GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImagePadding -> All, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], 
             Method -> {
              "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
               AbsolutePointSize[6], "ScalingFunctions" -> None, 
               "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                   (Identity[#]& )[
                    Part[#, 1]], 
                   (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                   (Identity[#]& )[
                    Part[#, 1]], 
                   (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
             PlotRange -> {{0., 6.}, {2.9359117567338853`, 3.32546379013641}},
              PlotRangeClipping -> True, PlotRangePadding -> {{
                Scaled[0.1], 
                Scaled[0.1]}, {
                Scaled[0.1], 
                Scaled[0.1]}}, Ticks -> {Automatic, Automatic}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "6.`"}], "}"}], "}"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"scalar\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["3", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Hermite\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["False", "SummaryItem"]}]}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  InterpolatingFunction[{{0., 6.}}, {
   5, 7, 1, {414}, {4}, 0, 0, 0, 0, Automatic, {}, {}, False}, CompressedData["
1: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
Rx4sdWrmoI2Rdqf2EAf//eXI4/8Ct5ysEg==
   "], {Developer`PackedArrayForm, CompressedData["
1:eJwV04FGIAgUBdC2TZIkSZKkTZIkSZIkSUaSJEmSJEmSNklGkiRJkiQjSZsk
SZIkSZIkSZIkSZIkSZIkyRh7epz7A/e+fxr+rWj7KyAg4L/vcIEEEUwIoYQR
TgSRRBFNDLHEEU8CiSSRTAqppJFOBplkkU0OueSRTwGFFPGDYkoopYxyKqik
impqqKWOehpopIlmWmiljXY66KSLn3TTQy999DPAIEMMM8IoY4wzwS8mmWKa
GWaZY54FFllimRVWWWOdDTbZYpsddtljnwMOOeKYE04545wLLrnimhtuueOe
Bx554pkXXnnjnQ8++eI3fwiwgUCCCCaEUMIIJ4JIoogmhljiiCeBRJJIJoVU
0kgng0yyyCaHXPLIp4BCivhBMSWUUkY5FVRSRTU11FJHPQ000kQzLbTyPfJ2
Ouiki59000MvffQzwCBDDDPCKGOMM8EvJplimhlmmWOeBRZZYpkVVlljnQ02
2WKbHXbZY58DDjnimBNOOeOcCy654pobbrnjngceeeKZF155450PPvniN3/4
fv5AgggmhFDCCCeCSKKIJoZY4ogngUSSSCaFVNJIJ4NMssgmh1zyyKeAQor4
QTEllFJGORVUUkU1NdRSRz0NNNJEMy200kY7HXTSxU+66aGXPvoZYJAhhhlh
lDHGmeAXk0wxzQyzzDHPAossscwKq6yxzgabbLHNDrvssc8BhxxxzAmnnHHO
BZdccc0Nt9xxzwOPPPHMC6+88c4Hn3zxmz8E/K1/gggmhFDCCCeCSKKIJoZY
4ogngUSSSCaFVNJIJ4NMssgmh1zy+B+DF8ZT
    "], CompressedData["
1:eJwt2Hc8lt/jP3BSruu+IpJklJU9y2hIzil5Z6VERca7UFQyKqGUUVYqs+ys
rCSRUMmxN9nc9m2vKElL/M77+/nd/z0f57rOda5znfE6t4iV48kLzExMTOos
TEy88keM/4jQINP//x2X/Z8tAl+OcfjrlCyJ/88q6RYDeuLWJQ84/+dclu2v
vxZ6lEQMav6fL5E//a1OPC6p9/6fE640zx81iik5nSvzf+6oblaVimovUYuo
MPrP812sdf+UzJVsS+k6+Z9LuC3UQztWSnwE5Az/M+3mn/KdO0nk3TU0+Ru7
J+tqWroERKcnt2r9wnZZlXrLJ38G5fP7B3//r30vF3/XrLdFAxcj5+exZwff
G5pKXUev/kY/GMNW+GLs/ea9Byp2Hy/5iK1/g+vt6bYg9FeF/5079gXVwGfV
9U+RhF2nNyf2L1r88v7RRHSq+ZzJLWEajGtWlycvpqPdJ7rvdArR4MfkPIGD
4dmoxZyVncRW0rVRPqOSh0pbWdZtEqRBoYvR8TkLb5Hx1wi/0e00uEnG+Hvn
j3dIzolv+b4ADQpwjHhkaJcghTtS4df5aPCBmVRl67ZydH9beB/TNhpkuZs0
vk2jCt3VGvskwU2DvY81btNDaxGroJbgMCcN8qqQKW7sjejLar6cFDsNXovl
esKR9Qn5tBwT+UPS4MUJK6Se14qof9x8i5lp0E2/f1dHdAdqOxT47PwvElYp
8j7NftyN+iSppMkFErpeXFZdu9+Lbvx5Ak6Mk5C6kfp9wGkApV5dfJVEJ+Hh
K1mpKjuHEcHjEz3RSMK7a/GrfzwYSPU4g1kBkdDF3NlXtHQEpTpFN2lnk7Di
o3pJiugYkho+9Fs5hoTGJ+J3MRmNo0tuZmdE/Eio2/Cr2lJnAn3hG7HScSZh
sumiA+/aBJq28Ns+Y0bCUYOdz4YdJpEV1Veo9Q8J36UJJI9FTKJbDy/vSdpF
wgOiuf/+V37x6JdvhwVI2PwnrUByZQLdNlRTdGYloT2TmM3zgxOoeT1fjNMi
AasELb7Wqo4jrrL5Xz5DBCwfa+hxnxpFW29xUfyNBHRoa4wflhtBfeES26Pf
E9C36leEiewweiH0j/bhLAI2ut3bf6i/D3krckboPyNgcUc/Zc7cjbguXOsf
CSega43ezcrBViRzpY7a+ZCAqftjbm3YUYf8BEvDd/jj+680xJzJLkauG8IO
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
    "]}, {Automatic}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7709360516535635`*^9, 3.7709361408219194`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->
  "Out[255]=",ExpressionUUID->"916cc017-05ca-4796-8350-b54b4656a02d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["InterpolatingFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"], 
               ImageSizeCache -> {22., {0., 22.}}], Appearance -> None, 
              ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{{}, {}, 
               TagBox[{
                 RGBColor[0.368417, 0.506779, 0.709798], 
                 AbsoluteThickness[1], 
                 Opacity[1.], 
                 LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA88dx3mtMez4AoAm5mqiAPam+gdgd
Crk/J3/xSVLh2T8vlAOEtBfKP09RT97UCfU/j/RD6Ati0z+rzcNFvRr8P8yH
F2FrmNk//hYE7vyi9T+j2m5OyyrgP7jtXxdjw9U/ZlmCWdBP4z8OdvnzYz3W
v0YlD0Y7uOY/Isc3A9n6yL+JpeQbvRDqP6r2seoOseM/0o3qXq4v7T9/thij
2JryP5zhtMECSfA/Zp4bXYBp7D9SsIwKZt3xP0DrTWvain0/OdkIyNRp8z+Z
A/4wImvmv6+oQXb2F/U/oLrR7cLN4r8orBLbT6n2P1PAnmwuP9A/MFagMFxc
+D+poWCOSxjyP2pa0vpzB/o/RMXqdT0D8z+mkpx7w5X7PyN7FluE8+A/cXEj
7cVF/T/JhJowMzPIvz+EQhUA2f4/RFb7lq1Dwr/OHg+X9kYAQKfOs7qkPec/
lijP3XIdAUBtsXnQ01T6P19M2/+K5QFA6MPTZDTE/D9ww0WafL4CQOztxDQN
HvE/glT8DwqJA0BXSklbiPPMP60SBUCdTwRANC9eQlFNb78fJGzoCScFQHyC
aZcrVeM/k08fbBLwBUCRVZQfgD/2P07OMGj0yQZAP147mHdZ+T8iepQe3J8H
QAvv58vNgus/9z9EsF9nCEB+QTLfyjy2vxRZUrq8PwlAoIU/osdk4b8yjKyf
tQkKQKKrO+hgkLq/aexYP7TPCkBTivJ+LIzmP+efY1eMpgtAHFR9JmkC8j9n
bbpKAG8MQIxAQTUZ6uU/Lo5vtk1IDUBiqecpoLfQv/fIcP02Ew5Ah2hCNo5R
57/YMMT+JdoOQDCVROFzhdW/Aex1eO6xD0A2r1/9v27lP5bguWapPRBABKVf
iuCH9T/O9GdNyKoQQJthHGnv7PI/kx8/EeoVEUA0DKvamFLYP1hXvMLZeRFA
7brmRa48wr/BuGgwNuYRQJlde12PM8U/Kye7i2BLEkAWEv7ONSPxPyGsNsSN
rhJAdoWXhnfQ/D+7WuG4JxoTQKHzkoqYZPs/VhYym49+E0DpHntZJHvsP5T7
sTlk6xNAYP/yL1LYpD9f91q1O1YUQEjPvYwSTZM/KgCqHuG5FECsahUamGfm
P5kyKETzJRVAfluEyyCt9j8JckxX04oVQACDPAwMnfU/HdufJiD4FUD7iDOK
QbXdP71aHNNvYxZAs4ICdidi3b9e5z5tjccWQFfprIhnw+O/op2Qwxc0F0CH
b+jku5S2P+dgiAdwmRdAi4ZLwtud7D8I5Sz5//8XQIUvO9tqEfE/ymXPwA==

                  "]]}, 
                Annotation[#, "Charting`Private`Tag$62282#1"]& ]}, {}, {}}, 
             AspectRatio -> 1, Axes -> {False, False}, 
             AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction -> 
             Identity, Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
             Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], 
             FrameTicks -> {{{}, {}}, {{}, {}}}, GridLines -> {None, None}, 
             GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImagePadding -> All, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], 
             Method -> {
              "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
               AbsolutePointSize[6], "ScalingFunctions" -> None, 
               "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                   (Identity[#]& )[
                    Part[#, 1]], 
                   (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                   (Identity[#]& )[
                    Part[#, 1]], 
                   (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
             PlotRange -> {{0., 6.}, {-0.728705507254987, 1.800895238637478}},
              PlotRangeClipping -> True, PlotRangePadding -> {{
                Scaled[0.1], 
                Scaled[0.1]}, {
                Scaled[0.1], 
                Scaled[0.1]}}, Ticks -> {Automatic, Automatic}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "6.`"}], "}"}], "}"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"scalar\"", "SummaryItem"]}]}}, AutoDelete -> False,
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], Appearance -> None, 
              ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{{}, {}, 
               TagBox[{
                 RGBColor[0.368417, 0.506779, 0.709798], 
                 AbsoluteThickness[1], 
                 Opacity[1.], 
                 LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA88dx3mtMez4AoAm5mqiAPam+gdgd
Crk/J3/xSVLh2T8vlAOEtBfKP09RT97UCfU/j/RD6Ati0z+rzcNFvRr8P8yH
F2FrmNk//hYE7vyi9T+j2m5OyyrgP7jtXxdjw9U/ZlmCWdBP4z8OdvnzYz3W
v0YlD0Y7uOY/Isc3A9n6yL+JpeQbvRDqP6r2seoOseM/0o3qXq4v7T9/thij
2JryP5zhtMECSfA/Zp4bXYBp7D9SsIwKZt3xP0DrTWvain0/OdkIyNRp8z+Z
A/4wImvmv6+oQXb2F/U/oLrR7cLN4r8orBLbT6n2P1PAnmwuP9A/MFagMFxc
+D+poWCOSxjyP2pa0vpzB/o/RMXqdT0D8z+mkpx7w5X7PyN7FluE8+A/cXEj
7cVF/T/JhJowMzPIvz+EQhUA2f4/RFb7lq1Dwr/OHg+X9kYAQKfOs7qkPec/
lijP3XIdAUBtsXnQ01T6P19M2/+K5QFA6MPTZDTE/D9ww0WafL4CQOztxDQN
HvE/glT8DwqJA0BXSklbiPPMP60SBUCdTwRANC9eQlFNb78fJGzoCScFQHyC
aZcrVeM/k08fbBLwBUCRVZQfgD/2P07OMGj0yQZAP147mHdZ+T8iepQe3J8H
QAvv58vNgus/9z9EsF9nCEB+QTLfyjy2vxRZUrq8PwlAoIU/osdk4b8yjKyf
tQkKQKKrO+hgkLq/aexYP7TPCkBTivJ+LIzmP+efY1eMpgtAHFR9JmkC8j9n
bbpKAG8MQIxAQTUZ6uU/Lo5vtk1IDUBiqecpoLfQv/fIcP02Ew5Ah2hCNo5R
57/YMMT+JdoOQDCVROFzhdW/Aex1eO6xD0A2r1/9v27lP5bguWapPRBABKVf
iuCH9T/O9GdNyKoQQJthHGnv7PI/kx8/EeoVEUA0DKvamFLYP1hXvMLZeRFA
7brmRa48wr/BuGgwNuYRQJlde12PM8U/Kye7i2BLEkAWEv7ONSPxPyGsNsSN
rhJAdoWXhnfQ/D+7WuG4JxoTQKHzkoqYZPs/VhYym49+E0DpHntZJHvsP5T7
sTlk6xNAYP/yL1LYpD9f91q1O1YUQEjPvYwSTZM/KgCqHuG5FECsahUamGfm
P5kyKETzJRVAfluEyyCt9j8JckxX04oVQACDPAwMnfU/HdufJiD4FUD7iDOK
QbXdP71aHNNvYxZAs4ICdidi3b9e5z5tjccWQFfprIhnw+O/op2Qwxc0F0CH
b+jku5S2P+dgiAdwmRdAi4ZLwtud7D8I5Sz5//8XQIUvO9tqEfE/ymXPwA==

                  "]]}, 
                Annotation[#, "Charting`Private`Tag$62282#1"]& ]}, {}, {}}, 
             AspectRatio -> 1, Axes -> {False, False}, 
             AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction -> 
             Identity, Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
             Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], 
             FrameTicks -> {{{}, {}}, {{}, {}}}, GridLines -> {None, None}, 
             GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImagePadding -> All, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], 
             Method -> {
              "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
               AbsolutePointSize[6], "ScalingFunctions" -> None, 
               "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                   (Identity[#]& )[
                    Part[#, 1]], 
                   (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                   (Identity[#]& )[
                    Part[#, 1]], 
                   (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
             PlotRange -> {{0., 6.}, {-0.728705507254987, 1.800895238637478}},
              PlotRangeClipping -> True, PlotRangePadding -> {{
                Scaled[0.1], 
                Scaled[0.1]}, {
                Scaled[0.1], 
                Scaled[0.1]}}, Ticks -> {Automatic, Automatic}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "6.`"}], "}"}], "}"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"scalar\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["3", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Hermite\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["False", "SummaryItem"]}]}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  InterpolatingFunction[{{0., 6.}}, {
   5, 7, 1, {414}, {4}, 0, 0, 0, 0, Automatic, {}, {}, False}, CompressedData["
1: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
Rx4sdWrmoI2Rdqf2EAf//eXI4/8Ct5ysEg==
   "], {Developer`PackedArrayForm, CompressedData["
1:eJwV04FGIAgUBdC2TZIkSZKkTZIkSZIkSUaSJEmSJEmSNklGkiRJkiQjSZsk
SZIkSZIkSZIkSZIkSZIkyRh7epz7A/e+fxr+rWj7KyAg4L/vcIEEEUwIoYQR
TgSRRBFNDLHEEU8CiSSRTAqppJFOBplkkU0OueSRTwGFFPGDYkoopYxyKqik
impqqKWOehpopIlmWmiljXY66KSLn3TTQy999DPAIEMMM8IoY4wzwS8mmWKa
GWaZY54FFllimRVWWWOdDTbZYpsddtljnwMOOeKYE04545wLLrnimhtuueOe
Bx554pkXXnnjnQ8++eI3fwiwgUCCCCaEUMIIJ4JIoogmhljiiCeBRJJIJoVU
0kgng0yyyCaHXPLIp4BCivhBMSWUUkY5FVRSRTU11FJHPQ000kQzLbTyPfJ2
Ouiki59000MvffQzwCBDDDPCKGOMM8EvJplimhlmmWOeBRZZYpkVVlljnQ02
2WKbHXbZY58DDjnimBNOOeOcCy654pobbrnjngceeeKZF155450PPvniN3/4
fv5AgggmhFDCCCeCSKKIJoZY4ogngUSSSCaFVNJIJ4NMssgmh1zyyKeAQor4
QTEllFJGORVUUkU1NdRSRz0NNNJEMy200kY7HXTSxU+66aGXPvoZYJAhhhlh
lDHGmeAXk0wxzQyzzDHPAossscwKq6yxzgabbLHNDrvssc8BhxxxzAmnnHHO
BZdccc0Nt9xxzwOPPPHMC6+88c4Hn3zxmz8E/K1/gggmhFDCCCeCSKKIJoZY
4ogngUSSSCaFVNJIJ4NMssgmh1zy+B+DF8ZT
    "], CompressedData["
1:eJw91nc81d8fB3CFyN7bde81I5JI34z3sSKJCBlJGoqklIbslCKVlLSoFKmU
7Ig+x94ie+89cq1rRD9//c5/z8d5Px7n/HPO60U5ccHq9CYGBgZtRob/r5e3
91q5G1bnKUZ21NOyj+qa3QvWDv9iD6WaeTYLYVd0zUp+qYR/cQNPrDV/TT5S
t+9MIFv4Fx/gPXrfU5Pzre7JR7LH5PVDQMdWdvZb7Bfd5JRLYWFfwqCRLdNF
mX1Y1/6C69Pf1xLBzMhPnFWJAe70/dIW0U+HdeVsiNLkAY0IgxxNkx+w6adW
QZi8OGTWNuaQPxTAb9vThneUrKBhkxW3dG8nJLDn643yuQPfISnymNcolHyp
dcsa8oEUx7VY0m4aGG4N62u/fxv6/Jl3/FNehErT2zrh2yIhliFfhEdqFcbT
c8/FmL+GfPM4N7uqzciP8dZ6ceJHyP9ssJI2yYJSr65nPdicDivqryjHJjlQ
Ub2B7hW7XFAK/sL9oY8HyWp5Pj/1AUO9e25OcQMfCp4Lde0LLoZ9L2xbrqYL
oO4TL95PZJdDLcl3aChACC28Fh08aVQDDeP11gfVRdABpyrtcb56yM4JkVmr
F0Uvi/YhN7dG6B+9eSYrXxwZeH2Q8FhpASYF97g5P0kUJWfFvRd3QL/I+p1W
Dim09jREryijB6JKPh48q0FGTlFLCk2jfWDLq+2/v5KMYquZFuVYByHId4yZ
35CChCWPCTI7jIDBTeU4zzIKurT0r8rn5zgkGLyu0GOlosktkTHVCtPQJvZQ
0oqZipjAV5OndAbQkUff7X9SEE156ED9+Vm4nJ7JwaFOQRfxZxYn5nng/mHw
QvgsGR0NGr36MnQB9sSy6ZnkkpDHDtYUR3U6yA/0nb0fJY5EPAzesqQsge+Z
6wUi1cLo3AGPSu7pZbBkjXgt6MuP8hnTH8iOr8DeukfviPOcaOZWvIRr7CpM
8yboDqkxoksqfHv8GP/C+YLkI0srMzBXdvl9tuhfkLrogl0KGohg2spx0Z5V
UFuy+V00tEIwiyresLZeBff2Nk+xPaz4gUh+bZHvCsw/9lFNN+bFTN30bzb2
yzBZ+8q7myKEZXSavI3K6WBzR9Uljkkc//fxiuWdyQXge+fMWW4ihXN9s6oY
6ufg4ZFHeiPuFJwuoq7McJMGgm6hO9erqHhyStSkVXQaGsyGW8yxNO4+aX9q
4N8omJvmam8xkMFdOHL8ZMMAzKQ6P26ylMF76E2hhSe74H1netj4pDTmO8Pq
z+XVAF3iEbeHhKRxCEmzP0SrELQZuUaef6VgEeH8rB7zS0TsG7e4mhdS2Hny
kHwwSwFxtWD2wv5N4ti00+MSS0YtkSFf0fwxVRDbkFRrD8Y1EqqVDEc9Erhx
zX/yo34qrURG6ZPPR8mMeOb23xaDhTaCN0l4NrVmlAC5vZv4JtoIUXGtAo35
cdAmCQVFCrUSmh22ur2mjEjr/ElaQkQjIefb23iXlxtRxlVaaT21BNOPRdJE
qwBSq7xc1t9TQAzlBcpnu4uiIK55Tx5mX0KcoiO55iGJap10Ko+YFsJpzsMa
8qJk5F2fJKHh1ADjXtdLan6RkWzS+0PUX10QI9GTlNZARgIv5Y2YtwwCYWcg
JShLRuo/3RM+NoyCVV1Zlf5TSXSK4aCLl+QUDHsVcWh+2DjvDat7ocMMbB+P
TH36XgA9IRGVgbk0MIrLKfoexIk8tw9Xd1TOwvFDb4amjZbgJYvzkNzfWQih
7cgTOtBCVAjYhPyKmAXp8NrZXVs34yc5OidvB9LgxWwN935THlzrOVse8+MP
nL5043H4ghDOLjAS57kwAdo/anR48iWwiAabe7zhMAzNPJmM+EbGfvtYhiW8
esFi/cXpX7ZU3PPscOpnl0aoevcliVlXGj+7Nrs/QvEnbEmoybNxkMYKD5kT
vN0ziCYlMvfEByrmM79Vxrulnpj8a093U6LgbPqS0dfMDuKU6n3r44OSOCgy
OjvKvp+QqTJ1DJURwWc8I91w9RBx2k7e6+FhXvx2/GOKEOcoITh9iuPhNUbM
xPOwNpxhjDBKzIw9SO4gmi4KWZNKR4nKmufVxSLzEL7jQdj2+BHCZ95lolyd
BbWzc3iF8g0T/t/8eNg+8yDRzGx+6tIAwUsjfFbdBZHQaZKvolMfEV5uORZZ
JIpy/3Q0H3rVSRz5an7n1RtJxLVTgOSZ3kTouBMsLtfJKCMrZqwIVRPWEc1B
bb8pKMpoSfOn2Hfi84nDXQrtVLS7IZHm+eYdXAtVKnUOl0a353u+ZliWQq1C
vKFynzQif198wDXTACMmFh0tXdJIzPmQ3db4ToiI4G9UC5ZGnPMvv3qSB0D4
x7hDzBcqanfq4FlLHgE32VC+954U5DvoxJ7UOQEzJsP7Kp5JobiY3zkZMX8g
omtTt0y8OHo87UqOO0WDLvszC428wqhoh/7LhpRZCKou/DLHyIe0BBfM7ifO
QV4a+4FrO7aizPucgWMG8xDvXbIj9ccq/KxekNO4PQ8F50v4+Op/g/5qoabD
0XkoUxLlODK/QKReerZw8fscnIs3y/fIZcH5/83f2fR2Fmr2facu5PJiSaeK
wGgKDTyyY1rY+4Wwm8NJ0reoafj4rfqDkYw4DoukpsvajMPrxpQqPUcSFo2O
aRLJGIJXKwfH5tTJ+Kc+VT+2sxeCFdiWiTgyHuXTunBxtQUoe7ZO7DpDxjZP
c/X7xGogTHFhy3GyFD6cc3zh4PZsyN3x6OQFfQmMLLTUtzu9Jkiszr8dzEVw
R1HvYhZrMbEaRM0Zq+XFxn1nd09l1xL/iujiE7uZsGO8h8moez0RGjcbNKI5
QfioDvPbutYTuY6yDN/NJ2Hi1tHiyZZfRDYXl3jl8Cakc7Kg2MWhktBR3Wok
4cOBnt2z6zdwLyQq4ta4j5rwo2fDUnLI9hvhxr336M1VYWS8f4l3f/Ub8L9L
YejWlkAsW48p8lwpBNoBpN69IIVu5RUFVSnWg0SjZ9G5MAra3rsS7FbUBmU2
3crxBVR0YdX5bOtgH+x3uCme90Ua5Z/t1BISGoGjS5WYUVoGJX7AanSbSdhp
+6G6TlIG8WWmbd9dOAOitIJ9KFYahb1xVC9Bc3Bgr06i6TsqGtwWekg2ZgGw
7P2ipo38+143k/whiw6qvZaTfukkFF/M9bnx0TKEdKtc+fCfGKpi5X9aLbEK
Kn89j18XFkTMw1qi7w7+BZ+GarG/7VxoYs7gdKrEGmgypul/KdiMxs/eD2i/
tQbPgiZMC+pHgbGiTzc/ZA20LdWt9NrHiJFZC/060TW42P/MQm9kMzabfLz7
tOlfWDFzskot5cIhrXxfo8RX4Xf6zSecfQJ4rWfoDPPTZdBRfV3TUSqK2btu
SJUhOmgE3CKaRkh4Nao0rPj+PEgSnFf/2FLwJw0Gb739s7DTzTYieT8VZwsu
UTk6/sA4T00krWgj36L93fN6JmDiVJ2RSTUVS4tKv4mfGAFGC8E8xiAqTs3Y
c+oGzyAo989u5eqj4FgdyyQv517gve2RlDZLxgM3HSVwfRuEJQcGiV6Wwt6Z
MSmM1xtgaRfz8OBVCXyJSpvoflEFrueo23LXRTCX2uZtqk0F4DNZwfhKTBDf
SJrvjbX/AnEzLFV7QrmwXHpSdIy6KwxIqNr0T27Cs82cCos+McTltSX28oMD
hPlZzyMHXB8TkpcEK+u+bvQFI531ecv7kBK5j8whw4wC33/vkj2SDo/RMG9J
FA+SfqoeJ1VTDDctRttfrwgiDZljHRzu9dAY7iNHfimGmrh979js6IDNE0pm
bS0kJOwSlAR8A6A02GqwstG35I/0z7O0jQCv3nqb7CEKMlb/GfXs2yRwzGkf
y9WnILkXr1ems2dA48FybmQ8GWlWy9io0jfypj5ls90oCVEy1O3LNy9AP8fA
sQPB4mhmMJSXsWIRXOLU7vYoCqMfCaXz1nuXgLX5h0QDCx/6LlGxvWv/Mtxm
Hb4sEcKK5KqHX/yaWgaFYAXWQLEl+OrBcr9AagXeJV14OoDzCVdX/h9NncsQ
4xC2/yH3X8KhdsK+VHYZouw6mH63sWF34qW+WBsdaDS03iolgHUe3/ozwbkI
97Rpn1lVxLDpxOhOwYY5WJLZ933aRQozGPPVaGvRQNMjb8KrjIKvXyQd3/t9
ErYNzSow7pfGZ77k5vm+HIaIq7QAh20yeCpAys3scC8w7GdWPOkigw08R+s0
FBphXb1bz/yPNP6n4MFgYYIhzKxjObqZinuTg2PZWZOIdu3Qor9SFHyZTeOf
b0MF8fBU6k+mdEkclub2q1i/iSirW+y9uV0E/2ie0pYs7SBiehOljTt5sf6Z
+N4lUi/h6qTQ4LrAjFvevgY/gz7iX51neM6eaUL2uOEryv4+grYt2MS8cQKK
byC6zK5e4k+y7f5zrMzImknvKadUJ6EjUJLGy8uLzPeye7u9bSSuX3pBF20Q
Rr1JXQPfm0uIEKWzW67ulEQfs3QUzzm/I8bUO1hsBMgImZJ/199OB7FA3rCX
A2TEM3hJbGtUOqw9ObK1e8PFhxuiUFw6HDDadYM8SEb0r7u1rn9Kh90O9I4T
GyaxR/F/y0qHL2/eqSRs+J5/u/hoYToEDWleGtlwkLBshF1HOkTV+lWfGyIj
3QvZPyrm0qHZznn8z4YLFPd+0uLIgKHxrqrLw2SUrxKd3cKQCXKiK6/vT5AR
V1h9X95CJtR3mTY/nCGjlfqoxrHxLHC9Unv2xgIZXSnI+c+pNxuu43jLgytk
9OqfS4prKgZLY++CURkK4ow/MLTXvwS0L9Y999pHQdOMvsMUy0rolc693HaM
ggQU1DkfKv4C/V76PaGN/G3+xPLLh/E32L90L5L2pqCDwml7LYubIcLCxdr9
NAXxhk2YH/PrgF1+hgpZuygotaSIL2pXD7xNoifpzZFRSiHrHrXzfcCf2Lkm
H0tGhdxsokK7B2DzVjmmjp1kdEN7ukx5dhCcBE0nqk5KoZAomV7918PwQPOh
bZsWCU0eCxZX0xoF+UMikTZTEuiMnXh2QM04iD3y3n/USQz5Ja3/UidNQdL5
35LM54SR5dAU5YvMH+i25iynkwVQ8cPLfIkeM5DiwN/Feo8Hnb/kw1orRoOq
j4nOZI+tiB62eH7nCxpoLRUoXnPehIpv6s22jdLgSv372zdEZ0Ff++udIKZZ
WAv0izjnW02YKPdo1tfQgI2Uds0RlglfUtdarBENbtxoi+zVZsG+KSUPIjxn
IHy04P3eVB58cmSvCueLaeCu9L0hc04QL0ooiujVTsDDhHQvnlRRnDCdUPDn
7ih4Hz6+09ldEq/LVfHwdw7CfVWunAy00Q/stURdnnRDQyQpvLyKgnuyWJ59
+vwbRgedhJ1eUPF73sSb7HM5wKZUvbj8lopdux8bHm3KJNjid7XL9VKw9okn
/34m1REJEe4dFQ5knFPQ/sCvspWgH7/qGaolibv8LVhrh3uIeE9br6EpESz3
K11lebCfGDtn0ZY2xo+XBuoq9GSGiBK1nEWFdxx4Jw5kO/tmmDgjdO/uk+cM
WPOT0u3ZgyMEq76okNiOXmKXcXOBpPwIccKYm5hzoMH0DmePf0rDhKTlJ9fu
PczoAkeu6JUTg4Rh29bEhtc8KLxGy7ivqY9QKKh5t3ePEJq3q9jqo9xFnL+v
It+MxJH2jWv8W7ybiM5/th6Jz6XQnR9GIuQTFYQxuwTifkJBZT7KY/4DScRQ
O5Nw0QQV/Xf79OkrGnnwaEktMKpaGiVXrzqWR9RDcL2sP1VNBnHlHQwoIHdC
bbBDK6e4DGrOlw3XdhmEOw7LsrV20qjzS+9l2pFx0Ly1L44ySkEtMUkH/cun
4RPh+GreiIxe8PCMrjvTgGQ2czf3rgTK4Inl+MA/B7+tV1K4eoVR9lP1HI8r
82D1/ebVayl86M0Rn/WH/guQoq9fEKDKhug8emWP5RbhQMimrSyrf2F7zdhu
9/OLcH2LSOrb540QkLxJNcpyEcTX34+Z+s8S9Qwvf0s3LYC3OKdt6wcmrPbi
TfDsz3nwrn5xWqCZB39Osz9SpjQHzQH/sSmFC+FZ6ecJwSo0UDPMIampi+M1
sy7P/LwpWKmPb5yPJ2FDBUVZjuRRiG40p1DsyVhRI/Fw16kBOJMwbqyXSMa7
Pheqf97XCSd339Ov1SBji0NX1N7t23j/g0M3lURJmP1zpXPqtUKIXdiswOYp
hsUeae7JHHwGU42vlTUfCWKqtVUoOTedKA6XVMrk48LHM7IDPgwVEGyfO1lK
r68Tr4yi57L8i4nTvk1vj7llwLRl+cfpI4XEm7hgOQuev7BHxM/69avvxPqx
zuo4OXb0dVr1utGOJwSCExb3yvgR6ZjbIKNPJtgEmTcFeIii0S3pJUtCVdAi
NXStz4qEaHOjSzVbWoBpLeVcnQIFzWbe2v2+qBfesX4yPrfRBztt3SdeOg3D
QWHVSKMIaTRlVbx5n+wkqHk3fv/ULo221bktVnvS4Iji0PHp89JI15hJRy5x
Hkrc3o7lKlFRSfOhfsFoOlh0jxztJpGRMf+hqQSxFSBT1Ypns8RQ6dVqSyGx
v9ANjw191viRFf8jCzu/NdgV7XJL9zsr+peact9m5zq0/7bexpU8A7Wmt1XN
dNfBrqzQy+DXELHbEZtsqVuD1S47Rl9ORsx6PE5cdvwv8PnvXr/IxIML5MYG
OJ+sQoVylRrLP0GcEGq4503rMniZmiY9NhbH2VYdCtUldCi6fudOa6YUNt6+
n43bYwFOMXXy5Tyh4FfUfO+erlm4HpjOZVxCxSV298V5dsxA1EBbs+RpaZzm
6Ed3Hh2HcIeARg0vaVzVNG7RFjIEumWlox3jVOzfebd3zq4XziUzEjdbKFj+
mxGNUaIFLp/7OHVn47/ad2JxuVCkBsY6/8Z3nZbAtILSPHemfNjTe/MXKUAY
69YLNx8bfArB4nQz9xlenJVxlBYpkUh4KLKbJdSx4GuSc9uy+zOIjxP8f7bb
LBI5P46G5LllE/tE1xMPDrVA3e7pfZUolaj95rLrVAsDchd4wJq/NZTI5hew
9OrmRN98sqL/uaVDsKZv51C5ADIZ/g9JyZaDwUmxg20/RdElV52V6I+N8O1T
cE7ya0mUJxB27YlBN6TkXKjYSyWjU8dcI7brDELsw1oJlQoyCtRgmci4OAbt
Bzh1u/M38td6Yljs9jREzz2yOslARqvtV7tF4mkQu/lfyrMdkshG31vqVv4c
uNk0XSyVFkWGJo5UqYGN9797dik1mA91haRyO1nS4VinHLKXZkaTFofg7IbF
im1z46nMSDXkgeflDQvKV++epDAjQ0mP2IANO94KTtPYcKHkWFXYhp/2XVUO
JG/s32JeebLhk/rJH8qlmJGUhL/N5w3L/mh87khiRnwml1IKNhx1c+3utAQz
mmEaYmnd8Hqh3JVgcWZ0tPvItmwrOlT7MLDpcjIjxqSK9OjDdLDmz728vM6E
BARUPly2psPxg/Np6TNMCGqvM1ra0GFxyaLco58J4bP2ks1OdBg74Lrt7GEm
1H5q8a+UKx3O69cN0IoYkbtX02UVz415zdueHOqMKPxuoPWmq3Qo7pHUz323
Ge1iv3XpmT8dNseVta7xbUYqKtaxonl00JvbQz5RugQh8QuhLAN0KNk+QvWy
Hoc/PjkDyzQ6dNRJPv9ongVm7xVOfRvduO+l3VNTE4NEdt6OLr4yOoSuz7S0
Wy0SNmlRMjvv04GbeyBkG/cmrJ8sEPR4fRGq+Rf1b9my4fVWvTZ29UX4816/
5uJ7XtxNOcrreXwBwjmmPNSVBbFB62Fv5zPz8IlTY2/gzY18ZH2Rp39gDgxd
Gj+hl+I42Z8joI1rFrjHX7nJXCBh1tNOhFbmDISInM855EvG3nU35eNCpkH9
8yR3SDQFS1CSvW9cnADSKdsyFELFztc2eUerjgDt4jvhgcvSOPLoSo99cT/4
4u18h7llcLRfbL1jQCc4gEzxOysZfOncDPOkWwNkuUl52mvLYOGf4a+2jBTD
wjbxgQvV0tgs1q20WeUVGB2adjzOJI2VqJr1VKZcQuCEj7HcCAU7spcSfq7V
xNh1Z5qeDxk/dLnIdMWkmcCvlf7z6pXAPYaP2Co1uoiqD5kvTcVFsOfy5WNS
Z/sIi5Dtm+5iPtzxVkPv8Y0Bok74T1rO4FasYVTQmFAySGydFaOPOa4S43E0
uSm9IWJTeWqs0Wwh8e5585OgqUEiylxw972QReCPjgqRrB4gZtlNnrObs6Dh
CkVliZE+wk5j7+fwQ7wIWcdg1xfdBOx4GfL5ihDikTpWICbTSuxk0bkfOCuG
zqSdMHBnrCVKvta81TKVQotUTz7h1jSiCDWVGStTUG3Up21uj7+AYVDd5pY+
CipgNJhQTCmHC4PJ8vcUqSjH+Mo3X+YmuP6pQNJtCxW1sQYVmdztgkb3oNdT
VymI5JxwOru5HzZfOcK7HEhGf5s4ek/GD0ODWmjDCQsS+hU3Y1bPMw4ObURS
1qQYwgHXxLs5p+D0+sWfNpNCSK51NJf77h/g5Vg8L+zKh87p3eZ5w0uDSrGA
jFcrzIjiXvq8/xsNiLTQBWGbURjgj9vSmEiDdzYnridozBAMMfsi3TfmTf9e
u2RHZ8b/A+CFn4o=
    "]}, {Automatic}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7709360516535635`*^9, 3.7709361408438606`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->
  "Out[256]=",ExpressionUUID->"a1761f0f-0a55-4dbf-8479-1e312181c4d7"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["InterpolatingFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"], 
               ImageSizeCache -> {22., {0., 22.}}], Appearance -> None, 
              ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{{}, {}, 
               TagBox[{
                 RGBColor[0.368417, 0.506779, 0.709798], 
                 AbsoluteThickness[1], 
                 Opacity[1.], 
                 LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA88dx3mtMez4AAK3WhJ1tvam+gdgd
Crk/Hzh2yqXrxr8vlAOEtBfKP1ZaIH/vV+K/j/RD6Ati0z/KTOE+eobnv8yH
F2FrmNk/9IL+YoG537+j2m5OyyrgPzcQgKrmfKE/ZlmCWdBP4z+wkX5MdJ/a
P0YlD0Y7uOY/8bjSt9HZ2j+JpeQbvRDqP9m8ZI+1vLw/0o3qXq4v7T8ixVlC
OYe2v5zhtMECSfA/jkEvrazftD9SsIwKZt3xP1z0n7c7YOA/OdkIyNRp8z+q
LpK7FgrrP6+oQXb2F/U/YxKl4mPm6D8orBLbT6n2P/hCsHi/8NY/MFagMFxc
+D9C3vkszXe4v2pa0vpzB/o/CRzrIf+tx7+mkpx7w5X7P9ifpEu5s6o/cXEj
7cVF/T8vU60VwrvTPz+EQhUA2f4/LiffALEezD/OHg+X9kYAQJ4W6t7TG8+/
lijP3XIdAUD/8U7uiezmv19M2/+K5QFA/zbckjU56r9ww0WafL4CQL/xNPCz
5N+/glT8DwqJA0CsX7rUP5u6v60SBUCdTwRAK5RW2w1zlz8fJGzoCScFQMtI
YDjZFcy/k08fbBLwBUAREUT0Ywvhv07OMGj0yQZAYqZM6uXL4b8iepQe3J8H
QMg64yNkw8O/9z9EsF9nCEDJG9gxiALWPxRZUrq8PwlAQaB9I9nm4z8yjKyf
tQkKQEDit3Zsa94/aexYP7TPCkA4JmJwZIjCP+efY1eMpgtAkIgaR3U5k79n
bbpKAG8MQBHLAmhSWMk/Lo5vtk1IDUDq1CvHqC3kP/fIcP02Ew5ACteGGhRW
6j/YMMT+JdoOQE8DAqM0R+M/Aex1eO6xD0BZ94+Ihoi1P5bguWapPRBAHhQy
O3J10r/O9GdNyKoQQA/QeV1Ob9K/kx8/EeoVEUCcE2P+QkOBP1hXvMLZeRFA
I7LKpei/xz/BuGgwNuYRQIBuzpgVeI6/Kye7i2BLEkAj6AW8hkHevyGsNsSN
rhJAzMNjgGm16r+7WuG4JxoTQH2DZE07nem/VhYym49+E0BGnPKFLhPav5T7
sTlk6xNANkfaysv5kT9f91q1O1YUQJ87p1oWobM/KgCqHuG5FEDqy3qAyhrH
v5kyKETzJRVAbHXQof8w3L8JckxX04oVQEaQK7/r19W/HdufJiD4FUAu8QaN
xVnBP71aHNNvYxZA87FeCEzi4z9e5z5tjccWQLGpZ07Vxec/op2Qwxc0F0A8
INnk5frcP+dgiAdwmRdANlHEgSuhuD8I5Sz5//8XQKqRsYfbYZA/xIzXuQ==

                  "]]}, 
                Annotation[#, "Charting`Private`Tag$62336#1"]& ]}, {}, {}}, 
             AspectRatio -> 1, Axes -> {False, False}, 
             AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction -> 
             Identity, Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
             Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], 
             FrameTicks -> {{{}, {}}, {{}, {}}}, GridLines -> {None, None}, 
             GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImagePadding -> All, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], 
             Method -> {
              "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
               AbsolutePointSize[6], "ScalingFunctions" -> None, 
               "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                   (Identity[#]& )[
                    Part[#, 1]], 
                   (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                   (Identity[#]& )[
                    Part[#, 1]], 
                   (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
             PlotRange -> {{0., 6.}, {-0.8346450336085751, 
              0.8449815429207395}}, PlotRangeClipping -> True, 
             PlotRangePadding -> {{
                Scaled[0.1], 
                Scaled[0.1]}, {
                Scaled[0.1], 
                Scaled[0.1]}}, Ticks -> {Automatic, Automatic}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "6.`"}], "}"}], "}"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"scalar\"", "SummaryItem"]}]}}, AutoDelete -> False,
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], Appearance -> None, 
              ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{{}, {}, 
               TagBox[{
                 RGBColor[0.368417, 0.506779, 0.709798], 
                 AbsoluteThickness[1], 
                 Opacity[1.], 
                 LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA88dx3mtMez4AAK3WhJ1tvam+gdgd
Crk/Hzh2yqXrxr8vlAOEtBfKP1ZaIH/vV+K/j/RD6Ati0z/KTOE+eobnv8yH
F2FrmNk/9IL+YoG537+j2m5OyyrgPzcQgKrmfKE/ZlmCWdBP4z+wkX5MdJ/a
P0YlD0Y7uOY/8bjSt9HZ2j+JpeQbvRDqP9m8ZI+1vLw/0o3qXq4v7T8ixVlC
OYe2v5zhtMECSfA/jkEvrazftD9SsIwKZt3xP1z0n7c7YOA/OdkIyNRp8z+q
LpK7FgrrP6+oQXb2F/U/YxKl4mPm6D8orBLbT6n2P/hCsHi/8NY/MFagMFxc
+D9C3vkszXe4v2pa0vpzB/o/CRzrIf+tx7+mkpx7w5X7P9ifpEu5s6o/cXEj
7cVF/T8vU60VwrvTPz+EQhUA2f4/LiffALEezD/OHg+X9kYAQJ4W6t7TG8+/
lijP3XIdAUD/8U7uiezmv19M2/+K5QFA/zbckjU56r9ww0WafL4CQL/xNPCz
5N+/glT8DwqJA0CsX7rUP5u6v60SBUCdTwRAK5RW2w1zlz8fJGzoCScFQMtI
YDjZFcy/k08fbBLwBUAREUT0Ywvhv07OMGj0yQZAYqZM6uXL4b8iepQe3J8H
QMg64yNkw8O/9z9EsF9nCEDJG9gxiALWPxRZUrq8PwlAQaB9I9nm4z8yjKyf
tQkKQEDit3Zsa94/aexYP7TPCkA4JmJwZIjCP+efY1eMpgtAkIgaR3U5k79n
bbpKAG8MQBHLAmhSWMk/Lo5vtk1IDUDq1CvHqC3kP/fIcP02Ew5ACteGGhRW
6j/YMMT+JdoOQE8DAqM0R+M/Aex1eO6xD0BZ94+Ihoi1P5bguWapPRBAHhQy
O3J10r/O9GdNyKoQQA/QeV1Ob9K/kx8/EeoVEUCcE2P+QkOBP1hXvMLZeRFA
I7LKpei/xz/BuGgwNuYRQIBuzpgVeI6/Kye7i2BLEkAj6AW8hkHevyGsNsSN
rhJAzMNjgGm16r+7WuG4JxoTQH2DZE07nem/VhYym49+E0BGnPKFLhPav5T7
sTlk6xNANkfaysv5kT9f91q1O1YUQJ87p1oWobM/KgCqHuG5FEDqy3qAyhrH
v5kyKETzJRVAbHXQof8w3L8JckxX04oVQEaQK7/r19W/HdufJiD4FUAu8QaN
xVnBP71aHNNvYxZA87FeCEzi4z9e5z5tjccWQLGpZ07Vxec/op2Qwxc0F0A8
INnk5frcP+dgiAdwmRdANlHEgSuhuD8I5Sz5//8XQKqRsYfbYZA/xIzXuQ==

                  "]]}, 
                Annotation[#, "Charting`Private`Tag$62336#1"]& ]}, {}, {}}, 
             AspectRatio -> 1, Axes -> {False, False}, 
             AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction -> 
             Identity, Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
             Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], 
             FrameTicks -> {{{}, {}}, {{}, {}}}, GridLines -> {None, None}, 
             GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImagePadding -> All, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], 
             Method -> {
              "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
               AbsolutePointSize[6], "ScalingFunctions" -> None, 
               "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                   (Identity[#]& )[
                    Part[#, 1]], 
                   (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                   (Identity[#]& )[
                    Part[#, 1]], 
                   (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
             PlotRange -> {{0., 6.}, {-0.8346450336085751, 
              0.8449815429207395}}, PlotRangeClipping -> True, 
             PlotRangePadding -> {{
                Scaled[0.1], 
                Scaled[0.1]}, {
                Scaled[0.1], 
                Scaled[0.1]}}, Ticks -> {Automatic, Automatic}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "6.`"}], "}"}], "}"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"scalar\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["3", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Hermite\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["False", "SummaryItem"]}]}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  InterpolatingFunction[{{0., 6.}}, {
   5, 7, 1, {414}, {4}, 0, 0, 0, 0, Automatic, {}, {}, False}, CompressedData["
1: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
Rx4sdWrmoI2Rdqf2EAf//eXI4/8Ct5ysEg==
   "], {Developer`PackedArrayForm, CompressedData["
1:eJwV04FGIAgUBdC2TZIkSZKkTZIkSZIkSUaSJEmSJEmSNklGkiRJkiQjSZsk
SZIkSZIkSZIkSZIkSZIkyRh7epz7A/e+fxr+rWj7KyAg4L/vcIEEEUwIoYQR
TgSRRBFNDLHEEU8CiSSRTAqppJFOBplkkU0OueSRTwGFFPGDYkoopYxyKqik
impqqKWOehpopIlmWmiljXY66KSLn3TTQy999DPAIEMMM8IoY4wzwS8mmWKa
GWaZY54FFllimRVWWWOdDTbZYpsddtljnwMOOeKYE04545wLLrnimhtuueOe
Bx554pkXXnnjnQ8++eI3fwiwgUCCCCaEUMIIJ4JIoogmhljiiCeBRJJIJoVU
0kgng0yyyCaHXPLIp4BCivhBMSWUUkY5FVRSRTU11FJHPQ000kQzLbTyPfJ2
Ouiki59000MvffQzwCBDDDPCKGOMM8EvJplimhlmmWOeBRZZYpkVVlljnQ02
2WKbHXbZY58DDjnimBNOOeOcCy654pobbrnjngceeeKZF155450PPvniN3/4
fv5AgggmhFDCCCeCSKKIJoZY4ogngUSSSCaFVNJIJ4NMssgmh1zyyKeAQor4
QTEllFJGORVUUkU1NdRSRz0NNNJEMy200kY7HXTSxU+66aGXPvoZYJAhhhlh
lDHGmeAXk0wxzQyzzDHPAossscwKq6yxzgabbLHNDrvssc8BhxxxzAmnnHHO
BZdccc0Nt9xxzwOPPPHMC6+88c4Hn3zxmz8E/K1/gggmhFDCCCeCSKKIJoZY
4ogngUSSSCaFVNJIJ4NMssgmh1zy+B+DF8ZT
    "], CompressedData["
1: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
RgzJoYjBy0GopP6Ck9jULPofBAk0FQ==
    "]}, {Automatic}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7709360516535635`*^9, 3.7709361408618116`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->
  "Out[257]=",ExpressionUUID->"94fce80d-cb59-471b-8104-08d65a257b9f"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["p", "*"], "[", "t", "]"}], ",", 
     RowBox[{"teste1", "[", "t", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "6"}], "}"}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Theta]", "*"], "[", "t", "]"}], ",", 
     RowBox[{"teste2", "[", "t", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "6"}], "}"}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox[
       OverscriptBox["p", "."], "*"], "[", "t", "]"}], ",", 
     RowBox[{"teste3", "[", "t", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "6"}], "}"}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox[
       OverscriptBox["\[Theta]", "."], "*"], "[", "t", "]"}], ",", 
     RowBox[{"teste4", "[", "t", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "6"}], "}"}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], "]"}]}], "Input",
 CellChangeTimes->{
  3.770889281385109*^9, {3.770897656928229*^9, 3.770897672886346*^9}, {
   3.7708978093023834`*^9, 3.770897829910553*^9}, 3.770897886578741*^9, 
   3.7708979636521645`*^9, {3.770898384571972*^9, 3.770898394787094*^9}, {
   3.77089848738498*^9, 3.770898500989005*^9}, 3.770903118469231*^9, {
   3.770904354248141*^9, 3.770904365695489*^9}, 3.7709044019759846`*^9, {
   3.7709157473540382`*^9, 3.7709157519027305`*^9}, {3.7709160535756407`*^9, 
   3.7709161027892675`*^9}, {3.7709197230647955`*^9, 3.770919726502689*^9}, {
   3.770920264385429*^9, 3.770920288895277*^9}, {3.770921602863446*^9, 
   3.770921634123568*^9}, {3.770933514373401*^9, 3.77093353758812*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->
  "In[262]:=",ExpressionUUID->"6f690c63-d985-4b4e-a8bb-3387fc571254"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"e22", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"x", "'"}], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"y", "[", "t", "]"}]}], "-", 
       RowBox[{"z", "[", "t", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"x", "[", "0", "]"}], "\[Equal]", 
      RowBox[{"-", "0.04"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"y", "'"}], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"x", "[", "t", "]"}], "+", 
       RowBox[{".425", " ", 
        RowBox[{"y", "[", "t", "]"}]}]}]}], ",", 
     RowBox[{
      RowBox[{"y", "[", "0", "]"}], "\[Equal]", 
      RowBox[{"-", "0.30"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"z", "'"}], "[", "t", "]"}], "\[Equal]", 
      RowBox[{"2", "-", 
       RowBox[{
        RowBox[{"z", "[", "t", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"4", "-", 
          RowBox[{"x", "[", "t", "]"}]}], ")"}]}]}]}], ",", 
     RowBox[{
      RowBox[{"z", "[", "0", "]"}], "\[Equal]", "0.52"}]}], "}"}]}], 
  ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.56293690640625*^9, 3.562937085640625*^9}, {
   3.562937219171875*^9, 3.56293723596875*^9}, 3.562937921140625*^9, 
   3.562937955671875*^9, 3.7697572898975706`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[1]:=",ExpressionUUID->"a28ff1cf-92bd-4ddd-8fcc-172a691aa7f1"],

Cell[BoxData[{
 RowBox[{"e22", "//", "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"e23", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "[", "t", "]"}], ",", 
      RowBox[{"y", "[", "t", "]"}], ",", 
      RowBox[{"z", "[", "t", "]"}]}], "}"}], "/.", 
    RowBox[{"Flatten", "[", 
     RowBox[{"NDSolve", "[", 
      RowBox[{"e22", ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "25"}], "}"}]}], "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"e24", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "[", "t", "]"}], ",", 
      RowBox[{"y", "[", "t", "]"}], ",", 
      RowBox[{"z", "[", "t", "]"}]}], "}"}], "/.", 
    RowBox[{"Flatten", "[", 
     RowBox[{"NDSolve", "[", 
      RowBox[{"e22", ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "25"}], "}"}], ",", 
       RowBox[{"Method", "\[Rule]", "ExplicitRungeKutta"}]}], "]"}], 
     "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ParametricPlot3D", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"{", 
     RowBox[{"e23", ",", "e24"}], "}"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "25"}], "}"}], ",", 
   RowBox[{"PlotPoints", "\[Rule]", "1000"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.5630120031955776`*^9, 3.5630120176018276`*^9}, {
   3.6730065526149483`*^9, 3.673006576514986*^9}, 3.7697572898975706`*^9, {
   3.7709755141857953`*^9, 3.7709755539884214`*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[2]:=",ExpressionUUID->"c4e42ed7-b345-4978-8fbc-a35c04b0744a"]
}, Open  ]],

Cell[TextData[{
 "\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
 StyleBox["EXPERIMENTOS",
  FontSize->18,
  FontWeight->"Bold"],
 "\n\n"
}], "Text",
 CellChangeTimes->{{3.771328790362722*^9, 3.7713287913217936`*^9}, {
  3.7715684602476864`*^9, 3.771568463479006*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,ExpressionUUID->"9bd3c8f6-6cb7-4080-8e9e-7f9fd26f0266"],

Cell["MODELO DO SISTEMA", "Text",
 CellChangeTimes->{{3.7709255543726683`*^9, 3.7709255613799477`*^9}, 
   3.770925593569269*^9},
 FontFamily->"Times New Roman",
 FontSize->9,ExpressionUUID->"12e66ebc-667b-40e7-acab-b8b5cf49061f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"eq1", "[", 
   RowBox[{"var1_", ",", "var2_", ",", "var3_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"M1", "+", "m2"}], ")"}], " ", 
    RowBox[{
     SubscriptBox["\[PartialD]", "t"], 
     RowBox[{
      SubscriptBox["\[PartialD]", "t"], "var1"}]}]}], "-", 
   RowBox[{"m2", " ", "l", " ", 
    SubscriptBox["c", "var2"], " ", 
    RowBox[{
     SubscriptBox["\[PartialD]", "t"], 
     RowBox[{
      SubscriptBox["\[PartialD]", "t"], "var2"}]}]}], "+", 
   RowBox[{
    SubscriptBox["cc", "amort"], " ", 
    RowBox[{
     SubscriptBox["\[PartialD]", "t"], "var1"}]}], "+", 
   RowBox[{"m2", " ", "l", " ", 
    SubscriptBox["s", "var2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["\[PartialD]", "t"], "var2"}], ")"}], "2"]}], "-", 
   "var3"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq2", "[", 
   RowBox[{"var1_", ",", "var2_", ",", "var3_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "m2"}], " ", "l", " ", 
    SubscriptBox["c", "var2"], " ", 
    RowBox[{
     SubscriptBox["\[PartialD]", "t"], 
     RowBox[{
      SubscriptBox["\[PartialD]", "t"], "var1"}]}]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"J", "+", 
      RowBox[{"m2", " ", 
       SuperscriptBox["l", "2"]}]}], ")"}], 
    RowBox[{
     SubscriptBox["\[PartialD]", "t"], 
     RowBox[{
      SubscriptBox["\[PartialD]", "t"], "var2"}]}]}], "+", 
   RowBox[{"\[Gamma]", " ", 
    RowBox[{
     SubscriptBox["\[PartialD]", "t"], "var2"}]}], "-", 
   RowBox[{"m2", " ", "g", " ", "l", " ", 
    SubscriptBox["s", "var2"]}], "-", "var3"}]}], "\[IndentingNewLine]", 
 RowBox[{"d2p", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"eq1", "[", 
         RowBox[{
          RowBox[{"p", "[", "t", "]"}], ",", 
          RowBox[{"\[Theta]", "[", "t", "]"}], ",", 
          RowBox[{"u", "[", "t", "]"}]}], "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"p", "''"}], "[", "t", "]"}], "}"}]}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"d2\[Theta]", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"eq2", "[", 
         RowBox[{
          RowBox[{"p", "[", "t", "]"}], ",", 
          RowBox[{"\[Theta]", "[", "t", "]"}], ",", "0"}], "]"}], "\[Equal]", 
        "0"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Theta]", "''"}], "[", "t", "]"}], "}"}]}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"eq1a", "=", 
  RowBox[{
   RowBox[{"eq1", "[", 
    RowBox[{
     RowBox[{"p", "[", "t", "]"}], ",", 
     RowBox[{"\[Theta]", "[", "t", "]"}], ",", 
     RowBox[{"u", "[", "t", "]"}]}], "]"}], "/.", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Theta]", "''"}], "[", "t", "]"}], "->", 
    "d2\[Theta]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"eq2a", "=", 
  RowBox[{
   RowBox[{"eq2", "[", 
    RowBox[{
     RowBox[{"p", "[", "t", "]"}], ",", 
     RowBox[{"\[Theta]", "[", "t", "]"}], ",", "0"}], "]"}], "/.", 
   RowBox[{
    RowBox[{
     RowBox[{"p", "''"}], "[", "t", "]"}], "->", 
    "d2p"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"eq1final", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{"eq1a", "\[Equal]", "0"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"p", "''"}], "[", "t", "]"}], "}"}]}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"eq2final", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{"eq2a", "\[Equal]", "0"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Theta]", "''"}], "[", "t", "]"}], "}"}]}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}]}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBWIQ3Wh83UpT7I2jyz8vaxB957CRE4hOCfXyAdE/M/QC
QfSfWzdDQPQszqBEEH1cqyUNRJ/hO5oFomc8LmoH0SUMNtraIPH0y14g2nP2
81wQ7fA6NA9E+81rn2MCpBUlNoFppsIpS0D0t56bYHratSeXwfwugSsgOm7+
b3l7IF2Xyq8Aos+lpeeC6DnOfvkgmuld81pXIP3sZz+YnqSpsRVEizx0BtM/
nJyOgmiuQMcTIPqhx25BbyA9UfclmNYVeaF8XPyN48eGTgMQnfvK9GShxBtH
Fp4zZ0D0B+vd4WVAWo3hH5g+or80I1TyjaMK77pcEO3lU12+EEhXlawG0wCf
5ZRS
  "],
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[19]:=",ExpressionUUID->"c9c1079c-37dd-4bae-823b-439303105a32"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"M1", "+", "m2"}]], 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"u", "[", "t", "]"}], "-", 
    RowBox[{
     SubscriptBox["cc", "amort"], " ", 
     RowBox[{
      SuperscriptBox["p", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}], "-", 
    RowBox[{"l", " ", "m2", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["\[Theta]", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
    RowBox[{"l", " ", "m2", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
     RowBox[{
      SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.771378744043214*^9, 3.7715342708116827`*^9, 
  3.771534961427819*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[21]=",ExpressionUUID->"0770231b-e8fb-4db5-a7a6-1cfc8e8ab410"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"g", " ", "l", " ", "m2", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
   RowBox[{"\[Gamma]", " ", 
    RowBox[{
     SuperscriptBox["\[Theta]", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}], "+", 
   RowBox[{"l", " ", "m2", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["p", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}]}], 
  RowBox[{"J", "+", 
   RowBox[{
    SuperscriptBox["l", "2"], " ", "m2"}]}]]], "Output",
 CellChangeTimes->{3.771378744043214*^9, 3.7715342708116827`*^9, 
  3.77153496143979*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[22]=",ExpressionUUID->"18910a2b-8aef-4deb-8000-ad61a791b9d1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   RowBox[{"u", "[", "t", "]"}]}], "+", 
  RowBox[{
   SubscriptBox["cc", "amort"], " ", 
   RowBox[{
    SuperscriptBox["p", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "+", 
  RowBox[{"l", " ", "m2", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
   SuperscriptBox[
    RowBox[{
     SuperscriptBox["\[Theta]", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"M1", "+", "m2"}], ")"}], " ", 
   RowBox[{
    SuperscriptBox["p", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "-", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"J", "+", 
     RowBox[{
      SuperscriptBox["l", "2"], " ", "m2"}]}]], 
   RowBox[{"l", " ", "m2", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"g", " ", "l", " ", "m2", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
      RowBox[{"\[Gamma]", " ", 
       RowBox[{
        SuperscriptBox["\[Theta]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], "+", 
      RowBox[{"l", " ", "m2", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["p", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}]}]], "Output",
 CellChangeTimes->{3.771378744043214*^9, 3.7715342708116827`*^9, 
  3.771534961448765*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[23]=",ExpressionUUID->"4448fc6c-ba09-4f1e-9bef-5aa202db1964"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "g"}], " ", "l", " ", "m2", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
  RowBox[{"\[Gamma]", " ", 
   RowBox[{
    SuperscriptBox["\[Theta]", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"J", "+", 
     RowBox[{
      SuperscriptBox["l", "2"], " ", "m2"}]}], ")"}], " ", 
   RowBox[{
    SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "-", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"M1", "+", "m2"}]], 
   RowBox[{"l", " ", "m2", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"u", "[", "t", "]"}], "-", 
      RowBox[{
       SubscriptBox["cc", "amort"], " ", 
       RowBox[{
        SuperscriptBox["p", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], "-", 
      RowBox[{"l", " ", "m2", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["\[Theta]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
      RowBox[{"l", " ", "m2", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}]}]], "Output",
 CellChangeTimes->{3.771378744043214*^9, 3.7715342708116827`*^9, 
  3.77153496145774*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[24]=",ExpressionUUID->"9dee8b8f-c720-458e-b12b-be9a2e9d2d4b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"g", " ", 
     SuperscriptBox["l", "2"], " ", 
     SuperscriptBox["m2", "2"], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
    RowBox[{"J", " ", 
     RowBox[{"u", "[", "t", "]"}]}], "+", 
    RowBox[{
     SuperscriptBox["l", "2"], " ", "m2", " ", 
     RowBox[{"u", "[", "t", "]"}]}], "-", 
    RowBox[{"J", " ", 
     SubscriptBox["cc", "amort"], " ", 
     RowBox[{
      SuperscriptBox["p", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}], "-", 
    RowBox[{
     SuperscriptBox["l", "2"], " ", "m2", " ", 
     SubscriptBox["cc", "amort"], " ", 
     RowBox[{
      SuperscriptBox["p", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}], "-", 
    RowBox[{"l", " ", "m2", " ", "\[Gamma]", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
     RowBox[{
      SuperscriptBox["\[Theta]", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}], "-", 
    RowBox[{"J", " ", "l", " ", "m2", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["\[Theta]", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
    RowBox[{
     SuperscriptBox["l", "3"], " ", 
     SuperscriptBox["m2", "2"], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["\[Theta]", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "2"]}]}], ")"}], "/", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"J", " ", "M1"}], "+", 
    RowBox[{"J", " ", "m2"}], "+", 
    RowBox[{
     SuperscriptBox["l", "2"], " ", "M1", " ", "m2"}], "+", 
    RowBox[{
     SuperscriptBox["l", "2"], " ", 
     SuperscriptBox["m2", "2"]}], "-", 
    RowBox[{
     SuperscriptBox["l", "2"], " ", 
     SuperscriptBox["m2", "2"], " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "2"]}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{3.771378744043214*^9, 3.7715342708116827`*^9, 
  3.771534961467712*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[25]=",ExpressionUUID->"2eda44c7-a86a-4fb8-821d-16dd18eb82cf"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"g", " ", "l", " ", "M1", " ", "m2", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
    RowBox[{"g", " ", "l", " ", 
     SuperscriptBox["m2", "2"], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
    RowBox[{"l", " ", "m2", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
     RowBox[{"u", "[", "t", "]"}]}], "-", 
    RowBox[{"l", " ", "m2", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
     SubscriptBox["cc", "amort"], " ", 
     RowBox[{
      SuperscriptBox["p", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}], "-", 
    RowBox[{"M1", " ", "\[Gamma]", " ", 
     RowBox[{
      SuperscriptBox["\[Theta]", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}], "-", 
    RowBox[{"m2", " ", "\[Gamma]", " ", 
     RowBox[{
      SuperscriptBox["\[Theta]", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}], "-", 
    RowBox[{
     SuperscriptBox["l", "2"], " ", 
     SuperscriptBox["m2", "2"], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["\[Theta]", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "2"]}]}], ")"}], "/", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"J", " ", "M1"}], "+", 
    RowBox[{"J", " ", "m2"}], "+", 
    RowBox[{
     SuperscriptBox["l", "2"], " ", "M1", " ", "m2"}], "+", 
    RowBox[{
     SuperscriptBox["l", "2"], " ", 
     SuperscriptBox["m2", "2"]}], "-", 
    RowBox[{
     SuperscriptBox["l", "2"], " ", 
     SuperscriptBox["m2", "2"], " ", 
     SuperscriptBox[
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "2"]}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{3.771378744043214*^9, 3.7715342708116827`*^9, 
  3.7715349614766893`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[26]=",ExpressionUUID->"eb59b5ed-704b-430e-9a05-871cc3e8a508"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"eq1", "[", 
     RowBox[{
      RowBox[{"p", "[", "t", "]"}], ",", 
      RowBox[{"\[Theta]", "[", "t", "]"}], ",", 
      RowBox[{"u", "[", "t", "]"}]}], "]"}], "==", "\"\<0\>\""}], "//", 
   "TraditionalForm"}], 
  RowBox[{"(*", 
   RowBox[{
   "Para", " ", "mostrar", " ", "as", " ", "equa\[CCedilla]\[OTilde]es", " ", 
    "caso", " ", "tenha", " ", "necessidade"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"eq2", "[", 
    RowBox[{
     RowBox[{"p", "[", "t", "]"}], ",", 
     RowBox[{"\[Theta]", "[", "t", "]"}], ",", "0"}], "]"}], "==", 
   "\"\<0\>\""}], "//", "TraditionalForm", 
  RowBox[{"(*", 
   RowBox[{
   "Para", " ", "mostrar", " ", "as", " ", "equa\[CCedilla]\[OTilde]es", " ", 
    "caso", " ", "tenha", " ", "necessidade"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.7709110079653635`*^9, 3.7709110147622976`*^9}, {
  3.770921678794181*^9, 3.770921706955615*^9}, {3.7709219544545765`*^9, 
  3.7709220835792217`*^9}, {3.7709221417276163`*^9, 3.7709222325545835`*^9}, {
  3.77137855163636*^9, 3.7713785541743326`*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[27]:=",ExpressionUUID->"569c3dd4-2b6e-4002-8695-33650a725588"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["cc", "amort"], " ", 
     RowBox[{
      SuperscriptBox["p", "\[Prime]",
       MultilineFunction->None], "(", "t", ")"}]}], "-", 
    RowBox[{"l", " ", "m2", " ", 
     RowBox[{
      SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
       MultilineFunction->None], "(", "t", ")"}], " ", 
     RowBox[{"cos", "(", 
      RowBox[{"\[Theta]", "(", "t", ")"}], ")"}]}], "+", 
    RowBox[{"l", " ", "m2", " ", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["\[Theta]", "\[Prime]",
        MultilineFunction->None], "(", "t", ")"}], "2"], " ", 
     RowBox[{"sin", "(", 
      RowBox[{"\[Theta]", "(", "t", ")"}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"M1", "+", "m2"}], ")"}], " ", 
     RowBox[{
      SuperscriptBox["p", "\[Prime]\[Prime]",
       MultilineFunction->None], "(", "t", ")"}]}], "-", 
    RowBox[{"u", "(", "t", ")"}]}], "\[LongEqual]", "\<\"0\"\>"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.7713787855786395`*^9, 3.77153427891188*^9, 
  3.7715349616342688`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->
  "Out[27]//TraditionalForm=",ExpressionUUID->"8fd16fc5-a74f-46cd-b39b-\
731431c01fb4"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     RowBox[{"g", " ", "l", " ", "m2", " ", 
      RowBox[{"sin", "(", 
       RowBox[{"\[Theta]", "(", "t", ")"}], ")"}]}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"J", "+", 
       RowBox[{
        SuperscriptBox["l", "2"], " ", "m2"}]}], ")"}], " ", 
     RowBox[{
      SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
       MultilineFunction->None], "(", "t", ")"}]}], "-", 
    RowBox[{"l", " ", "m2", " ", 
     RowBox[{
      SuperscriptBox["p", "\[Prime]\[Prime]",
       MultilineFunction->None], "(", "t", ")"}], " ", 
     RowBox[{"cos", "(", 
      RowBox[{"\[Theta]", "(", "t", ")"}], ")"}]}], "+", 
    RowBox[{"\[Gamma]", " ", 
     RowBox[{
      SuperscriptBox["\[Theta]", "\[Prime]",
       MultilineFunction->None], "(", "t", ")"}]}]}], 
   "\[LongEqual]", "\<\"0\"\>"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.7713787855786395`*^9, 3.77153427891188*^9, 
  3.77153496164125*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->
  "Out[28]//TraditionalForm=",ExpressionUUID->"8a232acc-db74-49fb-8b19-\
bc9f20406c10"]
}, Open  ]],

Cell["REPRESENTA\[CapitalCCedilla]\[CapitalATilde]O EM \
ESPA\[CapitalCCedilla]OS DE ESTADO", "Text",
 CellChangeTimes->{{3.7709256157728243`*^9, 3.7709256275355787`*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,ExpressionUUID->"0b64aa3e-97b6-4e12-a90d-2103851e0a5e"],

Cell["VETOR DE ESTADOS", "Text",
 CellChangeTimes->{{3.7697628221663065`*^9, 3.76976282798378*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,ExpressionUUID->"d547c320-0f6a-4a70-b6ec-bcb1e5c03463"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"xis", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"p", "[", "t", "]"}], ",", 
    RowBox[{"\[Theta]", "[", "t", "]"}], ",", 
    RowBox[{
     RowBox[{"p", "'"}], "[", "t", "]"}], ",", 
    RowBox[{
     RowBox[{"\[Theta]", "'"}], "[", "t", "]"}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"xisp", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"p", "'"}], "[", "t", "]"}], ",", 
    RowBox[{
     RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], ",", "eq1final", ",", 
    "eq2final"}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.7697628316480036`*^9, 3.7697629145428543`*^9}, {
   3.7697629486962943`*^9, 3.7697629854650044`*^9}, {3.7697715990079813`*^9, 
   3.769771696656921*^9}, {3.770554431897317*^9, 3.770554441194121*^9}, {
   3.7705544749945774`*^9, 3.7705544757234135`*^9}, 3.77055453503161*^9, {
   3.771378878769647*^9, 3.771378881463558*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[29]:=",ExpressionUUID->"50515d2a-e8c4-4782-8e7e-70abed0f38b5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"p", "[", "t", "]"}], ",", 
   RowBox[{"\[Theta]", "[", "t", "]"}], ",", 
   RowBox[{
    SuperscriptBox["p", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}], ",", 
   RowBox[{
    SuperscriptBox["\[Theta]", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7715342834038706`*^9, 3.7715349616661835`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[29]=",ExpressionUUID->"0c1ee1af-c569-4c99-8298-01c7460ccfd7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SuperscriptBox["p", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}], ",", 
   RowBox[{
    SuperscriptBox["\[Theta]", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"g", " ", 
       SuperscriptBox["l", "2"], " ", 
       SuperscriptBox["m2", "2"], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
      RowBox[{"J", " ", 
       RowBox[{"u", "[", "t", "]"}]}], "+", 
      RowBox[{
       SuperscriptBox["l", "2"], " ", "m2", " ", 
       RowBox[{"u", "[", "t", "]"}]}], "-", 
      RowBox[{"J", " ", 
       SubscriptBox["cc", "amort"], " ", 
       RowBox[{
        SuperscriptBox["p", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], "-", 
      RowBox[{
       SuperscriptBox["l", "2"], " ", "m2", " ", 
       SubscriptBox["cc", "amort"], " ", 
       RowBox[{
        SuperscriptBox["p", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], "-", 
      RowBox[{"l", " ", "m2", " ", "\[Gamma]", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["\[Theta]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], "-", 
      RowBox[{"J", " ", "l", " ", "m2", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["\[Theta]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
      RowBox[{
       SuperscriptBox["l", "3"], " ", 
       SuperscriptBox["m2", "2"], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["\[Theta]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "2"]}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"J", " ", "M1"}], "+", 
      RowBox[{"J", " ", "m2"}], "+", 
      RowBox[{
       SuperscriptBox["l", "2"], " ", "M1", " ", "m2"}], "+", 
      RowBox[{
       SuperscriptBox["l", "2"], " ", 
       SuperscriptBox["m2", "2"]}], "-", 
      RowBox[{
       SuperscriptBox["l", "2"], " ", 
       SuperscriptBox["m2", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "2"]}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"g", " ", "l", " ", "M1", " ", "m2", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
      RowBox[{"g", " ", "l", " ", 
       SuperscriptBox["m2", "2"], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
      RowBox[{"l", " ", "m2", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"u", "[", "t", "]"}]}], "-", 
      RowBox[{"l", " ", "m2", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
       SubscriptBox["cc", "amort"], " ", 
       RowBox[{
        SuperscriptBox["p", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], "-", 
      RowBox[{"M1", " ", "\[Gamma]", " ", 
       RowBox[{
        SuperscriptBox["\[Theta]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], "-", 
      RowBox[{"m2", " ", "\[Gamma]", " ", 
       RowBox[{
        SuperscriptBox["\[Theta]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], "-", 
      RowBox[{
       SuperscriptBox["l", "2"], " ", 
       SuperscriptBox["m2", "2"], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["\[Theta]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "2"]}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"J", " ", "M1"}], "+", 
      RowBox[{"J", " ", "m2"}], "+", 
      RowBox[{
       SuperscriptBox["l", "2"], " ", "M1", " ", "m2"}], "+", 
      RowBox[{
       SuperscriptBox["l", "2"], " ", 
       SuperscriptBox["m2", "2"]}], "-", 
      RowBox[{
       SuperscriptBox["l", "2"], " ", 
       SuperscriptBox["m2", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "2"]}]}], ")"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.7715342834038706`*^9, 3.7715349616801457`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[30]=",ExpressionUUID->"db885556-040b-4724-ac31-8f0fb4ac7b30"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"xis", "//", "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{"xisp", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.7713788929487314`*^9, 3.771378964035433*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[31]:=",ExpressionUUID->"51315cb9-bace-4dce-85d7-c43df8b3e518"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{"p", "[", "t", "]"}]},
      {
       RowBox[{"\[Theta]", "[", "t", "]"}]},
      {
       RowBox[{
        SuperscriptBox["p", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]},
      {
       RowBox[{
        SuperscriptBox["\[Theta]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7713788832451963`*^9, 3.771378927643886*^9, 
  3.7713789646754093`*^9, 3.771534290454441*^9, 3.771534961710066*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->
  "Out[31]//MatrixForm=",ExpressionUUID->"3d8e443f-5adb-443a-bfe8-\
b362a23c7708"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{
        SuperscriptBox["p", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]},
      {
       RowBox[{
        SuperscriptBox["\[Theta]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]},
      {
       FractionBox[
        RowBox[{
         RowBox[{"g", " ", 
          SuperscriptBox["l", "2"], " ", 
          SuperscriptBox["m2", "2"], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
         RowBox[{"J", " ", 
          RowBox[{"u", "[", "t", "]"}]}], "+", 
         RowBox[{
          SuperscriptBox["l", "2"], " ", "m2", " ", 
          RowBox[{"u", "[", "t", "]"}]}], "-", 
         RowBox[{"J", " ", 
          SubscriptBox["cc", "amort"], " ", 
          RowBox[{
           SuperscriptBox["p", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}], "-", 
         RowBox[{
          SuperscriptBox["l", "2"], " ", "m2", " ", 
          SubscriptBox["cc", "amort"], " ", 
          RowBox[{
           SuperscriptBox["p", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}], "-", 
         RowBox[{"l", " ", "m2", " ", "\[Gamma]", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
          RowBox[{
           SuperscriptBox["\[Theta]", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}], "-", 
         RowBox[{"J", " ", "l", " ", "m2", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["\[Theta]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
         RowBox[{
          SuperscriptBox["l", "3"], " ", 
          SuperscriptBox["m2", "2"], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["\[Theta]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}], "2"]}]}], 
        RowBox[{
         RowBox[{"J", " ", "M1"}], "+", 
         RowBox[{"J", " ", "m2"}], "+", 
         RowBox[{
          SuperscriptBox["l", "2"], " ", "M1", " ", "m2"}], "+", 
         RowBox[{
          SuperscriptBox["l", "2"], " ", 
          SuperscriptBox["m2", "2"]}], "-", 
         RowBox[{
          SuperscriptBox["l", "2"], " ", 
          SuperscriptBox["m2", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", 
            RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "2"]}]}]]},
      {
       FractionBox[
        RowBox[{
         RowBox[{"g", " ", "l", " ", "M1", " ", "m2", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
         RowBox[{"g", " ", "l", " ", 
          SuperscriptBox["m2", "2"], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
         RowBox[{"l", " ", "m2", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
          RowBox[{"u", "[", "t", "]"}]}], "-", 
         RowBox[{"l", " ", "m2", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
          SubscriptBox["cc", "amort"], " ", 
          RowBox[{
           SuperscriptBox["p", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}], "-", 
         RowBox[{"M1", " ", "\[Gamma]", " ", 
          RowBox[{
           SuperscriptBox["\[Theta]", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}], "-", 
         RowBox[{"m2", " ", "\[Gamma]", " ", 
          RowBox[{
           SuperscriptBox["\[Theta]", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}], "-", 
         RowBox[{
          SuperscriptBox["l", "2"], " ", 
          SuperscriptBox["m2", "2"], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["\[Theta]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}], "2"]}]}], 
        RowBox[{
         RowBox[{"J", " ", "M1"}], "+", 
         RowBox[{"J", " ", "m2"}], "+", 
         RowBox[{
          SuperscriptBox["l", "2"], " ", "M1", " ", "m2"}], "+", 
         RowBox[{
          SuperscriptBox["l", "2"], " ", 
          SuperscriptBox["m2", "2"]}], "-", 
         RowBox[{
          SuperscriptBox["l", "2"], " ", 
          SuperscriptBox["m2", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", 
            RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "2"]}]}]]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7713788832451963`*^9, 3.771378927643886*^9, 
  3.7713789646754093`*^9, 3.771534290454441*^9, 3.7715349617220335`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->
  "Out[32]//MatrixForm=",ExpressionUUID->"124bbced-e695-4ecb-aaef-\
93eee0705d86"]
}, Open  ]],

Cell["C\[CapitalAAcute]LCULO DAS DERIVADAS", "Text",
 CellChangeTimes->{{3.7697628221663065`*^9, 3.76976282798378*^9}, {
  3.769763007152197*^9, 3.769763019495267*^9}, {3.76976327584284*^9, 
  3.7697632834530096`*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,ExpressionUUID->"1ebe0c3d-1d2d-4e69-bf2a-118377149879"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    SubscriptBox["AAA", "lin"], ",", 
    SubscriptBox["BBB", "lin"]}], "}"}], "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{"xisp", ",", 
      RowBox[{"{", "xis", "}"}]}], "]"}], ",", 
    RowBox[{"D", "[", 
     RowBox[{"xisp", ",", 
      RowBox[{"{", 
       RowBox[{"u", "[", "t", "]"}], "}"}]}], "]"}]}], "}"}], 
  RowBox[{"(*", 
   RowBox[{"Matriz", " ", "Jacobiana"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.7697630297723417`*^9, 3.769763161523394*^9}, {
   3.769763200499197*^9, 3.769763214833438*^9}, {3.769763293228866*^9, 
   3.7697633057852907`*^9}, {3.7697676948454657`*^9, 3.7697677051129866`*^9}, 
   3.7697683187844067`*^9, {3.7697684270575094`*^9, 3.7697684603840995`*^9}, 
   3.7697688121744385`*^9, {3.7697691764022417`*^9, 3.7697691836478543`*^9}, {
   3.7697709235963545`*^9, 3.769770925575113*^9}, {3.7697787212730513`*^9, 
   3.7697787452622633`*^9}, {3.7697805312824793`*^9, 3.76978055272931*^9}, {
   3.7697860280048256`*^9, 3.769786033047655*^9}, {3.770355696138486*^9, 
   3.7703557117118926`*^9}, {3.770564811978223*^9, 3.770564823932248*^9}, {
   3.7709155210766973`*^9, 3.7709155265276556`*^9}, 3.771534295943765*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[33]:=",ExpressionUUID->"5fd84eb7-a77f-4777-b8cd-2c471d0a1820"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"g", " ", 
            SuperscriptBox["l", "2"], " ", 
            SuperscriptBox["m2", "2"], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "2"]}], "-", 
           RowBox[{"g", " ", 
            SuperscriptBox["l", "2"], " ", 
            SuperscriptBox["m2", "2"], " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "2"]}], "+", 
           RowBox[{"l", " ", "m2", " ", "\[Gamma]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"J", " ", "l", " ", "m2", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["\[Theta]", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
           RowBox[{
            SuperscriptBox["l", "3"], " ", 
            SuperscriptBox["m2", "2"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["\[Theta]", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}], "2"]}]}], ")"}], 
         "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"J", " ", "M1"}], "+", 
           RowBox[{"J", " ", "m2"}], "+", 
           RowBox[{
            SuperscriptBox["l", "2"], " ", "M1", " ", "m2"}], "+", 
           RowBox[{
            SuperscriptBox["l", "2"], " ", 
            SuperscriptBox["m2", "2"]}], "-", 
           RowBox[{
            SuperscriptBox["l", "2"], " ", 
            SuperscriptBox["m2", "2"], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "2"]}]}], ")"}]}], 
        "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", " ", 
           SuperscriptBox["l", "2"], " ", 
           SuperscriptBox["m2", "2"], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"g", " ", 
              SuperscriptBox["l", "2"], " ", 
              SuperscriptBox["m2", "2"], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
             RowBox[{"J", " ", 
              RowBox[{"u", "[", "t", "]"}]}], "+", 
             RowBox[{
              SuperscriptBox["l", "2"], " ", "m2", " ", 
              RowBox[{"u", "[", "t", "]"}]}], "-", 
             RowBox[{"J", " ", 
              SubscriptBox["cc", "amort"], " ", 
              RowBox[{
               SuperscriptBox["p", "\[Prime]",
                MultilineFunction->None], "[", "t", "]"}]}], "-", 
             RowBox[{
              SuperscriptBox["l", "2"], " ", "m2", " ", 
              SubscriptBox["cc", "amort"], " ", 
              RowBox[{
               SuperscriptBox["p", "\[Prime]",
                MultilineFunction->None], "[", "t", "]"}]}], "-", 
             RowBox[{"l", " ", "m2", " ", "\[Gamma]", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              RowBox[{
               SuperscriptBox["\[Theta]", "\[Prime]",
                MultilineFunction->None], "[", "t", "]"}]}], "-", 
             RowBox[{"J", " ", "l", " ", "m2", " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              SuperscriptBox[
               RowBox[{
                SuperscriptBox["\[Theta]", "\[Prime]",
                 MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
             RowBox[{
              SuperscriptBox["l", "3"], " ", 
              SuperscriptBox["m2", "2"], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
              SuperscriptBox[
               RowBox[{
                SuperscriptBox["\[Theta]", "\[Prime]",
                 MultilineFunction->None], "[", "t", "]"}], "2"]}]}], ")"}]}],
           ")"}], "/", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"J", " ", "M1"}], "+", 
            RowBox[{"J", " ", "m2"}], "+", 
            RowBox[{
             SuperscriptBox["l", "2"], " ", "M1", " ", "m2"}], "+", 
            RowBox[{
             SuperscriptBox["l", "2"], " ", 
             SuperscriptBox["m2", "2"]}], "-", 
            RowBox[{
             SuperscriptBox["l", "2"], " ", 
             SuperscriptBox["m2", "2"], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "2"]}]}], ")"}], 
          "2"]}]}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "J"}], " ", 
           SubscriptBox["cc", "amort"]}], "-", 
          RowBox[{
           SuperscriptBox["l", "2"], " ", "m2", " ", 
           SubscriptBox["cc", "amort"]}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"J", " ", "M1"}], "+", 
          RowBox[{"J", " ", "m2"}], "+", 
          RowBox[{
           SuperscriptBox["l", "2"], " ", "M1", " ", "m2"}], "+", 
          RowBox[{
           SuperscriptBox["l", "2"], " ", 
           SuperscriptBox["m2", "2"]}], "-", 
          RowBox[{
           SuperscriptBox["l", "2"], " ", 
           SuperscriptBox["m2", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "2"]}]}], ")"}]}], 
       ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "l"}], " ", "m2", " ", "\[Gamma]", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
          RowBox[{"2", " ", "J", " ", "l", " ", "m2", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Theta]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], "-", 
          RowBox[{"2", " ", 
           SuperscriptBox["l", "3"], " ", 
           SuperscriptBox["m2", "2"], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Theta]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"J", " ", "M1"}], "+", 
          RowBox[{"J", " ", "m2"}], "+", 
          RowBox[{
           SuperscriptBox["l", "2"], " ", "M1", " ", "m2"}], "+", 
          RowBox[{
           SuperscriptBox["l", "2"], " ", 
           SuperscriptBox["m2", "2"]}], "-", 
          RowBox[{
           SuperscriptBox["l", "2"], " ", 
           SuperscriptBox["m2", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "2"]}]}], ")"}]}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"2", " ", 
             SuperscriptBox["l", "2"], " ", 
             SuperscriptBox["m2", "2"], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"g", " ", "l", " ", "M1", " ", "m2", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
               RowBox[{"g", " ", "l", " ", 
                SuperscriptBox["m2", "2"], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
               RowBox[{"l", " ", "m2", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
                RowBox[{"u", "[", "t", "]"}]}], "-", 
               RowBox[{"l", " ", "m2", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
                SubscriptBox["cc", "amort"], " ", 
                RowBox[{
                 SuperscriptBox["p", "\[Prime]",
                  MultilineFunction->None], "[", "t", "]"}]}], "-", 
               RowBox[{"M1", " ", "\[Gamma]", " ", 
                RowBox[{
                 SuperscriptBox["\[Theta]", "\[Prime]",
                  MultilineFunction->None], "[", "t", "]"}]}], "-", 
               RowBox[{"m2", " ", "\[Gamma]", " ", 
                RowBox[{
                 SuperscriptBox["\[Theta]", "\[Prime]",
                  MultilineFunction->None], "[", "t", "]"}]}], "-", 
               RowBox[{
                SuperscriptBox["l", "2"], " ", 
                SuperscriptBox["m2", "2"], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
                SuperscriptBox[
                 RowBox[{
                  SuperscriptBox["\[Theta]", "\[Prime]",
                   MultilineFunction->None], "[", "t", "]"}], "2"]}]}], 
              ")"}]}], ")"}], "/", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"J", " ", "M1"}], "+", 
              RowBox[{"J", " ", "m2"}], "+", 
              RowBox[{
               SuperscriptBox["l", "2"], " ", "M1", " ", "m2"}], "+", 
              RowBox[{
               SuperscriptBox["l", "2"], " ", 
               SuperscriptBox["m2", "2"]}], "-", 
              RowBox[{
               SuperscriptBox["l", "2"], " ", 
               SuperscriptBox["m2", "2"], " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "2"]}]}], ")"}], 
            "2"]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"g", " ", "l", " ", "M1", " ", "m2", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
           RowBox[{"g", " ", "l", " ", 
            SuperscriptBox["m2", "2"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
           RowBox[{"l", " ", "m2", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
            RowBox[{"u", "[", "t", "]"}]}], "+", 
           RowBox[{"l", " ", "m2", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
            SubscriptBox["cc", "amort"], " ", 
            RowBox[{
             SuperscriptBox["p", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{
            SuperscriptBox["l", "2"], " ", 
            SuperscriptBox["m2", "2"], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "2"], " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["\[Theta]", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
           RowBox[{
            SuperscriptBox["l", "2"], " ", 
            SuperscriptBox["m2", "2"], " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "2"], " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["\[Theta]", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}], "2"]}]}], ")"}], 
         "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"J", " ", "M1"}], "+", 
           RowBox[{"J", " ", "m2"}], "+", 
           RowBox[{
            SuperscriptBox["l", "2"], " ", "M1", " ", "m2"}], "+", 
           RowBox[{
            SuperscriptBox["l", "2"], " ", 
            SuperscriptBox["m2", "2"]}], "-", 
           RowBox[{
            SuperscriptBox["l", "2"], " ", 
            SuperscriptBox["m2", "2"], " ", 
            SuperscriptBox[
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "2"]}]}], ")"}]}]}],
        ",", 
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"l", " ", "m2", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
            SubscriptBox["cc", "amort"]}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"J", " ", "M1"}], "+", 
            RowBox[{"J", " ", "m2"}], "+", 
            RowBox[{
             SuperscriptBox["l", "2"], " ", "M1", " ", "m2"}], "+", 
            RowBox[{
             SuperscriptBox["l", "2"], " ", 
             SuperscriptBox["m2", "2"]}], "-", 
            RowBox[{
             SuperscriptBox["l", "2"], " ", 
             SuperscriptBox["m2", "2"], " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "2"]}]}], ")"}]}], 
         ")"}]}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "M1"}], " ", "\[Gamma]"}], "-", 
          RowBox[{"m2", " ", "\[Gamma]"}], "-", 
          RowBox[{"2", " ", 
           SuperscriptBox["l", "2"], " ", 
           SuperscriptBox["m2", "2"], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Theta]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"J", " ", "M1"}], "+", 
          RowBox[{"J", " ", "m2"}], "+", 
          RowBox[{
           SuperscriptBox["l", "2"], " ", "M1", " ", "m2"}], "+", 
          RowBox[{
           SuperscriptBox["l", "2"], " ", 
           SuperscriptBox["m2", "2"]}], "-", 
          RowBox[{
           SuperscriptBox["l", "2"], " ", 
           SuperscriptBox["m2", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "2"]}]}], ")"}]}]}], 
      "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"J", "+", 
        RowBox[{
         SuperscriptBox["l", "2"], " ", "m2"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"J", " ", "M1"}], "+", 
        RowBox[{"J", " ", "m2"}], "+", 
        RowBox[{
         SuperscriptBox["l", "2"], " ", "M1", " ", "m2"}], "+", 
        RowBox[{
         SuperscriptBox["l", "2"], " ", 
         SuperscriptBox["m2", "2"]}], "-", 
        RowBox[{
         SuperscriptBox["l", "2"], " ", 
         SuperscriptBox["m2", "2"], " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", 
           RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "2"]}]}], ")"}]}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"l", " ", "m2", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"J", " ", "M1"}], "+", 
        RowBox[{"J", " ", "m2"}], "+", 
        RowBox[{
         SuperscriptBox["l", "2"], " ", "M1", " ", "m2"}], "+", 
        RowBox[{
         SuperscriptBox["l", "2"], " ", 
         SuperscriptBox["m2", "2"]}], "-", 
        RowBox[{
         SuperscriptBox["l", "2"], " ", 
         SuperscriptBox["m2", "2"], " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", 
           RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], "2"]}]}], ")"}]}]}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.771534297363968*^9, 3.771534961769905*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[33]=",ExpressionUUID->"7c4784c8-1fd1-4fc8-842f-9f5d357ae930"]
}, Open  ]],

Cell[TextData[{
 "ATRIBUI\[CapitalCCedilla]\[CapitalATilde]O DOS PAR\[CapitalAHat]METROS DO \
SISTEMA E OBTEN\[CapitalCCedilla]\[CapitalATilde]O DAS MATRIZES ",
 Cell[BoxData[
  SubscriptBox["A", "lin"]],
  CellChangeTimes->{{3.7697630297723417`*^9, 3.769763161523394*^9}, {
   3.769763200499197*^9, 3.769763214833438*^9}, {3.77091551125887*^9, 
   3.770915651548698*^9}, {3.7709156842676086`*^9, 3.7709156846207356`*^9}, {
   3.7709205330764627`*^9, 3.7709205334604406`*^9}},ExpressionUUID->
  "132495ee-0105-494e-b3ed-89e9da890f4c"],
 " e ",
 Cell[BoxData[
  SubscriptBox["B", "lin"]],
  CellChangeTimes->{{3.7697630297723417`*^9, 3.769763161523394*^9}, {
   3.769763200499197*^9, 3.769763214833438*^9}, {3.77091551125887*^9, 
   3.770915651548698*^9}, {3.7709156842676086`*^9, 3.7709156846207356`*^9}, {
   3.7709205330764627`*^9, 3.7709205334604406`*^9}},ExpressionUUID->
  "034bfb4e-5ef5-4857-be29-9e1c11fdc66a"]
}], "Text",
 CellChangeTimes->{{3.7697628221663065`*^9, 3.76976282798378*^9}, {
   3.769763007152197*^9, 3.769763019495267*^9}, {3.7709156921805487`*^9, 
   3.7709157071296854`*^9}, {3.770920543914426*^9, 3.7709205747768707`*^9}, 
   3.889113793297866*^9},
 FontFamily->"Times New Roman",
 FontSize->9,ExpressionUUID->"511ef579-a7c4-4a4b-8be1-25c56af13f84"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["AA", "lin"], ",", 
     SubscriptBox["BB", "lin"]}], "}"}], "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["AAA", "lin"], ",", 
      SubscriptBox["BBB", "lin"]}], "}"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"M1", "\[Rule]", "10"}], ",", 
      RowBox[{"m2", "\[Rule]", "80"}], ",", 
      RowBox[{
       SubscriptBox["cc", "amort"], "\[Rule]", ".1"}], ",", 
      RowBox[{"J", "\[Rule]", "100"}], ",", 
      RowBox[{"l", "\[Rule]", "1"}], ",", 
      RowBox[{"\[Gamma]", "\[Rule]", ".01"}], ",", 
      RowBox[{"g", "\[Rule]", "9.81"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["A", "lin"], "=", 
  RowBox[{
   SubscriptBox["AA", "lin"], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Theta]", "[", "t", "]"}], "\[Rule]", 
      RowBox[{
       SubscriptBox["\[Theta]", "est"], "[", "t", "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "\[Rule]", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[Theta]", "est"], "'"}], "[", "t", "]"}]}], ",", 
     RowBox[{
      RowBox[{"p", "[", "t", "]"}], "\[Rule]", 
      RowBox[{
       SubscriptBox["p", "est"], "[", "t", "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"p", "'"}], "[", "t", "]"}], "\[Rule]", 
      RowBox[{
       RowBox[{
        SubscriptBox["p", "est"], "'"}], "[", "t", "]"}]}], ",", 
     RowBox[{
      RowBox[{"u", "[", "t", "]"}], "\[Rule]", 
      RowBox[{
       SubscriptBox["u", "est"], "[", "t", "]"}]}]}], 
    "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["B", "lin"], "=", 
  RowBox[{
   SubscriptBox["BB", "lin"], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Theta]", "[", "t", "]"}], "\[Rule]", 
      RowBox[{
       SubscriptBox["\[Theta]", "est"], "[", "t", "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "\[Rule]", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[Theta]", "est"], "'"}], "[", "t", "]"}]}], ",", 
     RowBox[{
      RowBox[{"p", "[", "t", "]"}], "\[Rule]", 
      RowBox[{
       SubscriptBox["p", "est"], "[", "t", "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"p", "'"}], "[", "t", "]"}], "\[Rule]", 
      RowBox[{
       RowBox[{
        SubscriptBox["p", "est"], "'"}], "[", "t", "]"}]}], ",", 
     RowBox[{
      RowBox[{"u", "[", "t", "]"}], "\[Rule]", 
      RowBox[{
       SubscriptBox["u", "est"], "[", "t", "]"}]}]}], "}"}]}]}]}], "Input",
 CellChangeTimes->{{3.7697630297723417`*^9, 3.769763161523394*^9}, {
  3.769763200499197*^9, 3.769763214833438*^9}, {3.77091551125887*^9, 
  3.770915651548698*^9}, {3.7709156842676086`*^9, 3.7709156846207356`*^9}, {
  3.7709205330764627`*^9, 3.7709205334604406`*^9}, {3.7715343134479694`*^9, 
  3.7715343155065017`*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[34]:=",ExpressionUUID->"accc0980-255b-45fc-92b6-db185396ec3b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"62784.`", " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "est"], "[", "t", "]"}], "]"}], "2"]}], 
         "-", 
         RowBox[{"62784.`", " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "est"], "[", "t", "]"}], "]"}], "2"]}], 
         "+", 
         RowBox[{"0.8`", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "est"], "[", "t", "]"}], "]"}], " ", 
          RowBox[{
           SuperscriptBox[
            SubscriptBox["\[Theta]", "est"], "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}], "-", 
         RowBox[{"14400", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "est"], "[", "t", "]"}], "]"}], " ", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox[
             SubscriptBox["\[Theta]", "est"], "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}], "2"]}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"16200", "-", 
         RowBox[{"6400", " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "est"], "[", "t", "]"}], "]"}], 
           "2"]}]}], ")"}]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"12800", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "est"], "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "est"], "[", "t", "]"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"62784.`", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{
              SubscriptBox["\[Theta]", "est"], "[", "t", "]"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{
              SubscriptBox["\[Theta]", "est"], "[", "t", "]"}], "]"}]}], "+", 
           RowBox[{"180", " ", 
            RowBox[{
             SubscriptBox["u", "est"], "[", "t", "]"}]}], "-", 
           RowBox[{"18.`", " ", 
            RowBox[{
             SuperscriptBox[
              SubscriptBox["p", "est"], "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"0.8`", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{
              SubscriptBox["\[Theta]", "est"], "[", "t", "]"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox[
              SubscriptBox["\[Theta]", "est"], "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{"14400", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{
              SubscriptBox["\[Theta]", "est"], "[", "t", "]"}], "]"}], " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox[
               SubscriptBox["\[Theta]", "est"], "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}], "2"]}]}], ")"}]}], 
        ")"}], "/", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"16200", "-", 
          RowBox[{"6400", " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", 
             RowBox[{
              SubscriptBox["\[Theta]", "est"], "[", "t", "]"}], "]"}], 
            "2"]}]}], ")"}], "2"]}]}], ",", 
     RowBox[{"-", 
      FractionBox["18.`", 
       RowBox[{"16200", "-", 
        RowBox[{"6400", " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "est"], "[", "t", "]"}], "]"}], 
          "2"]}]}]]}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "0.8`"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "est"], "[", "t", "]"}], "]"}]}], "-", 
        RowBox[{"28800", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "est"], "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox[
           SubscriptBox["\[Theta]", "est"], "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"16200", "-", 
        RowBox[{"6400", " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "est"], "[", "t", "]"}], "]"}], "2"]}]}],
        ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"12800", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "est"], "[", "t", "]"}], "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "est"], "[", "t", "]"}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"70632.`", " ", 
              RowBox[{"Sin", "[", 
               RowBox[{
                SubscriptBox["\[Theta]", "est"], "[", "t", "]"}], "]"}]}], 
             "+", 
             RowBox[{"80", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{
                SubscriptBox["\[Theta]", "est"], "[", "t", "]"}], "]"}], " ", 
              RowBox[{
               SubscriptBox["u", "est"], "[", "t", "]"}]}], "-", 
             RowBox[{"8.`", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{
                SubscriptBox["\[Theta]", "est"], "[", "t", "]"}], "]"}], " ", 
              RowBox[{
               SuperscriptBox[
                SubscriptBox["p", "est"], "\[Prime]",
                MultilineFunction->None], "[", "t", "]"}]}], "-", 
             RowBox[{"0.9`", " ", 
              RowBox[{
               SuperscriptBox[
                SubscriptBox["\[Theta]", "est"], "\[Prime]",
                MultilineFunction->None], "[", "t", "]"}]}], "-", 
             RowBox[{"6400", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{
                SubscriptBox["\[Theta]", "est"], "[", "t", "]"}], "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{
                SubscriptBox["\[Theta]", "est"], "[", "t", "]"}], "]"}], " ", 
              SuperscriptBox[
               RowBox[{
                SuperscriptBox[
                 SubscriptBox["\[Theta]", "est"], "\[Prime]",
                 MultilineFunction->None], "[", "t", "]"}], "2"]}]}], ")"}]}],
           ")"}], "/", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"16200", "-", 
            RowBox[{"6400", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", 
               RowBox[{
                SubscriptBox["\[Theta]", "est"], "[", "t", "]"}], "]"}], 
              "2"]}]}], ")"}], "2"]}], ")"}]}], "+", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"16200", "-", 
         RowBox[{"6400", " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "est"], "[", "t", "]"}], "]"}], 
           "2"]}]}]], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"70632.`", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "est"], "[", "t", "]"}], "]"}]}], "-", 
         RowBox[{"80", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "est"], "[", "t", "]"}], "]"}], " ", 
          RowBox[{
           SubscriptBox["u", "est"], "[", "t", "]"}]}], "+", 
         RowBox[{"8.`", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "est"], "[", "t", "]"}], "]"}], " ", 
          RowBox[{
           SuperscriptBox[
            SubscriptBox["p", "est"], "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}], "-", 
         RowBox[{"6400", " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "est"], "[", "t", "]"}], "]"}], "2"], 
          " ", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox[
             SubscriptBox["\[Theta]", "est"], "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
         RowBox[{"6400", " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", 
            RowBox[{
             SubscriptBox["\[Theta]", "est"], "[", "t", "]"}], "]"}], "2"], 
          " ", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox[
             SubscriptBox["\[Theta]", "est"], "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}], "2"]}]}], ")"}]}]}], 
     ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"8.`", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{
          SubscriptBox["\[Theta]", "est"], "[", "t", "]"}], "]"}]}], 
       RowBox[{"16200", "-", 
        RowBox[{"6400", " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "est"], "[", "t", "]"}], "]"}], 
          "2"]}]}]]}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "0.9`"}], "-", 
        RowBox[{"12800", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "est"], "[", "t", "]"}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{
           SubscriptBox["\[Theta]", "est"], "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox[
           SubscriptBox["\[Theta]", "est"], "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"16200", "-", 
        RowBox[{"6400", " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", 
           RowBox[{
            SubscriptBox["\[Theta]", "est"], "[", "t", "]"}], "]"}], "2"]}]}],
        ")"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7715343166214776`*^9, 3.7715349618267536`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[35]=",ExpressionUUID->"69f8fe9b-1881-40f6-bd4f-436f629f6843"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", 
   FractionBox["180", 
    RowBox[{"16200", "-", 
     RowBox[{"6400", " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "est"], "[", "t", "]"}], "]"}], "2"]}]}]], 
   ",", 
   FractionBox[
    RowBox[{"80", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{
       SubscriptBox["\[Theta]", "est"], "[", "t", "]"}], "]"}]}], 
    RowBox[{"16200", "-", 
     RowBox[{"6400", " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", 
        RowBox[{
         SubscriptBox["\[Theta]", "est"], "[", "t", "]"}], "]"}], "2"]}]}]]}],
   "}"}]], "Output",
 CellChangeTimes->{3.7715343166214776`*^9, 3.7715349618477*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[36]=",ExpressionUUID->"29d7d8d4-88d1-4992-b03c-2a08f820fae1"]
}, Open  ]],

Cell[TextData[{
 "PONTOS DE OPERA\[CapitalCCedilla]\[CapitalATilde]O ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["x", "*"], TraditionalForm]],ExpressionUUID->
  "85bfbf0a-cfeb-42c0-965f-126353266eff"],
 " e ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["u", "*"], TraditionalForm]],ExpressionUUID->
  "da84a32e-80ee-4721-b3d2-8f20bbb223c5"]
}], "Text",
 CellChangeTimes->{{3.7697790469997897`*^9, 3.7697790652783785`*^9}, {
  3.7697791677004175`*^9, 3.769779178951362*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,ExpressionUUID->"c774a369-ebc8-45d4-a2d7-0954741235f8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["p", "est"], "[", "t", "]"}], ",", 
     RowBox[{
      SubscriptBox["\[Theta]", "est"], "[", "t", "]"}], ",", 
     RowBox[{
      RowBox[{
       SubscriptBox["p", "est"], "'"}], "[", "t", "]"}], ",", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[Theta]", "est"], "'"}], "[", "t", "]"}], ",", 
     RowBox[{
      SubscriptBox["u", "est"], "[", "t", "]"}]}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "\[Pi]", ",", "0", ",", "0", ",", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["x", "*"], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["p", "est"], "[", "t", "]"}], ",", 
     RowBox[{
      SubscriptBox["\[Theta]", "est"], "[", "t", "]"}], ",", 
     RowBox[{
      RowBox[{
       SubscriptBox["p", "est"], "'"}], "[", "t", "]"}], ",", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[Theta]", "est"], "'"}], "[", "t", "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["u", "*"], "=", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["u", "est"], "[", "t", "]"}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.769779720243549*^9, 3.7697797284187107`*^9}, 
   3.7697798742907853`*^9, {3.7697808132481165`*^9, 3.7697808151211133`*^9}, {
   3.7697809587063355`*^9, 3.769780968932115*^9}, {3.769781093963991*^9, 
   3.7697811191200085`*^9}, {3.769781411347231*^9, 3.769781452754771*^9}, {
   3.7697818366807127`*^9, 3.769781885110444*^9}, {3.7697824386807203`*^9, 
   3.7697824992539797`*^9}, {3.7697829747751036`*^9, 
   3.7697830291473107`*^9}, {3.769783139189659*^9, 3.769783158312441*^9}, {
   3.769783681160166*^9, 3.76978368841177*^9}, {3.7703559032127695`*^9, 
   3.7703560362342668`*^9}, {3.7715349073459044`*^9, 3.771534907832613*^9}, 
   3.771535790209937*^9, {3.771535922045251*^9, 3.771535924150579*^9}, {
   3.77153601661823*^9, 3.771536019577142*^9}, {3.771536100318823*^9, 
   3.771536102299526*^9}, {3.771536164911827*^9, 3.771536167286449*^9}, 
   3.7715362085593276`*^9, {3.7715362532385263`*^9, 3.7715362538568788`*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->
  "In[347]:=",ExpressionUUID->"e9d6153e-54d3-401b-ba91-b57f0b1a86c1"],

Cell["VARIAVEIS DE PERTURBA\[CapitalCCedilla]\[CapitalATilde]O", "Text",
 CellChangeTimes->{{3.7697790469997897`*^9, 3.7697790652783785`*^9}, {
  3.7697791677004175`*^9, 3.769779178951362*^9}, {3.769782212791107*^9, 
  3.7697822260731215`*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,ExpressionUUID->"532a6f97-5bc2-4389-b629-866e26454a14"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   UnderscriptBox["\[Delta]x", "_"], "[", 
   RowBox[{"xis_", ",", "var_", ",", "xisestrela_"}], "]"}], ":=", 
  RowBox[{"xis", "-", "xisestrela"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   UnderscriptBox["\[Delta]u", "_"], "[", 
   RowBox[{"us_", ",", "var_", ",", "usestrela_"}], "]"}], ":=", 
  RowBox[{"us", "-", "usestrela"}]}]}], "Input",
 CellChangeTimes->{{3.7697832333248167`*^9, 3.769783240843726*^9}, {
  3.7697835351854925`*^9, 3.769783538258275*^9}, {3.769783572080862*^9, 
  3.7697836184747815`*^9}, {3.7697837134677687`*^9, 3.7697837264670143`*^9}, {
  3.7697861940686264`*^9, 3.7697862496066055`*^9}, {3.7703552366648784`*^9, 
  3.7703552396397295`*^9}, {3.770355776518129*^9, 3.770355782052251*^9}, {
  3.7704051397935624`*^9, 3.770405155275699*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->
  "In[350]:=",ExpressionUUID->"bf90181f-3d12-4fb0-b83c-eae1352e5ae0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   UnderscriptBox[
    SubscriptBox["\[Delta]x", "1"], "_"], "=", 
   RowBox[{
    UnderscriptBox["\[Delta]x", "_"], "[", 
    RowBox[{"xis", ",", "t", ",", 
     SubscriptBox["x", "*"]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Delta]u", "1"], "=", 
   RowBox[{"Part", "[", 
    RowBox[{
     RowBox[{
      UnderscriptBox["\[Delta]u", "_"], "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["u", "est"], "[", "t", "]"}], ",", "t", ",", 
       SubscriptBox["u", "*"]}], "]"}], ",", "1"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.7703549340075674`*^9, {3.770355055994995*^9, 3.7703550793900537`*^9}, 
   3.7703552515351553`*^9, {3.770355794227875*^9, 3.7703558071779823`*^9}, {
   3.77040516236578*^9, 3.7704051853651037`*^9}, {3.7704055751734266`*^9, 
   3.7704055767733693`*^9}, {3.7704056090266886`*^9, 
   3.7704056136433816`*^9}, {3.770407800759828*^9, 3.7704078458306556`*^9}, {
   3.7704080379322863`*^9, 3.770408082716705*^9}, {3.770409883977872*^9, 
   3.7704098868028255`*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->
  "In[352]:=",ExpressionUUID->"ab2529eb-69ee-456b-ab3a-e1f06d6f5a70"],

Cell["OBTEN\[CapitalCCedilla]\[CapitalATilde]O DA MATRIZ DE OBSERVA\
\[CapitalCCedilla]\[CapitalATilde]O", "Text",
 CellChangeTimes->{{3.7697790469997897`*^9, 3.7697790652783785`*^9}, {
  3.7697791677004175`*^9, 3.769779178951362*^9}, {3.769782212791107*^9, 
  3.7697822260731215`*^9}, {3.7709206026059523`*^9, 3.7709206353701963`*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,ExpressionUUID->"a6e96f52-ff73-4299-8601-6d6397bf9a2b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["C", "*"], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "Semelhante", " ", "\[AGrave]", " ", "Matriz", " ", "Identidade", " ", 
    "para", " ", "visualiza\[CCedilla]\[ATilde]o", " ", "dos", " ", 
    "resultado", " ", "de", " ", "velocidade"}], "*)"}]}]], "Input",
 CellChangeTimes->{
  3.7704098756165047`*^9, {3.770904065498969*^9, 3.7709040689522343`*^9}, {
   3.770904447387348*^9, 3.7709044504012566`*^9}, {3.7709195378085113`*^9, 
   3.7709195786924186`*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->
  "In[354]:=",ExpressionUUID->"6a8d3619-83b4-4924-bae0-5b56443e7d9d"],

Cell["OBTEN\[CapitalCCedilla]\[CapitalATilde]O DO VETOR DE OBSERVA\
\[CapitalCCedilla]\[CapitalATilde]O", "Text",
 CellChangeTimes->{{3.7697790469997897`*^9, 3.7697790652783785`*^9}, {
  3.7697791677004175`*^9, 3.769779178951362*^9}, {3.769782212791107*^9, 
  3.7697822260731215`*^9}, {3.7709206026059523`*^9, 3.77092066164919*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,ExpressionUUID->"95d440b3-04ae-4753-932d-e2a17583bdf4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["\[Delta]y", "1"], "[", 
   RowBox[{"Ce_", ",", "t_"}], "]"}], ":=", 
  RowBox[{"Ce", ".", "xis"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Delta]y", "1"], "[", 
   RowBox[{
    SubscriptBox["C", "*"], ",", "t"}], "]"}], "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.7704095862185755`*^9, 3.770409678728657*^9}, {
  3.7709206663552732`*^9, 3.7709207050340233`*^9}, {3.7709207386724215`*^9, 
  3.7709207660332537`*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->
  "In[355]:=",ExpressionUUID->"8c0d5041-12e1-4208-be20-bf51e83f52a2"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{"p", "[", "t", "]"}]},
      {
       RowBox[{"\[Theta]", "[", "t", "]"}]},
      {
       RowBox[{
        SuperscriptBox["p", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]},
      {
       RowBox[{
        SuperscriptBox["\[Theta]", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7709207023471684`*^9, 3.7709207671233487`*^9, 
  3.7709276412500763`*^9, 3.7709277555948*^9, 3.7709279432127423`*^9, 
  3.771534961947432*^9, 3.7715358982838507`*^9, 3.7715359471460905`*^9, 
  3.7715360369506607`*^9, 3.7715361092548037`*^9, 3.7715361720477486`*^9, 
  3.771536215218273*^9, 3.7715362622149725`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->
  "Out[356]//MatrixForm=",ExpressionUUID->"5b45cb12-5d61-437e-a292-\
39f8de23bc19"]
}, Open  ]],

Cell["VETOR - FUN\[CapitalCCedilla]\[CapitalATilde]O DE \
TRANSFER\[CapitalEHat]NCIA", "Text",
 CellChangeTimes->{{3.7697790469997897`*^9, 3.7697790652783785`*^9}, {
  3.7697791677004175`*^9, 3.769779178951362*^9}, {3.769782212791107*^9, 
  3.7697822260731215`*^9}, {3.770556814502597*^9, 3.77055682046976*^9}, {
  3.770916299160947*^9, 3.770916304465166*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,ExpressionUUID->"2c040413-7675-4e6d-9764-f42fbeb4edf6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Id", "[", "n_", "]"}], ":=", 
  RowBox[{"IdentityMatrix", "[", "n", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["G", "*"], "[", 
   RowBox[{"ess_", ",", "Ce_", ",", "AA_", ",", "Be_", ",", "De_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"Ce", ".", 
     RowBox[{"(", 
      RowBox[{"Inverse", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"ess", " ", 
          RowBox[{"Id", "[", 
           RowBox[{"Length", "[", "AA", "]"}], "]"}]}], ")"}], "-", "AA"}], 
       "]"}], ")"}], ".", "Be"}], ")"}], "+", "De"}]}]}], "Input",
 CellChangeTimes->{{3.7705572745170755`*^9, 3.7705572772796106`*^9}, {
  3.77055752391603*^9, 3.7705575446291656`*^9}, {3.77092085437879*^9, 
  3.770920854685975*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->
  "In[357]:=",ExpressionUUID->"a780e525-4f9b-4de1-951f-bacff8782c53"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["G", "*"], "[", 
    RowBox[{"s", ",", 
     SubscriptBox["C", "*"], ",", 
     SubscriptBox["A", "lin"], ",", 
     SubscriptBox["B", "lin"], ",", "0"}], "]"}], "//", "MatrixForm"}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{
  3.7709149148619375`*^9, {3.7709149475111785`*^9, 3.770914954937191*^9}, 
   3.7709203441290946`*^9, {3.7709208774095635`*^9, 3.7709208911847863`*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->
  "In[359]:=",ExpressionUUID->"458769ac-5471-4355-9c11-0839821ad4cb"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{"0.`", "\[VeryThinSpace]", "+", 
        FractionBox["1.0204081632653063`*^-6", 
         RowBox[{"0.008008163265306123`", "\[VeryThinSpace]", "+", 
          RowBox[{"s", " ", 
           RowBox[{"(", 
            RowBox[{"7.207347040816327`", "\[VeryThinSpace]", "+", 
             RowBox[{"s", " ", 
              RowBox[{"(", 
               RowBox[{
               "0.0019285714285714288`", "\[VeryThinSpace]", "+", "s"}], 
               ")"}]}]}], ")"}]}]}]], "+", 
        FractionBox[
         RowBox[{"0.08008163265306126`", "\[VeryThinSpace]", "+", 
          RowBox[{"0.018367346938775512`", " ", 
           SuperscriptBox["s", "2"]}]}], 
         RowBox[{"s", " ", 
          RowBox[{"(", 
           RowBox[{"0.008008163265306123`", "\[VeryThinSpace]", "+", 
            RowBox[{"s", " ", 
             RowBox[{"(", 
              RowBox[{"7.207347040816327`", "\[VeryThinSpace]", "+", 
               RowBox[{"s", " ", 
                RowBox[{"(", 
                 RowBox[{
                 "0.0019285714285714288`", "\[VeryThinSpace]", "+", "s"}], 
                 ")"}]}]}], ")"}]}]}], ")"}]}]]}]},
      {
       RowBox[{"0.`", "\[VeryThinSpace]", "-", 
        FractionBox[
         RowBox[{"0.00816326530612245`", " ", "s"}], 
         RowBox[{"0.008008163265306123`", "\[VeryThinSpace]", "+", 
          RowBox[{"s", " ", 
           RowBox[{"(", 
            RowBox[{"7.207347040816327`", "\[VeryThinSpace]", "+", 
             RowBox[{"s", " ", 
              RowBox[{"(", 
               RowBox[{
               "0.0019285714285714288`", "\[VeryThinSpace]", "+", "s"}], 
               ")"}]}]}], ")"}]}]}]]}]},
      {
       RowBox[{"0.`", "\[VeryThinSpace]", "+", 
        FractionBox["0.08008163265306126`", 
         RowBox[{"0.008008163265306123`", "\[VeryThinSpace]", "+", 
          RowBox[{"s", " ", 
           RowBox[{"(", 
            RowBox[{"7.207347040816327`", "\[VeryThinSpace]", "+", 
             RowBox[{"s", " ", 
              RowBox[{"(", 
               RowBox[{
               "0.0019285714285714288`", "\[VeryThinSpace]", "+", "s"}], 
               ")"}]}]}], ")"}]}]}]], "+", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1.0204081632653063`*^-6", "+", 
            RowBox[{"0.018367346938775512`", " ", "s"}]}], ")"}], " ", "s"}], 
         RowBox[{"0.008008163265306123`", "\[VeryThinSpace]", "+", 
          RowBox[{"s", " ", 
           RowBox[{"(", 
            RowBox[{"7.207347040816327`", "\[VeryThinSpace]", "+", 
             RowBox[{"s", " ", 
              RowBox[{"(", 
               RowBox[{
               "0.0019285714285714288`", "\[VeryThinSpace]", "+", "s"}], 
               ")"}]}]}], ")"}]}]}]]}]},
      {
       RowBox[{"0.`", "\[VeryThinSpace]", "-", 
        FractionBox[
         RowBox[{"0.00816326530612245`", " ", 
          SuperscriptBox["s", "2"]}], 
         RowBox[{"0.008008163265306123`", "\[VeryThinSpace]", "+", 
          RowBox[{"s", " ", 
           RowBox[{"(", 
            RowBox[{"7.207347040816327`", "\[VeryThinSpace]", "+", 
             RowBox[{"s", " ", 
              RowBox[{"(", 
               RowBox[{
               "0.0019285714285714288`", "\[VeryThinSpace]", "+", "s"}], 
               ")"}]}]}], ")"}]}]}]]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7709208818616858`*^9, 3.7709208919567547`*^9}, 
   3.7709277194089184`*^9, 3.7709279625170407`*^9, 3.7715349620401845`*^9, 
   3.771535898472348*^9, 3.771535947256796*^9, 3.7715360369955144`*^9, 
   3.7715361093047123`*^9, 3.77153617209662*^9, 3.77153621526711*^9, 
   3.771536262262845*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->
  "Out[359]//MatrixForm=",ExpressionUUID->"d28fe784-a605-481a-84f9-\
c3e0b7486cce"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Ys", "=", 
   RowBox[{
    RowBox[{
     SubscriptBox["G", "*"], "[", 
     RowBox[{"s", ",", 
      SubscriptBox["C", "*"], ",", 
      SubscriptBox["A", "lin"], ",", 
      SubscriptBox["B", "lin"], ",", "0"}], "]"}], " ", 
    RowBox[{"LaplaceTransform", "[", 
     RowBox[{
      RowBox[{"500", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"10", " ", "t"}], "]"}]}], ",", "t", ",", "s"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Yt", "=", 
   RowBox[{"InverseLaplaceTransform", "[", 
    RowBox[{"Ys", ",", "s", ",", "t"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Delta]ps", "[", "s_", "]"}], "=", 
    RowBox[{"Ys", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], ";", 
   RowBox[{
    RowBox[{"\[Delta]pt", "[", "t_", "]"}], "=", 
    RowBox[{"Yt", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"\[Delta]p", "=", 
    RowBox[{"p", "-", 
     SuperscriptBox["p", "*"]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Delta]\[Theta]s", "[", "s_", "]"}], "=", 
    RowBox[{"Ys", "[", 
     RowBox[{"[", "2", "]"}], "]"}]}], ";", 
   RowBox[{
    RowBox[{"\[Delta]\[Theta]t", "[", "t_", "]"}], "=", 
    RowBox[{"Yt", "[", 
     RowBox[{"[", "2", "]"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"\[Delta]\[Theta]", "=", 
    RowBox[{"\[Theta]", "-", 
     SuperscriptBox["\[Theta]", "*"]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     OverscriptBox["\[Delta]ps", "."], "[", "s_", "]"}], "=", 
    RowBox[{"Ys", "[", 
     RowBox[{"[", "3", "]"}], "]"}]}], ";", 
   RowBox[{
    RowBox[{
     OverscriptBox["\[Delta]pt", "."], "[", "t_", "]"}], "=", 
    RowBox[{"Yt", "[", 
     RowBox[{"[", "3", "]"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"\[Delta]", 
     OverscriptBox["p", "."]}], "=", 
    RowBox[{
     OverscriptBox["p", "."], "-", 
     SuperscriptBox[
      OverscriptBox["p", "."], "*"]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     OverscriptBox["\[Delta]\[Theta]s", "."], "[", "s_", "]"}], "=", 
    RowBox[{"Ys", "[", 
     RowBox[{"[", "4", "]"}], "]"}]}], ";", 
   RowBox[{
    RowBox[{
     OverscriptBox["\[Delta]\[Theta]t", "."], "[", "t_", "]"}], "=", 
    RowBox[{"Yt", "[", 
     RowBox[{"[", "4", "]"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"\[Delta]", 
     OverscriptBox["\[Theta]", "."]}], "=", 
    RowBox[{
     OverscriptBox["\[Theta]", "."], "-", 
     SuperscriptBox[
      OverscriptBox["\[Theta]", "."], "*"]}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["p", "*"], "[", "t_", "]"}], ",", 
     RowBox[{
      SubscriptBox["\[Theta]", "*"], "[", "t_", "]"}], ",", 
     RowBox[{
      SubscriptBox[
       OverscriptBox["p", "."], "*"], "[", "t_", "]"}], ",", 
     RowBox[{
      SubscriptBox[
       OverscriptBox["\[Theta]", "."], "*"], "[", "t_", "]"}]}], "}"}], "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Delta]pt", "[", "t", "]"}], ",", 
      RowBox[{"\[Delta]\[Theta]t", "[", "t", "]"}], ",", 
      RowBox[{
       OverscriptBox["\[Delta]pt", "."], "[", "t", "]"}], ",", 
      RowBox[{
       OverscriptBox["\[Delta]\[Theta]t", "."], "[", "t", "]"}]}], "}"}], "+", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["p", "est"], "[", "t", "]"}], ",", 
      RowBox[{
       SubscriptBox["\[Theta]", "est"], "[", "t", "]"}], ",", 
      RowBox[{
       RowBox[{
        SubscriptBox["p", "est"], "'"}], "[", "t", "]"}], ",", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[Theta]", "est"], "'"}], "[", "t", "]"}]}], "}"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7705756750769176`*^9, 3.7705757217652183`*^9}, 
   3.7705758044359*^9, {3.77057815439005*^9, 3.770578161123704*^9}, {
   3.7705782946608458`*^9, 3.770578307583511*^9}, {3.7705783954334507`*^9, 
   3.770578436610564*^9}, {3.770883576416314*^9, 3.7708835894259443`*^9}, {
   3.77090426245887*^9, 3.77090430832786*^9}, {3.7709148624496694`*^9, 
   3.770914938504821*^9}, {3.770915770992673*^9, 3.770915973191541*^9}, {
   3.77091600811565*^9, 3.7709160329899936`*^9}, 3.7709161950213842`*^9, {
   3.7709196921834373`*^9, 3.770919875814159*^9}, {3.770920947637501*^9, 
   3.770921262486328*^9}, {3.7709214076441545`*^9, 3.7709214579783096`*^9}, {
   3.770921496395183*^9, 3.770921588063266*^9}, {3.7709279774760675`*^9, 
   3.7709279778984423`*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->
  "In[360]:=",ExpressionUUID->"d9fca96e-31a4-427d-b648-d1f6ba98c2e3"],

Cell["PARTE II - REPRESENTA\[CapitalCCedilla]\[CapitalATilde]O UTILIZANDO A \
EDO", "Text",
 CellChangeTimes->{{3.770925702864029*^9, 3.7709257407174673`*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,ExpressionUUID->"478d493c-d4ab-4f27-9c91-a2e0e6fe62bf"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"sys1", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"eq1", "[", 
       RowBox[{
        RowBox[{"p", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]", "[", "t", "]"}], ",", 
        RowBox[{"u", "[", "t", "]"}]}], "]"}], ",", 
      RowBox[{"eq2", "[", 
       RowBox[{
        RowBox[{"p", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]", "[", "t", "]"}], ",", "0"}], "]"}]}], "}"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"p", "[", "t", "]"}], "->", 
       RowBox[{"u1", "[", "t", "]"}]}], ",", 
      RowBox[{
       RowBox[{"\[Theta]", "[", "t", "]"}], "->", 
       RowBox[{"u2", "[", "t", "]"}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"p", "'"}], "[", "t", "]"}], "->", 
       RowBox[{"u3", "[", "t", "]"}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "->", 
       RowBox[{"u4", "[", "t", "]"}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"p", "''"}], "[", "t", "]"}], "->", 
       RowBox[{
        RowBox[{"u3", "'"}], "[", "t", "]"}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Theta]", "''"}], "[", "t", "]"}], "->", 
       RowBox[{
        RowBox[{"u4", "'"}], "[", "t", "]"}]}], ",", 
      RowBox[{
       RowBox[{"u", "[", "t", "]"}], "->", 
       RowBox[{"500", " ", 
        SubscriptBox["s", 
         RowBox[{"10", " ", "t"}]]}]}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"sys1", "//", "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"solseqs", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{"sys1", "\[Equal]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"u3", "'"}], "[", "t", "]"}], ",", 
        RowBox[{
         RowBox[{"u4", "'"}], "[", "t", "]"}]}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol1", "=", 
   RowBox[{
    RowBox[{"solseqs", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol2", "=", 
   RowBox[{
    RowBox[{"solseqs", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.770926661374818*^9, 3.7709266613867865`*^9}, 
   3.770926702545282*^9, {3.7709267375241337`*^9, 3.7709268565167737`*^9}, {
   3.770927008817968*^9, 3.770927038991823*^9}, 3.7709271101922283`*^9, {
   3.770931539257978*^9, 3.770931545956653*^9}, 3.7709352778440666`*^9, {
   3.770935985854435*^9, 3.770936006503343*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->
  "In[367]:=",ExpressionUUID->"3d17efae-cb86-4545-981b-dab2dfd91a6e"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{
        RowBox[{
         RowBox[{"-", "500"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"10", " ", "t"}], "]"}]}], "+", 
        RowBox[{
         SubscriptBox["cc", "amort"], " ", 
         RowBox[{"u3", "[", "t", "]"}]}], "+", 
        RowBox[{"l", " ", "m2", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"u2", "[", "t", "]"}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{"u4", "[", "t", "]"}], "2"]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"M1", "+", "m2"}], ")"}], " ", 
         RowBox[{
          SuperscriptBox["u3", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"l", " ", "m2", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"u2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["u4", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}]},
      {
       RowBox[{
        RowBox[{
         RowBox[{"-", "g"}], " ", "l", " ", "m2", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"u2", "[", "t", "]"}], "]"}]}], "+", 
        RowBox[{"\[Gamma]", " ", 
         RowBox[{"u4", "[", "t", "]"}]}], "-", 
        RowBox[{"l", " ", "m2", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"u2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["u3", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"J", "+", 
           RowBox[{
            SuperscriptBox["l", "2"], " ", "m2"}]}], ")"}], " ", 
         RowBox[{
          SuperscriptBox["u4", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7709266681722803`*^9, 3.770926857950283*^9, 
  3.7709270508964124`*^9, 3.7709271134841604`*^9, 3.770928002839887*^9, 
  3.7709315489402847`*^9, 3.7709319245214205`*^9, 3.770935280415943*^9, 
  3.7709360188393116`*^9, 3.771534962328412*^9, 3.77153589855014*^9, 
  3.7715359473934293`*^9, 3.771536037066325*^9, 3.7715361094093866`*^9, 
  3.7715361721554317`*^9, 3.7715362153508854`*^9, 3.7715362623595543`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->
  "Out[368]//MatrixForm=",ExpressionUUID->"0fb5f04b-2c24-4ebb-aee9-\
39fbff3ee34d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"vars", "=", 
   RowBox[{"{", 
    RowBox[{"u1", ",", "u2", ",", "u3", ",", "u4"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eqcs", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"u1", "'"}], "[", "t", "]"}], "\[Equal]", 
      RowBox[{"u3", "[", "t", "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"u2", "'"}], "[", "t", "]"}], "\[Equal]", 
      RowBox[{"u4", "[", "t", "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"u3", "'"}], "[", "t", "]"}], "==", "sol1"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"u4", "'"}], "[", "t", "]"}], "==", "sol2"}], ",", 
     RowBox[{
      RowBox[{"u1", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{"u2", "[", "0", "]"}], "\[Equal]", "\[Pi]"}], ",", 
     RowBox[{
      RowBox[{"u3", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{"u4", "[", "0", "]"}], "\[Equal]", "0"}]}], 
    RowBox[{"(*", 
     RowBox[{",", 
      RowBox[{
       RowBox[{
        RowBox[{"u1", "'"}], "[", "0", "]"}], "\[Equal]", "0"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"u2", "'"}], "[", "0", "]"}], "\[Equal]", "0"}]}], "*)"}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"tini", ",", "tfin"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "6"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sols2", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"eqcs", "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"M1", "\[Rule]", "10"}], ",", 
        RowBox[{"m2", "\[Rule]", "80"}], ",", 
        RowBox[{
         SubscriptBox["cc", "amort"], "\[Rule]", ".1"}], ",", 
        RowBox[{"J", "\[Rule]", "100"}], ",", 
        RowBox[{"l", "\[Rule]", "1"}], ",", 
        RowBox[{"\[Gamma]", "\[Rule]", ".01"}], ",", 
        RowBox[{"g", "\[Rule]", "9.81"}]}], "}"}]}], ",", "vars", ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "tini", ",", "tfin"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"pnl", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"sols2", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"\[Theta]nl", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"sols2", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  OverscriptBox["pnl", "."], "=", 
  RowBox[{
   RowBox[{
    RowBox[{"sols2", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "[", 
    RowBox[{"[", "3", "]"}], "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  OverscriptBox["\[Theta]nl", "."], "=", 
  RowBox[{
   RowBox[{
    RowBox[{"sols2", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "[", 
    RowBox[{"[", "4", "]"}], "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["p", "nonlin"], "[", "t_", "]"}], "=", 
   RowBox[{"pnl", "[", "t", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["\[Theta]", "nonlin"], "[", "t_", "]"}], "=", 
   RowBox[{"\[Theta]nl", "[", "t", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox[
     OverscriptBox["p", "."], "nonlin"], "[", "t_", "]"}], "=", 
   RowBox[{
    OverscriptBox["pnl", "."], "[", "t", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox[
     OverscriptBox["\[Theta]", "."], "nonlin"], "[", "t_", "]"}], "=", 
   RowBox[{
    OverscriptBox["\[Theta]nl", "."], "[", "t", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.770929846644512*^9, 3.7709298793818426`*^9}, {
   3.770935642942375*^9, 3.770935661957056*^9}, {3.770935788003145*^9, 
   3.7709358895947585`*^9}, {3.7709359215233536`*^9, 3.770935922035984*^9}, 
   3.770936033103177*^9, {3.7709360855938044`*^9, 3.7709361395253873`*^9}, {
   3.7715359955892844`*^9, 3.7715360007045984`*^9}, {3.7715361167677636`*^9, 
   3.7715361530445256`*^9}, 3.7715361878656564`*^9, {3.7715362399421864`*^9, 
   3.771536240228378*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->
  "In[372]:=",ExpressionUUID->"7e98ee72-31a1-47ec-be95-98acd4cc44ba"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["InterpolatingFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1]], 
                  LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA88dx3mtMez4AwE7RmKGCPKm+gdgd
Crk/HNgrA7briz8vlAOEtBfKP/NbQea4wLo/j/RD6Ati0z9fWuFtkdPQP8yH
F2FrmNk/KGqRfHnm2j+j2m5OyyrgP5n3qPozWuA/ZlmCWdBP4z9IyQvw6izg
P0YlD0Y7uOY/d5PyFkTw3T+JpeQbvRDqP9yQgyrdNN8/0o3qXq4v7T+IIsVK
eojiP5zhtMECSfA/GBmt7cZG5j9SsIwKZt3xP5oIemCQwuc/OdkIyNRp8z9B
0ZvxPovmP6+oQXb2F/U/HIjt0PsV5D8orBLbT6n2P2LErlTwdOM/MFagMFxc
+D+UKuOHQfXlP2pa0vpzB/o/iCU/ss8Y6j+mkpx7w5X7Px+Ana5v4ew/cXEj
7cVF/T+c376AB1LtPz+EQhUA2f4/4a+lhNaR7D/OHg+X9kYAQNc4wFFuZ+0/
lijP3XIdAUDCBC12CcDwP19M2/+K5QFAtk5iYg+P8z9ww0WafL4CQF0ytLp0
FfY/glT8DwqJA0BTaZx2ARL3P60SBUCdTwRAL53Jbgsj9z8fJGzoCScFQMYM
bPxzi/c/k08fbBLwBUAeUm7D+SP5P07OMGj0yQZAnmrJoD3Q+z8iepQe3J8H
QA5j3cah9P0/9z9EsF9nCEAkwKJSEor+PxRZUrq8PwlARqI6DRLg/T8yjKyf
tQkKQAUj9Qt8RP0/aexYP7TPCkDVupl26bv9P+efY1eMpgtAnbxq4pFj/z9n
bbpKAG8MQBOMeeTJcwBALo5vtk1IDUBMndNcT6IAQPfIcP02Ew5APel+IKgw
AEDYMMT+JdoOQIZBPB5Kcv8/Aex1eO6xD0ASJVBCzrP/P5bguWapPRBAtDdF
R4avAEDO9GdNyKoQQN4maoJA1QFAkx8/EeoVEUAywzJRtoACQFhXvMLZeRFA
qLa42kuOAkDBuGgwNuYRQIXAnpFYfwJAKye7i2BLEkDDSrKJHPgCQCGsNsSN
rhJA1K5HtAoeBEC7WuG4JxoTQHBpgXblqgVAVhYym49+E0DdYiOB8rYGQJT7
sTlk6xNA3IFfl4kSB0Bf91q1O1YUQEyrYnGhBwdAKgCqHuG5FEDpBuq/g0gH
QJkyKETzJRVARujJCoI2CEAJckxX04oVQFZ1tCl+XAlAHdufJiD4FUAeNpR9
9CwKQL1aHNNvYxZA+vf21JMlCkBe5z5tjccWQJK/eo72qglAop2Qwxc0F0BM
Hk+7r2UJQOdgiAdwmRdAr1bUZIbOCUAI5Sz5//8XQNYUZ+e1pgpA5ZG65A==

                   "]]}, 
                 Annotation[#, 
                  "Charting`Private`Tag$11382#1"]& ]}}, {}, {}}, {
             DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {0, 0}, FrameTicks -> {{{}, {}}, {{}, {}}}, 
              GridLines -> {None, None}, DisplayFunction -> Identity, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 1, 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], 
              FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                AbsolutePointSize[6], "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{0., 6.}, {0., 3.3314016416867203`}}, 
              PlotRangeClipping -> True, PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "6.`"}], "}"}], "}"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"scalar\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1]], 
                  LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA88dx3mtMez4AwE7RmKGCPKm+gdgd
Crk/HNgrA7briz8vlAOEtBfKP/NbQea4wLo/j/RD6Ati0z9fWuFtkdPQP8yH
F2FrmNk/KGqRfHnm2j+j2m5OyyrgP5n3qPozWuA/ZlmCWdBP4z9IyQvw6izg
P0YlD0Y7uOY/d5PyFkTw3T+JpeQbvRDqP9yQgyrdNN8/0o3qXq4v7T+IIsVK
eojiP5zhtMECSfA/GBmt7cZG5j9SsIwKZt3xP5oIemCQwuc/OdkIyNRp8z9B
0ZvxPovmP6+oQXb2F/U/HIjt0PsV5D8orBLbT6n2P2LErlTwdOM/MFagMFxc
+D+UKuOHQfXlP2pa0vpzB/o/iCU/ss8Y6j+mkpx7w5X7Px+Ana5v4ew/cXEj
7cVF/T+c376AB1LtPz+EQhUA2f4/4a+lhNaR7D/OHg+X9kYAQNc4wFFuZ+0/
lijP3XIdAUDCBC12CcDwP19M2/+K5QFAtk5iYg+P8z9ww0WafL4CQF0ytLp0
FfY/glT8DwqJA0BTaZx2ARL3P60SBUCdTwRAL53Jbgsj9z8fJGzoCScFQMYM
bPxzi/c/k08fbBLwBUAeUm7D+SP5P07OMGj0yQZAnmrJoD3Q+z8iepQe3J8H
QA5j3cah9P0/9z9EsF9nCEAkwKJSEor+PxRZUrq8PwlARqI6DRLg/T8yjKyf
tQkKQAUj9Qt8RP0/aexYP7TPCkDVupl26bv9P+efY1eMpgtAnbxq4pFj/z9n
bbpKAG8MQBOMeeTJcwBALo5vtk1IDUBMndNcT6IAQPfIcP02Ew5APel+IKgw
AEDYMMT+JdoOQIZBPB5Kcv8/Aex1eO6xD0ASJVBCzrP/P5bguWapPRBAtDdF
R4avAEDO9GdNyKoQQN4maoJA1QFAkx8/EeoVEUAywzJRtoACQFhXvMLZeRFA
qLa42kuOAkDBuGgwNuYRQIXAnpFYfwJAKye7i2BLEkDDSrKJHPgCQCGsNsSN
rhJA1K5HtAoeBEC7WuG4JxoTQHBpgXblqgVAVhYym49+E0DdYiOB8rYGQJT7
sTlk6xNA3IFfl4kSB0Bf91q1O1YUQEyrYnGhBwdAKgCqHuG5FEDpBuq/g0gH
QJkyKETzJRVARujJCoI2CEAJckxX04oVQFZ1tCl+XAlAHdufJiD4FUAeNpR9
9CwKQL1aHNNvYxZA+vf21JMlCkBe5z5tjccWQJK/eo72qglAop2Qwxc0F0BM
Hk+7r2UJQOdgiAdwmRdAr1bUZIbOCUAI5Sz5//8XQNYUZ+e1pgpA5ZG65A==

                   "]]}, 
                 Annotation[#, 
                  "Charting`Private`Tag$11382#1"]& ]}}, {}, {}}, {
             DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {0, 0}, FrameTicks -> {{{}, {}}, {{}, {}}}, 
              GridLines -> {None, None}, DisplayFunction -> Identity, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 1, 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], 
              FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                AbsolutePointSize[6], "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{0., 6.}, {0., 3.3314016416867203`}}, 
              PlotRangeClipping -> True, PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "6.`"}], "}"}], "}"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"scalar\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["3", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Hermite\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["False", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  InterpolatingFunction[{{0., 6.}}, {
   5, 7, 1, {414}, {4}, 0, 0, 0, 0, Automatic, {}, {}, False}, CompressedData["
1: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
Rx4sdWrmoI2Rdqf2EAf//eXI4/8Ct5ysEg==
   "], {Developer`PackedArrayForm, CompressedData["
1:eJwV04FGIAgUBdC2TZIkSZKkTZIkSZIkSUaSJEmSJEmSNklGkiRJkiQjSZsk
SZIkSZIkSZIkSZIkSZIkyRh7epz7A/e+fxr+rWj7KyAg4L/vcIEEEUwIoYQR
TgSRRBFNDLHEEU8CiSSRTAqppJFOBplkkU0OueSRTwGFFPGDYkoopYxyKqik
impqqKWOehpopIlmWmiljXY66KSLn3TTQy999DPAIEMMM8IoY4wzwS8mmWKa
GWaZY54FFllimRVWWWOdDTbZYpsddtljnwMOOeKYE04545wLLrnimhtuueOe
Bx554pkXXnnjnQ8++eI3fwiwgUCCCCaEUMIIJ4JIoogmhljiiCeBRJJIJoVU
0kgng0yyyCaHXPLIp4BCivhBMSWUUkY5FVRSRTU11FJHPQ000kQzLbTyPfJ2
Ouiki59000MvffQzwCBDDDPCKGOMM8EvJplimhlmmWOeBRZZYpkVVlljnQ02
2WKbHXbZY58DDjnimBNOOeOcCy654pobbrnjngceeeKZF155450PPvniN3/4
fv5AgggmhFDCCCeCSKKIJoZY4ogngUSSSCaFVNJIJ4NMssgmh1zyyKeAQor4
QTEllFJGORVUUkU1NdRSRz0NNNJEMy200kY7HXTSxU+66aGXPvoZYJAhhhlh
lDHGmeAXk0wxzQyzzDHPAossscwKq6yxzgabbLHNDrvssc8BhxxxzAmnnHHO
BZdccc0Nt9xxzwOPPPHMC6+88c4Hn3zxmz8E/K1/gggmhFDCCCeCSKKIJoZY
4ogngUSSSCaFVNJIJ4NMssgmh1zy+B+DF8ZT
    "], CompressedData["
1:eJxl13k4VN8fB/BBjBlECV9LiRAlSbLG5yDSQglJREVChSypkESoKFkSIVSW
FhShwrWTfbLLPox9GdtYmvGb/3/3v9fznM9znvN5Pvfe95G46nruGgsOhzvK
hvu/JyjhkJAe72WtEiXdIWqBtXaGVuZWPd6HWlZe2ZbLT7y0JV7IbNHjTdYa
eWq45L03QttWKGnHvx35WkVS8S6qPCnaryLyrUcEa7Uou5QWchK/aBc3Bttr
fBLTvni37uoBLor2YYz/nr+ArrZQv4oo534cZKSdy8rLtdQOkCmASFU+MGBv
P/6264a2UZ5m2ZO9ouBh/thO37dEW7RN91jI/nPAJrAynRs6rK1poqkzvt0Z
VBS8toYsr2nbka465Y/eA5M3XMclRrlAueHcUE/4YxgtT06zeScM93HOWk/l
ImBN+TIt89whIBa1OsYavwVSeDLfooYuBCd0r1WmZULzSneFSdBZaD7vk/ec
NRc2gwrKDglYgUdpo6bXhZ8wVaCnmmdhB8O0ntf26aXwZT7UgxLpDGljyg5D
AZVgrrv4+0zObbjXp/J+qqAWbhmFhA9T7wBLcxHZTr8RVofDdtbu8oOguqSj
k9tJEMIpc/65eiC0Wo+Bk1MbPGIct2YvDQW/yF9iN9c74Uf8hbZ0xRcgEZHH
q1H6F9Yr7nTOnooC1+MxOhV5A7C3mQuv8zAWciM2ZdvHh+DK+GbhuHoCeA5z
rchwjsCNxurwS6qpcJTziQD7xTEIFL3mGL6UBt961RvulUzCHl7Ny+3nP8OD
T+axDbKzoH5ich/Pwa+wQ8JNla96HvgcDHdOBObBXSrlFOnWAiiF/jZ4vLcQ
TAo/4y+xL8E9tcV+TcEicGIdv/MmeBmErtcGVyeWQv9ZtmwrZRp0Rb5/Qbep
AKv9ain47FXoaFFcvGpYDab19nW8s2tA4apJ/3zuN9yt+/xcenId0t0TJJu8
GuB4RJyYQ+IGMN4LKkllNoPnNLeaL9s/GLV24P9zmwR83u7vC4T/AVt0ThDH
1lbIs2NcFh7YAJ4649qw921ASjt038xsA0TRl6ouxQ4Yda5pqvBZh8sSn8vD
sjqheZ31q7nlGkxtW8wVg24o3DviqV9LgwQV/5UfuT1wzNzXJGR6GfgN9EvW
8b1gGpJZjyMtQr9taYqSWh9EMPYewD2igoO/I1uITj+YVBENu4RnoXBfpxFD
YgAo18/ZkzfHQb54dvFJ1wBcDgmbtGslw1mFZ4mPlQahlqsxuNyuD969ZHWV
sx+E4QM4v623W6GieXvrlqBB8Fv4bzhQsxx+CqDqgvBBsHA+WDJg7I4pzARo
JQYOQrz1tb0B+DKMxdRs7pXjIDiK3XXH5zVhDHWe5FUYBDV3oSajpDaM8qH4
jyvPIDxKYRn3VejChvZlFLVkDkDDmcpOveVuLE6wcF+f8gAYRbGxbJ/qxqb9
/PPEK/vBQ2baP0KwC7uvN6PjZdsPYnbnqR/C2rC7XF/mtbb2Q9SBC13UgSYs
ziXEV6KzD+QCemqGB8qwW+mZhzywPgg4mfGUj90HE14juee09cF1vthai5Pl
cNXB9sYO0X5ATrvFjlxqBUXwxDVG98Oeh9pnJZv7YMvP+4oUnQEQcRXVZ+cY
garBMEdpvkEQ93f7kNk6zuxvjPpMzCAE1Ftfub1zBs7v2fv9xMEh6PzJ61x+
cR48fV/EXe8aAglGZZ3/Tyooa2y4pFYPw2mFfw1/6xag8c0es6gXZNhxMWhU
5t8C+O7Pb9K0GIFIiYuBzWELwKZ5u35DcBRIMrfsHvtTIYr2Q9mzdhT0QrR+
x/6ag69Pf2k1XqOAqIufKJ/rFLCSlN6tTFBgRtDaOfUYBYqn3KIHzo4B98Gd
FLHbgxBnjTd5HzsGNypdv3660gZS5tEb2UVjsDH3wTBsXwnYzl+/SMLGoLl5
Os3TOQ9DejqBOqljcG+dq3YbBwlrIQSmv3EYg7gWKYOs738xKXO5mCq+MfBo
vlIQaTmMpRlc5fv9gQJ8szxOpQ2jGP317HrSfgpYjfBmC/KMYzYXLurMZjDP
Q1dteoqbwKT8T5slaI5C6peDZruqxzHp00Lmp0gj0BPf8EQ+dQxjiV9zf/Bw
BJqMD98O3k7B/Bx+ie1XGYFK6S/8kqtk7CGr4Ce5JTIgCU2ffZeGsC1iJPN9
RWQ4w0nvOJvQi/UVWl38wuyvm4zULpfcdsw5AdP+50oGY/3OiQrUgP3ItUJS
NmTAWnaqlYgUYiWHaCwLF8mgGneR6pL8Dh6V+vnMOpBBl9aTlWdSDUYLevKX
HpFhXmDl+db5VugsWnyi+YUMQrYmFwipvdCtdq0rZp4MNh0JWS67yVBnevVl
o8EI9CX38tE/j4Fn8MS75KwRSP91hSujdwqyHTJyHWVGYehq+4+82DnA7/p8
S/rzKHBqOO5OsqeCj14kJVSLAi5n0ZvW7AVY961pYO+iQJzq4unwtEVId1tT
GLg7BkrNRP8JvSXwEjMPUd85Dq9jFmWOPF6C/areUgt946APmOpF6yUweCIp
So6fAEpL5LJb4SLET5zKTTszCW92roewpCyAZl2z7KHVSVAIavWPkaDCnza3
/KWIKXjD8XRXTuQsXBd3cGcRmoa4bQa50uaTMNgcVykeOg1n7v5o/y9vFCrF
B++MDE+DLFlVN7F3EE6psyQWy8xA06KZq9tGJwROSHbRTGdgv36L7pBII3ic
X8Z+3ZiBmz4+y0byBfC7Kf4xm9sMVDycPCx/6S1m2isjJ3tpBtI3ulfyOSsx
Tt8oj7ojM9DsNKYyU9CEmYykRsfzzMA5+ynDcWcSdtzv6H8zzP2JinY7zjuQ
sKM9xALlimmQslysnO5sxnLEnhz0TZ+GA+y+lVcu1mHPIhorxCOnwQrLGdZz
Lsduq7WaXn48DdHd92TQ+RwsBW+6zyJwGlDjr20nGpJhLpJUMRk+Ddqbsvv4
vMpBTgNfWJk2DVsKCx7W7yOB2kevecPmaTA+OxHgVNENUZw/NE7yzkCduplj
18gQ+Ama2b+ynwFv8RpNQcExkJEy1/7cPAPU0lwlmvk0PJZS2xZ8dhYUJ7/I
q5TPg8etsIzXlFloXLVWrkKLwPI6y7s9Yg7YrMPOSscug9Hh9aVOmXmQub/x
OT2fBj/IukuR4fMQoCbyqe3lGjjlU2qubcxDUrrIqwaxDeBsj9uYdqFCoaeG
8Dujf/Bpx93ryRQqPPx75NpXMTocamlT77u8AEHG7g96guhgtT68Ov93AcyD
irWLA+mwv6Vmr/T5RSC2yem2CNNB+ID5gfrGRcgJ9lS5dvIfWMR68xvqLMGc
KEtWpOgGONg+zRfPXoLqzpHr7K/WIK6tJ8zn4DI0NqWK1yAaTJX74F6lLkPT
28NPK8OXwPfruGQEdRluP93qqXNiAb7K953cpboCr+0LJbn/zsGf0v1TX51W
4NSdZOeigSnoTl2cfRqzAlp7N96mTo1B8eEXiZU/V8BN0s7+Pt8IRFPbe2K7
V0DKXS3jtu0g9OzGli0XVuA23UeslNQNLSkWW3zYaeDY9Syb7W4rbMttqg/k
p4FPE9t0f3w9qNQV6PDvpMGXclY5xfYyuJZGbJaVooHMkYShRMsvMBo5FKok
QwMpWWJhrLIDsGFtAfrSNAgrIEmu3IvFrJ9l057tocGDw4EmpxyisFtixfjD
TP8X/ZGwbBIOq52vNC8w649ere+XtsgFreQ9oTQF5n409yTxxkpYTRK36NGm
waVTZ/5yO5Ng0crvwbg1DZZ6t4SYH/wL8iKu8XxPaJA6w5MB28mQq3uwgF5I
A2WujiV8N/M7r6CW/HWRBpE72iJf50yDntzw4h71VYiPerE+WzAPn/8cX54P
XQXxIiVzRdoC2DVa2loPr8K5+7ssa1mXIaJ8jtvi2BosvHy+je33CsRvy7AM
+bIGQYY/l8w0VsGi6tG8qdg6RCmQ5PtOrIF+QnHW/PN12C0xG988swaTbLfE
b7FtgGqXcHiZ+Dqoa5zmqPTegL5ImV/tvWswcovPbmpiA05eZ1hWS6/BoYuU
cH27f0C4lKUr0k0DLEchc6ntH+SovJ6b4lkB97IdMh+P0uHInuFDAq2L4Lh7
f5Tzazr4T7M3HtWkgsfEwvskCnOO5XGXNQqn4VNHxOPdMgx4+TelyOcNBR7k
8x7VP8+A3w84nE6bDsIdhZkdw3cYIFWX1nJEtg22zcazGYcyYDD1x6axYSlk
PDFet3nGgHnlqmQuzgxs3klW3S6AAdtfLm/6tP7GjppNJgreZADnhdTmSt12
7GRLLm+0EQM8Hw4d3Vn9F2v0WNbRk2WAUqL74OquQYxPQES1gkEHuaDT4Ks3
hHVuuyP5p5UOmh3kNxInhjDjy/aPDn+kw1jxworU4UGMlmnhF8N8D3+fxL/i
Ee/FjMZ+bBRdpkPwjURPp5Q2LKTtooD/CTr8uD83VthRhYWf7a/g1qWDwkP+
Azds32F1n7jtxfToUBph2Ep6nAuZSQzZXUwrH/AQIUTmQtlZrjlxpicTWiNR
Ui44VSvlSzAtvqqiefdjLqyxeT3Yw7ShWSR/Tn4uVPL8OS7NdEF1j+h4eS7c
LS/rlWX6sZB02IW/ufC9TuyOPNPHXQt+/V7MBcIJMr8i03X7ND5qcudBq02n
ojnTueoxBZ2479Dx5wKnL9PWPqShouXvwBCejH/PtG9zZNvEZD7U1HFNNDG9
VPJD/dJgAYwW/bVq1KcDb55RtsPXUqh4/V7ujiEdfMZOjmr4VcGdWqm3dafo
oBYWQpEwqYOPaTzZ9Wfo4HRMkefFvmZo0Wicv2dGh2UpjuZ7bH+Ak1Ap9NqW
Dutp7zVMKjsgSt3mx6lbdPj1+p+xje9fODRRQ+O9TwfjO33bIw8PQLFFzWuX
UDp07cSrKd0aAtxIrLctc/70x3mFBVXIzDzo5tKVSYd9gtSaAwsjsOeDsV1j
ER1M1/cO6r6lQLBhlIUiiQ4TT4NElTTH4e2ERK00jQ4yNLWCB42TcMNhalfJ
bgZcPCDforxrBnL1bUxeMufpCzlL4ovUHOzfuKKx348BVb1Xt6fdnIdGPlkt
nmwGvAMPziYRKhzxZuPKGWZAad38rUPxVCioMgh+LLQJmcc0F7rHqZCnXPm+
yGoTfHYnhDzcwswTh/Selb7dhDhCrSqpkQpFe202LYc34YnXLD1RnwpEo0IF
+W04dOFq2/Mwl3lgC409cvogDj1011PgiZ8FQTlRF/ZTOLRIPPifTtMUENNu
He6zw6HGzM9lc6Hj4Li68d7xHg4NfvzDx987ArMCoyqElziUJRQofIWZsyPr
Q0+Jp+CQ62vOuI+f/oDZ1IizaSYO/VHUDeZa/AGRixSXVKY9b0bqWLd/x8KH
ZsJsUnGo4tQQoySjBcsyCWi8G4tD9YdvP/et68KEm8UfRYbi0C4zLc4mygDG
Kjj7SPcODhGFHRTWRoYx/54vH9Su4NCrwhe/daRGMZtgxU21kzikaahFdEym
MOs1gwSVcEjEaTZowWgMU+Ykq3wRxqGOQyVlO/eOYRtjsfy9LDh0P9vp5uZ+
CvaCU3SS3rEJX10nhL2ujmDps4InSFmbYDQbcHyofQgjbD0Q8TNsExp/XSHe
O9CHvSCcyhFx3wSuexv8HJ7tWMS5rPuSlzeBRsEJ7776G0vD4izrLTZhmtY6
6UfOwMTz/VJIlptQcm3rNa8jRbDjRn5wjsMmyCKaVW0YCZwFVgvfPtgEYf0z
D8p298LVb8laGR834W2V9NOjV0agK/bfJ2fKJpwRGfKgWkwCt/4pm34+HEpR
qTXyq52FHaHwaJR53lDuzTGGLRU0XzybLb2AQwvKRdzp/ItwVPNfQksADpnM
Cfy46bXEvO+2nbz6BYfKHzxjvPBbho5Qi4XvPTgkpqNQEyWzAl9N6z6yEliQ
zu5ZFedbzP/0mmKnjyoLku6gHYw0WQHiW5r/+WssKGLmzZ897cvgx3Wu6ucb
FmRfnRiwULIEaU6/JvKbWNBd6+sWNfsXIUGOz2QPnQURKr99CFCggqNat9ZW
GVbksd7kUlw0A0c0nKqrDFlR1LqsNPfncaimv5AdsGdFBt+8TPvsyTB2w0ZW
8z4ruvH8o/Ing174pl16Gv+EFTXtOqT0zuAPnFOOnPn1khWVzVfbfvUuh1kF
FnmhGFY0u3un6veR1/Dhn/qriihWlERWDN79MxdjEylLzX/OitqFpx6kj5Zh
nb2xXDUhrEgi9PZSvl8ldsBglbEZwIo2vz/6OGtRjul1XMbf9GNFb63um71N
KMSUjTWm5XxY0fELkn76B6MxjWbtaUNfVnS3u4TMdu87DJ5Pb8KY9dNJb6pW
BeuBwY9vtg9jRebSP1cbOTpBeiIrlpLAinbGh6i8rxiE4y+T7lTnsiL6z+tT
by5R4JKj5IwpiRUVt7WyGkhPwzbid2/jf6zoh+TDlQZm7sPZDm8YKrIhrYwT
WjJpSyD5QFws6yYbqml/NiwQQwPuHSopT3PYkDOX+8wHkXUwoJ1sfbXOhk5Y
ZpoIivyD1y0n2I6d2IJCq5TOXPClw+5+cn9j/BZ0204l3PwQAxTusZd869+C
ROj2iqe1GVA4RBXfJ8mOTh8bNeRooUP/+5ZuSXt2pGgULSo9+Q+C96TLvn7H
jpTydo/wRG+AG+NKT9wAO8IZHlNL7mLm14vPM0yFONCqK0O2oYoGsnbvn/Kf
5ECi8TpE3pvLUGZ0vN7YmwON62KeA33M+/JFvZoPSRxIPNRflO/gPCy4EI5T
MA5Ul+pIsx2fhGNnUz24/3Kgm0daz3QHjkI7t5Cr7jwHcqHeHVy8MAiP9+x7
27/JgXQY+6lsYp0gv5ZddJmIR42n+9bK/2uEzjXn4lt8eJS9p6TIeUsxfMxh
+1a3HY9ebc3tsBl5BVocbfnnmS4g1c1HiKVhpW1JYluY61mfx8kVDOdhT7W7
U+5z4xExZeBRkVMBFuHf9l6dgEfrtfoGdegrZn01XzIKj0e+Z3qJxYRgzDU8
bbKSE4+UtzKiN51y4ZLNiRvTPHh0uNELxKVrQev8uU8bQnjkLfR3LSazDRLk
Wway9+IRZUrOO1qvHyhlNSxPtfAoNMUgTF5rBEjV6zm/LfHITm1xMs9tAjo2
y+OdffEoMGKAIvJ4FmwWfwZKfcAj3mS3/v9SqVBHbl+91YpHuU03xYOKF8HL
c2OteAcn4i8xlBQnLwMrq/ePbCtOVK2WyHvJhAYDOUbN35ieOnMWHJmO6ZEe
/c70wcDnLh5M/+e/uV7ItO7Om4kPmLZK6uErYrp850T9E6ZN1ApkMKaPBbGv
RzMdcsXjXBXT4mJ+5p+Y3uN15EE90/yG7tllTJe40zNJTM9vGcV3MZ18cvsV
XmtOZN1vIVdwjgb9LZ4iRkyzZfzOjTGlwT3vPR1Pmd6xQyHdw4wG6Vli0bVM
Q9NdNhNzGtjTHvsq2XKiEkfLnR2XaDCocV4v8Qon6rNf+SfuQIMDuTeGOe05
kfvtdg8FFxq0kN+aejlwoheh/mYsd2igkVETMezIidS4gtxf+9GgXP56mnAA
J3Ldcz5RuIgGcd1sVUFxnMihbS0YT6bBeHRuKNc3TrSalEteo9Lgw9telZg6
TrSLKm2fM06DmwphY5xkTmQ7f6Bvew0NUmZisow2OFFjdITUoXBmP10aVp5I
EBC75JaHUYwVGBGt//jRgIB29+zt5lJegZPXRi2s7AlIQvTqNpfLy3C07ZnI
n4cE1Clg6ml7fQlEe/Y+63tDQC9PxxXpnlqEqTNcFWe+E5BxAveD7q0LoOZ9
vovRQEDT/daY5vd54IoJMqoaJiDp94/2JgXOwrsdpZ6PVghIMuuT5323Kajs
djGU4yGiWQ2cZ4ziGJRtDReYFSeipV1rA5aVw2DZYNnxVYGIZPSzSFYPeiFc
21vsujoREY9usk87tUJzaar1dkREuM5XCRxjlWDl5T73W5eIvrKcqe5QSIBv
+W1V33WISJ7FmCS55SfGgr/ZslWLiBiPuzFfhwbsXa9otd9hIjJ7+HSLl2EH
dlTIbWNTmojSNeuJdUf6sGsbEs6aAkR0RCPIRtxxCPuw/ZjNJAsR8bGo60Td
J2MnE1aaO6YJqHU+o+1D1QjWUPpTqb2DgFKKSmVmdEaxPonm3pJSAnrXFxH9
cGYE4zNeVrz5iYBiCAaBOxvI2HGJ9z+zYgmI0kWRFxsbwioHXrqeCiYgjVNa
pQ7x/dihninDZW8C6grRKROR6sIElLIU024QUO+7ZT1ntibstOltR9drBJQ/
Iigo1PUNa7gm23qA6UkRAVmnqC+QtJ9yhM2JgPDfRqf2ZdcCd7PbEdxtAuKW
4s3xYW8Hke3tEWJ+BHRLf7nCMLQPzFit7quGM+v3379W0DEMb6/63P0vhYCE
zZQG7VIp0E/WanYrJKCvuX9Pk/gmYcTA2a7vDwF5cwSL9vPMgK78K76JOQK6
Th36yRs6B6RkquqdXUQ0uPmCL3kbFcYJ1z6XnCEiKYGRuOEcKiwdFrRJ9CGi
QMkYjrY0KlQ/WVn+nkZEXSS5CGfm+v8BwIXF+g==
    "]}, {Automatic}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7709360516535635`*^9, 3.7709361407860155`*^9, 3.7715349636688275`*^9, 
   3.7715359061985793`*^9, 3.771535947448284*^9, 3.771536037129159*^9, {
   3.771536109466234*^9, 3.771536131629982*^9}, 3.7715361722182655`*^9, 
   3.7715362154087324`*^9, 3.7715362624114175`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->
  "Out[376]=",ExpressionUUID->"bf708622-b866-4c97-b5cf-369dc0aa0849"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["InterpolatingFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1]], 
                  LineBox[CompressedData["
1:eJwV0Hs01ncAx/GH0u/7+5U8Lo+n82w8KJGajI7J7fupMJXLmdxzUG2uFY9N
a7FOiYYxiVlCzGKYkaFc21zCpkOLjltaLrmlTs3tkdvsj/d5///SPBni9Jks
j8czX+//z7RKngXbRVhu+8DKeUmTReH9y71qXDUd/+SJd7qAxd7UDdEVwr9o
mnHSpe4mgqTZQxObT3bRqZc5daMmBA+/EZ4IvtFHxYf+Zq2qGPzUf9ahXe85
dW06nj0RzcDPI8rjkeMIFVWaW0vvMrDRVrAxqxqjB9pF54NFBHF5o+/V86do
vKglKsmF4HHilHfJ3lc0tF3jt9RjBJlDFQ2yh99QJn5yWHSUwOlOAuc3+JYW
JTS12cUQ7O8jbd2BM/TqpStnrfgsSgsOnJsXztERZJcMt7LQLVYacCycp8eq
YpwOW3AwcM0x8PKS0o+D5YMeunAI8nz87nPmHd2d1OmwzYBD/vXMiKbvl2ie
4mp6iZiDRLL91QPrFTpQPmeWdYQDjT4o4PWtUjQm8c9d5dChrvDDvA0PyWU5
GWGxHNJ0OwfD1GTw+or0+gM1Dj52A2vxL2QwUCsZm45kEdpkfTPyvixMbtlO
Lo4TRDkvK3BxG/CPlu+W1WKCX5XkkOW4EfJsXtVcEYF4x+kJVkcOgabJFgcz
CFIcxaeV3sihW7x9ucKewKHDIGD2z03YGanNZnYw0LqQqv40m4HX5A373yMZ
LFCrOz7+BHJxt9vqrzFQ8XCqqaMspAsFt2RkCAwTirMrWQ5+dRuda8MJAqfd
aUUnhwT1wHTzcoLx7FNuCfmb8bUkuIitIfA/U3OEF7IFWjqlvV+2EOh/F3LX
3lYeArFjRa4Gi4W20BVj5a0Q/Ujz42tY9Bo0r2r3b8WHC19YdzpwkJkOP/+6
TAHUPbwx4ea61/Nqv0ILPkx8S9tML697zvrbtxXx8SS6xsTIlEOKmCpOCRQh
KTC77Szi4O5W19j3lSKUNTdJbQ05NFQFGBiPKWKPi1pPsh2H3Tq13/oeVUKx
6s8asuv+msXGzYklSlBK4Y2MprGo9Ryq0hEpQ/dtVk/3IIGrqmFG0kVlXGzu
4WudIEhdKtv/6UtltIZoqvebEvgseFaauargQtAu5NgR6PGK1IeqVXBvX7Wj
pTVBuqGu1Yy2AF339B+1rDBgw+zcuuIFSDNfjtUuYKA2kL1TQypASoSwQS+R
Qb3n+10hp1SRO0jUdwwz8B63PJPYqooY146P/pAQ5GZdaxLuE6L/qdFxz8V1
f99YJjRdCPxr79ajz4K82LO4tibErmflAb8YsfgPFtmUWQ==
                   "]]}, 
                 Annotation[#, 
                  "Charting`Private`Tag$11436#1"]& ]}}, {}, {}}, {
             DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {0, 2.9359117567338853`}, 
              FrameTicks -> {{{}, {}}, {{}, {}}}, GridLines -> {None, None}, 
              DisplayFunction -> Identity, PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 1, 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 2.9359117567338853`}, DisplayFunction :> 
              Identity, Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], 
              FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                AbsolutePointSize[6], "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{0., 6.}, {2.9359117567338853`, 
               3.32546379013641}}, PlotRangeClipping -> True, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "6.`"}], "}"}], "}"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"scalar\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1]], 
                  LineBox[CompressedData["
1:eJwV0Hs01ncAx/GH0u/7+5U8Lo+n82w8KJGajI7J7fupMJXLmdxzUG2uFY9N
a7FOiYYxiVlCzGKYkaFc21zCpkOLjltaLrmlTs3tkdvsj/d5///SPBni9Jks
j8czX+//z7RKngXbRVhu+8DKeUmTReH9y71qXDUd/+SJd7qAxd7UDdEVwr9o
mnHSpe4mgqTZQxObT3bRqZc5daMmBA+/EZ4IvtFHxYf+Zq2qGPzUf9ahXe85
dW06nj0RzcDPI8rjkeMIFVWaW0vvMrDRVrAxqxqjB9pF54NFBHF5o+/V86do
vKglKsmF4HHilHfJ3lc0tF3jt9RjBJlDFQ2yh99QJn5yWHSUwOlOAuc3+JYW
JTS12cUQ7O8jbd2BM/TqpStnrfgsSgsOnJsXztERZJcMt7LQLVYacCycp8eq
YpwOW3AwcM0x8PKS0o+D5YMeunAI8nz87nPmHd2d1OmwzYBD/vXMiKbvl2ie
4mp6iZiDRLL91QPrFTpQPmeWdYQDjT4o4PWtUjQm8c9d5dChrvDDvA0PyWU5
GWGxHNJ0OwfD1GTw+or0+gM1Dj52A2vxL2QwUCsZm45kEdpkfTPyvixMbtlO
Lo4TRDkvK3BxG/CPlu+W1WKCX5XkkOW4EfJsXtVcEYF4x+kJVkcOgabJFgcz
CFIcxaeV3sihW7x9ucKewKHDIGD2z03YGanNZnYw0LqQqv40m4HX5A373yMZ
LFCrOz7+BHJxt9vqrzFQ8XCqqaMspAsFt2RkCAwTirMrWQ5+dRuda8MJAqfd
aUUnhwT1wHTzcoLx7FNuCfmb8bUkuIitIfA/U3OEF7IFWjqlvV+2EOh/F3LX
3lYeArFjRa4Gi4W20BVj5a0Q/Ujz42tY9Bo0r2r3b8WHC19YdzpwkJkOP/+6
TAHUPbwx4ea61/Nqv0ILPkx8S9tML697zvrbtxXx8SS6xsTIlEOKmCpOCRQh
KTC77Szi4O5W19j3lSKUNTdJbQ05NFQFGBiPKWKPi1pPsh2H3Tq13/oeVUKx
6s8asuv+msXGzYklSlBK4Y2MprGo9Ryq0hEpQ/dtVk/3IIGrqmFG0kVlXGzu
4WudIEhdKtv/6UtltIZoqvebEvgseFaauargQtAu5NgR6PGK1IeqVXBvX7Wj
pTVBuqGu1Yy2AF339B+1rDBgw+zcuuIFSDNfjtUuYKA2kL1TQypASoSwQS+R
Qb3n+10hp1SRO0jUdwwz8B63PJPYqooY146P/pAQ5GZdaxLuE6L/qdFxz8V1
f99YJjRdCPxr79ajz4K82LO4tibErmflAb8YsfgPFtmUWQ==
                   "]]}, 
                 Annotation[#, 
                  "Charting`Private`Tag$11436#1"]& ]}}, {}, {}}, {
             DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {0, 2.9359117567338853`}, 
              FrameTicks -> {{{}, {}}, {{}, {}}}, GridLines -> {None, None}, 
              DisplayFunction -> Identity, PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 1, 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 2.9359117567338853`}, DisplayFunction :> 
              Identity, Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], 
              FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                AbsolutePointSize[6], "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{0., 6.}, {2.9359117567338853`, 
               3.32546379013641}}, PlotRangeClipping -> True, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "6.`"}], "}"}], "}"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"scalar\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["3", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Hermite\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["False", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  InterpolatingFunction[{{0., 6.}}, {
   5, 7, 1, {414}, {4}, 0, 0, 0, 0, Automatic, {}, {}, False}, CompressedData["
1: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
Rx4sdWrmoI2Rdqf2EAf//eXI4/8Ct5ysEg==
   "], {Developer`PackedArrayForm, CompressedData["
1:eJwV04FGIAgUBdC2TZIkSZKkTZIkSZIkSUaSJEmSJEmSNklGkiRJkiQjSZsk
SZIkSZIkSZIkSZIkSZIkyRh7epz7A/e+fxr+rWj7KyAg4L/vcIEEEUwIoYQR
TgSRRBFNDLHEEU8CiSSRTAqppJFOBplkkU0OueSRTwGFFPGDYkoopYxyKqik
impqqKWOehpopIlmWmiljXY66KSLn3TTQy999DPAIEMMM8IoY4wzwS8mmWKa
GWaZY54FFllimRVWWWOdDTbZYpsddtljnwMOOeKYE04545wLLrnimhtuueOe
Bx554pkXXnnjnQ8++eI3fwiwgUCCCCaEUMIIJ4JIoogmhljiiCeBRJJIJoVU
0kgng0yyyCaHXPLIp4BCivhBMSWUUkY5FVRSRTU11FJHPQ000kQzLbTyPfJ2
Ouiki59000MvffQzwCBDDDPCKGOMM8EvJplimhlmmWOeBRZZYpkVVlljnQ02
2WKbHXbZY58DDjnimBNOOeOcCy654pobbrnjngceeeKZF155450PPvniN3/4
fv5AgggmhFDCCCeCSKKIJoZY4ogngUSSSCaFVNJIJ4NMssgmh1zyyKeAQor4
QTEllFJGORVUUkU1NdRSRz0NNNJEMy200kY7HXTSxU+66aGXPvoZYJAhhhlh
lDHGmeAXk0wxzQyzzDHPAossscwKq6yxzgabbLHNDrvssc8BhxxxzAmnnHHO
BZdccc0Nt9xxzwOPPPHMC6+88c4Hn3zxmz8E/K1/gggmhFDCCCeCSKKIJoZY
4ogngUSSSCaFVNJIJ4NMssgmh1zy+B+DF8ZT
    "], CompressedData["
1:eJwt2Hc8lt/jP3BSruu+IpJklJU9y2hIzil5Z6VERca7UFQyKqGUUVYqs+ys
rCSRUMmxN9nc9m2vKElL/M77+/nd/z0f57rOda5znfE6t4iV48kLzExMTOos
TEy88keM/4jQINP//x2X/Z8tAl+OcfjrlCyJ/88q6RYDeuLWJQ84/+dclu2v
vxZ6lEQMav6fL5E//a1OPC6p9/6fE640zx81iik5nSvzf+6oblaVimovUYuo
MPrP812sdf+UzJVsS+k6+Z9LuC3UQztWSnwE5Az/M+3mn/KdO0nk3TU0+Ru7
J+tqWroERKcnt2r9wnZZlXrLJ38G5fP7B3//r30vF3/XrLdFAxcj5+exZwff
G5pKXUev/kY/GMNW+GLs/ea9Byp2Hy/5iK1/g+vt6bYg9FeF/5079gXVwGfV
9U+RhF2nNyf2L1r88v7RRHSq+ZzJLWEajGtWlycvpqPdJ7rvdArR4MfkPIGD
4dmoxZyVncRW0rVRPqOSh0pbWdZtEqRBoYvR8TkLb5Hx1wi/0e00uEnG+Hvn
j3dIzolv+b4ADQpwjHhkaJcghTtS4df5aPCBmVRl67ZydH9beB/TNhpkuZs0
vk2jCt3VGvskwU2DvY81btNDaxGroJbgMCcN8qqQKW7sjejLar6cFDsNXovl
esKR9Qn5tBwT+UPS4MUJK6Se14qof9x8i5lp0E2/f1dHdAdqOxT47PwvElYp
8j7NftyN+iSppMkFErpeXFZdu9+Lbvx5Ak6Mk5C6kfp9wGkApV5dfJVEJ+Hh
K1mpKjuHEcHjEz3RSMK7a/GrfzwYSPU4g1kBkdDF3NlXtHQEpTpFN2lnk7Di
o3pJiugYkho+9Fs5hoTGJ+J3MRmNo0tuZmdE/Eio2/Cr2lJnAn3hG7HScSZh
sumiA+/aBJq28Ns+Y0bCUYOdz4YdJpEV1Veo9Q8J36UJJI9FTKJbDy/vSdpF
wgOiuf/+V37x6JdvhwVI2PwnrUByZQLdNlRTdGYloT2TmM3zgxOoeT1fjNMi
AasELb7Wqo4jrrL5Xz5DBCwfa+hxnxpFW29xUfyNBHRoa4wflhtBfeES26Pf
E9C36leEiewweiH0j/bhLAI2ut3bf6i/D3krckboPyNgcUc/Zc7cjbguXOsf
CSega43ezcrBViRzpY7a+ZCAqftjbm3YUYf8BEvDd/jj+680xJzJLkauG8IO
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
    "]}, {Automatic}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7709360516535635`*^9, 3.7709361407860155`*^9, 3.7715349636688275`*^9, 
   3.7715359061985793`*^9, 3.771535947448284*^9, 3.771536037129159*^9, {
   3.771536109466234*^9, 3.771536131629982*^9}, 3.7715361722182655`*^9, 
   3.7715362154087324`*^9, 3.771536262434355*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->
  "Out[377]=",ExpressionUUID->"45915616-f04a-4df2-968c-c3c78b81b951"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["InterpolatingFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1]], 
                  LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA88dx3mtMez4AoAm5mqiAPam+gdgd
Crk/J3/xSVLh2T8vlAOEtBfKP09RT97UCfU/j/RD6Ati0z+rzcNFvRr8P8yH
F2FrmNk//hYE7vyi9T+j2m5OyyrgP7jtXxdjw9U/ZlmCWdBP4z8OdvnzYz3W
v0YlD0Y7uOY/Isc3A9n6yL+JpeQbvRDqP6r2seoOseM/0o3qXq4v7T9/thij
2JryP5zhtMECSfA/Zp4bXYBp7D9SsIwKZt3xP0DrTWvain0/OdkIyNRp8z+Z
A/4wImvmv6+oQXb2F/U/oLrR7cLN4r8orBLbT6n2P1PAnmwuP9A/MFagMFxc
+D+poWCOSxjyP2pa0vpzB/o/RMXqdT0D8z+mkpx7w5X7PyN7FluE8+A/cXEj
7cVF/T/JhJowMzPIvz+EQhUA2f4/RFb7lq1Dwr/OHg+X9kYAQKfOs7qkPec/
lijP3XIdAUBtsXnQ01T6P19M2/+K5QFA6MPTZDTE/D9ww0WafL4CQOztxDQN
HvE/glT8DwqJA0BXSklbiPPMP60SBUCdTwRANC9eQlFNb78fJGzoCScFQHyC
aZcrVeM/k08fbBLwBUCRVZQfgD/2P07OMGj0yQZAP147mHdZ+T8iepQe3J8H
QAvv58vNgus/9z9EsF9nCEB+QTLfyjy2vxRZUrq8PwlAoIU/osdk4b8yjKyf
tQkKQKKrO+hgkLq/aexYP7TPCkBTivJ+LIzmP+efY1eMpgtAHFR9JmkC8j9n
bbpKAG8MQIxAQTUZ6uU/Lo5vtk1IDUBiqecpoLfQv/fIcP02Ew5Ah2hCNo5R
57/YMMT+JdoOQDCVROFzhdW/Aex1eO6xD0A2r1/9v27lP5bguWapPRBABKVf
iuCH9T/O9GdNyKoQQJthHGnv7PI/kx8/EeoVEUA0DKvamFLYP1hXvMLZeRFA
7brmRa48wr/BuGgwNuYRQJlde12PM8U/Kye7i2BLEkAWEv7ONSPxPyGsNsSN
rhJAdoWXhnfQ/D+7WuG4JxoTQKHzkoqYZPs/VhYym49+E0DpHntZJHvsP5T7
sTlk6xNAYP/yL1LYpD9f91q1O1YUQEjPvYwSTZM/KgCqHuG5FECsahUamGfm
P5kyKETzJRVAfluEyyCt9j8JckxX04oVQACDPAwMnfU/HdufJiD4FUD7iDOK
QbXdP71aHNNvYxZAs4ICdidi3b9e5z5tjccWQFfprIhnw+O/op2Qwxc0F0CH
b+jku5S2P+dgiAdwmRdAi4ZLwtud7D8I5Sz5//8XQIUvO9tqEfE/ymXPwA==

                   "]]}, 
                 Annotation[#, 
                  "Charting`Private`Tag$11490#1"]& ]}}, {}, {}}, {
             DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {0, 0}, FrameTicks -> {{{}, {}}, {{}, {}}}, 
              GridLines -> {None, None}, DisplayFunction -> Identity, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 1, 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], 
              FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                AbsolutePointSize[6], "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{0., 6.}, {-0.728705507254987, 
               1.800895238637478}}, PlotRangeClipping -> True, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "6.`"}], "}"}], "}"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"scalar\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1]], 
                  LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA88dx3mtMez4AoAm5mqiAPam+gdgd
Crk/J3/xSVLh2T8vlAOEtBfKP09RT97UCfU/j/RD6Ati0z+rzcNFvRr8P8yH
F2FrmNk//hYE7vyi9T+j2m5OyyrgP7jtXxdjw9U/ZlmCWdBP4z8OdvnzYz3W
v0YlD0Y7uOY/Isc3A9n6yL+JpeQbvRDqP6r2seoOseM/0o3qXq4v7T9/thij
2JryP5zhtMECSfA/Zp4bXYBp7D9SsIwKZt3xP0DrTWvain0/OdkIyNRp8z+Z
A/4wImvmv6+oQXb2F/U/oLrR7cLN4r8orBLbT6n2P1PAnmwuP9A/MFagMFxc
+D+poWCOSxjyP2pa0vpzB/o/RMXqdT0D8z+mkpx7w5X7PyN7FluE8+A/cXEj
7cVF/T/JhJowMzPIvz+EQhUA2f4/RFb7lq1Dwr/OHg+X9kYAQKfOs7qkPec/
lijP3XIdAUBtsXnQ01T6P19M2/+K5QFA6MPTZDTE/D9ww0WafL4CQOztxDQN
HvE/glT8DwqJA0BXSklbiPPMP60SBUCdTwRANC9eQlFNb78fJGzoCScFQHyC
aZcrVeM/k08fbBLwBUCRVZQfgD/2P07OMGj0yQZAP147mHdZ+T8iepQe3J8H
QAvv58vNgus/9z9EsF9nCEB+QTLfyjy2vxRZUrq8PwlAoIU/osdk4b8yjKyf
tQkKQKKrO+hgkLq/aexYP7TPCkBTivJ+LIzmP+efY1eMpgtAHFR9JmkC8j9n
bbpKAG8MQIxAQTUZ6uU/Lo5vtk1IDUBiqecpoLfQv/fIcP02Ew5Ah2hCNo5R
57/YMMT+JdoOQDCVROFzhdW/Aex1eO6xD0A2r1/9v27lP5bguWapPRBABKVf
iuCH9T/O9GdNyKoQQJthHGnv7PI/kx8/EeoVEUA0DKvamFLYP1hXvMLZeRFA
7brmRa48wr/BuGgwNuYRQJlde12PM8U/Kye7i2BLEkAWEv7ONSPxPyGsNsSN
rhJAdoWXhnfQ/D+7WuG4JxoTQKHzkoqYZPs/VhYym49+E0DpHntZJHvsP5T7
sTlk6xNAYP/yL1LYpD9f91q1O1YUQEjPvYwSTZM/KgCqHuG5FECsahUamGfm
P5kyKETzJRVAfluEyyCt9j8JckxX04oVQACDPAwMnfU/HdufJiD4FUD7iDOK
QbXdP71aHNNvYxZAs4ICdidi3b9e5z5tjccWQFfprIhnw+O/op2Qwxc0F0CH
b+jku5S2P+dgiAdwmRdAi4ZLwtud7D8I5Sz5//8XQIUvO9tqEfE/ymXPwA==

                   "]]}, 
                 Annotation[#, 
                  "Charting`Private`Tag$11490#1"]& ]}}, {}, {}}, {
             DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {0, 0}, FrameTicks -> {{{}, {}}, {{}, {}}}, 
              GridLines -> {None, None}, DisplayFunction -> Identity, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 1, 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], 
              FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                AbsolutePointSize[6], "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{0., 6.}, {-0.728705507254987, 
               1.800895238637478}}, PlotRangeClipping -> True, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "6.`"}], "}"}], "}"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"scalar\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["3", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Hermite\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["False", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  InterpolatingFunction[{{0., 6.}}, {
   5, 7, 1, {414}, {4}, 0, 0, 0, 0, Automatic, {}, {}, False}, CompressedData["
1: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
Rx4sdWrmoI2Rdqf2EAf//eXI4/8Ct5ysEg==
   "], {Developer`PackedArrayForm, CompressedData["
1:eJwV04FGIAgUBdC2TZIkSZKkTZIkSZIkSUaSJEmSJEmSNklGkiRJkiQjSZsk
SZIkSZIkSZIkSZIkSZIkyRh7epz7A/e+fxr+rWj7KyAg4L/vcIEEEUwIoYQR
TgSRRBFNDLHEEU8CiSSRTAqppJFOBplkkU0OueSRTwGFFPGDYkoopYxyKqik
impqqKWOehpopIlmWmiljXY66KSLn3TTQy999DPAIEMMM8IoY4wzwS8mmWKa
GWaZY54FFllimRVWWWOdDTbZYpsddtljnwMOOeKYE04545wLLrnimhtuueOe
Bx554pkXXnnjnQ8++eI3fwiwgUCCCCaEUMIIJ4JIoogmhljiiCeBRJJIJoVU
0kgng0yyyCaHXPLIp4BCivhBMSWUUkY5FVRSRTU11FJHPQ000kQzLbTyPfJ2
Ouiki59000MvffQzwCBDDDPCKGOMM8EvJplimhlmmWOeBRZZYpkVVlljnQ02
2WKbHXbZY58DDjnimBNOOeOcCy654pobbrnjngceeeKZF155450PPvniN3/4
fv5AgggmhFDCCCeCSKKIJoZY4ogngUSSSCaFVNJIJ4NMssgmh1zyyKeAQor4
QTEllFJGORVUUkU1NdRSRz0NNNJEMy200kY7HXTSxU+66aGXPvoZYJAhhhlh
lDHGmeAXk0wxzQyzzDHPAossscwKq6yxzgabbLHNDrvssc8BhxxxzAmnnHHO
BZdccc0Nt9xxzwOPPPHMC6+88c4Hn3zxmz8E/K1/gggmhFDCCCeCSKKIJoZY
4ogngUSSSCaFVNJIJ4NMssgmh1zy+B+DF8ZT
    "], CompressedData["
1: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
u2RHZ8b/A+CFn4o=
    "]}, {Automatic}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7709360516535635`*^9, 3.7709361407860155`*^9, 3.7715349636688275`*^9, 
   3.7715359061985793`*^9, 3.771535947448284*^9, 3.771536037129159*^9, {
   3.771536109466234*^9, 3.771536131629982*^9}, 3.7715361722182655`*^9, 
   3.7715362154087324`*^9, 3.771536262469265*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->
  "Out[378]=",ExpressionUUID->"6794f030-c428-4add-af03-7d4dc760d8f9"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["InterpolatingFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1]], 
                  LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA88dx3mtMez4AAK3WhJ1tvam+gdgd
Crk/Hzh2yqXrxr8vlAOEtBfKP1ZaIH/vV+K/j/RD6Ati0z/KTOE+eobnv8yH
F2FrmNk/9IL+YoG537+j2m5OyyrgPzcQgKrmfKE/ZlmCWdBP4z+wkX5MdJ/a
P0YlD0Y7uOY/8bjSt9HZ2j+JpeQbvRDqP9m8ZI+1vLw/0o3qXq4v7T8ixVlC
OYe2v5zhtMECSfA/jkEvrazftD9SsIwKZt3xP1z0n7c7YOA/OdkIyNRp8z+q
LpK7FgrrP6+oQXb2F/U/YxKl4mPm6D8orBLbT6n2P/hCsHi/8NY/MFagMFxc
+D9C3vkszXe4v2pa0vpzB/o/CRzrIf+tx7+mkpx7w5X7P9ifpEu5s6o/cXEj
7cVF/T8vU60VwrvTPz+EQhUA2f4/LiffALEezD/OHg+X9kYAQJ4W6t7TG8+/
lijP3XIdAUD/8U7uiezmv19M2/+K5QFA/zbckjU56r9ww0WafL4CQL/xNPCz
5N+/glT8DwqJA0CsX7rUP5u6v60SBUCdTwRAK5RW2w1zlz8fJGzoCScFQMtI
YDjZFcy/k08fbBLwBUAREUT0Ywvhv07OMGj0yQZAYqZM6uXL4b8iepQe3J8H
QMg64yNkw8O/9z9EsF9nCEDJG9gxiALWPxRZUrq8PwlAQaB9I9nm4z8yjKyf
tQkKQEDit3Zsa94/aexYP7TPCkA4JmJwZIjCP+efY1eMpgtAkIgaR3U5k79n
bbpKAG8MQBHLAmhSWMk/Lo5vtk1IDUDq1CvHqC3kP/fIcP02Ew5ACteGGhRW
6j/YMMT+JdoOQE8DAqM0R+M/Aex1eO6xD0BZ94+Ihoi1P5bguWapPRBAHhQy
O3J10r/O9GdNyKoQQA/QeV1Ob9K/kx8/EeoVEUCcE2P+QkOBP1hXvMLZeRFA
I7LKpei/xz/BuGgwNuYRQIBuzpgVeI6/Kye7i2BLEkAj6AW8hkHevyGsNsSN
rhJAzMNjgGm16r+7WuG4JxoTQH2DZE07nem/VhYym49+E0BGnPKFLhPav5T7
sTlk6xNANkfaysv5kT9f91q1O1YUQJ87p1oWobM/KgCqHuG5FEDqy3qAyhrH
v5kyKETzJRVAbHXQof8w3L8JckxX04oVQEaQK7/r19W/HdufJiD4FUAu8QaN
xVnBP71aHNNvYxZA87FeCEzi4z9e5z5tjccWQLGpZ07Vxec/op2Qwxc0F0A8
INnk5frcP+dgiAdwmRdANlHEgSuhuD8I5Sz5//8XQKqRsYfbYZA/xIzXuQ==

                   "]]}, 
                 Annotation[#, 
                  "Charting`Private`Tag$11544#1"]& ]}}, {}, {}}, {
             DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {0, 0}, FrameTicks -> {{{}, {}}, {{}, {}}}, 
              GridLines -> {None, None}, DisplayFunction -> Identity, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 1, 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], 
              FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                AbsolutePointSize[6], "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{0., 6.}, {-0.8346450336085751, 
               0.8449815429207395}}, PlotRangeClipping -> True, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "6.`"}], "}"}], "}"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"scalar\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1]], 
                  LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA88dx3mtMez4AAK3WhJ1tvam+gdgd
Crk/Hzh2yqXrxr8vlAOEtBfKP1ZaIH/vV+K/j/RD6Ati0z/KTOE+eobnv8yH
F2FrmNk/9IL+YoG537+j2m5OyyrgPzcQgKrmfKE/ZlmCWdBP4z+wkX5MdJ/a
P0YlD0Y7uOY/8bjSt9HZ2j+JpeQbvRDqP9m8ZI+1vLw/0o3qXq4v7T8ixVlC
OYe2v5zhtMECSfA/jkEvrazftD9SsIwKZt3xP1z0n7c7YOA/OdkIyNRp8z+q
LpK7FgrrP6+oQXb2F/U/YxKl4mPm6D8orBLbT6n2P/hCsHi/8NY/MFagMFxc
+D9C3vkszXe4v2pa0vpzB/o/CRzrIf+tx7+mkpx7w5X7P9ifpEu5s6o/cXEj
7cVF/T8vU60VwrvTPz+EQhUA2f4/LiffALEezD/OHg+X9kYAQJ4W6t7TG8+/
lijP3XIdAUD/8U7uiezmv19M2/+K5QFA/zbckjU56r9ww0WafL4CQL/xNPCz
5N+/glT8DwqJA0CsX7rUP5u6v60SBUCdTwRAK5RW2w1zlz8fJGzoCScFQMtI
YDjZFcy/k08fbBLwBUAREUT0Ywvhv07OMGj0yQZAYqZM6uXL4b8iepQe3J8H
QMg64yNkw8O/9z9EsF9nCEDJG9gxiALWPxRZUrq8PwlAQaB9I9nm4z8yjKyf
tQkKQEDit3Zsa94/aexYP7TPCkA4JmJwZIjCP+efY1eMpgtAkIgaR3U5k79n
bbpKAG8MQBHLAmhSWMk/Lo5vtk1IDUDq1CvHqC3kP/fIcP02Ew5ACteGGhRW
6j/YMMT+JdoOQE8DAqM0R+M/Aex1eO6xD0BZ94+Ihoi1P5bguWapPRBAHhQy
O3J10r/O9GdNyKoQQA/QeV1Ob9K/kx8/EeoVEUCcE2P+QkOBP1hXvMLZeRFA
I7LKpei/xz/BuGgwNuYRQIBuzpgVeI6/Kye7i2BLEkAj6AW8hkHevyGsNsSN
rhJAzMNjgGm16r+7WuG4JxoTQH2DZE07nem/VhYym49+E0BGnPKFLhPav5T7
sTlk6xNANkfaysv5kT9f91q1O1YUQJ87p1oWobM/KgCqHuG5FEDqy3qAyhrH
v5kyKETzJRVAbHXQof8w3L8JckxX04oVQEaQK7/r19W/HdufJiD4FUAu8QaN
xVnBP71aHNNvYxZA87FeCEzi4z9e5z5tjccWQLGpZ07Vxec/op2Qwxc0F0A8
INnk5frcP+dgiAdwmRdANlHEgSuhuD8I5Sz5//8XQKqRsYfbYZA/xIzXuQ==

                   "]]}, 
                 Annotation[#, 
                  "Charting`Private`Tag$11544#1"]& ]}}, {}, {}}, {
             DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {0, 0}, FrameTicks -> {{{}, {}}, {{}, {}}}, 
              GridLines -> {None, None}, DisplayFunction -> Identity, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 1, 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], 
              FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                AbsolutePointSize[6], "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{0., 6.}, {-0.8346450336085751, 
               0.8449815429207395}}, PlotRangeClipping -> True, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "6.`"}], "}"}], "}"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"scalar\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["3", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Hermite\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["False", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  InterpolatingFunction[{{0., 6.}}, {
   5, 7, 1, {414}, {4}, 0, 0, 0, 0, Automatic, {}, {}, False}, CompressedData["
1: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
Rx4sdWrmoI2Rdqf2EAf//eXI4/8Ct5ysEg==
   "], {Developer`PackedArrayForm, CompressedData["
1:eJwV04FGIAgUBdC2TZIkSZKkTZIkSZIkSUaSJEmSJEmSNklGkiRJkiQjSZsk
SZIkSZIkSZIkSZIkSZIkyRh7epz7A/e+fxr+rWj7KyAg4L/vcIEEEUwIoYQR
TgSRRBFNDLHEEU8CiSSRTAqppJFOBplkkU0OueSRTwGFFPGDYkoopYxyKqik
impqqKWOehpopIlmWmiljXY66KSLn3TTQy999DPAIEMMM8IoY4wzwS8mmWKa
GWaZY54FFllimRVWWWOdDTbZYpsddtljnwMOOeKYE04545wLLrnimhtuueOe
Bx554pkXXnnjnQ8++eI3fwiwgUCCCCaEUMIIJ4JIoogmhljiiCeBRJJIJoVU
0kgng0yyyCaHXPLIp4BCivhBMSWUUkY5FVRSRTU11FJHPQ000kQzLbTyPfJ2
Ouiki59000MvffQzwCBDDDPCKGOMM8EvJplimhlmmWOeBRZZYpkVVlljnQ02
2WKbHXbZY58DDjnimBNOOeOcCy654pobbrnjngceeeKZF155450PPvniN3/4
fv5AgggmhFDCCCeCSKKIJoZY4ogngUSSSCaFVNJIJ4NMssgmh1zyyKeAQor4
QTEllFJGORVUUkU1NdRSRz0NNNJEMy200kY7HXTSxU+66aGXPvoZYJAhhhlh
lDHGmeAXk0wxzQyzzDHPAossscwKq6yxzgabbLHNDrvssc8BhxxxzAmnnHHO
BZdccc0Nt9xxzwOPPPHMC6+88c4Hn3zxmz8E/K1/gggmhFDCCCeCSKKIJoZY
4ogngUSSSCaFVNJIJ4NMssgmh1zy+B+DF8ZT
    "], CompressedData["
1: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
RgzJoYjBy0GopP6Ck9jULPofBAk0FQ==
    "]}, {Automatic}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7709360516535635`*^9, 3.7709361407860155`*^9, 3.7715349636688275`*^9, 
   3.7715359061985793`*^9, 3.771535947448284*^9, 3.771536037129159*^9, {
   3.771536109466234*^9, 3.771536131629982*^9}, 3.7715361722182655`*^9, 
   3.7715362154087324`*^9, 3.7715362624872136`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->
  "Out[379]=",ExpressionUUID->"fae85fdd-e022-4e01-897b-5beef12162c5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["p", "*"], "[", "t", "]"}], ",", 
     RowBox[{
      SubscriptBox["p", "nonlin"], "[", "t", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "6"}], "}"}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Theta]", "*"], "[", "t", "]"}], ",", 
     RowBox[{
      SubscriptBox["\[Theta]", "nonlin"], "[", "t", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "6"}], "}"}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox[
       OverscriptBox["p", "."], "*"], "[", "t", "]"}], ",", 
     RowBox[{
      SubscriptBox[
       OverscriptBox["p", "."], "nonlin"], "[", "t", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "6"}], "}"}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox[
       OverscriptBox["\[Theta]", "."], "*"], "[", "t", "]"}], ",", 
     RowBox[{
      SubscriptBox[
       OverscriptBox["\[Theta]", "."], "nonlin"], "[", "t", "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "6"}], "}"}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], "]"}]}], "Input",
 CellChangeTimes->{
  3.770889281385109*^9, {3.770897656928229*^9, 3.770897672886346*^9}, {
   3.7708978093023834`*^9, 3.770897829910553*^9}, 3.770897886578741*^9, 
   3.7708979636521645`*^9, {3.770898384571972*^9, 3.770898394787094*^9}, {
   3.77089848738498*^9, 3.770898500989005*^9}, 3.770903118469231*^9, {
   3.770904354248141*^9, 3.770904365695489*^9}, 3.7709044019759846`*^9, {
   3.7709157473540382`*^9, 3.7709157519027305`*^9}, {3.7709160535756407`*^9, 
   3.7709161027892675`*^9}, {3.7709197230647955`*^9, 3.770919726502689*^9}, {
   3.770920264385429*^9, 3.770920288895277*^9}, {3.770921602863446*^9, 
   3.770921634123568*^9}, {3.770933514373401*^9, 3.77093353758812*^9}, {
   3.7715353537830443`*^9, 3.7715353558295636`*^9}, {3.771535389437718*^9, 
   3.7715354176690273`*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->
  "In[384]:=",ExpressionUUID->"5faa0983-4ffc-4477-a4a9-de65646bd850"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
ujEO9gSMph/uEkLVExtcxblQHvdRy61HiNrLHTMGJbnYtrx+/Zw+IcQ9jHBL
mosnaY+vqfUL4dDhmOMkw4WfzbUpvYNCmMctvLp6HBcFp+J9moeFMLTPV3wm
y4VcW1Rq8R8hHuuyvkwZz8Uagz0fr48KsbfGZGzjBC7u7NukcnxMCC+vQb9k
HheSNSu8doqLcLjAS6OI4mKp/KLklRIiFLuLTGr4XPy5b6Cgyxbh1NW7u27T
XOgnDZTLcESYNKKVHi4kzz/4aNsXrghn1m6UsRZxcWp9hEKZrAgrx3Mu9hKX
OTg8TR0vQvPg6O7jDBcD0/nbD/DI5yWuXpk0kYupojcKq/giHBos0DtN7Pnn
4lMzWgQL93Vaf4hjPq7fPlEkgpm81mXnSVwUlespDjAivFj1+XY8cc/N/qcN
k0QYaviwoZpY7cTD7TkKIhga5rd0EbvtDFeMUxLBKXCz5j/iSE/7Cn8VETw5
Dqv+7weWvB0LVcn+Pkok/iTuVH+tOHWKCIOuCSPPiBW5KRVSGiJsHlt+7jzx
4m7fHZ80RbAM7D25lDisUVepdKoIn+udpSWI7+T3VaToiPBuwUPhRbL+zyn5
O0KnieAYlNemQyyKCFPy1CfruSqKvU7OY8HG+ZWzp4vQKPlzDp84ZPH4QOEM
cn5ZcYIAcn6ZM18p/ZopQkP8SbMCct6tE5Mq64xEWO5f0jxA6sH75xOYNVsE
E2dVRp04qLKncuMcEdwajys7k/pdv5UXON9chCnmSZbOpL7Np/Yra1iKcGV8
020rUv+5q2SDPlqJMPXSEYzIcRFg1aBcZCNCfKF+SQnJ0yWtC1WJdiL4/3F1
2UPyJtmnpeKxUISTPgdDS0keayKtq587iyA2JlN5l8XFv83cnRmuIvzedeIu
j+R7unO9ylF3ETRT9Dd6k/yfUVi902a5CF+UNFQ//OFg5e2QyQ/XiJCxuXGv
C+mf42fnPTvnI8LTn7ob3fo4KAmR2bXLl5z/D3/asYcDddv4Z4Z+Ipi+tc1S
6uKg603OrhtbRThS3rrC+RMHoRLfa87uF2EgtnWGSR3pf2uzcUlhIojviC09
8JyDgxHR9pfDRahWVAkrqeYgUkr/aVakCD33FXgG5RzEsQOLK46L8P7DPr1n
+RxcHjeaM5wigvxu06lLL5P3Oy7uGbskwjM9006vixykxVzUl74igsqlIGpD
Epk/clYZ/DQRAk2EasHxHNyfEHVVN5vk4/BTu9RjHFQJqIRVxWQ/AcWZQYEc
OLr5vFpbKkLSD2b/5W1kvp25K9j0RISH1dYfX23h4KVw6YldFSSP7Jf1i/04
aGESj8a9ECGNYSefXsWB17KuirP15Dw/BE8b8uSg7Zy5dFKDCN3ZKfrrlnHw
ZdLH8BuvReir/fpjuSuZvwoaoaUfRLgdJ5WfZ8/BjpW7CirayPoXjLlsnM/B
76SKoeefRMhyeCCtacvBiNKmnW+/ijB95MVwKTiQmJwd8KtbhDd94/fHmJDz
WyN2a7hXhIpb0asuGnMgk+r8Y+wX6acth+8Uz+JAVq1/g+yQCB0xs+q1DTkQ
qZt6a4gxyHmZp5ShQ+bt+cODMiwGe8f5FNlrc7Bx/MvYLgkGB3WNG35rcVA4
tKngLpuBtlodP1iD7GdLnlMCh8Fh2TkJjuocTPgk8TVkHAPDU3zr6VM48Hme
JLCawOCnVuB9NVUOYqy+p2tQDHT27XluOJmDe3lG4AgYyG36eHOJCget08Kb
umgG8ltUAkOVyfov1/rXiRiUty2zf6DEwQxGQSJ3IgO7iR5LJIhXxGw4nyDP
4Fry0WurFMn9JZ5rsFeRIfcJa3OFArkPd4k99VJmcFsh6BGIm384rrSazEBX
ST+/Sp7cj97n+zTUGGjUKOzxIdZp6jjCUWdQklIqGkfs5jBD5acGg/9mz7n5
ZBIH+0v236vTYmAUZbowhjjN6JlDrjaDFQNisuuI624y7Qm6DJaWbZBYTDyi
4rt7rx4Di72NVvOJ1c/eHr/agMHD8LnvnIgXcUevWhky6Hij1rKJeNcB+zma
Mxno/4x3PUt8qf9sPceIwbSYmYvriKs3tm/4acwgUVz5tQJZ369W/X91Jgx8
HaSGgokV3faeyTVjYB+omv+Z2K6qQufcXAbNMjNVfcj+t1nQpXstGAQ/CDfq
IT5/d43HajAYkm0bPk7O7/HUWz+trBg4W1/fZkHOtyt5+JCmDYMBhzsX/hGL
BHbyXDsGX774B78g9bE8cur2z/kMVraXS+aQ+p3aofs+14HB6dpC1euk3oVf
gwPPLWJgnvDlWr4aua9XlnFClzDIeFnx5D3Jh8n8VcbWrgyGox9d89AkeSlM
r9F0ZyCj8MDlFslbtOGAD9eDgftVk80CksdWhbi4ek8GfWpFl3jTSD5OvtO4
t5JBdbZ2YpoeB4bSUwvPeZH9V/94uNiA5KGn5NtqHwZa/lkKz2eQ+pb3zftv
IwOD6KzcKDNSXzPL5vrNDISh1o7JcznYlx0dcG8Lg5B5N+Y+tiD1PK+eGLqd
Qc15lzRTaw6CA5b2c/cwUPJsbHrrSM7b2LdScy8DzQNPrXOXkPk4uj3Jah8D
NSdqzUUXDrixsTYhBxmo6j/MTyf9n5JRdub7UQbFZY3jj6zj4Om3GUaVFxh0
fY321Q/nYPNtcD4nMejxPe8sEckBb/fi92MpDN60b97WcZQDT/amw7OvMKiQ
1/754iQHPzVSX13PIP1qsdZ8FpmH9NoJuw4XMnh55qnS9zIO8nWUFqYWMdhh
7RC+vorMpz4d5UclDBbY/5r9g8zfGwftnvaXMfA64joq85qDOZf2iXyfk34u
9r1w7Dupx/sf961aGfhP2F5uT76vsK8NH/P6yKD/9RyNceR+y/Rnrw5pZ1Cq
EWH6nNynA3/U2He+MEir9K5zVuPimLynh2o3g3zlGX1ORlwYtG/QNe9lwKRM
MZQ146IxfefYsl+kXidGq8osyPcv05NpJwZJf9+f5z1tAfm+JXZxb+Ywgxdt
t2LeOpLvW5WZSyr/MDDuV/KPcOZC9kTBlM+jDLiWXgnaS7nI8agcHBtjEJrQ
eL3Kk4v/AU5toiU=
       "]]},
     Annotation[#, "Charting`Private`Tag$11599#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
6ZOtNTedgzv2Vb/Hx0WYt9W9O/8aB/8Dt3Qc3A==
       "]]},
     Annotation[#, "Charting`Private`Tag$11599#2"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 6}, {0., 3.3314016195472735`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7708892823063936`*^9, 3.7708893309224014`*^9, 3.770897633404954*^9, 
   3.7708976734542704`*^9, {3.770897814005419*^9, 3.7708978344516473`*^9}, 
   3.7708978957471046`*^9, 3.770897967787518*^9, 3.7708984023167477`*^9, {
   3.770898491462438*^9, 3.770898509420899*^9}, 3.7708985606962986`*^9, 
   3.7709031218371716`*^9, 3.7709041085217113`*^9, 3.770904424271882*^9, 
   3.7709044686743126`*^9, 3.770915309957196*^9, 3.7709161270070033`*^9, 
   3.770920197707055*^9, {3.770920272113598*^9, 3.7709202898377194`*^9}, 
   3.7709216359827204`*^9, 3.7709335394096317`*^9, 3.7709336165670657`*^9, 
   3.770933711787076*^9, 3.77093393777712*^9, 3.770935301785882*^9, 
   3.770936168216066*^9, 3.7715349639201555`*^9, 3.771535360009857*^9, 
   3.7715354472748737`*^9, 3.771535906420998*^9, 3.7715359476078568`*^9, {
   3.77153610962481*^9, 3.771536135690124*^9}, 3.7715361723728495`*^9, 
   3.7715362155513496`*^9, 3.771536262580963*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->
  "Out[384]=",ExpressionUUID->"0396d3d9-52e3-4dc8-ac67-d1cad44a7b0c"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
PxQ1FWGezVa8lLWYxgNi6LSYN95fk6lexauEeLBvWG91JVcY0qQXOSpxeVDr
/saeQk//F5MxOoMHvJaOvWHYH4+cN1u0z+RBaHY+/xneb9at08fLxXjwvVEh
7DP205MCV8NYigeb7dx8JbDfnM4YNa2cxYOY5XUms/G+Gg2t+yYtw4O1cjJL
SezfwItWo+OyPIhMv932B/s7IclNMleOB0nhCVbZOB9q8xN2aavg+uZk7S3F
eWZVNt+JUePBVbPBnKM4T79XZ/kMqfPAPDUtRfoXzteWivhHGjygpW5ab+kn
QOvv79YFy3mQvLhP0KKbgIKp/v0zV/CgLahSs6gL59mMmYI/dHmwQ9tl+rxv
BNhJyculAg+yfxglNnQQELXM1E5pHQ/0mhsXV38k4I/H3a7ZljyI/7jz3PIq
nFc+mmP/tvPgZ4P8pFwlAVTAC6JlJw9aZifGTSsnQO1SvUqcNQ98nQ9GPiwh
wDpj0knCngcvLq2bcf8Z3l8/LAfEj/Kgeqy4Ym0yAcH23D+Cl/D3MybXJ/gQ
sL9cJoG4woOz7eR8D08C9NW09MmrPLDedmKR4TECxgd2h86J5cGvYS/LehcC
nH0zpVbf5MHynL8nH9kQsO2y9QqfTB70+b+6dG0tAXJFWT6/63ngFdmgv0GM
gEmFijn/Gnkwuf1mUO4MAj4GtZZMb8bzd1a/r8LF/W8Snsl85EGcbfCeGYIE
EO/2xGt18qDkbWhJ/SAX+vuE81yHeDDn5Te31LdceCGzb7KbpsDl3BK9kutc
gOwj4zV8CnJXTnUriedCyUb/kSwJCrpXrowpj/nv72Fu9p2UpoDn9XBbx2Uu
fHz3pZWnQEFIiNeU7SFc+HvlYIGOFgU33/bP2OfOBT917+ezl1Aw8H1ie74r
F6a9DHsybSkFaiEj3grOXBAZSntYrUOBbEBRytQDXJA267tuo0+B659WU4k9
XFgh6nE6dAsFP851LUnfyIW82wG+LlspqD4+407ABi7or7ziab6NAv9Hu8F2
HRc2OOUckd1BwcPVPZrLDbmws2J036O9FOyvsrmzXpcLLfsI66s2FITX6ky1
1eGCzZjkTh87Coyvlo4ELOPCQeUVZkaOFARO/VP3eTEXvM766r93oeDZNv8N
nAVc+CdzflX+EQq8LRwP2KtxwT87QeeWOwXDN5RsqlW4ENqZr+l8nILXFrOH
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
28A6
       "]]},
     Annotation[#, "Charting`Private`Tag$11646#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
mrYTRr2LVCqHgtP1LiIvrNvJ3meB74xFKPjQtf4uj087KW3YVvlIlAJvRpLr
/eJ2IjZ8QYh/MQXCOr7mBfCHZPnUWi6Vx/02KY+s2veHXNkwavufAgUOrB7x
kBN/yE63cKVNqyho+bL7o4XbHzI6T9xBYw0Fzw5S6zjv/pBkrjeb51Qo+JW7
gXHt+x/yQDt9xwncz8SXnG37+esPeZiptPf1egputL4PzuHrIG+m2gRPbaLA
wPLW32M6Hdhve6md0qTAvTy9suRAB7H9qCATRCh4sabtqbJFB2Eq+d/OAwqW
DsMxfq8OoutNvz6lRcGA02xhalkHCTPdtUhBhwKZptURYvUdRGAu2Wf5TgoO
gqndze4OcsFil5TYLgre0vLkjAU6SevD67GduykI8HW8O72nk5xTuDuzWZ+C
d/1Pzpgf6yRXn+7eP4ee2PdDs8KmkxiP/Hzzai8FxxdsGIz17yTbMxfWS+2j
INjBvEwwupOknnh8rxhdUhcSa/+sk4yvvnzewhD7j6gRY92vnaTk6ceMkP24
Ptwya7NaO0lkTOFqaSMKwk7tp6SGOsmAZkt3IppLPj13SKSLxE2c3x9lTIGq
d2vQ0eVd5KuRu4CwCQUWPZzzH1TQoYdWO6Mrnl2QemjURb4E8v7RPEABbV7U
BO+ZLgLfLkSHojfaff563q6LDPXF83SgrWtmkms8usjSpMElKgcpiN602n1r
aBfhfh/J44D+Hn7U9GlCF/nM9/dtNpqa9VkvmtNFCtbonetHaxx/xXYt7iJk
sklA+hAFtoVdHR01XaTJWrlQHx0nI1Fo2NFFVpVeibFD/7i9Kzxvoos8+/mt
MBQt0OlwRZbRTcYCXDTT0aD7ZE/Awm5yJz5KsQR9JbVGdlKhm/SPno3/gX7C
pnOdVu8mWSa0gp/ohovraz/t7iZnIh7f70Rzvp9J33Ckm3D4r27t+ne/3q1d
RlbdpM1Z9O/vf+Pjl5S+5NRNhgJtuxrQ0VKTh/x9uomHebfyF/TXjdX3UsK7
SatoV38emscwvbT0aTfZ/aZCMwGtbOXH/edVN+G7ybvFB33S3XITrbybHHRs
p1ujAx/tuLisoZt4fmjM24kuzJZO0uzpJnW39zguQw9/mW05Mt1NbCfTD4/h
/Ml01ok7CvSQx/S1N4vRRjw5BqGLe8jQzbPsELT7oiDPDMUecucyR94Mnal6
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
mXs1Rh7MPLC/A0zYVSG8rKtsjOSIbZIa12LC3dy1t990jBHaGqHXNjpMWKJm
36w6MEa4d+ostd/JhLT/8jcmj4+RP9Wf+q/uYsKXuD3dwfzjZN3omvajukw4
LhWizRQaJ491TRZv02PCwIOGR66i46SuMLdu6R4miPhbGVjKjBNLcaF5RfpM
iGVkJDWvGieKjuaRd/YyQdV9ksdYZZzcmvv8fZsBE0wcvbKI1ji5ItFtHruP
CX+GK4Sydo2T1vvFtTsMmeBgI26xct84sb5EVrShH5xKlBA9Pk42RGY6cxkx
wVpXvFDRYpzcDVe19kNrqnid07bF+3cups0zxvVdNMk56jBO/Nf9NvZDt/FY
vbh8Yxzj3esylwkTMrvqzXw8xwmtvejSOfSdSj16bMA4eSDbZVmKPpz7Oi03
DO1idHnpASYoPl5jUhk9TorqD8faoGe9omY6n4yTSiVjkUx0xUVOPPfzceJu
G14zgH586KbewpfjJMTTg7niIBPstg4NrysYJ+Wb5goN0DsVToXvLB0nyjTL
xVfQEsLftY5/HSdj7uYq/uieCe0u+9px8togROYxOr8l655/6zhZMx0qkIoO
KJHdlNg5TnoWCVDP0Cef3W/JHxwnUdohKk/RqmGUZ/VfvM789jQSTb/huLaP
e4KYhtP8vNF1Z7uq+ZgTZN47x0kbdMreI9eXiEyQ9i1nRfTQ1zeUr1CTmCAs
Le7xZWgDqS2f9KQnSA7DufTf+0nT066cXjlBlnxmPX2BHu2TXOysPEEulfzK
c0SXVPsXBalPkG6lzUtV0Q/zuayeak2QEIP2sT84v9YJF0WKdk+QtAC9MyFo
Tb+2l3WGE2T+dfMADfRP03cU89QEiS4OeeaA65e9Xe3ZMqsJonwgvF8Q7bk6
4cCmyxOka1LV9RGuv+LMnQSLWxPE4UOsTMp+XJ9fE3tu+EyQIHr4nVXor+Xn
Ru8HTRApcdGqeIynqxG62sWx+Py5ts8+GH873fO6m55OkLduzWXjGJ8S1quD
xjImyOnVzwzM0G82s9tWvJsgZOV/D5ZhPFP1la7uvyZIkkFfvD3mQ13hNrmI
ngniMSds9Q7zJSU583PGyARZ9+UKTQi971rokp+0v4SmAUfCML8eLjz8auuK
v+T5xRuafjuYsPpg69jsmb8k7+5DCRnM3wgRMutz/i+Zf0xY/DjmN/NTBN9C
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
cOe4WA==
       "]]},
     Annotation[#, "Charting`Private`Tag$11646#2"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 2.9336328441199835`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 6}, {2.9336328441199835`, 3.336148532804735}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7708892823063936`*^9, 3.7708893309224014`*^9, 3.770897633404954*^9, 
   3.7708976734542704`*^9, {3.770897814005419*^9, 3.7708978344516473`*^9}, 
   3.7708978957471046`*^9, 3.770897967787518*^9, 3.7708984023167477`*^9, {
   3.770898491462438*^9, 3.770898509420899*^9}, 3.7708985606962986`*^9, 
   3.7709031218371716`*^9, 3.7709041085217113`*^9, 3.770904424271882*^9, 
   3.7709044686743126`*^9, 3.770915309957196*^9, 3.7709161270070033`*^9, 
   3.770920197707055*^9, {3.770920272113598*^9, 3.7709202898377194`*^9}, 
   3.7709216359827204`*^9, 3.7709335394096317`*^9, 3.7709336165670657`*^9, 
   3.770933711787076*^9, 3.77093393777712*^9, 3.770935301785882*^9, 
   3.770936168216066*^9, 3.7715349639201555`*^9, 3.771535360009857*^9, 
   3.7715354472748737`*^9, 3.771535906420998*^9, 3.7715359476078568`*^9, {
   3.77153610962481*^9, 3.771536135690124*^9}, 3.7715361723728495`*^9, 
   3.7715362155513496`*^9, 3.7715362626856833`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->
  "Out[385]=",ExpressionUUID->"26894ca4-818b-421e-9d5f-76ec4a171db7"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
pVE=
       "]]},
     Annotation[#, "Charting`Private`Tag$11693#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwUWnk81O8Tt27WLUK6VCqlHCUJ86SDyJUzhXIUEeorUYpKkivJTa4cqaiE
XHlcuZL7DrmvXLvWvctvf3/ta14zn3nez8w88555vXa3lfMlW0YGBgYrVgaG
//+uaDm91XP2VmVIvCi/bY+fiq/N/gONkhbg2P4+YsJqL/yeHbkVJOkEfszd
zrevn4WPQn8Su+PcgNE+j8dt2hjmv50JdJR8DFqpNazI0gbEDnYUbXY+hb//
MWjGtDiDiru/bG2cLxgI/HJPHneDa9Wq6aHX/WFvbWUBg5QXPBVeEL8qGQzM
5/LH2kx8oCXboDZ0MQSMai8Qh4tegk2PtM9yZyi8TXPWyCp9BYsEdrhaGAYT
fnmu3XJvwPfg0GppXARQ035sk2qPgK36xTn7vKKg3K3iH6kqBt67Rzj7X4+B
otj2rG62BPhVrTlqIBkPZ5qVn/xUSoGs+wJ6V5kTYUu/JVNhUxrcD/DKDF5M
BKG5M7I3gzKA/dtlu4XOZHiU/fcexeMzNFVV/dxX+w5StyleSTH8CtE98ntM
C1Og15Dz+Z7NbJBi5OkvjkuDxgue7JyBeUAWenhqLigdpEN9eXc45UPRwYmo
3V7vYYS0b8LGqhAu6pcb+F7/APHUnoEu7xJwTnSr1ZXMAqWjpx1YaipAMWdY
8unWzyCmr+GnslkJDDYH1MyYv8DEM/dXVapVUHs/PCFw8QsElC0ImXTUgFmC
sxmpMxuWDYd199s0gOfsnqbCuDy4Rq4/PO7UDtfcezYMhL7D7vFGxtBzHXCW
8bX0TNB38FWUUTDZ2Qncwhv+O73y4ctpxe3Df7ogXqXrnM/1Qtg8bdv/y60X
ygIDi7QlS8Ay3afjO98QlEx11xMzSuALqWzlZ8wQFGvs7689hGGbdG1f775h
uMJ4neGdSCnEi6LuSdURMCpZl9i5owxE7xJV+h6MgaaCrN3WgxUw6KN+vpTr
H2iMdrq43aqAeI3QbOXEf6Ae9tij/WMFvLU5UPZLfhrOkn/5vzlSCTZH7rgN
mc2AataNTN5jP+HcXuMZhfQ5kJeMI7NBNSiZ2PMbC5FBrl1t/YZ3Nbj4dBot
XSGDjM8kU1VZNZQtxmtIJJPhyJCCkM/ZGghpHxveOLwAB+KbTzBo1sKxQreN
lVMUkNR2R5YBtRCbUq+09zEF9lF3XCipr4UXXk0ZCZgCEmaOZp66dXCeuDfy
FloEcWG2RyuGvyAzUNDcX3EJxH5mPjeJ+AX6L5rm7rgugairYXBe5y+QVBF6
effzEgi3JCW4mtVDgPzUjRSJZeALVi6ft/wNRca1fltpy8CjMlynm/QbCrlX
ArbIrgD39MvWrKHfsN3zqciq9QpwanaOONo2wMkSrH29agVYWO+yTd5qBMkG
/V6hR6swccGLdyG9ET4m3R39l7IKdUGBW2kjjTDUFV35/tcqVPu3vvE72gRD
IsJtVUJrkH+4J5JbpwkmL4d+3HVyDTIaBmJDHZugMDsu8dKVNQgQmH0Xl9EE
UizjhbJxa+CZQ0nfXdMEjz9Oa3UVroGT8frHtLEm4KggtlzoWgO9GPacL3ua
QY9Pdsabdx1OK/PmH1drhj+sPkKnD66DXL9QceG1ZvAgJPOXnV6HLRJ7Kivf
NsP73SPtS07rwFJ5sOZCcTNEd5hVpT9bhyVbmfqGnmYwyzr9hydyHcbZTjQZ
rDbDB//u7IMZ69CVodLWtbUFBJdmnJYK1qFW62yXuUILnF45EPRf7ToUzmj2
Dhm2gLA+f1BC5zp8eqU/cPO/FrhXKj3rPrIOb2VNR6Zft4AqK4vMxtw6BLda
TNz50gLGQ9tbpNfWwfue7fRSQwskbNk0YGWiwp2tjvMPZ1qAY8zc2JeTClYF
dykMXK1Qu+WBWCYfFQyueKw8l2qFX2+JAg+EqHCW5kXlvNAKgSy/s6ZFqHA8
wZch5GYr+De5WzFvo4Lk6SBmId9WOPesNr6ULm8dfsMek9IKSske7bvoMvvz
GK6dFa2Q9/SX+15RKqxKJvGlDLaC6G0494vuf6omfctBhjaobJYOEuKnwp9b
WSJZO9rgQthiDhORCvVcueLyKm2gFLW4K4KOvySraFf+lTY4WBZ4/Df9fp/1
yveqPGiDD2RRk4z5dUgk1xwoj2oDHT7qpNToOoSGNR5W/94GpWPhppe61uGZ
QodMfXsbnLaffLarbh1cu3qP6VPa4OG98wURhetg+2BYsUOgHWi88xfy6Pkx
Fp9SviLbDpdVDr7wpudP8dryWVt6X/pjZXxRzHkdDjJuaEwFtsMemya3adN1
EEth1nb+2A4pfMHvnej1QR3nN/KYaIfbBJdTATzrMPNS5PIGawf8/DpAkFpY
g/5DO82f7euAPUYalk861qDU+bBtkFUH8PYPZlhFr8FXfnl7gScdMHQynDrv
vgbJ307ejkzogBo1q2FksgY+y+fvJfV2QJ/csqIs3xpc8Lr+PNe4E0zN7zm/
/28V5F6VnU9y7YR/OSc1bmuugnjCbvag0E64qUu12LprFeZLBv1tGjohl8/z
9sGaFYjYuB4ieL4LPMenmTOIKzDyyCr2zvFu2HP+c56J9RI0BJVfNTfohnfL
8snSUkuQ/1Zix4U73WD86T/G/fOLEPBjKHFXZjdcMDXuCfdYBDmaVVrj3h7w
rHsuNfmUAt6e1l+lt/yBz6E2Gwn/keFWYMVdUbk/cKdn8sXUETIYxu05xqL3
ByzPEuTTJ0mwv3g4rzfgD2zx21oRYE6ChnXr4gCmXog5tVEUBfMg/tCmepLc
C7lXjo4fGP4H3z1s+1Kb+6FxoPK6mP0QpKk6dIqR+2Ety/zeaOUgRDDdaX4l
8BfKMh+UcO4eBLcgz58eBn+hwtnL91TuX1BIepOp3f4X+j7k1Sy874ErIwMl
DxwH4HWLwuHf/U3QUjV8KtdzAG7b3sEb5o2gmTGWPxc4ACIMM/80mX6DktN0
tk3mALRO321zNK8BsZXlNJ3ZAWDUfMdz6GMJ9BB5X0m4DELI8jT3i9kX+NIs
P5e59yCcrY+3VCuPxXVNW15GhgyCq/qbloq0VFwYLvaM6+sg1FQ9fTxzMxvH
7JS8v0QaBL2RY5/qrpdiAcaDFBnGIWAsaQ4ZFy7H/iOH7jgIDMGxTbZ7P8sr
8IMMWYcBuSHYMf+y/9RGFTaTV7Gs+28IVHgHt11h+I1bhFAvs88Q1Gao81ff
bMCaK2qXIWwI0HTi9ZHKRqz0Q8MgJ2cIlrnNdIeONuPsBK2m2cohMLp3+uqH
hmYs9VRH+2D7EPQt2jQI27VgMXVD9fjFISCYNAp/8G/FoQdNKrtYhmGyTPvF
d8E2zMlldlpQeBhCze6/Vohsw2tNlqf8FIbh7jd1rqtB7fjuN6v88vPDYC47
8oq02Y6nwm2P04yH4d3Ou59bHTtwt5nD0bv3h6HFf5bD4ngn9h9Sd4z0HQY7
Xq9ptoBOrHRrb0Zx+DD8F3n7ZcKfTvyPxDA2mDIMI+F+Tjv2d+E4jz4Jtpxh
SJLSjnt8uwtrEwotD1cMg4XGXFVxVhfe8IuI028ZhnMnUpM7prrwZ77/ut0G
h0HsHWGkdnc3vhalKxw3PwyJJyIhzKAb8+86bFC2OQzRiSv28t7duDydPWSM
ZwTqXuZvTU3vxv8dHa0n7hiBpXh72lhtN977vYxDVnoEBgLiG5fGunG7avx5
Y+URaLq3S69loxv7Vj149lBrBFabtgp58PdgBR2T0kSzEdB0CV+f3tGDx9vl
aT/tR2C6QpxFZn8PjjLnU/rnPgIsyrLyZ6V6sMbotBuf3wj80DB+cehAD151
rP12PHIElMx4mSZ29eAPlNR5s7QRSBn4m/5wSw++4vlU2jt3BCQuat2fYOzB
XMyWt1IrR6CHq/2uzHQ3/hFwKr2udQQapsXVjJu6sZOgyMjc0Ah88oq7Zfm5
G++MpewSIo+AgsMR5Usvu3GTRLO5EmEU7LSzWI9bdOMnHzJjLPlGASqXRXmO
dGM5Of9On52jkHd77OfwShceLrix5cORUagZNzIrLunCYafP6DeqjMLdpt37
47268KIetU706ijIvfxdFkHuxGldXWzgMApd0OVQnNKJja/lnrV5MAocLpf+
cl7qxPnOTiVZUaNgRD3IfDG+A9sva663po/CgXz9NAOVDizmtV9xNW8URj49
WsjsbMeewQNfz7SPgjfDfRefjTYsLfxj1m5kFESU+F4LBbTh/rfRh4IXRsEq
tJd9L71+Ueal1C7+MTho11g/L9SKmeoro27rjAHb2sX2nvEmnGOQ1B5qPgbl
x4hXR/SbsM2fRwL5jmMwOFOaXejciKumFAIZA8aA/ODrZvZcPfbnyPCKrB6D
cBPu66VvqjG/etCNMjQOF79cDTu59Ts+m1EMh/THQclTdmNnxDfsTpwWCb8+
DjvFJAqusn3BA42av+yejoNCQTPzhk8S/mLKLsNXOQ5cMkzX+6yjQe/Ws1UL
9Qn40bnJY3qyAkKCPAKp2pPQ5P3YUb+gByrn3tvesJiEaYXFTe+GP7Ci36Xa
5DQJ4iUjFNPhXrgmfIL07tUkDPUb/X1K/AsyCRQjreZJkDu2unN/xiA0fXHe
GWM4BVObOlf0GkeBWTBhhcl2CpJvPMzr1R0DxXsNzbfvTUFukWWFeuMYJJ6U
9jkdMQXL9taRXnXj4FI+NTHROQXniJdT+r9MAl+bbfaJK//A5WVFkoPsDKCZ
01OGDv9Acm5awT1yBlxYd0jcffgP5qUVr8evz0CzYsfrT7H/wCjb1oa7ZBZC
356/s7v3H/jHFnXuF5qH8jyJDNXpf7B7mFmZgOZhoXFj4Ar1H2g9cTb7YT8P
hozf9SLEpyEgzWCirmAehG7ulyGaT4Oa8Cv9ai0SnPdmsjtwexqYltElldsk
cIv+m3Du0TScJxNVXYNI0PErktf77TQ8e1JwdksdCVhH/1N/mzkNJanpB++N
keDEhq5X4Y9puJb6aewFgQxRMuxzlL5p4B5/4JwvT4aaCyOSArPTcJzgs9Gk
SYYVq1KLoxvTsJ62ZzrkGhkOeMZFXOSZAafK1ehFVzJcDndvsN8xA2/PpdlT
X5DBP8uQ9cWRGYgQri1OjiZDYbWMaorqDNjsYVwczSDD1ACXW5nODIiakv6r
yCeD2NpEZr/FDJQlKsQqVpFBU/Dn6LrTDIiLqlDVWsjw4HDSdlEvetwrzG4O
9pLhw7lHRgqvZiCt8ARJYIwMfywuBxkkzACrXmp6xwwZuNyP/3T5PANCba5R
hyhkUH7NTwvCMxAYeb+Zb5UMjh9mjn1snIHd/x5fe04lQ1xFrWPN3xkI2nnV
wG+DDPW9qSmjczPw/PnAd5FNMlAXn/QyMsxC2e2+2ON0/WFeiy27+GYhO0ee
u3+dDOYHlC6q7JqFy4/OufCvkCH4tLCPmcws9MVYHG4ik6HEjFx0H81CRylL
t9g0GWb/a1gI05uFP8ll3ORhMuwI+nAo+9osPKOIWBn3kEEnzde60WUWbtiH
3tZoJMNjbBU77T0Lork51TXlZMjqUm3leD0LxwNY2btyyPCXJEbcnzQLegk8
VW6pZOAjLqud/ToLDKkG0alhZEB7Wx9cL5uF2fkMSdunZEg0DpiKHZyFncru
f+Iuk6HJ+aZEAWkWXgfEHBE9QwbCyzNmHYQ5OFMlQZY+RAarovVaPok5uO+w
S+rgMglC2zoJR+TmgCHovwbBPyQon/l2UkttDjrZJtQSfpBgzy7HjOdWc/Bi
nLye+JgEgf27k4LuzIFxZvXxm5YkWIrrjAr3pvuzaVBnBhLUiJ7xS42fg5UE
A52GtXlwFBS7+bNnDkLEHcxINvPQ3txo8XtyDrJUaHU/lOdBNeS5cfvKHMSp
Pa++LzgPfr4ryXeJ88AVRc30ejgHV5hsQp8enIcP6Q+DmLlmIWRINZhVdh6e
MnRIyn2cgcoyUX9/xXkYjH62w1VjBo54Nz4JVZ+H6bpJmgH9HTHQlO4k29L9
YeM7V5unIHWJX688aR5m3L6fPSM1Dj3t01rnM+ah5+S8wsesMeDJrVav+zIP
TpF3iLmyY+D+3yNowfNg946F1CE/CprzE0eG+uYh7lzYnPfBYZidxNyMYiSo
Mjqh9aO6DxT7bv86HUqC4sgYxu+vqyHr4F0huxgSiB7iPKgg+hP2urlZBieT
4PZl8TvsSeXAx+u10JNNAgURj4cqtkUwiUK2ubaSgGugL0x7TwLEpGQ7pG0h
g8XBuL8RwSWYj5SXWy9OhjZqw3+P35ZhX5WiTfJeMgQJY1OfuQp8t6PiDRwn
w7jKiX/bfGuwFnt7UZcRvQ7XX2z3LmrCVIdlIjGSDLpnymhRYt34bv66kWwC
XT4CmUXCPXiCmSHRJJ0MwvlP7zPz/sFtb9mPpXwnw7zU0pW3C704s1H0qkoX
GZqf3y/Yd24A7xXfkWY9QIaLJ06fu5c9gGPsJOZfTpDBSLh+t/v2QexLOOTT
QX9H9dzTv+2nB7GFvPInZ9EF6C/Ob65wHMZtXmgpfPcCXL/L8cKjahhr1p9F
xQcXQPlhv0TI9hF8wla7jV1pAdpWHkJxxQjO+qq/46jaAnikLXdhgVG8d8PI
zkhzAVRELfwZLEcxX6QFNclsARZPid0WmhvFvsNW52usFsC3Xoe1W24MU4/e
DJm9tQDjZ89JFP43hidqnPeeergAwQ/27PsxPYYthFydrj9bgKCNa9Kte8dx
23X3/BcBC9CwTFyfvTyOy9a8L7bFLsCrTqODu4roetG7S87vFuDIp+3jhiPj
eEzROpH4kf69sfdmL+cEXjUx1EzPXgDzd5/mvh2ZwFz3z1HUCheA8vkZrUN3
Au+IUIjvL1uAbpaTxLNOE1g2d7/Gg9oF2MogvL7ycgKfbRMhCzUvwMdV688L
yRPYeIEj7mvXAoRrO3LKFUxgO4H1c9oDC9Br7D77tX4CP5SdnpsYXwAfl2aV
O30TOFivL9pnjo5nsbTn9r8JnOjccGbX8gKsoJD01KUJnB2MZ4o2FqA2089X
eHMC/8z8EmnCSoHFp8mNJcyTuKs+6fQCN13e1l4ezzaJp/6F/gsWosDl05e6
8+gyldMnXGo7BRIEnvuxsUxiXql7ULWXAuhz17nXdH8SF25MXj9MgQKFfF/D
5Ql8zM7kDU2eAn41waX60xNY/YWGSvQpCuz1qbZ72T+BzdJOjh87QwHOl78p
678nsONPqddNmhQomt2YzSicwF4j2045XqLAm9BvO8JTJnAoE/comxkFtHrO
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

       "]]},
     Annotation[#, "Charting`Private`Tag$11693#2"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 6}, {-0.7821916813427762, 1.89252301938418}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7708892823063936`*^9, 3.7708893309224014`*^9, 3.770897633404954*^9, 
   3.7708976734542704`*^9, {3.770897814005419*^9, 3.7708978344516473`*^9}, 
   3.7708978957471046`*^9, 3.770897967787518*^9, 3.7708984023167477`*^9, {
   3.770898491462438*^9, 3.770898509420899*^9}, 3.7708985606962986`*^9, 
   3.7709031218371716`*^9, 3.7709041085217113`*^9, 3.770904424271882*^9, 
   3.7709044686743126`*^9, 3.770915309957196*^9, 3.7709161270070033`*^9, 
   3.770920197707055*^9, {3.770920272113598*^9, 3.7709202898377194`*^9}, 
   3.7709216359827204`*^9, 3.7709335394096317`*^9, 3.7709336165670657`*^9, 
   3.770933711787076*^9, 3.77093393777712*^9, 3.770935301785882*^9, 
   3.770936168216066*^9, 3.7715349639201555`*^9, 3.771535360009857*^9, 
   3.7715354472748737`*^9, 3.771535906420998*^9, 3.7715359476078568`*^9, {
   3.77153610962481*^9, 3.771536135690124*^9}, 3.7715361723728495`*^9, 
   3.7715362155513496`*^9, 3.7715362627614803`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->
  "Out[386]=",ExpressionUUID->"bf3cc282-7b80-4d2c-ba6d-72bac1806806"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
JwWEWZHqmIq9nUg9HHBRkdhQY0VXT5bVGzi0gqUlt1eBJiuaMRYqZ+Vug5Cz
k7P2iBXt3XHiU3xiG/zdmVgypcOKamLbWa1b2uF7hqDRwFVW1G7IqC0k3AVA
pgsos2dFsnzRaiFWvcDjMi/a5MiKFm61Lx1a7gWyMOVrnzMrWrNrDO551Qfu
VyqrVtxZUXi9zypTUD/UVPnS7f/Aij4vlfiTzpMgwtLFT/MjK1JhW09X8iHB
Q3pbEd3PrGi7lcGYUTUJeDQN1CwTWNGhq99a9qFBuPpN6HF4Lis62GxXeXo3
GWTOcWx9KaT5+7ihN3+ZDKvUTe+8H6zo5ntduPKWDBHig0nNv1lRfo+7uvo4
GR7iloMD1awoi8HPN1twCLRulv+arGdF8q5HOv/oDMHgh6QBlg5WtDoUoS0a
PQRZKh8f7uhmpc07FgWHaobAvdFrXbyfFYl5vy6bmR8CKbZHO7VGWBHdK5Vv
6ogCKwkmCWfHWdFUjt/8bwsKVB/XV70+zYoyFE77jb2lwAPnAxftl1nRvQel
3DPVFNASlOp7tcaKcjK4H9VTKcCdt9P6/RYrKuFV4NdkHoasmTWPFGY2xPh4
pahccxjcfCb5CtjZUHDfyYu9V4bBQLY/9jcXG3JJ+mPo8nAY/pqXlpD42VCL
+BVXi7BhqPqXdW5aiA353rO7mpA6DJ8i4rvXRdnQ7dybXDY/hsFaPcSKTYIN
9br2GJfWD4Nmx9tlfmk21H6HZXdE7zBwPXFyl9zHhiIUz+r9GxuGAW5rXpX9
bOjmITO+iaVhyPh6MxpU2ZCo5vksE7oReH3mguL5w2xom8elD8ZsI2AwAsVG
R9hQ+f2Rc8M8I7DXTVnXCtjQ6SNRPn/5R2B5t0TX0xNs6Jj/bvkPwiNQVcx3
x02HDRVtbEph0RH4dJ150f8sG/KQSY5w2DMC1st/X0VeZEPOV043FdNkzaAx
7q+X2dDDS2EyQbtHgEup53OhIRv6MFC+f11kBEh1dfsqb7ChI55aQcsCI5B5
r6SwzYQN/VnykXi7nYaXOUOHfJvGR+mutnQOGt64mPaZu2zoYyV3kQ0jDS8K
ur1pzYZqmNZ56taGYbnXfY79MRsyYsxVqpih8evk4CJgz4a+tm8LNR0aho/8
VpxSjmxoKj2G/Ll9GApE9M5Ov2BDhUP3Wf0qh6FLXO1dngsb6vNQpVwqGIYV
mT2V/7mxIQVOqeHppGEQ2M/KpPOWDX1fkA6yCBkGtYOzx7m9afHuRfnluQ2D
4ZEu104/NnS345D/qM0whOh82bgbwoY0ynXp5rWHIe+8v4bSJzYU6qtq2Kww
DB2XHR1XPrOhnUa+7uE7hmGH6elFzwQ2xKs9o7w5SIFgR+pEcg4b2rfNzMrg
EQVy/muStStgQ62TBabUCxRodS+4q1HMhqo1t9jdFCnAG+A5VPOLDZ2Qdlrq
GR+CgGSZnokWNrT5kO+vz7UhyPjGI5jTwYYur2WXVigPQVPuylXnbjb0bifL
IRn2IeApq2rhILOhSYWYxScFZPDrtqpRmGND3gzZZt+IZEgn6bEuL9Ly4b43
OLF/EOpH1E6VrLChl2wa1eMZg8CxwFp2gY4dbb3PYnl0eRC8icmFNtzs6PoQ
6dqUPwk8Nce+ZCqwoz+RrrPllD54HXnv7cH77Cg1mePU/okOOH7jzuSFR+xo
Vjp27bVNBzAI3Na3smNHPB/3TjcutIN7wE3h8Ofs6GNPHL3/Rht4uF/8RufN
jopyv71GPK3w7v7BztpUdqSed7R08WMD6EqraA5/Y0fU13z9Z7/VAztFMWYr
mx01KqI644o68DKWsVYuZkc3AkKTRddqwEdP+F9IHTs6LsQp9u95JfgfIkib
T7EjY2nZQ99WfoLewqb3izl25NN8emvw4E/YlrE2G7zEjiq/FAz8miyBQNnF
75Wb7EhhXbhWm6EYgkRGLyhwEZFj637LLY88MPgzlH2Kl4hurSUPTGvkAl8I
ScCUn4ie5dXwVC9nQzB3NzlQlIhO4eFdLR6ZEEJf77CiSEQJSkJv9ARS4Cqu
7tmmSkSFZImeImbavupcgfYdJiK+G9sPy7AkQtgSZr8FRFTPqz27pBUL17KK
bZ6dIKIdwySlWodoELQpbPPXISLBm8oWvG6f4RM1K/LXRSLqV3Kv3CMWCkYJ
3xj6LhNRxlbDcye5YBA2/2q1bEhEzH2+oHQjAHpFk+u5bxKRlNrIpMZdX4jo
SVCRNSWiboltWnJWnnAzLDb0uAURRTtNf64vdAORK1EbN6yI6MB/nEkOhf9B
77YIs6cPiKg89O9tQpwDfG4Iq/B7TEQ+Z0ykPc0fgUghYvhgT0Shp+x//2U2
g4g4KoQ70vg75LHYn3kCqmU8Vx86E9EXfZGiQzEncbijWmGSKxGtubDmu27d
wkK3SUtp7kRER477UFZ/F38676mS40lEScoR3NXtj7CQmpLNdx8i2jdn5yV9
1g5/FO9K/elPRN+eseupv7XHApyu1IpgInI+Pqj2XdQBh/2V3lsfRkSMpgTe
m9ueYQFyo1lrBBFtyKjsIt96hkPrnkX+iSYiZR3NnWIszzB//u6egXgiImjZ
av5jc8AhMZU7R74QUfB2h7P2d+0xv4+NweRXWn7K9Dze7bbDHxx2BsxnENF1
8uPb2RaPMJ8Zrl/JIaKxQr294uguDj57l/1fARGZWnR+yY0zxnyHuHWYfhDR
/fbzL2fuaeOgPfluxFIi0pfkLRwO1gFeosnPbb+JKCzh+JapvDkELjFv7qwm
IrKJIfNioQ3wktLVReuJKH2j0d/i1DMIqLnqINlMy19A76EafRfgyd3Kkmsn
ounYxnH1f27gH5U4o/SHiF6LPgyrS/CE9/bLVkcHiaipWPbkyuMA4DKJTDgx
TEQ3D3QG6RwJBr8zp8hnxogonzv+0C/5UPAVDblxdY6IaGtyi6j7Z+Bg0wq7
uUREK2IqfFn20eCzMNxmvkpE3HmN5/Q0YsG76uAFGwIHKvytcqdhMwHe2bUj
z20caD66qNPLNB1YjV++9NvBgVIC82aolzLAU2fv92BBDhTeY5wM/2XCW5Gn
qjFiHOikCNvZ99PZ8KaCT+q7Mgfqeqcrj1QKgTGz2PznQQ40/X0nhSP0O7iH
W0RVqHOgo5KKsR60/9XtcY5A6zEORM/BXDI1XwKvhAyIk/ocKI1a8yUlqAxe
Pgqa3WVHi3d2OVDVrBp0y5T7+p9yIIe0SPl/h2tAgL+pOsqJAzWUtfdu8NRC
zg+OOLFXHMi0mKMEVdfBOIfHlb3+HIh4femOiUwTXEt1/C6fzoF42QTWG9pa
4QDV2P3IOAdSiOrh3HraA/SaG483pjjQrQJ1VeXZHmh6/8n4xxwHuv2k0U3y
fi9YH+48BKsc6EwxwxtR4z6I9dAbO87KibjAeVNSawB49p64oCvFiarKyq2N
bQeh33FQgyjHiXLTXdb+JA/C1zoX6ToFTiQG94T7BwdBx76Y7sJBTqTy/VHr
XT0y/PfrYLa+Nicias0/mZYaggkzGYHr5pzoba+8nWEuBYwe9OyzvsOJdpzh
2lc7SoEqBz94eZ8TpfzS7bskOAwJ3ot3Yuw4ER9lt9hbp2Ewyf2ZO/aaEwUp
t9SMKIxAA35Sve7BiZJWTU2Mr9HmhRqpPk5vTiQ4uniw+NUICA74MKoEcSJ/
mddJos0j0Mp6/fLzOE6kJBbvMms2Cse3c9z1SeJE947KGYi7jULGLvw8MpUT
RZsrHt4ZNwq+Kntjy7I50UdyX476wChsaHbltuVzIj36CTOT9VG4r+NdPVLE
ia7cYz+hxk8FnZtzs+zlnKjpb5Tokg4V8u7EM+6qouHt6JJuuUUFSVtDgf11
nEij0NTNwJ4KgS/Y5Y810fRPzNmdPKlA8PgBl9s40dL56/ma4VR47P/4smUX
J5rfYZYY8ZUK/Z8k7j7r5USX6l7vCCmmwrmEjufvSJzoMnXTQqqWCkXf3vmF
UzjRlozfzrNdVJD7rhmbRuVEPlNpLQQKFcLKZ3LxJI1vrvZbp6epwNwYW908
y4nWFHKSRP5S4emfK31Di5zo+usHxc5bVKAMsc4trXCiL8zljXcYx+DSdBEj
6yYn0hK6qvaHdQx+rjwSECJwoeZXPx+3EMdgP4O4vDwTF7KrqtupzzkGkZzt
oMXGhZrWP8xepskcAp6X9Ti5UCZOIf+h2T8XP3LXfBsXep+7b22Q5m9Mfvq5
/Q4utH5g5K41Ld61wzF+HoJciOeS9aunNDwVxwxiw3Zxof79EqX/lqlw4BxL
XooYF7odcbOCjXafuKvfq4v3cqHNxWtXgoaowGv2sK9Blgv91jcwjOikgqv1
njmSAhfi+PuuW7KGCtNPWxkXlLmQN8dBXoUiKhi7eggwHeJC1z75Xs1NoUKd
l7r8Tg0u9Ki2VLIkjAoaHyZBVosLoWcToqffUGFnyqW750/R7itT1Um+TgWP
HKYXJrpcSIOQH7h0jAqLJQV+the4kCAvxdZXhgrNraJ5H65yobiZr9KX5kYB
9TdXJxnR/P+vQusOp/r74yRFg7tvJCsaKoqQed4k0aBEJFGSVFIyU/qGyApZ
UfaIQiV7HmTvTUjIupeyykjld39/vp/nfM77/VrnOed5Pou3BN07JtC7ySdf
Ckx5oMjg6n2V7Ank95e5ftCSByqzDfaY2k4gLdvQ2rc3eWAlIZDr0JkJtH5M
xd/JhrXf2oRL9YEJ9KgxiEx05IHxM+X71cbG0d1XcqIanjwQJWIsnn1sHB3g
HRoj+PDAus53ip/5xxHT3efNF38eSPB/mdPxYwxdvTlw0CmUpc+OAgn9kDF0
XsEdvU3kgR7h/8J7mkcROWMfh1MKDzx5Hpe2+nIUtQp3VR9N4wFDXKHAYzmK
tLn26Hz5yAMjnkbcW1e+IeWeJhNCBUvfAoZOH+kbEnXgc3Ec4gGuQekmxDeM
vk5WqBwd5YFSeKYn1s16L5pYsxMmecA1m3tOIXgIUTWw95sZHojZFVy4mWsI
cZGvvRj4xwOL6xQzU7q+oB8fPmSr7+CFp72n+hdEP6PC6eMzPMa8sD/v+cnm
Xc1ILiDKt/YSL+xtetH8caQRfZSaE3e/wguCqzuOicU0oDf3Xpr8suKF5fTf
WlyUOhSxPF3X78QLb3Nc5k/9+4Qc1wcnpYbxQuSlVW328iw0nzyOzCN5YWFF
oP4pykQ2x5X6t0fzwrcf23Sn/8tA13xHiYFJvDCmssJvH5CIhvYpZGil8kLo
A7P7rxSikUnTM6116bxAjq4xTL0cgnptRr4VveeFgkhreUdxD5RzZMv41Wxe
WCSqOqvPWeDWTD9+qTxeaOq+ofSp3gOfOjeUM1nICxsNMhpVAkKwRrjP9MUK
XqiXSRYTv5iIZQQGLqi3sebdGZZ+g5yF35Uc/LXayQsaFPXkc+Y5WMLMMyin
lxfe7+rmyk3Pw6IJkjV7hnjBwP7GxHGZYkza43aYd4YXgoqyLhS4VeBlvpCN
NhsIsM9TfjNbbT3OvanSdYKLAK6RU86+FQ3YvmgiYfcmAkRNnd2RXdCIZ02U
VYe3EsAZWvhTopvxROyYvT6VAFdbmpJkd7ThpNlA9UN0Akiu+2Oxy78Nm6sp
Enj4CJCnt71t/0obHhwJSKsRIMD0u0/4clM77hY/MqIoRoANgi9/5F/qxKNt
1kdhFwF+cbv9l1zZiedd45OO7SFAlu6Ixba9XZi3e9P1M/sJwOcUoePE7MKC
7qjWQJI1v0AGp+Hxbrxf0n7vxYMESG6bdEqK78ZaXl+mrh0mQLiye+09nR58
Xpp0+pYcAb53F9xixPVgi0HNd3ePEGA8rFK/YLYHu8l9uPtAmQCeURq3z3n3
4qCR0bbHqgR4n3DQg9rai2MC+GS8gAB9YrHpwtTPuHDc/VeQBgEUxMM5OF98
xrXBeefDNQmw8YrOsd6Oz7hbdTrvlRYBVurvfZrc2ocXwg1cXp8iwD3n1Nf5
9/vwuqO+/Wk6LDwdGuft0/owYaZUOfMMAXTUc3qu9fXh/cf3rBXpE6BQWmVx
TKofKy6YXC4/T4BjG8/z2Z3vx9qxz8urjQgwoGvKL+PSj41OVos2GhNgofT2
jPirfmy59NujzYQAP6nK3ScL+rF9otRYtykBzrtR9JM7+7G7roXmwGUC/Gkp
l5X53o+DViNShs0JYOtrF7i4bgDHpjRxTVgQAE29Kp6lDuB359bdnLYkwGpR
tdnOXQO4eE2uYc6KAB+33zAPkhnA9Wm39i/dZOkn/fanguoA7jWMe/bHmgD3
+8WeiWoO4HGOrh/sdwjwSC1h8tTJAfzrPfeZjbYs/b2auItPD+D1JqqZW+wI
4G81dMSOVZO47EgkBwLMrtPmcDwxgIWzU+zoTgQIi9ZSqtUYwJKXBzoF7hPA
ItVv6bbyAFbeQpQTfUAAt6HC4FuHBvDJ/GMvdruy6vecaVU7B7Cxhcvy/v8I
sNaSLOJGHsBWhPcXpN0IIKtuwp/INoAdi78VynsQgBI38fvgVD9+YrVNQMWT
xe+A3c2DHf04mHLaVf0pAXb/x3E2Jb8fx5W5DR73IcAPi/buVyy+31nnotN+
BFAT+XiV8rAfl2ybitN7RoD0dZdj6Mb9uLFSaJ1RIAF4ujpvpcv24767+lcv
PWfhuxPw4zNPP16sLRG3CiPADGmmUaCwD693mPe6/YKVt9hbL9X8+zBJZPfk
vUgCZPbD2g6TPix1P+itazQBiuzX5gR/fcZWe69KhSQTYNOXFzfkt37GgptC
Jh1SWP6ln3pq1N6LO5gV8UZvCBBf4nO6KKwXq6aLUgQzCJBkpatlSe/FZKmR
5dRsArS4/JFQ2diDSw9fqSj9xMIrFXs3P64T21OfP4ivIsCEm3g+t04n3rtY
dvhJDQEOlF4uPPC7A4fmCadoNxDA8CJZlqbbgW8oDvl1thMgIrt3q/d0G6aA
mQFzmAA9pRYfDf414XrhQJ6mbyz+U6sK6SpN+D92XPN+jAAH5eF2h0sjZlYI
KjowCPA613wqaKEe42ODgmxzrDyLysW+GKjBN09emqSyEcHvTMmDwLhyXH7+
4gM1QVZ9SrxaVu41rg6m1p4SJoLGEteLj4KJuLG5hWIkSoT9k0ZHb/PG4V5N
jXc2u4hglH/B3J0WimflDgy/kiTCb8aaHJ+nFVq8N3Eg5SARwsSu/NA74Yb+
vIt3+ShNhKEzAXwZx/zRxt00Sp0cERZE7uomdEcgQfqa5qIqEVI1TfPKPF8j
sXMFIexqRCBe2sxvyExFEoF2Q1uOEsE7USE7HtKQ7MbJ+zuPs/qN7O9ZK3uP
FI8mVEtqE2H+dQOW+/UBwX8mZMWTRJg6salXZN1HdGqpNf2MLhF2hdeQlzmy
kZ6M38rFs0TgG0/5F76cjYzuHNO8fo4IB0Grsm00B12dKPjqakgE6d1myD8x
D1nttN/vc4EIn2qZ89UO+cjGTPJ+6EUiTHeFPyGjAuTSk0BKMyPCO6HAD+a5
hegx+ZJZ7hUiOCctz++2KEJeuvT08qtEGHaVuPmEqxj5+7UtN14jQk/ufcbF
xGL0vMbvWO91IvxxN9UOOVyCwjk0g7/dIMIE1rlJKC5BUYjt649bRGi54ypf
qFCKEh4U7vt9mwjfGI/eOGeUotQ8e2fOu0RIs2+rPUzH6N2CZBXhHhEcNp/4
0OuIUbYUgyhgz+rPey1QtxGjwluJprsdWXgMVLorNpchnHIpTdqZCH1nb8kc
3l+GKr/Rl1VcWPzmXBCwO16G6oXaNbQfEuGJqL+J06Uy1HrR/7n+IxZeviYd
BZsy1P1Cc9DsMRGUWte+ZN4vQwMdbPtuubP4RN88+/4rQyO8RU6OT4hw8Ur1
uYzHZWjypEOlmxcRZnwPTIg9LEPfn0oRn3kTQbHO6p7yvTI0/4lxKcKXCJXK
24tmzMvQ8lri20R/lt9Ms/iVdMrQPyXTpXcBRPDa2flo++EytN55m0ZhEBHu
LL27EUApQ5uy24OqgokA/6JGd37FiDDr/6U1lAjdkOSj7YsRbf9xiYFwlt8C
Dh/zl8BIwIrdaSKCCGw19ZVTuBSJJhV9mn9JhMNyRUNWJ0rRniEHwr8oIoxc
k4zirC9BMkbMN5R4ImjSHnSkpRajodpYnb8JRAjYKL+phMTSV8FgYSyJNa96
i/xVuyI0zl+mnJdKBM8NT128txWiED+H4di3RBCubf5Eu1SA4I+El3c6EdYX
r7tlFJGPXn4Ja7nwgQhX/Sd7dyzkouM6J+3VPxKhJrChKY+Uy7o/s/Hty2b5
k2/Hg0N7c5BO3C3zP3ksfcSr2lYUs9C6q2q/YjARnjpU39g6kYHedyxGPi1n
4antPe32Ig2ZaKSr3v1EhIykhMI8uTcoV5zurVbD8nOb7p6t6knoxuQ0/2gz
S49oHCIrGoJoFxJwYysRTj8aCzOb80UVdYYWOe1EMHu5JE0tfYQE0ioyvLqJ
sOfwo9eX2Wxx6+0I2DtIBLV5iVUt72jsOnh6jDhEBAu3K6M2xAQsocvh+3uY
COvW81uWWSfjJwdtOhrGiFAQ0JHsfCodyy8ctbT5zuLDrkbdRT8HxzjP+GX9
IcLc61On565VYGsPzR6V7SQ48FLOFlW24WXftgmBHSQQDcwVXzvTjj2DTZZX
BUlwMuR8usJgO46Jv8dXKEqCufozRxdWOnArjrkoJ0GCLXOPnqrLdmOZP4tf
JRVIYO0cPeqR2YfLONxntyqRoJA9Wi4P+vGpzVvZvyuTQOPX7e+ZLf3Ygn+n
aBqQIHxDO7ROD+DwI7oWu7VIQAiWVrcX/Yp/26dMChmSQLbqQFB1/jD2eii9
8s+IBK67Gim/V4cx+UkJ96AxCUKLYwzyVUfw/pAOiShTEkQNlSbgihFsmrlm
vc2SBOTqicBrld9w+XfDOYIDCbRM7rcHvxnDOr9G2GcdSZBinC/E+W0M9/25
TWpxJoF6Xapj5vZxPL/5icyzhyTIm+4ZSfYdx2ISHxy4n5CA+Fnv1WPTCfzh
kJLXpCcJZDgkc449n8AqCtXhNU9JUB2VXSXyaQKf1xrI8/QjwZ+lVj8esUns
bcn1mz2EBJ4deymn+ybxtbodMdxhJBh8E2Dyi4uB1ffLqBNfkEAh66/kdTkG
Xp275Cv8ioV/bvv3sGcM3KtvJ7knmgSXqQyzE3kMnJ3n3S4VSwIrRtetvK8M
bOOaxY8SWfW9pTdp+5n45FBtqWYyCRRDjxruO8vEe44OmuukkEDTKTZU356J
R7i40y6lkSC2XY8cnsvE+Jag7rUMEtTsampJ6WLiqGaZBev3JGh6pkE+////
FUNNlR5mkUBytfn5Q4kpLL1k99UjhwQ2Ud56M0enMI+xj4dfHgufA9/rhYtT
eKo4ZndIAQl+mA6JPb03hWuFshteFpHg7vC4T8rTKZzsXncnoYQE7K+3Z+m9
msLuY4Pkt5gEftd94r0yprCZ1s+8zHKWH6/43lcrncLKadwmBZ9IcFFm2d2t
aQrz8QixlVeRwEDZaO+x/im8ePdwUm0NCW5cWv/Hd2IKt3doa7XWkaBB4sy7
s/NT+L2c2XRPAwkC3d7SI1ansH+kfdDXJhKM/Fckc4ljGlv98Tk80UICuy+P
ROO4p/Exs9jeH22s7+OM91zmmcaiFdkPFztIoC0l/S6KOI3XxOqF/3WRQCrX
Qc2API0Hnn6t5OwlwQDzQKgPqy5g/rTa2kcCeZH1rgqkaRx+etNW6gALf57m
kgXvNLb7IJQpMEgCr26G6JbN0/gMWdZAbIgExU+faEhxTuP9jidW9o2QYFHw
RFXz3ynM/dksWmaUxdfqmvTUzyk8ruSgpjROgkdRM8iTOYUrYnzH1CdJIEzt
qogenMKx7HE+J5isvLTW5cq2TeGHFjkH9KZZ/Qr2KelUTOELNfVtF36QYL7k
cchk5hSWkxhyuDJLApes87s3xE3h2ZlNpXd/kiDAbtO5Nqcp3KQnbO68SIKr
tF5r9ytT+G2O7IbHyyT4vDGjqkR7Cl99cFkn8A8JMg+VF/dTpzAMOsyH/yPB
lU/XFytWmFhAzS88ho0Mrd02ySoDTNy9IXcwYz0Zgq/voy5HMXHWjQb3nA1k
MM6y8lB5wMRBjUO7SrjIkCDpWS5ixMQngjffadxChgtdFKeOrUxcsuPKGpNC
BtuTqteVbzAw5NiuttDIcNj2AF8vYuDKU+5L2dvIkMfZx3mBysCNDxJnHgmQ
4ffRaYFtJZN44PPYV5IYGdg50YaZtQn8J+xmmaIMGepqnrNbnB/Hjw88KBaS
JYPAgk86bcc4Xl/ll79enrXf/IaLP0bG8Jaf6R+aFcnQWHP6vJD1GBbQm4kz
VycDWVXFbqvDKFbisXfzPUsG3ZNGjfevjeDS5Ceud86R4RFTVrNeeASrq4Td
1zcgQ3X9jYGg/mF8wjrXVvACGTbf2X0pXHcYG9cvX/l4mQxeOsQiQekh7OLl
qt53hww6O+f4VRv7ccE/Lw6JADLkt/+9oHetHQfMiYTIB7HwVbztPfyJ9f4d
LRY9Fsya/1lwxlORNrypfl7tcjgZHL6vr7TFLdgkzPRxeAwZ+AYNBUpr6vG/
fXJ/170nw1rxgMhhqXLcLtjmT8gks+4X0lSzDWU4hWgtIJhFhmnxZ3lny0rw
maV4JYU8MhwaljZfky/A8RVbXe5gMtxzt0OzNh+wY04qt2s5GT7sE7p9LTId
n0g9Gun7iQxmIUce3jdPxfPP7ucn15BhkOt2XIlgHK5+TNHKqiNDiz6XvLp4
BH5l976nrIEMe2oDR35KBOG7lieuNzeRQbU4id015jH+TW00Nmslw6/Nd8k7
HA3QtlOPvRhtZHByVuqQ3f0QTatupy11sPA71z4u2vwMhYmdlSX1kiFFbfQp
G380Gp8pttMaIkNmHyOF/Ww6Khwx5Dg/QgZsTbzGHfYeBXbNB18dZfltWeXY
8auZ6EjRno+PJskAvZ/Z/ZyzkY9X6Gz2LBnkLby39koWItP7Uo8r5smQs5hX
GeZRhKSt63lbf7L0+FhlKN1cjPrOsklNLbPmF14NTNdg3S81XpUu/yaDXS5b
tNSRMuQhL6ez4S8Z+D/PWzbVlqH9O6xvi7BTYMqJK+BQXzliI2z8K8lBgfKT
6+fHjStQ57oEf2VOChR+1O5T7a5ArpM9aYbcFJi1FntVWPwJ6fXfU7q2mQIb
D4bzte+uRLuatzbc20oBKynFG3bPKlFz1lHmMyIFztVeVFDTqkLuKtljz8kU
EKxRtB17VYXkasSGw6gUGJKU0JBnViHmmbCBSDoFJo6KOxyWqUYxfZy90XwU
OHngmH6/YzXSs3DsiN9OAZu44VKJnGq04cd4c/IOCjx1SxQS/VGNCp0M698I
UeCevY9NuUgNus1eW5UhQoFDZoMHuc/UIGG/I+WZOykg/lXk/m/nGtRJeVOc
I06BxcyR8fCoGuQdw5dfsJsCL+h+r4cKa5DyHt+skr0UqD8kZNvXUYNmM3+/
K99Hgcnr3/2eTtSgJKVbb6sOUCC9+2Dt1K8aZFTVn1wnRYH8rmT3zWs1aIvu
qfimQxQ4Fk1InFpXi8p6i6PaZChguy331XP2WmRvfiCiS5YC1bPVVhyrNWjP
dHTIZ3kKxHwrDjw+U4MGHHgCvyhQ4Mqdt4LXBmtQ0Noj32ElCjROPUy7WluD
NHxmPMdUKOAtdOjcyYwatEy67MZAFLC8/jtf7FkNSotqffhdjQKMJyacK9dr
kOkuNee5oxRokjgy1qZSg0gfMu1+HaOAzOV67wKeGlStIHpn5TgF2DpiEgr7
qpHLp+Cbf7UpcEDewXIovhpJnuawZD9FgbhaPm85i2o00m13hVOHAlT6IcU6
kWp0gqlvtFWPAmrH5/17AqrQP7uqc0R9Coxsi2S3Ua1CH//K6lLPU2BtbjrN
kVGJ+Il0zR3GFFBmj3nIJ83yy8unaiImFDA+6SDf3vIJuYstK4ubUiAnrfm0
4o1PiCH/WeaAOQV8zJKTjQMrUFS5ttQhCwq8CZDcJCtQgc6cLJSQtaRA0Lee
LRzJ5Sjf9JWIyk0K5KWTeyreliFvz0u8p+9RwG0paaGRWIKUeZs3nbVn6Wkt
EfP1RxGajVDdYODI0m+wI4NYVYgM04X+mrhQQDr/q8qjS/loV8cw09qdAi2W
fz9rHs1CVcKW1f7BFNjHrnWbnxaHhL+28dmEUuCftJfkVOJL5BKtcls3nAKp
WkYPv2wNQwf5qRTSSwpwRCr7iTp6oChy5ZUX8RTYoNQg/2LMF9tvEP0b/4EC
xBvjZ1XT3+GWymdnPD5SwO7O3MuD/R+whMdKokU2BQL4I/f+vfwRD621ntid
TwH6UskYxSYHn1r5LyIdU6BYRUTjgk8RFpv+IpPXTAF5u5lmz+ZP+L+32k8j
WlnzK0XcsvavxH1WOX332ykQdunK+EntKhw05u+m3M3iW0tiPhpX4z+DSi3l
XyiQ9OPjWamoOmwYnSKa+JUCCYnTGq669fjjRbLjk2EKPFu70Ednb8BWvUyB
42MUuCOcp/DVtBF3tkXebJxmnRcfEksd1rVgqSDO0owfFPhNPvVpPLkF++rY
EgNnKdA6dfPt452tGBq08s/+pECP533f+bJWnF65xNmzSoGLoQ6Ge6bb8EaP
qxfy/7LywpCQeSDTjs3VWtIj11j+n3mSani/HW8rfX3OhIMK/LaKm33ZOvCT
PIP44U1U0NpdXzy62oEPtp30ntpChcv5bL9slTpxP1Ptzi8eKlT8bju65NyJ
pQUlVbjJVEjt28uo+N6Jv8iLiZGpVOD8/m/PolgX9j7Lv3kHnQoP/3Lpr17o
wl+fbPh8cDsVqFf2pRiWdGHfmD9YcQcV5Ep/u0ZPdWG5/PnXGkJU6AlQjg2m
d+PhtslnOiJUEOg7tySp1o39pwbtjXZS4bRk4/ubVt34CGfXRXNx1vrf+w6q
PuvG3wQb1K13U2Exvkww4X03DjhSvtdxLxU+SVhcCWzpxop6eYTH+6jA9lhZ
cG26G4/fyljyOUAFqz32xcyNPfi5Z+JgiBQVjltMj54U7sHKsZFV0YeosBI/
6S4g14Mn8wPTU2SocEs6q/K8dg8OafcMyZSlwuAhJYFfF3qw6vQDlyJ5Vv/n
aWj+eg9mct67UqVABR+51b3adj04TMhKq0WJNQ/NcfuvBz0YFEylPqtQoewc
ejnn1oOn9fRp3xAVGEca7yl69uAX1if+TqtRoZNulN/AqtW9YHTxKBV2/TpT
Fe/Rg3/EyjWwaVLhxe9ipYJHPTiyYP/HTVpU4E6K4OR16sEaHaKRlBNUSIw5
YBBn3YNnp7c9FjxFhUxd8+SbZj04agPv9T06VMj6w154S7cHHxfm1JE+QwU9
/7+x8co9eF5h9bCyHhX8PydlbNrdg2POzW3X1KeCZmivezJPD9a+PbHuzHkq
hKYe5rZd6MY/vb4wLhhRoXKvjL11VzeOi+tovWpMBbvi42ovsrvxycK6vNsm
VNB9tCA/F9SNFztwjJMpi//rbTdcbnbjhO85nm6XqfBR/JW0DEvvZeGEc2EW
VLD/bHxTbrwLJylGKMZaUuHpZmEOj+wurKsfIPLGigrd4RpeHI+78OunLjPF
1lS4YRnVkMLThfXi73ZX21AhkiuRs7WtE/8ttCxpvUuFO/1afLLBnVj/h57f
qD0VfgpdGy7f1InXNmrf++FIBY3IYwazFR34rQi6sOxMBVexJeEbzh2Y3WDf
7i2uLL01mwxO9LfjdBsRHtp/VChZbS0q8m7HRt70X0JuLP39nt7zYeXtXRHH
JxlPKqgrt7XquLVhE9EB04vPqODInVSg+acFv7vbFK0eSIW9pbXHOJVbMDsu
Hdj7nAqFOvdvPnJqxq8vxhsvh1Kh3om8p3W4Ec+GWp4Pi6KC8qDzRX3POvxk
49zpljQqsKeMBu2lVOBugxH/3AwqPNq54wuTWo73JnU0RL+nAkfsnyu6lDLc
DLna1llUmKxAs4E8xXiby4Nj3EVUuGJgfmEkMAunT3OqHK2ngpM45ffNV874
n+LSA4lGKvxW+HvF8eUNdNZnspDYTAUzvjCuEyo+aFG84chQGxXcK7ak7nod
i8As6LDrZyrkXnDhMYjMRJ1t/PvzJqlgOJz7vausAq3mSm3ft5EGD6ztLG39
OpBk1GIVFzcNxk5d56NIdKLLbiV3xzfR4PljBXuj2k5UefJkdTwPDbTFh8Qj
ObqR/5Cl7TYaDQ7eP32q3K4XCWyKqeEUp8Gm4UuRGw59QTozFve+7aKxzuPv
QiGVX9Djzn07yvfQwGfVy4NkOIhGYwruPdxPgwM+DMsy568oXaZrx4IMDSZ6
Z4K+dA8h5Utb7IfUaSBs1qNaxxxBNuodgqUaNPDYMm/Rtvcbitv9su6VJg34
3ozXclp9Q+vndwsZnqDBOoUfG0aGv6FGr6P1TWdp8O/rBoOF+lH079Ymh7Rz
NOi1jZqdWDeGDp5tE/IxoMGyxh3ypMIYCt1u5qBxgQY/Y/4trSaNIZMPLsJF
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
HoD/B/T/Rbk=
       "]]},
     Annotation[#, "Charting`Private`Tag$11740#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
6bh/XvsXurgO/Ulv+mzJzjhIuHOvve460Lk3CuXQIVA6b+L69jpN71Nqq2Z6
Am9DbcS37q6DkhZjcPz1MDCTe/m41G8dNEK1y1YtU4Fyv1LiRMM6vA+nbKqv
FEJ45EW3W23r8GtQSuxvYDEof21qDu9dBweo7jkgVgopHANu81PrcMJD8dD9
C1/h9of1lmyODSBWb/W8kq+E8Ylj7ge1N+Boa5HrXf5aiOYpazO8ugGHcnbK
19fWgprCeSk/0w3QOPPtZLlLHaT76raP222A2KZiHVNzPdyTvH8wNXgDTOTv
zEmY/QQh7UWP9ugNWN39st924yf8cHbrYErcgHuRSfw+Eb9AutrP0yJng3Yf
LHb/9aURpi3TOkVbNiDR7Fj5zrkmiA84JKPTQ9Nd30mqR5pBKy/fy528Aflj
WR6e9s3wkbFKpn9uA2IEPjswjTWDyUGNZxzrG7BryOroqd0twHWlpUuRcRNk
glLTjfRbwD5p8Fnstk04TqEqKZa2gGj9ne564U2gyPklj1NboOnvzKG1vZvg
lktWNRJoBQ9BZ+8D0ptgxOI963e+FeTObnZfO7YJjttgu71NK5CtvA/7Km5C
GIvFaaawVggNJj0vVN6E9gtyk6iwFeYGBGX59Tfh0oEW1piVVhC1WD6223gT
ftVobJfc3gbao20K+2/R4npFodcPt8F/d3OV5Gw3IUvqhflB1Tb4MPXq/Cmn
TehIlbwdeaMNeuxs1c4/3YRccaJ7uF0bEOfVL2k+p82PLjZot0cbyDvvv6wf
uAkRnxTX5YLa4PYq81WTiE3YmH2qVPu6DcLdKEZ33myC8tkTm/1JbfDtX7mZ
/btNaOk27XyQ3gZzXvG3XLM2gbSwYOOR1QaiBLd7XvmbcLXujzHTpzbQennd
zv/LJgiHqauv0+JP2U86hn/fhK9+/5pvZtB4X/G5vvm5Ce8mWCOOpdB4eeee
prZvgsWY91H72DZgjWz0+tS3CU7DoYM8wW1wUjDrRdEILR/jWRcBLxpvnF9A
xfQmVJ6YFnvmQOPdbRVSv7gJnQ8WWXVN2qAy6UJk6+YmfM8ovOyp1gZ/9+2N
7WXegqXmkP3bZGm86XQJIxxb0Pl7KJeZVl8t6f6Ume1b0FXKLHRtuRXcPpWm
L+/cgpu3jHyIna2QeeT1RzqJLag/rqUkmNcKPfnOn4mHtmDZ4R+Pb1ArsCro
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
mMDxIfa8mN+q3b/ShJsbXtpWT7D9OjC7sV+biWVCNuQnTVIg0rZ11SWKiQN0
bxGfTlGAN+1lfss4E0PViWy93xRoJTUs1vq14MSS+Q2t/9h6NJlbv0tsxZwP
L5tkL1NAsO3fY7+ZVmypVpf4cpXtr8r9uuNybZg//+NZUw4qRH0YqifmtWGf
LMPY/s1UqJG1cZj60o73N2j7j3NTIb7S/s+nn+24c0ztxh9eKnh4/TQzlOzA
B4WkVTaRqTBmc6rnwqsO3H1k1y4ylQrEj7FzcXUd2F9v2xZBOhU+CZjOZa3r
xL0+G9v3b6dC22wmFrTsxAExS1hRkAqPRlwkzYI7sVz2zEeNHVQQ2ui9SSu7
E/c3jDzRFaGCKw+ztbW3EweN9zgZ76TCF2zPvX5DF5bfwLxgKcaO131sB2N3
F/4hVKVuv5sKzRIX/bed6MLB8oWSLpJUyLn0Bc9f6cKK+lkEzz1UeKWloGLs
1YWH7ZLmH++jgm3svOvhV134mW9cT5gMFXZKscb8U7qw8puXpdEH2PHfr9+i
U9KFR7KfJsbLUsGtKPuZK7MLhzX6hqUepkKajpfIlsEurDrh7pZ3hArr2i6/
Xf3Vhcc2OF4qVaDCua0WT/UWu3D4DpsTdUpUiPjVv255tQuDgplMuwoVjs8b
oBWObjyhb0D7gaiQ6H78sd6GbvzC/uTyhBoVvJ+628+yz9X9YHDuKBXWrjXb
389+fvKNXNUaTSr4vGAp8rPjv8zZ+3XzCSr079k1E87Or9Ek+pJykgqN25VX
jX504akJfk8hHSrwnEyuMG3uwlEb+a5K6FJhcuBOx7uiLnxceIPuwTNUeJD9
NlciuQvPKPw7pKxPBemu3IM/I7pwzNnp7ZoGVDAip1f+uteFta6z1p05x+6H
rLH0fosu/Nuve9TEmApmh103JUMX1s6tyLpuSgVOzwJvy8VOPNeEY+6YUUF1
g33Yq4ZO/O5nhq+XBRX2zDHVSPGdeEH43dlwKyps1LhwtFSrE79XjFR8Y80+
F9uO1tM78WmDYJFPNlR4T1e9/ri/A3985Pbrmz3bf9Kb6x0cOrB+7M2WMge2
n2YM9jD3d+DlXOvv9TepYL7Nm+fJVDs2mNQPHHRin+tfil+52o5XObUcJ12o
0DE4zod3tOPPIshkwZUKFps+H+9tbsNrDffs5vagwmmxu+P6R9pwooMIL+0B
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
       "]]},
     Annotation[#, "Charting`Private`Tag$11740#2"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 6}, {-0.8826895986340245, 0.8797869340282949}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7708892823063936`*^9, 3.7708893309224014`*^9, 3.770897633404954*^9, 
   3.7708976734542704`*^9, {3.770897814005419*^9, 3.7708978344516473`*^9}, 
   3.7708978957471046`*^9, 3.770897967787518*^9, 3.7708984023167477`*^9, {
   3.770898491462438*^9, 3.770898509420899*^9}, 3.7708985606962986`*^9, 
   3.7709031218371716`*^9, 3.7709041085217113`*^9, 3.770904424271882*^9, 
   3.7709044686743126`*^9, 3.770915309957196*^9, 3.7709161270070033`*^9, 
   3.770920197707055*^9, {3.770920272113598*^9, 3.7709202898377194`*^9}, 
   3.7709216359827204`*^9, 3.7709335394096317`*^9, 3.7709336165670657`*^9, 
   3.770933711787076*^9, 3.77093393777712*^9, 3.770935301785882*^9, 
   3.770936168216066*^9, 3.7715349639201555`*^9, 3.771535360009857*^9, 
   3.7715354472748737`*^9, 3.771535906420998*^9, 3.7715359476078568`*^9, {
   3.77153610962481*^9, 3.771536135690124*^9}, 3.7715361723728495`*^9, 
   3.7715362155513496`*^9, 3.771536262842263*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->
  "Out[387]=",ExpressionUUID->"b300e451-b569-473e-a596-3541da72e3f5"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"VVEE", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Phi]", "[", "t", "]"}], ",", 
       RowBox[{"\[Theta]", "[", "t", "]"}], ",", 
       RowBox[{"\[Psi]", "[", "t", "]"}], ",", 
       RowBox[{"p", "[", "t", "]"}], ",", 
       RowBox[{"q", "[", "t", "]"}], ",", 
       RowBox[{"r", "[", "t", "]"}], ",", 
       RowBox[{
        RowBox[{"X", "'"}], "[", "t", "]"}], ",", 
       RowBox[{
        RowBox[{"Y", "'"}], "[", "t", "]"}], ",", 
       RowBox[{
        RowBox[{"Z", "'"}], "[", "t", "]"}]}], "}"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"VE", "=", 
     RowBox[{"VVEE", "/.", "substituicoes2"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"eqsdvelocRfixed", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"eq1final", "\[Equal]", 
        RowBox[{
         RowBox[{"\[Phi]", "'"}], "[", "t", "]"}]}], ",", 
       RowBox[{"eq2final", "\[Equal]", 
        RowBox[{
         RowBox[{"\[Theta]", "'"}], "[", "t", "]"}]}], ",", 
       RowBox[{"eq3final", "\[Equal]", 
        RowBox[{
         RowBox[{"\[Psi]", "'"}], "[", "t", "]"}]}]}], "}"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{"//", "FullSimplify"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"eqsdvelocRbody", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"eq4final", "\[Equal]", 
        RowBox[{
         RowBox[{"p", "'"}], "[", "t", "]"}]}], ",", 
       RowBox[{"eq5final", "\[Equal]", 
        RowBox[{
         RowBox[{"q", "'"}], "[", "t", "]"}]}], ",", 
       RowBox[{"eq6final", "\[Equal]", 
        RowBox[{
         RowBox[{"r", "'"}], "[", "t", "]"}]}]}], "}"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{"//", "FullSimplify"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"eqsdvelocPfixed", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"eq7final", "\[Equal]", 
        RowBox[{
         RowBox[{"X", "''"}], "[", "t", "]"}]}], ",", 
       RowBox[{"eq8final", "\[Equal]", 
        RowBox[{
         RowBox[{"Y", "''"}], "[", "t", "]"}]}], ",", 
       RowBox[{"eq9final", "\[Equal]", 
        RowBox[{
         RowBox[{"Z", "''"}], "[", "t", "]"}]}]}], "}"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{"//", "FullSimplify"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"eqsptooper", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"{", 
         RowBox[{"eqsdvelocRfixed", ",", 
          RowBox[{"Drop", "[", 
           RowBox[{"eqsdvelocRbody", ",", 
            RowBox[{"-", "1"}]}], "]"}], ",", 
          RowBox[{"Drop", "[", 
           RowBox[{"eqsdvelocPfixed", ",", 
            RowBox[{"-", "2"}]}], "]"}]}], "}"}], "]"}], "/.", 
       "substituicoes2"}], "/.", "substituicoes3"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"eqsptooper2", "=", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{"{", 
        RowBox[{
        "eqsdvelocRfixed", ",", "eqsdvelocRbody", ",", "eqsdvelocPfixed"}], 
        "}"}], "]"}], "/.", "substituicoes2"}]}], ";"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"eqsdvelocPbody", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"eq1final", "\[Equal]", 
        RowBox[{
         RowBox[{"u", "'"}], "[", "t", "]"}]}], ",", 
       RowBox[{"eq2final", "\[Equal]", 
        RowBox[{
         RowBox[{"v", "'"}], "[", "t", "]"}]}], ",", 
       RowBox[{"eq3final", "\[Equal]", 
        RowBox[{
         RowBox[{"w", "'"}], "[", "t", "]"}]}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eqsdvelocRbody", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"eq4final", "\[Equal]", 
        RowBox[{
         RowBox[{"p", "'"}], "[", "t", "]"}]}], ",", 
       RowBox[{"eq5final", "\[Equal]", 
        RowBox[{
         RowBox[{"q", "'"}], "[", "t", "]"}]}], ",", 
       RowBox[{"eq6final", "\[Equal]", 
        RowBox[{
         RowBox[{"r", "'"}], "[", "t", "]"}]}]}], "}"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"//", "FullSimplify"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eqsdvelocPfixed", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"eq7final", "\[Equal]", 
        RowBox[{
         RowBox[{"X", "'"}], "[", "t", "]"}]}], ",", 
       RowBox[{"eq8final", "\[Equal]", 
        RowBox[{
         RowBox[{"Y", "'"}], "[", "t", "]"}]}], ",", 
       RowBox[{"eq9final", "\[Equal]", 
        RowBox[{
         RowBox[{"Z", "'"}], "[", "t", "]"}]}]}], "}"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"//", "FullSimplify"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eqsdvelocRfixed", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"eq10final", "\[Equal]", 
        RowBox[{
         RowBox[{"\[Phi]", "'"}], "[", "t", "]"}]}], ",", 
       RowBox[{"eq11final", "\[Equal]", 
        RowBox[{
         RowBox[{"\[Theta]", "'"}], "[", "t", "]"}]}], ",", 
       RowBox[{"eq12final", "\[Equal]", 
        RowBox[{
         RowBox[{"\[Psi]", "'"}], "[", "t", "]"}]}]}], "}"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"//", "FullSimplify"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eqsptooper", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"{", 
         RowBox[{"eqsdvelocRfixed", ",", 
          RowBox[{"Drop", "[", 
           RowBox[{"eqsdvelocRbody", ",", 
            RowBox[{"-", "1"}]}], "]"}], ",", 
          RowBox[{"Drop", "[", 
           RowBox[{"eqsdvelocPfixed", ",", 
            RowBox[{"-", "2"}]}], "]"}]}], "}"}], "]"}], "/.", 
       "substituicoes2"}], "/.", "substituicoes3"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"eqsptooper2", "=", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"{", 
       RowBox[{
       "eqsdvelocPbody", ",", "eqsdvelocRbody", ",", "eqsdvelocPfixed", ",", 
        "eqsdvelocRfixed"}], "}"}], "]"}], "/.", "substituicoes2"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eqsptooper3", "=", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "eq1final", ",", "eq2final", ",", "eq3final", ",", "eq4final", ",", 
        "eq5final", 
        RowBox[{"(*", 
         RowBox[{",", "eq6final"}], "*)"}], ",", "eq7final", ",", "eq8final", 
        ",", "eq9final", ",", "eq10final", ",", "eq11final", ",", 
        "eq12final"}], "}"}], "/.", "substituicoes2"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eqsptooper3", "/.", "substituicoes3"}], "//", 
    "MatrixForm"}]}]}]], "Input",
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",ExpressionUUID->"31431368-a613-4e17-9c11-14dde2f6b917"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"vars1", "=", 
   RowBox[{"{", 
    RowBox[{
    "dpdt", ",", "dqdt", ",", "drdt", ",", "d\[Phi]dt", ",", "d\[Theta]dt", 
     ",", "d\[Psi]dt", ",", "ddXdt", ",", "ddYdt", ",", "ddZdt"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vars2", "=", 
   RowBox[{"{", 
    RowBox[{
     OverscriptBox["p", "."], ",", 
     OverscriptBox["q", "."], ",", 
     OverscriptBox["r", "."], ",", 
     OverscriptBox["\[Phi]", "."], ",", 
     OverscriptBox["\[Theta]", "."], ",", 
     OverscriptBox["\[Psi]", "."], ",", 
     OverscriptBox["X", "\[DoubleDot]"], ",", 
     OverscriptBox["Y", "\[DoubleDot]"], ",", 
     OverscriptBox["Z", "\[DoubleDot]"]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vars3", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Phi]", "[", "t", "]"}], ",", 
     RowBox[{"\[Theta]", "[", "t", "]"}], ",", 
     RowBox[{"\[Psi]", "[", "t", "]"}], ",", 
     RowBox[{"p", "[", "t", "]"}], ",", 
     RowBox[{"q", "[", "t", "]"}], ",", 
     RowBox[{"r", "[", "t", "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vars4", "=", 
   RowBox[{"{", 
    RowBox[{
    "\[Phi]", ",", "\[Theta]", ",", "\[Psi]", ",", "u", ",", "v", ",", "w", 
     ",", "p", ",", "q", ",", "r"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vars5", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Phi]", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Psi]", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"v", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"w", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"q", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"X", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Y", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Z", ",", "1"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"eqteste", "=", 
  RowBox[{
   RowBox[{"eqsptooper3", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       OverscriptBox["p", "."], "\[Rule]", "0"}], ",", 
      RowBox[{
       OverscriptBox["q", "."], "\[Rule]", "0"}], ",", 
      RowBox[{
       OverscriptBox["r", "."], "\[Rule]", "0"}], ",", 
      RowBox[{
       OverscriptBox["\[Phi]", "."], "\[Rule]", "0"}], ",", 
      RowBox[{
       OverscriptBox["\[Theta]", "."], "\[Rule]", "0"}], ",", 
      RowBox[{
       OverscriptBox["\[Psi]", "."], "\[Rule]", "0"}], ",", 
      RowBox[{
       OverscriptBox["X", "."], "\[Rule]", "0"}], ",", 
      RowBox[{
       OverscriptBox["Y", "."], "\[Rule]", "0"}], ",", 
      RowBox[{
       OverscriptBox["Z", "."], "\[Rule]", "0"}]}], "}"}]}], "/.", 
   "substituicoes3"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"zeros", "=", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
      ",", "0", ",", "0", ",", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7714668087417326`*^9, 3.771466815746739*^9}, {
   3.7714668523910403`*^9, 3.7714668572439003`*^9}, {3.77146721147268*^9, 
   3.7714672323428144`*^9}, {3.7714672803126326`*^9, 3.7714672895105124`*^9}, 
   3.7714673222255063`*^9, 3.771467463262206*^9, {3.7714687460492496`*^9, 
   3.771468747693756*^9}, {3.771489957916239*^9, 3.771489962404229*^9}, {
   3.7714901220067425`*^9, 3.77149031787774*^9}, {3.7714904249634495`*^9, 
   3.771490518466279*^9}, {3.7714915077942495`*^9, 3.77149154619381*^9}, {
   3.7714998666761436`*^9, 3.771499944570068*^9}, {3.7715077083219004`*^9, 
   3.771507742234234*^9}, {3.7715078082189026`*^9, 3.771507844261549*^9}, {
   3.771507970916193*^9, 3.7715079742154083`*^9}, {3.7715126725996637`*^9, 
   3.771513067537306*^9}, {3.771513273132682*^9, 3.7715133375560784`*^9}, {
   3.771513394494488*^9, 3.7715134138480964`*^9}, 3.7715134874474125`*^9, {
   3.7715141740472574`*^9, 3.771514293225693*^9}, 3.7715144565909576`*^9, {
   3.7715146924683123`*^9, 3.771514815267644*^9}, {3.7715149306136093`*^9, 
   3.7715149406692295`*^9}, {3.7715154005540457`*^9, 3.771515401031767*^9}, {
   3.771515568252205*^9, 3.771515568993224*^9}, {3.7715197984335947`*^9, 
   3.7715198039428644`*^9}, 3.771519905899521*^9, {3.7715237648433485`*^9, 
   3.771523769790141*^9}, {3.7715239978350983`*^9, 3.7715240078533998`*^9}, {
   3.771524168613795*^9, 3.7715241824877605`*^9}, 3.771524491110944*^9, {
   3.7715245699610453`*^9, 3.771524571592685*^9}, {3.7715257435887656`*^9, 
   3.7715257545797205`*^9}, {3.771526215439724*^9, 3.7715262632001753`*^9}, {
   3.7715328549498854`*^9, 3.7715328560523233`*^9}, {3.77153295375686*^9, 
   3.7715329810560913`*^9}, {3.771533077480956*^9, 3.7715330791974792`*^9}, {
   3.7715333455768723`*^9, 3.7715334285219297`*^9}, {3.7715334688777122`*^9, 
   3.771533539459179*^9}, {3.771533767397708*^9, 3.7715339203024616`*^9}, {
   3.7715339532135496`*^9, 3.771533969274459*^9}, 3.7715341135413465`*^9, 
   3.7715341692624383`*^9, {3.771536634723256*^9, 3.7715366368475723`*^9}, {
   3.7715367532262697`*^9, 3.771536754064066*^9}, {3.7715379083512335`*^9, 
   3.7715379284719915`*^9}, {3.7715379831215134`*^9, 
   3.7715380298252172`*^9}, {3.771538136816683*^9, 3.771538137823038*^9}, 
   3.771538588461486*^9, 3.77153868106857*^9, {3.7715450827391815`*^9, 
   3.77154508486549*^9}, {3.7715453832447505`*^9, 3.771545413078861*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->
  "In[194]:=",ExpressionUUID->"035d5455-1afa-4cfa-b6ee-a6b9687a259f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"r", " ", "v"}], "-", 
    RowBox[{"q", " ", "w"}], "+", 
    RowBox[{"9.81`", " ", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "r"}], " ", "u"}], "+", 
    RowBox[{"p", " ", "w"}], "-", 
    RowBox[{"9.81`", " ", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
     RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"q", " ", "u"}], "-", 
    RowBox[{"p", " ", "v"}], "-", 
    RowBox[{"98.3116998`", " ", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
     RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "2.760493827160494`"}], " ", "q"}], "-", 
    RowBox[{"0.7530864197530864`", " ", "q", " ", "r"}]}], ",", 
   RowBox[{
    RowBox[{"2.760493827160494`", " ", "p"}], "+", 
    RowBox[{"0.7530864197530864`", " ", "p", " ", "r"}]}], ",", 
   RowBox[{
    RowBox[{"u", " ", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
     RowBox[{"Cos", "[", "\[Psi]", "]"}]}], "+", 
    RowBox[{"w", " ", 
     RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
     RowBox[{"Cos", "[", "\[Psi]", "]"}], " ", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
    RowBox[{"v", " ", 
     RowBox[{"Cos", "[", "\[Psi]", "]"}], " ", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
     RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "-", 
    RowBox[{"v", " ", 
     RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
     RowBox[{"Sin", "[", "\[Psi]", "]"}]}], "+", 
    RowBox[{"w", " ", 
     RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
     RowBox[{"Sin", "[", "\[Psi]", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"v", " ", 
     RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
     RowBox[{"Cos", "[", "\[Psi]", "]"}]}], "-", 
    RowBox[{"w", " ", 
     RowBox[{"Cos", "[", "\[Psi]", "]"}], " ", 
     RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "+", 
    RowBox[{"u", " ", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
     RowBox[{"Sin", "[", "\[Psi]", "]"}]}], "+", 
    RowBox[{"w", " ", 
     RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
     RowBox[{"Sin", "[", "\[Psi]", "]"}]}], "+", 
    RowBox[{"v", " ", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
     RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
     RowBox[{"Sin", "[", "\[Psi]", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"w", " ", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
     RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "-", 
    RowBox[{"u", " ", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
    RowBox[{"v", " ", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
     RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ",", 
   RowBox[{"-", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "p"}], "-", 
        RowBox[{"p", " ", 
         SuperscriptBox[
          RowBox[{"Cot", "[", "\[Phi]", "]"}], "2"]}], "-", 
        RowBox[{"q", " ", 
         RowBox[{"Csc", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"Tan", "[", "\[Theta]", "]"}]}], "-", 
        RowBox[{"r", " ", 
         RowBox[{"Cot", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"Csc", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"Tan", "[", "\[Theta]", "]"}]}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox[
         RowBox[{"Cot", "[", "\[Phi]", "]"}], "2"]}], ")"}]}], ")"}]}], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"-", "q"}], " ", 
       RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "+", 
      RowBox[{"r", " ", 
       RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], 
     RowBox[{
      SuperscriptBox[
       RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"]}]]}], ",", 
   RowBox[{"-", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "q"}], " ", 
         RowBox[{"Csc", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"Sec", "[", "\[Theta]", "]"}]}], "-", 
        RowBox[{"r", " ", 
         RowBox[{"Cot", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"Csc", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"Sec", "[", "\[Theta]", "]"}]}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox[
         RowBox[{"Cot", "[", "\[Phi]", "]"}], "2"]}], ")"}]}], ")"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.7715381437242165`*^9, 3.7715387349078336`*^9, 3.7715451445634966`*^9, {
   3.7715453951244445`*^9, 3.7715454159915495`*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->
  "Out[199]=",ExpressionUUID->"f3b56d83-e0e9-4b47-ba30-c3801b597dae"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["eqteste"], "Input",
 CellChangeTimes->{{3.771545502179896*^9, 3.771545532817427*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",ExpressionUUID->"224a0ebc-db0a-469b-bbc7-c51c8f6ea41b"],

Cell[BoxData[
 RowBox[{"Integer", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"r", " ", "v"}], "-", 
     RowBox[{"q", " ", "w"}], "+", 
     RowBox[{"9.81`", " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "r"}], " ", "u"}], "+", 
     RowBox[{"p", " ", "w"}], "-", 
     RowBox[{"9.81`", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ",", 
    RowBox[{
     RowBox[{"q", " ", "u"}], "-", 
     RowBox[{"p", " ", "v"}], "-", 
     RowBox[{"98.3116998`", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2.760493827160494`"}], " ", "q"}], "-", 
     RowBox[{"0.7530864197530864`", " ", "q", " ", "r"}]}], ",", 
    RowBox[{
     RowBox[{"2.760493827160494`", " ", "p"}], "+", 
     RowBox[{"0.7530864197530864`", " ", "p", " ", "r"}]}], ",", 
    RowBox[{
     RowBox[{"u", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"Cos", "[", "\[Psi]", "]"}]}], "+", 
     RowBox[{"w", " ", 
      RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
      RowBox[{"Cos", "[", "\[Psi]", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
     RowBox[{"v", " ", 
      RowBox[{"Cos", "[", "\[Psi]", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "-", 
     RowBox[{"v", " ", 
      RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Psi]", "]"}]}], "+", 
     RowBox[{"w", " ", 
      RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Psi]", "]"}]}]}], ",", 
    RowBox[{
     RowBox[{"v", " ", 
      RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
      RowBox[{"Cos", "[", "\[Psi]", "]"}]}], "-", 
     RowBox[{"w", " ", 
      RowBox[{"Cos", "[", "\[Psi]", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "+", 
     RowBox[{"u", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Psi]", "]"}]}], "+", 
     RowBox[{"w", " ", 
      RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Psi]", "]"}]}], "+", 
     RowBox[{"v", " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Psi]", "]"}]}]}], ",", 
    RowBox[{
     RowBox[{"w", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "-", 
     RowBox[{"u", " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
     RowBox[{"v", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ",", 
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "p"}], "-", 
         RowBox[{"p", " ", 
          SuperscriptBox[
           RowBox[{"Cot", "[", "\[Phi]", "]"}], "2"]}], "-", 
         RowBox[{"q", " ", 
          RowBox[{"Csc", "[", "\[Phi]", "]"}], " ", 
          RowBox[{"Tan", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{"r", " ", 
          RowBox[{"Cot", "[", "\[Phi]", "]"}], " ", 
          RowBox[{"Csc", "[", "\[Phi]", "]"}], " ", 
          RowBox[{"Tan", "[", "\[Theta]", "]"}]}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"Cot", "[", "\[Phi]", "]"}], "2"]}], ")"}]}], ")"}]}], ",", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", "q"}], " ", 
        RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "+", 
       RowBox[{"r", " ", 
        RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"]}]]}], ",", 
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "q"}], " ", 
          RowBox[{"Csc", "[", "\[Phi]", "]"}], " ", 
          RowBox[{"Sec", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{"r", " ", 
          RowBox[{"Cot", "[", "\[Phi]", "]"}], " ", 
          RowBox[{"Csc", "[", "\[Phi]", "]"}], " ", 
          RowBox[{"Sec", "[", "\[Theta]", "]"}]}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"Cot", "[", "\[Phi]", "]"}], "2"]}], ")"}]}], ")"}]}]}], 
   "}"}], "]"}]], "Output",
 CellChangeTimes->{3.771545509670918*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->
  "Out[202]=",ExpressionUUID->"6627f7fa-dfaf-4ed4-9a00-f08a614f9adc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sols", "=", 
  RowBox[{"Reduce", "[", 
   RowBox[{
    RowBox[{"eqteste", "\[Equal]", "zeros"}], ",", "vars4"}], "]"}], 
  RowBox[{"(*", 
   RowBox[{"//", "MatrixForm"}], "*)"}]}]], "Input",
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->
  "In[203]:=",ExpressionUUID->"fc1472ea-8e41-4bdc-af47-fc93cf5eb1f0"],

Cell[BoxData[
 TemplateBox[{
  "Reduce", "ratnz", 
   "\"Reduce was unable to solve the system with inexact coefficients. The \
answer was obtained by solving a corresponding exact system and numericizing \
the result.\"", 2, 203, 33, 27323088323486321663, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7715454355130873`*^9, 3.771545553971286*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->
  "During evaluation of \
In[203]:=",ExpressionUUID->"e97b4611-9fc5-4006-88a8-3c069fc0e94e"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.7715455539742765`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->
  "Out[203]=",ExpressionUUID->"b34bf070-c5a3-4883-91f9-3bcd44164964"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sols", "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.7715452788990602`*^9, 3.771545283723795*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->
  "In[185]:=",ExpressionUUID->"52e3c5b4-a527-4e7b-b0ae-fc91fde54817"],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "\[Equal]", "0"}], "&&", 
  RowBox[{"p", "\[Equal]", "0"}], "&&", 
  RowBox[{"q", "\[Equal]", "0"}], "&&", 
  RowBox[{"r", "\[Equal]", "0"}], "&&", 
  RowBox[{"u", "\[Equal]", "0"}], "&&", 
  RowBox[{"v", "\[Equal]", "0"}], "&&", 
  RowBox[{"w", "\[Equal]", "0"}], "&&", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Pi]", "+", 
        RowBox[{"2", " ", "\[Pi]", " ", 
         RowBox[{"C", "[", "1", "]"}]}]}], "\[Equal]", "\[Theta]"}], "&&", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Ixx", "\[NotEqual]", "0"}], "&&", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Iyy", "\[NotEqual]", "0"}], "&&", 
              RowBox[{
               RowBox[{"m", " ", 
                RowBox[{"Tan", "[", 
                 FractionBox["\[Phi]", "2"], "]"}]}], "\[NotEqual]", "0"}]}], 
             ")"}], "||", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SubscriptBox["JJ", "TP"], "\[Equal]", "0"}], "&&", 
              RowBox[{
               RowBox[{"Iyy", " ", "m", " ", 
                RowBox[{"Tan", "[", 
                 FractionBox["\[Phi]", "2"], "]"}]}], "\[NotEqual]", "0"}]}], 
             ")"}]}], ")"}]}], ")"}], "||", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SubscriptBox["JJ", "TP"], "\[Equal]", "0"}], "&&", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Ixx", " ", "Iyy", " ", "m", " ", 
              RowBox[{"Tan", "[", 
               FractionBox["\[Phi]", "2"], "]"}]}], "\[NotEqual]", "0"}], "||", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Iyy", "\[NotEqual]", "0"}], "&&", 
              RowBox[{
               RowBox[{"Ixx", " ", "m", " ", 
                RowBox[{"Tan", "[", 
                 FractionBox["\[Phi]", "2"], "]"}]}], "\[NotEqual]", "0"}]}], 
             ")"}]}], ")"}]}], ")"}]}], ")"}], "&&", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"C", "[", "1", "]"}], "|", 
             RowBox[{"C", "[", "2", "]"}]}], ")"}], "\[Element]", 
           TemplateBox[{},
            "Integers"]}], "&&", 
          RowBox[{
           RowBox[{"\[Pi]", "+", 
            RowBox[{"2", " ", "\[Pi]", " ", 
             RowBox[{"C", "[", "2", "]"}]}]}], "\[Equal]", "\[Psi]"}], "&&", 
          RowBox[{
           RowBox[{
            FractionBox["1", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              FractionBox["\[Phi]", "\[Pi]"]}], ")"}]}], "\[NotElement]", 
           TemplateBox[{},
            "Integers"]}]}], ")"}], "||", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"C", "[", "1", "]"}], "\[Element]", 
           TemplateBox[{},
            "Integers"]}], "&&", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                FractionBox["\[Phi]", "\[Pi]"]}], ")"}]}], "|", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                FractionBox["\[Psi]", "\[Pi]"]}], ")"}]}]}], ")"}], 
           "\[NotElement]", 
           TemplateBox[{},
            "Integers"]}]}], ")"}]}], ")"}]}], ")"}], "||", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Ixx", "\[NotEqual]", "0"}], "&&", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Iyy", "\[NotEqual]", "0"}], "&&", 
              RowBox[{
               RowBox[{"m", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  SuperscriptBox[
                   RowBox[{"Tan", "[", 
                    FractionBox["\[Theta]", "2"], "]"}], "2"]}], ")"}], " ", 
                RowBox[{"Tan", "[", 
                 FractionBox["\[Phi]", "2"], "]"}]}], "\[NotEqual]", "0"}]}], 
             ")"}], "||", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SubscriptBox["JJ", "TP"], "\[Equal]", "0"}], "&&", 
              RowBox[{
               RowBox[{"Iyy", " ", "m", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  SuperscriptBox[
                   RowBox[{"Tan", "[", 
                    FractionBox["\[Theta]", "2"], "]"}], "2"]}], ")"}], " ", 
                RowBox[{"Tan", "[", 
                 FractionBox["\[Phi]", "2"], "]"}]}], "\[NotEqual]", "0"}]}], 
             ")"}]}], ")"}]}], ")"}], "||", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SubscriptBox["JJ", "TP"], "\[Equal]", "0"}], "&&", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Ixx", " ", "Iyy", " ", "m", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SuperscriptBox[
                 RowBox[{"Tan", "[", 
                  FractionBox["\[Theta]", "2"], "]"}], "2"]}], ")"}], " ", 
              RowBox[{"Tan", "[", 
               FractionBox["\[Phi]", "2"], "]"}]}], "\[NotEqual]", "0"}], "||", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Iyy", "\[NotEqual]", "0"}], "&&", 
              RowBox[{
               RowBox[{"Ixx", " ", "m", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  SuperscriptBox[
                   RowBox[{"Tan", "[", 
                    FractionBox["\[Theta]", "2"], "]"}], "2"]}], ")"}], " ", 
                RowBox[{"Tan", "[", 
                 FractionBox["\[Phi]", "2"], "]"}]}], "\[NotEqual]", "0"}]}], 
             ")"}]}], ")"}]}], ")"}]}], ")"}], "&&", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Pi]", "+", 
            RowBox[{"2", " ", "\[Pi]", " ", 
             RowBox[{"C", "[", "1", "]"}]}]}], "\[Equal]", "\[Psi]"}], "&&", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                FractionBox["\[Theta]", "\[Pi]"]}], ")"}]}], "|", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                FractionBox["\[Phi]", "\[Pi]"]}], ")"}]}]}], ")"}], 
           "\[NotElement]", 
           TemplateBox[{},
            "Integers"]}], "&&", 
          RowBox[{
           RowBox[{"C", "[", "1", "]"}], "\[Element]", 
           TemplateBox[{},
            "Integers"]}]}], ")"}], "||", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            FractionBox["1", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              FractionBox["\[Theta]", "\[Pi]"]}], ")"}]}], "|", 
           RowBox[{
            FractionBox["1", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              FractionBox["\[Phi]", "\[Pi]"]}], ")"}]}], "|", 
           RowBox[{
            FractionBox["1", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              FractionBox["\[Psi]", "\[Pi]"]}], ")"}]}]}], ")"}], 
         "\[NotElement]", 
         TemplateBox[{},
          "Integers"]}]}], ")"}]}], ")"}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.771545286684835*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->
  "Out[185]=",ExpressionUUID->"0d170882-d39c-45d5-8e72-cbe731d732b9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eqteste", "\[Equal]", "zeros"}]], "Input",
 CellChangeTimes->{{3.7715380661132393`*^9, 3.7715380714136724`*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->
  "In[156]:=",ExpressionUUID->"2bf4181b-6703-405f-8454-3cac8d65d419"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"r", " ", "v"}], "-", 
     RowBox[{"q", " ", "w"}], "+", 
     RowBox[{"9.81`", " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "r"}], " ", "u"}], "+", 
     RowBox[{"p", " ", "w"}], "-", 
     RowBox[{"9.81`", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ",", 
    RowBox[{
     RowBox[{"q", " ", "u"}], "-", 
     RowBox[{"p", " ", "v"}], "-", 
     RowBox[{"98.3116998`", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2.760493827160494`"}], " ", "q"}], "-", 
     RowBox[{"0.7530864197530864`", " ", "q", " ", "r"}]}], ",", 
    RowBox[{
     RowBox[{"2.760493827160494`", " ", "p"}], "+", 
     RowBox[{"0.7530864197530864`", " ", "p", " ", "r"}]}], ",", 
    RowBox[{
     RowBox[{"u", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"Cos", "[", "\[Psi]", "]"}]}], "+", 
     RowBox[{"w", " ", 
      RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
      RowBox[{"Cos", "[", "\[Psi]", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
     RowBox[{"v", " ", 
      RowBox[{"Cos", "[", "\[Psi]", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "-", 
     RowBox[{"v", " ", 
      RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Psi]", "]"}]}], "+", 
     RowBox[{"w", " ", 
      RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Psi]", "]"}]}]}], ",", 
    RowBox[{
     RowBox[{"v", " ", 
      RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
      RowBox[{"Cos", "[", "\[Psi]", "]"}]}], "-", 
     RowBox[{"w", " ", 
      RowBox[{"Cos", "[", "\[Psi]", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "+", 
     RowBox[{"u", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Psi]", "]"}]}], "+", 
     RowBox[{"w", " ", 
      RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Psi]", "]"}]}], "+", 
     RowBox[{"v", " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Psi]", "]"}]}]}], ",", 
    RowBox[{
     RowBox[{"w", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "-", 
     RowBox[{"u", " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
     RowBox[{"v", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ",", 
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "p"}], "-", 
         RowBox[{"p", " ", 
          SuperscriptBox[
           RowBox[{"Cot", "[", "\[Phi]", "]"}], "2"]}], "-", 
         RowBox[{"q", " ", 
          RowBox[{"Csc", "[", "\[Phi]", "]"}], " ", 
          RowBox[{"Tan", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{"r", " ", 
          RowBox[{"Cot", "[", "\[Phi]", "]"}], " ", 
          RowBox[{"Csc", "[", "\[Phi]", "]"}], " ", 
          RowBox[{"Tan", "[", "\[Theta]", "]"}]}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"Cot", "[", "\[Phi]", "]"}], "2"]}], ")"}]}], ")"}]}], ",", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", "q"}], " ", 
        RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "+", 
       RowBox[{"r", " ", 
        RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"]}]]}], ",", 
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "q"}], " ", 
          RowBox[{"Csc", "[", "\[Phi]", "]"}], " ", 
          RowBox[{"Sec", "[", "\[Theta]", "]"}]}], "-", 
         RowBox[{"r", " ", 
          RowBox[{"Cot", "[", "\[Phi]", "]"}], " ", 
          RowBox[{"Csc", "[", "\[Phi]", "]"}], " ", 
          RowBox[{"Sec", "[", "\[Theta]", "]"}]}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"Cot", "[", "\[Phi]", "]"}], "2"]}], ")"}]}], ")"}]}]}], 
   "}"}], "\[Equal]", 
  RowBox[{"{", 
   RowBox[{
   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
    ",", "0", ",", "0", ",", "0"}], "}"}]}]], "Output",
 CellChangeTimes->{{3.7715380550976825`*^9, 3.7715380722733593`*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->
  "Out[156]=",ExpressionUUID->"c922f8b5-6aaa-4696-9e6c-cfaf14526cda"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindRoot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"r", " ", "v"}], "-", 
       RowBox[{"q", " ", "w"}], "+", 
       RowBox[{"g", " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "\[Equal]", 
      OverscriptBox["u", "."]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", "r"}], " ", "u"}], "+", 
       RowBox[{"p", " ", "w"}], "-", 
       RowBox[{"g", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], "\[Equal]", 
      OverscriptBox["v", "."]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"q", " ", "u"}], "-", 
       RowBox[{"p", " ", "v"}], "-", 
       FractionBox[
        RowBox[{"184900", " ", "b", " ", "g", " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "m"]}], "\[Equal]", 
      OverscriptBox["w", "."]}], ",", 
     RowBox[{
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{"Iyy", "-", "Izz"}], ")"}], " ", "q", " ", "r"}], "Ixx"], 
       "-", 
       FractionBox[
        RowBox[{"215", " ", "q", " ", 
         SubscriptBox["JJ", "TP"]}], "Ixx"]}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "Ixx"}], "+", "Izz"}], ")"}], " ", "p", " ", "r"}], 
        "Iyy"], "+", 
       FractionBox[
        RowBox[{"215", " ", "p", " ", 
         SubscriptBox["JJ", "TP"]}], "Iyy"]}], "\[Equal]", "0"}], ",", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Ixx", "-", "Iyy"}], ")"}], " ", "p", " ", "q"}], "Izz"], 
      "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"u", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Cos", "[", "\[Psi]", "]"}]}], "+", 
       RowBox[{"w", " ", 
        RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
        RowBox[{"Cos", "[", "\[Psi]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
       RowBox[{"v", " ", 
        RowBox[{"Cos", "[", "\[Psi]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "-", 
       RowBox[{"v", " ", 
        RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Psi]", "]"}]}], "+", 
       RowBox[{"w", " ", 
        RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Psi]", "]"}]}]}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"v", " ", 
        RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
        RowBox[{"Cos", "[", "\[Psi]", "]"}]}], "-", 
       RowBox[{"w", " ", 
        RowBox[{"Cos", "[", "\[Psi]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "+", 
       RowBox[{"u", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Psi]", "]"}]}], "+", 
       RowBox[{"w", " ", 
        RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Psi]", "]"}]}], "+", 
       RowBox[{"v", " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Psi]", "]"}]}]}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"w", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "-", 
       RowBox[{"u", " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
       RowBox[{"v", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "p"}], "-", 
           RowBox[{"p", " ", 
            SuperscriptBox[
             RowBox[{"Cot", "[", "\[Phi]", "]"}], "2"]}], "-", 
           RowBox[{"q", " ", 
            RowBox[{"Csc", "[", "\[Phi]", "]"}], " ", 
            RowBox[{"Tan", "[", "\[Theta]", "]"}]}], "-", 
           RowBox[{"r", " ", 
            RowBox[{"Cot", "[", "\[Phi]", "]"}], " ", 
            RowBox[{"Csc", "[", "\[Phi]", "]"}], " ", 
            RowBox[{"Tan", "[", "\[Theta]", "]"}]}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SuperscriptBox[
            RowBox[{"Cot", "[", "\[Phi]", "]"}], "2"]}], ")"}]}], ")"}]}], 
      "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", "q"}], " ", 
          RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "+", 
         RowBox[{"r", " ", 
          RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], 
        RowBox[{
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"]}]]}], "\[Equal]", "0"}], 
     ",", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "q"}], " ", 
            RowBox[{"Csc", "[", "\[Phi]", "]"}], " ", 
            RowBox[{"Sec", "[", "\[Theta]", "]"}]}], "-", 
           RowBox[{"r", " ", 
            RowBox[{"Cot", "[", "\[Phi]", "]"}], " ", 
            RowBox[{"Csc", "[", "\[Phi]", "]"}], " ", 
            RowBox[{"Sec", "[", "\[Theta]", "]"}]}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SuperscriptBox[
            RowBox[{"Cot", "[", "\[Phi]", "]"}], "2"]}], ")"}]}], ")"}]}], 
      "\[Equal]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Phi]", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Psi]", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"v", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"w", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"q", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "0"}], "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.771533620682393*^9, 3.771533627868244*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->
  "In[491]:=",ExpressionUUID->"cab3e9d0-f254-41eb-a088-b68280b3aab6"],

Cell[BoxData[
 TemplateBox[{
  "Infinity", "indet", 
   "\"Indeterminate expression \\!\\(\\*RowBox[{\\\"0.`\\\", \\\" \\\", \
\\\"ComplexInfinity\\\"}]\\) encountered.\"", 2, 491, 40, 
   27322889275877046811, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.771533629356246*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->
  "During evaluation of \
In[491]:=",ExpressionUUID->"6d21381d-9af6-41eb-b42a-921da26eed72"],

Cell[BoxData[
 TemplateBox[{
  "Infinity", "indet", 
   "\"Indeterminate expression \\!\\(\\*RowBox[{\\\"0.`\\\", \\\" \\\", \
\\\"ComplexInfinity\\\"}]\\) encountered.\"", 2, 491, 41, 
   27322889275877046811, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7715336293811493`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->
  "During evaluation of \
In[491]:=",ExpressionUUID->"e1f59e31-0c11-47d9-af73-c9ff856871c0"],

Cell[BoxData[
 TemplateBox[{
  "Infinity", "indet", 
   "\"Indeterminate expression \\!\\(\\*RowBox[{\\\"0.`\\\", \\\" \\\", \
\\\"ComplexInfinity\\\", \\\" \\\", \\\"ComplexInfinity\\\"}]\\) encountered.\
\"", 2, 491, 42, 27322889275877046811, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.771533629403123*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->
  "During evaluation of \
In[491]:=",ExpressionUUID->"fd75b96d-29cc-419d-959e-7646911aa93c"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Infinity\\\", \
\\\"::\\\", \\\"indet\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 491, 43, 27322889275877046811, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.771533629427026*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->
  "During evaluation of \
In[491]:=",ExpressionUUID->"5899bda2-79e1-4229-83b5-bb1a5c5a6e38"],

Cell[BoxData[
 TemplateBox[{
  "FindRoot", "nlnum", 
   "\"The function value \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{RowBox[{\
\\\"0.`\\\", \\\"\[VeryThinSpace]\\\"}], \\\"-\\\", RowBox[{\\\"1.`\\\", \\\" \
\\\", RowBox[{\\\"OverDot\\\", \\\"[\\\", RowBox[{\\\"0.`\\\", \\\",\\\", \
\\\"1.`\\\"}], \\\"]\\\"}]}]}], \\\",\\\", RowBox[{RowBox[{\\\"0.`\\\", \\\"\
\[VeryThinSpace]\\\"}], \\\"-\\\", RowBox[{\\\"1.`\\\", \\\" \\\", RowBox[{\\\
\"OverDot\\\", \\\"[\\\", RowBox[{\\\"0.`\\\", \\\",\\\", \\\"1.`\\\"}], \
\\\"]\\\"}]}]}], \\\",\\\", RowBox[{RowBox[{\\\"0.`\\\", \\\"\[VeryThinSpace]\
\\\"}], \\\"-\\\", RowBox[{\\\"1.`\\\", \\\" \\\", RowBox[{\\\"OverDot\\\", \
\\\"[\\\", RowBox[{\\\"0.`\\\", \\\",\\\", \\\"1.`\\\"}], \\\"]\\\"}]}]}], \\\
\",\\\", \\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\
\", \\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \
\\\"Indeterminate\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"Indeterminate\\\
\"}], \\\"}\\\"}]\\) is not a list of numbers with dimensions \
\\!\\(\\*RowBox[{\\\"{\\\", \\\"12\\\", \\\"}\\\"}]\\) at \\!\\(\\*RowBox[{\\\
\"{\\\", RowBox[{\\\"\[Phi]\\\", \\\",\\\", \\\"\[Theta]\\\", \\\",\\\", \\\"\
\[Psi]\\\", \\\",\\\", \\\"u\\\", \\\",\\\", \\\"v\\\", \\\",\\\", \\\"w\\\", \
\\\",\\\", \\\"p\\\", \\\",\\\", \\\"q\\\", \\\",\\\", \\\"r\\\"}], \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"0.`\\\", \\\",\\\", \
\\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \
\\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \
\\\"0.`\\\", \\\",\\\", \\\"0.`\\\"}], \\\"}\\\"}]\\).\"", 2, 491, 44, 
   27322889275877046811, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.771533629449964*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->
  "During evaluation of \
In[491]:=",ExpressionUUID->"6e51af46-2656-451d-8d47-3330dc1d69bd"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           RowBox[{"-", "p"}], "-", 
           RowBox[{"p", " ", 
            SuperscriptBox[
             RowBox[{"Cot", "[", "\[Phi]", "]"}], "2"]}], "-", 
           RowBox[{"q", " ", 
            RowBox[{"Csc", "[", "\[Phi]", "]"}], " ", 
            RowBox[{"Tan", "[", "\[Theta]", "]"}]}], "-", 
           RowBox[{"r", " ", 
            RowBox[{"Cot", "[", "\[Phi]", "]"}], " ", 
            RowBox[{"Csc", "[", "\[Phi]", "]"}], " ", 
            RowBox[{"Tan", "[", "\[Theta]", "]"}]}]}], 
          RowBox[{"1", "+", 
           SuperscriptBox[
            RowBox[{"Cot", "[", "\[Phi]", "]"}], "2"]}]]}], "\[Equal]", "0"}]},
      {
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           RowBox[{
            RowBox[{"-", "q"}], " ", 
            RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "+", 
           RowBox[{"r", " ", 
            RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], 
          RowBox[{
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Phi]", "]"}], "2"], "+", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"]}]]}], "\[Equal]", "0"}]},
      {
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           RowBox[{
            RowBox[{"-", "q"}], " ", 
            RowBox[{"Csc", "[", "\[Phi]", "]"}], " ", 
            RowBox[{"Sec", "[", "\[Theta]", "]"}]}], "-", 
           RowBox[{"r", " ", 
            RowBox[{"Cot", "[", "\[Phi]", "]"}], " ", 
            RowBox[{"Csc", "[", "\[Phi]", "]"}], " ", 
            RowBox[{"Sec", "[", "\[Theta]", "]"}]}]}], 
          RowBox[{"1", "+", 
           SuperscriptBox[
            RowBox[{"Cot", "[", "\[Phi]", "]"}], "2"]}]]}], "\[Equal]", "0"}]},
      {
       RowBox[{
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"Iyy", "-", "Izz"}], ")"}], " ", "q", " ", "r"}], "Ixx"], 
         "-", 
         FractionBox[
          RowBox[{"215", " ", "q", " ", 
           SubscriptBox["JJ", "TP"]}], "Ixx"]}], "\[Equal]", "0"}]},
      {
       RowBox[{
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "Ixx"}], "+", "Izz"}], ")"}], " ", "p", " ", "r"}], 
          "Iyy"], "+", 
         FractionBox[
          RowBox[{"215", " ", "p", " ", 
           SubscriptBox["JJ", "TP"]}], "Iyy"]}], "\[Equal]", "0"}]},
      {
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Ixx", "-", "Iyy"}], ")"}], " ", "p", " ", "q"}], "Izz"], 
        "\[Equal]", "0"}]},
      {
       RowBox[{
        FractionBox[
         RowBox[{"184900", " ", "b", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Psi]", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Psi]", "]"}]}]}], ")"}]}], "m"], 
        "\[Equal]", "0"}]},
      {
       RowBox[{
        FractionBox[
         RowBox[{"184900", " ", "b", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Cos", "[", "\[Psi]", "]"}]}], " ", 
             RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Psi]", "]"}]}]}], ")"}]}], "m"], 
        "\[Equal]", "0"}]},
      {
       RowBox[{
        RowBox[{
         RowBox[{"-", "g"}], "+", 
         FractionBox[
          RowBox[{"184900", " ", "b", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "m"]}], "\[Equal]", "0"}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7715238440626535`*^9, 3.7715238648435516`*^9}, 
   3.7715240413404155`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->
  "Out[345]//MatrixForm=",ExpressionUUID->"63f3a50a-9743-4bdd-8022-\
1464b742bb21"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindRoot", "[", 
  RowBox[{
   RowBox[{"eqsptooper2", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       OverscriptBox["p", "."], "\[Rule]", "0"}], ",", 
      RowBox[{
       OverscriptBox["q", "."], "\[Rule]", "0"}], ",", 
      RowBox[{
       OverscriptBox["r", "."], "\[Rule]", "0"}], ",", 
      RowBox[{
       OverscriptBox["\[Phi]", "."], "\[Rule]", "0"}], ",", 
      RowBox[{
       OverscriptBox["\[Theta]", "."], "\[Rule]", "0"}], ",", 
      RowBox[{
       OverscriptBox["\[Psi]", "."], "\[Rule]", "0"}], ",", 
      RowBox[{
       OverscriptBox["X", "\[DoubleDot]"], "\[Rule]", "0"}], ",", 
      RowBox[{
       OverscriptBox["Y", "\[DoubleDot]"], "\[Rule]", "0"}], ",", 
      RowBox[{
       OverscriptBox["Z", "\[DoubleDot]"], "\[Rule]", "0"}], ",", 
      RowBox[{
       RowBox[{"\[Phi]", "[", "t", "]"}], "\[Rule]", "\[Phi]"}], ",", 
      RowBox[{
       RowBox[{"\[Theta]", "[", "t", "]"}], "\[Rule]", "\[Theta]"}], ",", 
      RowBox[{
       RowBox[{"\[Psi]", "[", "t", "]"}], "\[Rule]", "\[Psi]"}], ",", 
      RowBox[{
       RowBox[{"p", "[", "t", "]"}], "\[Rule]", "p"}], ",", 
      RowBox[{
       RowBox[{"q", "[", "t", "]"}], "\[Rule]", "q"}], ",", 
      RowBox[{
       RowBox[{"r", "[", "t", "]"}], "\[Rule]", "r"}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Phi]", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Psi]", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"p", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"q", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7715145967682247`*^9, 3.77151460382623*^9}, 
   3.7715148267815647`*^9, {3.771514914703865*^9, 3.7715149172231007`*^9}, {
   3.771515626138334*^9, 3.7715156272852697`*^9}, {3.771519022117453*^9, 
   3.7715190479929056`*^9}, 3.77151916029655*^9, {3.771519377365514*^9, 
   3.771519403693754*^9}, {3.771519536270755*^9, 3.7715196539119205`*^9}, 
   3.771524074138657*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->
  "In[347]:=",ExpressionUUID->"24084de6-3b12-400f-89e4-f077d4505e03"],

Cell[BoxData[
 TemplateBox[{
  "Infinity", "indet", 
   "\"Indeterminate expression \\!\\(\\*RowBox[{\\\"0.`\\\", \\\" \\\", \
\\\"ComplexInfinity\\\"}]\\) encountered.\"", 2, 347, 20, 
   27322889275877046811, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.7715191611854725`*^9, {3.771519380828882*^9, 3.771519407199383*^9}, {
   3.771519646292391*^9, 3.771519654638975*^9}, {3.771524069411261*^9, 
   3.7715240743730125`*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->
  "During evaluation of \
In[347]:=",ExpressionUUID->"c2502403-bad3-4a20-9845-cf1f41e823e4"],

Cell[BoxData[
 TemplateBox[{
  "Infinity", "indet", 
   "\"Indeterminate expression \\!\\(\\*RowBox[{\\\"0.`\\\", \\\" \\\", \
\\\"ComplexInfinity\\\"}]\\) encountered.\"", 2, 347, 21, 
   27322889275877046811, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.7715191611854725`*^9, {3.771519380828882*^9, 3.771519407199383*^9}, {
   3.771519646292391*^9, 3.771519654638975*^9}, {3.771524069411261*^9, 
   3.7715240744198875`*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->
  "During evaluation of \
In[347]:=",ExpressionUUID->"85163e67-6f5c-420d-b007-b2efc586d8d3"],

Cell[BoxData[
 TemplateBox[{
  "Infinity", "indet", 
   "\"Indeterminate expression \\!\\(\\*RowBox[{\\\"0.`\\\", \\\" \\\", \
\\\"ComplexInfinity\\\", \\\" \\\", \\\"ComplexInfinity\\\"}]\\) encountered.\
\"", 2, 347, 22, 27322889275877046811, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.7715191611854725`*^9, {3.771519380828882*^9, 3.771519407199383*^9}, {
   3.771519646292391*^9, 3.771519654638975*^9}, {3.771524069411261*^9, 
   3.7715240744417973`*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->
  "During evaluation of \
In[347]:=",ExpressionUUID->"7546e494-8f50-4fc0-88a2-cd891224c864"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Infinity\\\", \
\\\"::\\\", \\\"indet\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 347, 23, 27322889275877046811, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.7715191611854725`*^9, {3.771519380828882*^9, 3.771519407199383*^9}, {
   3.771519646292391*^9, 3.771519654638975*^9}, {3.771524069411261*^9, 
   3.7715240744677296`*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->
  "During evaluation of \
In[347]:=",ExpressionUUID->"bac75b5b-35ae-45ec-9e27-1a3ede3aeb2e"],

Cell[BoxData[
 TemplateBox[{
  "FindRoot", "nlnum", 
   "\"The function value \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"Indeterminate\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \
\\\"Indeterminate\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \
\\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\
\\\", RowBox[{RowBox[{RowBox[{\\\"-\\\", \\\"1.`\\\"}], \\\" \\\", \
\\\"g\\\"}], \\\"+\\\", FractionBox[RowBox[{\\\"184900.`\\\", \\\" \\\", \
\\\"b\\\"}], \\\"m\\\"]}]}], \\\"}\\\"}]\\) is not a list of numbers with \
dimensions \\!\\(\\*RowBox[{\\\"{\\\", \\\"9\\\", \\\"}\\\"}]\\) at \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"\[Phi]\\\", \\\",\\\", \\\"\[Theta]\\\
\", \\\",\\\", \\\"\[Psi]\\\", \\\",\\\", \\\"p\\\", \\\",\\\", \\\"q\\\", \\\
\",\\\", \\\"r\\\"}], \\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\
\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"0.`\
\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"0.`\\\"}], \\\"}\\\"}]\\).\"", 2,
    347, 24, 27322889275877046811, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.7715191611854725`*^9, {3.771519380828882*^9, 3.771519407199383*^9}, {
   3.771519646292391*^9, 3.771519654638975*^9}, {3.771524069411261*^9, 
   3.771524074497678*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->
  "During evaluation of \
In[347]:=",ExpressionUUID->"4b9d1c8e-8342-4e90-9328-9871f17007c3"],

Cell[BoxData[
 RowBox[{"FindRoot", "[", 
  RowBox[{
   RowBox[{"eqsptooper2", "/.", "\[VeryThinSpace]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       OverscriptBox["p", "."], "\[Rule]", "0"}], ",", 
      RowBox[{
       OverscriptBox["q", "."], "\[Rule]", "0"}], ",", 
      RowBox[{
       OverscriptBox["r", "."], "\[Rule]", "0"}], ",", 
      RowBox[{
       OverscriptBox["\[Phi]", "."], "\[Rule]", "0"}], ",", 
      RowBox[{
       OverscriptBox["\[Theta]", "."], "\[Rule]", "0"}], ",", 
      RowBox[{
       OverscriptBox["\[Psi]", "."], "\[Rule]", "0"}], ",", 
      RowBox[{
       OverscriptBox["X", "\[DoubleDot]"], "\[Rule]", "0"}], ",", 
      RowBox[{
       OverscriptBox["Y", "\[DoubleDot]"], "\[Rule]", "0"}], ",", 
      RowBox[{
       OverscriptBox["Z", "\[DoubleDot]"], "\[Rule]", "0"}], ",", 
      RowBox[{
       RowBox[{"\[Phi]", "[", "t", "]"}], "\[Rule]", "\[Phi]"}], ",", 
      RowBox[{
       RowBox[{"\[Theta]", "[", "t", "]"}], "\[Rule]", "\[Theta]"}], ",", 
      RowBox[{
       RowBox[{"\[Psi]", "[", "t", "]"}], "\[Rule]", "\[Psi]"}], ",", 
      RowBox[{
       RowBox[{"p", "[", "t", "]"}], "\[Rule]", "p"}], ",", 
      RowBox[{
       RowBox[{"q", "[", "t", "]"}], "\[Rule]", "q"}], ",", 
      RowBox[{
       RowBox[{"r", "[", "t", "]"}], "\[Rule]", "r"}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Phi]", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Psi]", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"p", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"q", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0"}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.771466817247609*^9, 3.771466858343881*^9, 3.7714672654924417`*^9, {
   3.771490186290001*^9, 3.7714902138814974`*^9}, 3.771490320205494*^9, {
   3.7714904960366344`*^9, 3.771490519598216*^9}, 3.7714911836532073`*^9, 
   3.771491342426361*^9, 3.7714915513989134`*^9, 3.771491582625214*^9, 
   3.7714916338139925`*^9, 3.7714916765878963`*^9, 3.771507744114207*^9, 
   3.771512947812188*^9, 3.7715130014811926`*^9, 3.771513068542618*^9, 
   3.771513337914092*^9, {3.7715133960546885`*^9, 3.7715134151735444`*^9}, 
   3.7715134898978605`*^9, 3.771514294667802*^9, 3.771514457843611*^9, {
   3.7715145765779324`*^9, 3.7715146049084296`*^9}, 3.7715148286476107`*^9, 
   3.7715149185016756`*^9, 3.7715154390032496`*^9, {3.771515622938655*^9, 
   3.7715156283643913`*^9}, 3.7715160098913*^9, 3.771519161223404*^9, {
   3.771519381042342*^9, 3.7715194081269026`*^9}, {3.7715196463482428`*^9, 
   3.771519654790596*^9}, {3.7715240695419116`*^9, 3.771524074503634*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->
  "Out[347]=",ExpressionUUID->"e491efb2-0f78-4b8b-bde5-d616e1aad5d4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"e22", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"x", "'"}], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"y", "[", "t", "]"}]}], "-", 
       RowBox[{"z", "[", "t", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"x", "[", "0", "]"}], "\[Equal]", 
      RowBox[{"-", "0.04"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"y", "'"}], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"x", "[", "t", "]"}], "+", 
       RowBox[{".425", " ", 
        RowBox[{"y", "[", "t", "]"}]}]}]}], ",", 
     RowBox[{
      RowBox[{"y", "[", "0", "]"}], "\[Equal]", 
      RowBox[{"-", "0.30"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"z", "'"}], "[", "t", "]"}], "\[Equal]", 
      RowBox[{"2", "-", 
       RowBox[{
        RowBox[{"z", "[", "t", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"4", "-", 
          RowBox[{"x", "[", "t", "]"}]}], ")"}]}]}]}], ",", 
     RowBox[{
      RowBox[{"z", "[", "0", "]"}], "\[Equal]", "0.52"}]}], "}"}]}], 
  ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.56293690640625*^9, 3.562937085640625*^9}, {
   3.562937219171875*^9, 3.56293723596875*^9}, 3.562937921140625*^9, 
   3.562937955671875*^9, 3.7697572898975706`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[1]:=",ExpressionUUID->"7b0414bf-af83-43ed-8c25-13908c59bdcc"],

Cell[BoxData[{
 RowBox[{"e22", "//", "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"e23", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "[", "t", "]"}], ",", 
      RowBox[{"y", "[", "t", "]"}], ",", 
      RowBox[{"z", "[", "t", "]"}]}], "}"}], "/.", 
    RowBox[{"Flatten", "[", 
     RowBox[{"NDSolve", "[", 
      RowBox[{"e22", ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "25"}], "}"}]}], "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"e24", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "[", "t", "]"}], ",", 
      RowBox[{"y", "[", "t", "]"}], ",", 
      RowBox[{"z", "[", "t", "]"}]}], "}"}], "/.", 
    RowBox[{"Flatten", "[", 
     RowBox[{"NDSolve", "[", 
      RowBox[{"e22", ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "25"}], "}"}], ",", 
       RowBox[{"Method", "\[Rule]", "ExplicitRungeKutta"}]}], "]"}], 
     "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ParametricPlot3D", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"{", 
     RowBox[{"e23", ",", "e24"}], "}"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "25"}], "}"}], ",", 
   RowBox[{"PlotPoints", "\[Rule]", "1000"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.5630120031955776`*^9, 3.5630120176018276`*^9}, {
   3.6730065526149483`*^9, 3.673006576514986*^9}, 3.7697572898975706`*^9, {
   3.7709755141857953`*^9, 3.7709755539884214`*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[2]:=",ExpressionUUID->"cf0223ad-e4b0-4c47-8e53-d453978dc3e3"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{
        RowBox[{
         SuperscriptBox["x", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"y", "[", "t", "]"}]}], "-", 
         RowBox[{"z", "[", "t", "]"}]}]}]},
      {
       RowBox[{
        RowBox[{"x", "[", "0", "]"}], "\[Equal]", 
        RowBox[{"-", "0.04`"}]}]},
      {
       RowBox[{
        RowBox[{
         SuperscriptBox["y", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
        RowBox[{
         RowBox[{"x", "[", "t", "]"}], "+", 
         RowBox[{"0.425`", " ", 
          RowBox[{"y", "[", "t", "]"}]}]}]}]},
      {
       RowBox[{
        RowBox[{"y", "[", "0", "]"}], "\[Equal]", 
        RowBox[{"-", "0.3`"}]}]},
      {
       RowBox[{
        RowBox[{
         SuperscriptBox["z", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
        RowBox[{"2", "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"4", "-", 
            RowBox[{"x", "[", "t", "]"}]}], ")"}], " ", 
          RowBox[{"z", "[", "t", "]"}]}]}]}]},
      {
       RowBox[{
        RowBox[{"z", "[", "0", "]"}], "\[Equal]", "0.52`"}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.5630120185237026`*^9, 3.6738143728281326`*^9, 3.7697572898985662`*^9, {
   3.77097553846595*^9, 3.770975562270586*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->
  "Out[2]//MatrixForm=",ExpressionUUID->"c41a81ae-ed2b-4445-8848-\
a58e5b31f9ab"],

Cell[BoxData[
 Graphics3DBox[{{}, {}, 
   TagBox[
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
     Line3DBox[CompressedData["
1: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
VZyXeKOqy7u3qBu9bKV/Z7VdglAHB3XVJh5CpfU/82B9BhpTvqJflbAEhZe3
uNtH8BAtV9yEjrN1oB4xxqNrtUuQQ9v2+oIOD/H4h0lIMV8ruvV38s0o6zJ4
2LW6KS5xExE3l1Zdsm9ApcdzfV0kl0E2wsDgXRo3Ifvwn9/mrmrEbD96++aR
Zdgu166tncpNsEtn2d+trEbdsjrva7A/kgxfHvjITfAdaI1gfKtG5lpqh3cd
XQbFd2GRikncRGnp/vzE59Xoi052XCf24IySB9kJ3AT/3ixtZc1qNHp/xFwN
lsGwm2aSFYnnpZc8NkuqQuGxX153qy7Duvhrgnf8uIkBG4Z/91UaCn2xrShP
YxlcFg3Tj53lJubsHeIyF3+juNR41miDZRhez9UzbMhNMNH+gwcbf6Oq6A3x
v7F7lpfRX5zhJsK2uF7Mz/yNljkv5C9h90h8JTF4Eu8r+a/jT/vfSNx7tZX5
iWV4UG/aE6rLTex99eNSf2MFqnD7Ybrh5DJ0+lg4VBDcRLFR+2717F9oSHjr
WvdTOA4c0m/Xy3ETBSVyzCvO5ehZkLvirzPLsCV2bdA3GW6C+uelN4tuORKJ
+zg+gH3zk6V95tJ43qXU1y+kypFNwW4FPkO8r2v9LfHbuQnxu6qFP1vL0LwD
H1UXO1/ShKvsFm6iK9LWXVmvDGUYbLctxC4sH1stL4z3de0lh7zMD6R1bfJ9
hNEy/LvueJ1rmUKo5W1VDWMUoxf9d2ebzy7DDdOI/+4tUgiWfePp+74Vo4Vz
S8uD2CkzpUusCxRi+FBFf/2zYlS3uHB5EbtirJn3wiyFuJLv/WmLRjHa+sT4
jNi5ZZBS9jMZHqcQ6wV4339NLEIfVZwSTmM/uHtYzm6MQmi5n7lw6W4R0qF1
vDPDnvk8Jbd7hEIsLdi2rfqvCNFa/bntsFdOn1zVMkgheHe1q12kFqG/nEf7
vbETUUfDS3rwvG/E34g6FaJtcyqbX6/8/qL5aeimEBqeC19LNQrR82LJDYnY
NfS3VeQwKMQIm0OC2+ZCZKHbfz0Vu31b/mxSO4Vw+tfW2VBZgFR3DavnYh/b
m5gsSacQ/ylUH3z4oQBNmq7P+459lNNULLqVQpzoOWip4luADvcthBSsjH9L
Z39wE4Uwe0BIvt9bgMicYsMf2G9UvOhgb6QQwUa0fFO+AhT159nxcuy/pxq0
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
x409N9mIf//mBSt+d8G9Tt9yE0o9Mt6w0+5XJBvx0OW6b5pSFwRRv+QWzzSj
GH//X/dy2YhW0d5rl18wINSNw9pJux39d0Dg+5dqNmKhJuS1Kx8DjkVu9/YL
6kQ/xc40yvxjI7JjdT4FB3bCsfG/xTDfhbwiNvE3LbERXsn/9RizdcKtc7lm
bKq9yCPr1MsMfnbCdY1Tn15QB0z+eOlcnNWPLmxolFotxk7sSrB+8Ia/A8oV
M4OkxQfRw0sdn/S3sxMJXSkjLlHtoG1TOCgmNYhi9W80XcEeO1/t+DeyHUSv
Lyuu2TWISMqaP37YH6i2HVV40Q7qktXmTGIQNfVZCuWueIJ1df+zdhB842VU
dmkQae7ZL7JVip2oqUiuuhzSDvFdWc8tPg6iHz5m8z3Y/9S7Cl+92w4hv9NW
ex4eQlxswgd1pNmJjVZsmsimHfxvjL2yOzaEbi9Nx5lhF9qX1y11uR32Ff8U
MNEfQkGRGVXXsB++/6Am5FI7+HmseXLYfAgJv/309CV2wZGdb8wt28FxMGjd
vO8QKuqOediL3aiXf4HDpB1Uf1MVb/wcQkc+Dpxyl2En9kXdijEzaIeEX9+3
G5wfRm15lJ1OsuzEmIjtbn2ldui/qqk0bzWMUp/nj3lhNxrz3R6ztx3uZI2K
JzoMo7lPz10fYvfveOc6tLsddgiaerL6DKOEjzHf32MX4i6RCd3ZDp6VyRcy
3g2j5zSGQSv25RAret2Odphc25rPNzmMXKMLbhyRYycuhFy86r6hHXa7yhl/
WRxGDweSDmpiFzZME/u9rh1adO6WW1JGUHjgi/xT2CPVuiUlRduBW29xb/aG
EbQ9+yb3ZeylsT/UKoXaocRUT+qC6gjy/ScR/RA744YTuXNVO7yyn7waHzKC
yKDAgp/YK45RzzGX6ZDSd89X98UIilXquU/DnsPFs5C2QAfNdA77idcjqP+o
HG8D9kNElKENkw5JG4JJtawRZGlnc7oLu6/k0OaGcTooc1beojePIEU99w4m
do+hsxsLu+lg9nxUzb97BBXNdycsYX+ayn3eu5MO3qY32uVHRtCywC5pdnl2
YtvcTu3DdDqkFez6e4R1FK2y03aiYi86pE18aaBD7PTgkwdrR1H9ouPsOuzu
8cX3v/yig+fkWgOT9aNoecA7byP27HnZMzfL6CDnJz2lsGkU8WmYHtmEPWis
m3a4hA4sBiPs1TtG0VVV1zsS2PVQeWdhPh3OUp7Yv5UfRRGXUoht2NdHJ90I
+EqH63rz3913jyJiJqlgO/bmzSe/6OXQof06l6TY4VGU4zTCJo39rNR5g8Z0
OpDVz5WGYRQZ1e4pWvG0lBtv4lLpsJD7cw95bBQJpe1Tl8Ee1V387koyHY5b
R28I0x5FjUcmfFf8ZuV2k92JdDBYyzZ00WAUhSCH/3vS1etoLoEOJZwTH5TO
jKKNHq9UVzy4LLC6+DUdLnhcPkUxHkXW7wPJlXl9mo5FhMbSYTLpDKPBdBSd
DZFZ3oH9R6IPr0kUHejN6eZJlqOoxvH2ohT2ZaX1Cjte0OHzcmu3zOVR5PK8
o2plv5d37TORfU6H/2iK5z/YjaLJ+P1XV+KT/mZw684wOpgsK1ASr+PxSz+z
bcWu8Jf02B9MB0kKupNwfxTtNir2F8X+ZGeh1ikfvE7x806SQaPobV9o1Frs
TMazA+dv43zrbNd+EzKKTnOoeazBTiveQFp60uH0bPSPVxGjiLLdMJAXe3nH
z+c3btAhtGG5JfLDKHInuHnncF6Juj0wfn2FDok9sGdd6iiy0mm/MIWdfoNk
S7Wmw+aEfTfCM0ZRy+2nN0exl5wsUP9qhcdP2Zwf9nUUSWbc5+7B3uSRGFhv
Sgdhr322Qb9HUdI9l3t/sLu6N2wVPUWHW+LiIm5jo+iXm/TEM+zpMZvsMg7S
4avcqb0TU6PI/xF3cfDKva6XuV6mTIcv/34cuTqH17k6xfQedu9TMmvoe+nA
P2+x1o59DL1LPtp9Dfva9lAq/046+PXdrDUVHkNt9kZn9LH/PfNj+poEHSR4
qJEqB8dQV86WNzO4nnzhgEfGVLz+gg/j4z5jSHSNG4sEdv3TksNPWtvgQ3QU
67n7Y+hotNFaIewFnx0Ty5raYEk8YyEvcAydvMQyzo49WMJ+eLm+DR6eU/zi
GzaGWPsyeLtxnUx7KSx+taoNJEMSj6xJGEM1l+3SE7CbCWmwnfvRBqfUwU/2
xxgyC15XvR77rY1LNSrpbcATiyr0V40jubKN5s072ImQXYIM1/ttEPu8Kd8o
chwxHq4+93UbO3EkjdJya1cbtKXfey0UO45mqqiXo7FvGIvki5JvA8bHdDva
m3H0J5y+7zb2fV9qGvNksIc4f9L7OI5+3uEVVMGuyflde0GyDZhKntxqaBxx
HVP/+U0S59v6D7f817WBX0Jx547ucbSwOKCYKsFOvEu+xpvD2gYxb+eW6YoT
yOiWa4XFFlz3vvb2htS0wm//2KblHxPI+qpzL8dGdsLq1bNjHF6t4Ci9XNLa
PonWc34uPYXf3zg2x4qhlhYo8dqq4SIwjfyKaFVPFtiI1XAjeMfBFvjcVFfn
rjyDVkXyfRXtZSOs0mOtPsQ1g1jOgl+a5ixaU8xb4/iXjaitF3S8ur4Z/PXW
FeY4MtHNC3lXy9NxX+H34A9rSBPYH+Vo6709h7wfv2oyC2Mjtj7fv/+4YBPA
0mpN2TfzKGtH0IEjDmzE4XXRWhVhjSB3JyRLNX8BbbtdVxqvxkYIenHzj29s
BBB6ZPuyeBE9+vBaS3wdG9FisGnRLKMBDo3bmve2LqH1mbTXE92shNmu3FdW
xxvgZrHT2M2OZWTduUpU7zMr8TN4TsCzqx7qh+lrXJ1YSCvbrzX83qyEft2H
A6WB9TAvtfYvdYqFrN/l0qZHsBKFyy3OY3L1ECfw30zXVVbyhlfx0T42VsJn
2/rHjg118Kr9pOLGKVaSa64gSOsbC/H+5Y2a9b51MDQ8W1p2g42sghfraLjP
dOcV9v1vdx3M1b5Y1dvPRsqVfiyIkmUhysyEpxz6a8HJ+OLb95fZyebRPb+i
Py1DY+uNl6OxtZB+wuP2YAM7mXjQ1MVVYBkMBNslg0xrwXLv9nd/NTjIy5sf
5njZLUHKrGeyyqZaKK7Oefz4Kwe56pt90ue0RRARz7qT0FoDZ1TrvNdLcZKF
A7vvb59bAPeT6fzUhBp4OqU43BrOSdK6cnPcFRbA4CrPCesrNfBOQHjoKxsX
GZY4OhVjOg93gn9vC1KsgeMZpfDlEhc5LN11piZsDjotxOMKlqph8VjeLLWC
i7ySMeph+Ql/X/D+/aLwqxqMTzZZvZOhkAl/LSemamdhYbOF3IGYarjz1ecG
4yGF7GmQoid1zAB8lj6UhftsmyR6MGc/hWwfjojd828aHkhadumoVoPTfbPx
liPc5NWvPEYvF6aAe4OmStl6PH5SzBPTZ9zkh/90jNDEJGzlFBZhjlYBKTZV
/qOTm8wR6DLPn8LfN0Ynf3+pqIIvUeUm9+R5yDBxPrV70+OQtSO5rCmpCvxe
faT3e/CQMda8Zj+axsCM6S47HlAF/9b4WxZ84yGvlPNXJv0ahYCOC4a8tlXQ
qmDXfZWNlww76aG9TmUEpLcefnJKuwp8LIUDO9V4yW1LF96adA7CySDhyCG5
Ktj25W+sxS1eklWsbdgl/h/0f+MxpApWwfKy4flXmbykaKN+8YUdfdDqY3g6
aoYGul0vS/f38JL5V5X2cPzshrShdcZO7TQ4Mp3zQF6ISurKnfKcc2RA2p9b
Fut+0WBj5RfzcqCSJ+XvtA9VtcPa/UVP3bNo4Pq24qazNZV8WfkI9X1uAS8T
jX0Zb2jg3R1c1RBIJa9LLipTVOthTEBdryWUBoMb2yrevaeSQcxiK1aRKjBS
IARS7tCgKrJAvZOkkk42W375dZUD11Ixl5gLDcyN143l1VPJCv2if2flvoNS
zStp0ooGUeNSH8g+Kpm3Nos+sv4VnLm6h/HpLA06Nbq0b0xTSS3x5L+K9mlI
0tC+SlCXBponoxXisBMz9oWOgp+QdWPz7j4dGoQx9Yp/Yf9JMfiu6fwJrZ5x
SPyO3fJhEK/EDN7vavIxj0w6EoKRpivYrbVE535i/5TVG1EcnYE4m2yMSG0a
XOPzsuJnUkmp3rfXRe9nIfXFH6+ua9Ggnx5JmMxTyf7QziLZ81+RHNehgIHj
NIj5Y36dbxmvX6rA2TGgCC0FPn+wRZUG8heFzkliz9//dpH4XIQGCtq2LxE0
qD/DNnMQu+6ZOx4i9CL0OWdXfTP29oMB9pex1zmX7f2hXIymbva6RmDfmEyX
+oadOPfkC/QUIxvHhHgB7IFZ5l3/sfCRSWqiycHHS1G3NCfJDjSw41C1sWbl
I5035c895SxHz2/+Y84doYFxAMfv69hFD8/cT9hdjsyLvUSbsUv2Jw3fxR6h
/W0i+0I50g6gan/FnnrwuXUMdha2GNeOrHIUxyfedwv7XFzYVhr20dkoHv3L
P5Hvfi6RpcP4fCdL/sqx8ZGc7x7JeP/4he6eTlDkwu6pXzuegv2yQ9LI8Yd/
0BO1ePPtB2kg9ERZNxP7rW9r/jP4+gd5NLT4cmK3sd1yJg/7MVfZEeOBP+jD
yKPv3QdoYCJ+16UE+2nK54gbun8RV4/RzXfYRdzE++qx3zec+9fJWYki/7rz
ymDfp273rRm7z8fW4hHxSpSud6WfB7vKLimCjp3thWnGolIlOlP9h/5vPw0U
PrQZdWP/8szgh9jlSmSquiiYgj22saa3F7vqhdPDCt6VqPpn8YkQ7EJOCvgz
lo/kkBaSJsIr0dRr1gRn7Ju5mblD2HV2DVXZlFYiq9tNYXuwq3+y5hnBvk0y
Qv12WyX6LummsBa7L6s09yj2fwGbS59OV6IuE3/6lDI+l99HslfcLMfgv2R+
GuqY5v1Qj92+K05oDLuGwNBykRQN5ZewB+Vif73u1JYVV+ovzG5VoSHfyKu+
Udiph3VaVsZBb154z56lob3qp8JuYx8RC9Rc8cRw5XNrnWmo+enbXHPsYaG8
VivrzN5sTewOoKH7po6zqtgPXfolN4zd6+XgwROvaEjJKdFgG/ZdDmUJg9gf
XXyu7vSFhqYiz37jwi5oYpfQhz1B18E/rZeGyvyobb+UaODwYrKxBfs67/XF
KlpVKOp21aFz2NcPHBVvxF5l9/yAtUUVyjryWu8QdrX5DwK12A/6uX4N9qhC
W2M7XMWxb4psZa3AvumN30BbYhUSDM7m79pHg6TU8xuz/7/fguFQnmoEY8nn
r2HXNmvZfAv7bPfaU9t+VSNqWZTh0700uPO6+sw17Dnu+U9MGNVod6JTqzv2
x9l5yrbYe0dOtT6dr0Y7D3+6bYr9QpQuz9mVfS2de0aRr0GV3705pLBr7t3c
sZL/gnE/b80H16AXgsfk8vbQIC632LgM3xd12ZfLa0/UIp8Ojdae3TQQG3h4
5St2s4gDuOmoRVq56uF/sB8Nu7M7FXt3qWuXvVctWriSdDEbe0x3x3DYyjhG
oualH2qR7pfMw/7YLTfpiJ7Hfu8G+2p/jjp0qSOnXQr7UNElsQZcHxb6Og4o
5tWhorkLS/aK+FzgTXccrie9Y2W2O6UakMg3gQDOXTR4WaXaZbpAJT23dhiX
sTSjjaujSl3laWD1UKNUBfu0W9/2A6LNKGLNBaYV9pb0Vxe3YA+aeVGcqNCM
LI/nwEnsxnEalZ24Th4/q+4W/F8zsvY5RJHDfsZJ1uUS9pPxbW8vZDaj7gHn
ux1yNPDfbv33vzkqyatxQGDHlRZkWJcscRp7eN7dYaFZKhm2/L3KsLIVeXfT
1qnJ4jqpp6DyZZxK7hl6syvwVDtyOCVVbypNA3aJQ81+2L8wesoqL7QjC6Ra
pI99s9ofqZPYw6xZ69fZtaMfQddLVbAnGd0t7x2jkt46WqeSfNsREbBBcCv2
MruSI0LYQy+wfq363I4m93rk9+ygwcLp/xr+G6GSdj9VdA6KdCCz4372btgz
tM0rPw5QyeLG+semzR2oOtRc9L0Uvu/T+TImDCq5vJDuN3WZgfhtJ/P0t+M4
yzySXIfdY0Ofzv1rDFT+bJB6HLvGtrramk78XqyLchH2ZiCvJC6XI9h/va+8
qI89KUy0Vfk5AzHfvnaXwy7ssnv74Q4qudauXMa7iIGCTD3deLEnGg8f5qFT
SQcp7vubtnQhrsLxQxXbaDDZ/CXZuYlKjv1Jefm2sQsdUaG3m2FX37chXRJ7
FTEkodrdhYTdI7ONsccJ5zrVN1JJf9NESutoFzKU8447jf1jcoKgCnY7h909
wtzdaNe6sk8a2GNTFxYoDVRSumVo8qFyN3rha120C3u/ycL5kFoq+dmTcizw
aTdSfsaWzoldPzN6h3UllTRLuclSpt+Dbnq+TSMlcZ6zEHw82OPX8YDtfz3I
+hn9+zfsWqXa0R//Usm5y9k9vDY9KG9VLSMHu2atf/74Hyp59MDo1RM+Paj0
1oRbOvar7yypt35TyaYnAY6tGT3oLo2SF4+96pBz8a2fVHJB3GuQb10vOlvc
9DkYe17bSbMN2KcNHqdmbutF/mjiaBB2sf9c4nPKqeT4i4Z60929iAz5TQ/A
Xjx8addkGc4TykPzVJ1e5MlVYueH3WIfTd/mB5WkKGwizt7uRVt7K2JuYV82
evrmaDGV/BC1Ty63sxfx/wn2uIp9Zs/BkboiKslcVjxtM9KLIiabvZ2x+xyf
7nHGrpDp3ia80IsqLo5FO2H/KvGxPq6QStKjbKVuCPchs5tXtzhiV2K+qjyA
nXxe3yEp0YdO/Wm674C9QOz1jcoCKpntKMxWs7MPiZbzsa94uFXB9yXcpwlr
+F9V0upDmqvKj9ljf/u42eo59g4+r/wewz50jNOQZ8W1JJkZctin4MfVF5Z9
SIUlsdsOu32caGoBopK/VLUDdJz60G2jksYV73u0z/Acdj03BuuiZx/SN/34
/9/Huei/HczH567q3p4W0Idm7C/8f3xPmvnru9i9OXskLj7rQyXNDf9fj+Fe
Wy0R7GFSa8pFXvchVvbNL1acT9zmZdJ3KunL3VT1M6UPTR9Q/P++Ataei1DB
foxfgriT14eGavj8VzzplTJUfcP94cufq/f96EO7d2b9P24bHuSFzn7FfalJ
YXNsex/yemIXsxLnp0ci9qrmUcnhqoa1N4X60b1f7pnXsO8dLgqoyqWSNdw5
kYpb+tGfW+TUdewRH//4X8T+OGLep0++H70+22jgil132fX+vRwq2UMqup3X
6EdbmLe1PLBvKqfdK8ymkgOWTTNwsx8pDsefv4O9/Gie2hnsXYXnFvPv96M7
xkMn7mI3FvNPZWRRSZjLtFAJ60fyFTsvrOTbsYNkKDv2zpJwQiW5H9ltjP62
kp/HO/w94DOVTClJtVRr7UdrHBRDn2B/Yfm2430alWyn9PGbqv5DyI70+4Dd
u92K43Ai7mPTjqjX8AwgCz/f1H/YfTf0exbgPp/F2PenmcgAuljZf28E+92/
Qq80sZcl9CT3SwygHfdNrk1iD6swGD39jkq+43zqxXJkAOW7WIQtYR9i3ZZt
nUAlrzbuPr3HaQAhW5ZeIVwHVGlhv2/FUclMW8h8VzWASm3XM9Swn0bfxe1e
UElujXN3aVGD6O2JTNkM7ING/DIjEVQyxDJtTcj7QfR9LuFCLvb3Z+4PXsdO
jZQe0vk8iBbkPiWQ2Csk2qO8wqnkQYbY/ZKfg6hkUdT570oduygWHfQMe4yV
cj5zELldOTQ1hP26gM7WyMd43v9WB34/N4SCPuz5sRPX1X18J/b6PMDv5hOr
YxNCwyjGcO99hN2+ba2YmzuV3HbTDyk9GkE6qw76ieN3gdOgRDvWAN/r2O4L
4ZZjyFqOc48cftd0OMxvpkricdrN0o8zxlG5sZG1AX6XzUcznzJGeMmme5Or
dgVMohh9ixJT3B/avdnYkfYFf98pJcse3T6NVit0n6jEff4FR7G3rt68ZBtZ
960rcQbtq32cKYS/X445mhnLH+Ylbb4fE7czYKLc08HhCYY0oDyK8bCb4SEl
Nnh5DzTMoUrJ6NwuCxrUGD9WN/3EQ+pH2wQamS4ggW8VGtpO+N3fKDYsasZD
3s60cRJmXULuG811LnrTgEMk9c91Ph6S++Vxt8nAZbT/OYU6EEKDdSK0puRU
bnI7XTC7MZKFVBfcdfEu/n78t6VRVUWfm8y8cNA6zY6VdL6htNPtC35PQ/zC
IoYoZFc755n9CmykToNg6/MKGvyW3/vwow+FbD5dIYGW2cgJypMAohvX83s9
/hIiFLLC14S/qIidvBw9rTa7iH+v6V694wMXOX3TzOqkHwepN973rFq0CoaH
zt5rVOAitfuMOc6f5iS9UNQEUqqC6qt+z4WyOck1G2LevxHkIh/dD2a6n6mC
9vks+S27OMkwQV+z2Q4u8iXfGulM1yqYzDD4ZfSRg/RyGd9i+4ZCXrQ5X/Mq
ogp260n+TNrBQZr9aDvbcoGb1NOjUIrzqqB+mOpeH8ZOrr5pVf9xBw+ZY1C8
UYBRBUTON6X/2NnJ88Hqa+908pCx0Ys6pbzVsDk6omnAio0kNjzQF0/mJT87
5TkqHqgGXwk7O3eSlUyaP/hc2IlKvq9MUzhmUw1M3q5bj7axko/jF76tksDf
T0OHk72eV8Pjisjjf9xYyGtZP49MdfKRF7gfuCn9rIY2KZ8Az7hlpFmrXVP7
bBUpSx8anVmshtianTbNp5bQtwV4yabKTypnHrHcubcGuEOHeZitC8gk+V/C
biY/6eMl+7bMuQaeJdb8LPGcR38/tL+6/UaApBporpdMrgHpc++uUceYKOuS
geI9udVk0k6VlnfDNcBzVEO5znoWVZUbJYX5ribrxaa4dfbVQrWo/Y73Q9No
p1sTaVC1mvxTyt93waMWBgJjyUj9KWQTVJkjvmMNKXRR+GRhSS282PafTHXB
BNLynyl+f2MNWci3kHN7TR2U+B1cFNo/jgKmQvKE0Rryl4XKEynzOiCvDAqe
9RtFFJeeenZ+QXLVzd3nHL7UQVf2T82tFUPo+1pPKt1IkGwUoaRlraqHx96q
dxqO/kOJzfHCha8FyWeKVhn5zvWwVm7Tk/G2HvSSQdNI6hEk1dYGX878Ww9s
8WtmNO4z0MAtnzQjaSHy5vChhq17GoBXz5+I/UhHmmbntawdhUiPqoVo1jcN
sINXWqA8qwGtcVYXJJOFyEg2n8brAo2wWXJbPqsgDaGRl3rMQSHcB4mb1z1s
BEPzqLk104VIIfZIz2PZteS0oN70Rr4mKLvRfX/tyzco6o+KW5nlWrI8oqIp
JLAJOM6x/l2iZsOMb3WWdNRa0sUq5hqsawZ5sVXzR36Vg2i67fjpP2vJpL/h
sfwJzXB2Qzl78J4aaDu+bLpraS3Js37H+zd7W6B4BxHqtrMFGjWaer12CZNZ
+1vEN9e3wGP66eo/9R0wenBj+Nx/wqR0/8CCvnsr9F3N/Dw/0g06GSwdZwKE
ySdVpf35Cm3gHT7fcna+H8Zuz2YspAmTpUmbnHX+tcHh2M13pkuGwEx78rtO
tTDJpnz9P4F4OlyeOHz++8QoXAi9PZ06LUzGn73r1HWoHQpOT1EVGeMQWR49
MrFWhMzT65o2e9MOlLxPUt8XJ2FPhdXz9D0ipAujKPfqug4ozG/fVCkwA7qc
XlYFeiLkXW2nHWRYBxz9tTlQankWLE2low5ZiZCG3F9ODfJ2QkPmtlXp6+bh
cm7yOgs3EfLk0pOTxLNOMB8pZk/mX4Qv6lEGSv4i5Fp/4RzvjQzglCl64ju3
BLHfOFn7w/C8moa2wu8ZkOiu65ISwELEBkY984kRIc+95xFq0uiCAtgnW3yH
lUjXXWVkloC9X2rqeFcXXPx+TmXaj5XolZyNd8XuyDTsY+vtggOczGPSD1iJ
pqyUr8HYmbfvepH9XTBq5yYT/JiV2PfN5Xgedoae14OjI13woead/pnXrISd
pmyh4FsR8kbb/b0w1wVCuopTbYWshPVisVku9ri0E3MWq7vhprD7mQFONuKD
UJto6zsRMpJjynHz0W64Vs4TuZGXjbgyFOE1hL1IK5g2Ct1wj0Pqry4/G1El
2/lhEXvrcaPmQrVusA34xvdRhI3oub/FTPy9CGlcLdF5RasbymhJv+x3sBHH
OAQV/sN+QOFQwbcz3dCiZqPTp8VG+MRcuViOXdXCbMjPrhtizjY11DxkI3JW
ZezwThQhxetr9Z686AYG3TVgJJSNmBsodg7AbkW5S9hFdYONhNJ23mdsxMGe
Q76Psf8zYGlSj+2G7K52BYhmI7xSdLjeYF/1VnF5Nr4b1GsOX0v8yEbEL1UF
FWJXnzAQtU/rhg7B67nuv9mIDpvT95gr42gqv3Mq7QbqTu4zT2hsxJ+OMZdl
7D2UK3yny7vhukZ5U1ItG9F9rU2G84MIWd2pvlG5AsftzpPM1lY2wvR85KwA
dja7tL0sVd2g/+BBqNowG8Ga5rxGEvtTdT3D6NZuME26V8stwE48OWi3C7AX
Gp7ympzshtywCJ2tQuzEKKtygSr2pWZb386Zbvj8te3jQVF24m3LAfFj2K3v
su2jzXWDQMevA3ab2Qm6ZtteLeyURNuXn1h6oKf7tJWvJDtRLuo9rI39U3/Y
idfsPaB5pNLj5Q52otbjxHVd7FY/xz6FcfXA3hFnh5+72IlNjneb9bEr/uO8
6c7XA/sMr2t37mUnSKDnG2D/2i/cbifQAx837hKa289OnJCwdTiBXZ5nzaSZ
YA8slD8tX3OEnfDOFO9a8frEbVlnhHvgAeOJgwzBTrCEz28/iX21jLek9roe
uDS4foE4xk74X2bds+Lj/ToAG3vgzRUxD2MtdqKkRIF7xSN0c7iVN/VAQktg
u7MeO+F85k7iyvhnUifuKGztgb8Vp5UCTrITymmTgit+65rs2+3b8Pq/27jF
GrITvz2CNVfWLzMb6LFpRw/07c6NzzJmJ/pOHNdY2a/7K5gTle2BktzqQoYF
O3Ht7do3Otg1aqx4Vin2gHyu0hpwYSdsrNmr1bCrm94xWT7cA9nqtzOMXPG5
CN42JrD3uvq/W1TpAesb98HhJjux+JMv8Sj2ngyD1wuqPVDUGCkWeZedKG6+
8nb/yvjrGt4taPbAVdmtHWNP2AmVqcF1MtjVREqmOQx74B/F2LfgOTtxWvbc
ge0rfnm6uuZsDwhH+q95EslOKJhVSm9dOS91Ld2353tg6OkL5q7X7ESazoDX
OuzfB9q5tcx74OQWxRGHT+yE7nj8GAd2xsRg0TO7Hni0a5c14w870XBWiq8W
53no1/fnde/2wGdWz22FVA5CWz928RR2xeXLnDvTeuCFywmHUAEOosct/4gW
9i4OVqc1GT2Q6B8UZyrEQWxnlOupYFdrNnKdyuyB12bLv6c3cBCsfLF0Gezh
akUWKK8H1sYFHpaV5SC+qq+vXMJ14FKcS+p/pT1gdHfa6JEWB7HjhGvzK+yN
lGsaaa04Pox6uWP3OQizgF3h+bj+8BYuPaXx9YIyI6rNIpCDKGjwj07Bfnfv
si7P6l4QH7D2uP2Ig3gvaG4fjf3Acn6xqlAvJOaUWWQ/5yAslUOsbmLPET/H
zFzfC8crx9h2vOMgpOd+ZitiJwo6byRI9f6v4/qOp/r74wBui3s/17yEW0JL
RigNyjklUqQhKaWymmhYRUYpyigrIzLyVRpCQ5nnI6FQXCN7uzbZXKvf8fv3
+biP83l/3p/3eZ1zgRZDwpO7hAcqn2yeCsf5uWpCnfUK9oKWez8aUlbwQsnI
QyVbcA7fDORS3OvcC5Rs2lwTA3gh9+Uuz9IECZLB4lCrbO8FHN6gpM+TDybe
jx6RiJIg33L8PnnsQx/I8u1SeHmVH9KdM+eiA/E8yCwmGAX0A94SMsHkygqo
yb8QUHlHgrw9qncj5v4AeM7Btv/PVADu4f0tO31FguxYLEmhuw8CG0/V1vGj
gpDfeuWoxnEJstzXztcpYgjUHwep77QocKHt9HieNj4XOh3G9dOGwURjrGiP
DBV+bq4R+L5Ggjxf/Eu+umoE2Ay+PhlPJWDCbNzABg4J0ly/Q1lbZBTUW/Sv
edtPwNLTVdNPW+mkhoL07ZAvo+BjX6bjaA0NPnvZ5/M7k07WbagRWOc6BpKO
V+ww+CIEzw98DzoeSCcT995f6QrGgZObcdriXmGo4Pto7K0lnfS+lQ04+SbA
2ld+ni7pwnByxvWxvBqdpK4MfNoyMAFYVoaZYuIisEBIOqMW308o9dx8sr8n
QfmSgvcGRxFo2JMf9K5MnJTtm9NxzZ4CdnyWn3TqRODRTIO9giHiZMOrDJK3
bBp83/uzM1pdFDb5jRc6mImTtf9idl5vmAHRYqc7+IJFoYtkQnUXXZwsrvT5
pSTCBnUC/wTYfaJQ+IXisEuVGMk1wblyq9kcuFagd9hmhxgUdFfm7QoWIwPu
3S9RfTYPyu/SLzj7i8FQ+qgbS1+M/Pmt/CfA9waBx7o3qNVi8Pa+1rGt/0RJ
+SiV7XSvJVD/p6laapU4bOrTGCPfi5IHkkc5P4lxwAbRTO3B8+Lw6ZuQDIqF
KCn5uc9UeowDzmWEh8fGiMPrg6r3b+N7rHme/dPOMk5oXJIbx/1HHLrYlUfW
ZYqQ7w2HN08Uc0GmiuXcZX46vNVle4xpJUJuPbZ9U0s+Nyy1Y2yu1qBDJYuL
79xoIqQICNkzls8Df/glpQmdocOkCxxh/enCJHwNet928UJP2RCy+g4dJh+e
MP1mJozPC8FCOW5+mBL/W6Ypmg5L3Q62BQ8IkX6ZbnWWB1dA3tl/TwLT6LA3
1DoLrRMi33bMrg6PEYAPkm/YVWLnjGEZNckLkU4PHYZiEgRgUUtAr1g6HWqc
0/o8LStErhYUDvsvWQA2TfllRWMv6IrnUZEWIkNmn1/9miYATWZhWUIGHcYc
1kyIpAmRGTynDAYKBeBid8mz2I90WGtk0WAzQyOjW3qTXIYE4KpjmaEHv9Ah
eqNT2vaDRibnGnir6wjCRZMcJY88OrzvH3f29FUa6Q9LA5W7BaG0VtTft9j9
Hz45pnKJRq5XUrNv6heEqp4WuxuxB0X9XvnPhkY6Hw/ZH/BXEOoV27ho5tPh
SG4o48VZGpnunto/PCcIj7SjMz3Yz+R95u45SiPTita15YtQIAxyGlYn6dDh
p7uN7Q4aORTdZP8EUKC3qdbna9/osM81Q1iXl0YyS32FB2IoMMK2N+oJ9qm8
ZjchLhr59CjZ8yWRAmu5n/GkYd/gvzW7aYkg7zRofvB9RYH1wdWOQ9jP+xR9
dZwlyJ28uzdu+EiBkq5jaZaFdHgp/u+XxEGCdHcOD3QspcCGov9CNL/T4eE3
t6ummAQJKSp0LTYFXpoxDLlXRIcLTjQprziC1AnbzPAwo8IjOfk6odiZx4I3
eMQQ5OclbR8eCyoU2bN0NxG7mIWOmHsUQeZlt+UEWlHhIeH0n/nYQ6lX77mE
EiT5wysx3p4K9dTCzkxiNz+h+u2qL0Fe0jDbWeFDhetGnH0Ni+lQRSOh/rAD
QVLmP14zTafCy2U7Ao5jN9xJLzS8SpDnfx1t6v9MheYWwusssMfSxwL2XyLI
PfrhdK8cKgx1qZS0x+6xUzlLx4og00+DqbfFVJhqeXLWD3tvfL2P0gmCfG37
5bRQCxXGltz/Lwj77m/vrNebEGRmLvf2N51U2B58lRWKXSrkgbzcEVyntG2b
Xh8Vfl2rvS4WO21N+G6JgwRZLhUf4TVBhTNbX8a8xv7B6dDg0m6C/HDrdvSC
AAFroy4PvcXeYXetaFaLIA1NZ+qeCxEwjRbETMUu2L/Fa3w7QV6JmusAdAKa
G/EapmGvT3q/cmgrQfoZH/3SKU3AVP6Sk+nYzU5OhLDUCdLO56eZ7xoCuk8X
zy37tQL6YKsqQUrrqhduWk/AZ7/ZahnYKc8U19YrEWRk9Al2hRIBW/WOzy//
XvL53t3MjQTJCuWfc1Yn4CrRslPL7vHAaVvpOoJcoS1axNhOQOX+Y0bL9ayn
VQsVyhMkV9w+8++7CNju3V61XP+/sRs/c2QJsr7ELstuLwEDfrb9vw+sTNTy
Toog5RL+1KBDeJ0erdaX2H8SETuSJQgy9sKn4CsmBCx+5vApCfuDt/OOz8UI
kmMtSZc4RUCtJA3Gcp81XhUGBhEE+fhjtNs1GwLmW71LjcQ+63boygNBgkTP
uc1XXSHgkxBm1fL32nP380YPfoLseV/NWX6NgPbiY3XL351X5JqBHSdByru0
vlZyJ+DFUINyu+X636fTD0xRyU99G05MhhAw79EtE3nsIzcyZheaqaRCR83E
G0RAvhVTJpLYW63ou7kaqeRYRa6tQRGuUz9lkII9RDrPhr+OSl4K2fW0p5SA
DS4P2yfwnCfvkD8rwqSSZUb7ldf9IaBMPW/b8r4Yfmk4r1BEJe8MWmu+HSKg
gfjLdXuwW1DP/dVNpZLafwP8G6Vo0Oum4JNpvH+z/UvgNQ8q+Tl+YOq7Ew0+
PG/2nzzOkyu8Stmuq6ikQcya6RxlIfglLmyIjeiw5Grz7FZpKvlTasGAd4sQ
/GHol1mJXXbhrMy4BJXM6Iu4fHinEFwhYltxB3vXOW2qnTCV/OaVLtqjJwQb
GW/FKnCOPQ+jJJzlppK81YtzjHNCUKejt+k0zsMb6c3JOv0U0pLHpD49RAiu
O3lKUiKbDsdbG+oHPlFIr8OulxxmhODXW1sTBD/QofV1y+NsQwrpBlfXRlgJ
w9uXcwPjnuPcG+lO3+MnSA6aTv09uF4Ezh2eo17yosP9O6gORIYA+YezcYvi
PxHY+ENcyPkUHTq2RyKN1hXkLipDtrBOFAakv38SqUqHe1PXrLWTWkFO3nd5
PZIkBmlvD67onRGHg+4/NPbu4ydbfYI3Hb8nDnv4gt8r5onD4lOajL8efOT7
MCn1o0fp8PY7TWsVZ+xc9xQ2pvCSFcArSHazBEySXuhXXi8OuTMuBjbW8ZDs
qNgYMx5JeCd4QX5zrRiM7h64aSrJQ5aN14yAIkkobZZql+QsBv/FTPAvGHCT
hxNM/JKCVsL223+8Hehi8EzgeM24PxcpoL59xFJHCj6GFzwb0kVh3leFrzer
OcnXSWNGk21SsOi5rpXMblHo1rNmsUOIk1S8WRsy7CUN1ccrDhwqE4HaTUr7
uC04yMSRH2W1PDKQX78gWOmgCPT0K6D26fxDci99Dw96y8Cx0Jha+WJh6Jbh
eFmiZhH5vNDLiO6WgaXBNdwt+sJQvum4drT/Aso0FRw7rMyAj2INF97tE4bn
NpQ8l3ywgDjNK8fNVBjwrVzZpzv4/jYm0vAmwmsBFWa7nDmryoDahXEXZHSE
4c5xm6IIpwXEy6tw4YIaA4qGZ1aZagrDf9ta/sWdXUDtnaoHrbcy4MqR6Kl8
BWE47HcspUJjARXM5NKEdzHgfd7cVGsOYZhIufDlQ9M8Cl6YO7HlIAPSq9en
cd0UgrmCfb2+m+dRTlOXV4glA/bzjvBW2QtBo22IGbBpHrnvWUhab8WA3pfE
uBIvC0GRU+pmIevmUcCHQdNs7Br7Mgd3WwrBsSx9zTiZeSQvkmDVYs2A5RRK
kOMRIWhnWwcR/zy6vjNEWvQCA1YFXjj0W1UI5uvFvlndPodCOBRbNa8woERn
6KjuIA1G7RO7YRIyh958Lfe2vcGATiXDgSt6aVDxRdfC1cA59Nr8g2A59sPS
YfXlnTRo9/rIhgd+c+hT0xhD/SYDFpkveB5vpEGZjvMnszzmkOXa3w3T2PXk
Toic/0mDouvzVRSvzCHHOw4Z150Y0P2vT9ilVzTops71Zb3uHOLOyyla5cqA
qVVP9u+xpsH3m1oqoqfY6Irs67Ez7gyo6aM0IXKOBrV8wLvWUTb6+qdINwz7
9NiSeac5DU4+8FJYi5Pi2HqVTT+wPy30On/vGA3ycHR3pneyUVhI0EeVOwy4
oGdkiPbgOheNXzEr2MjqvWNmL/aSXYpdymtoEFSomqm9YaMLH4quSnoy4JSX
hgtbhgbDQ3UHPJPZyOjQJfY27Ga2OqVFkjRo+Mda6ncCG60NWiVtij2lIjjT
QogGTx0XNXKIZKOapRviQdhPq/uk+C8R8KPldt7M+2x0hkwYGMS+EM5jZDpH
wG9nv7oJeLPRbFQmjcOLAQOpIx9kpwnIWdIUaOHORk0M3SJR7OOjSuUfhwmo
cNjUj/8mG8Uq3sQnLgN6Pc/c2tBMQE8nhTqrc2ykbs9HtcV+O71pPrGegANc
P7bkmLORXGZagT12lwO/H16pIWBWb7KK+Ak2epe+RcAZ+0eJpiaNSgIe4Kj8
bn+UjWJaPDvdsNsXG0/NlRFwUfEUu8QI9z/P45AX9k4+l9pvJQTcsvd4mbwB
G/1mMg7ew37I9/kd/0ICGq2v0fLUZaNXzwzqfbAPjYsMHsXnz6uPg/sbddiI
Fj08s+wb52XlpHIIWFeSOr5NC69zaDZleR3RQ+Ky7ZkEFIAq2uGabJS+03Rw
+bk5Edqslx8I6MC+IzeuxkbeLaP57thNk7sd7d/j8z8xLfmIMhsJ+n1VcMHe
M3C+bMsbAk6G15akbWAj+YSXUtew67UvDrKTcR9+LfoJKbBRuWF+wgXsN5pX
/EGJBPSA23uurWajqBKurDPYt+nF8RtGE3BvipSHBp2NWtfJPt+Hvepc4WHh
pwS09Wv/HC7MRu4+i5e2YYctAVa1wQQscZoMnKHgOl/Ri9djjzqzq//sQwI+
NgYSiIuN+HZybOXGbjYW7HPNlYDjZdyRpqOzaHi3VNsbPCf7wj9t9jPF/2fP
nD2bUDaL9N+rOX/2YMDkm7+qh44QMKZN7mdK8SzKmj3MCMIuwvypc8yIgCK/
L/zNKJhFi27lYtbYq01nrzB0CUicL3Ao/jKLajOHJwSw/74xv/69GgFzXSq1
ZpNmUfncvtu6eF+4+ovcL6EQkMtaSMrrziwaV+qJsXVjQOWxnb41BVSoUF3n
KK06i1gTIxYXnHFumO8s3pJHhTaUSkctxVkk1Ju9cgV2Pk+XhtCvVPgHpKqf
XjuLBoIvrU3BOeCqrel+JI0KHwtZ98ZJz6KQqNuqXY4M6HE3LPNnLBXWXKze
tZl/FkVd6CH0cJ7oCpyx/uRKhY6mrgmO7TMovpVc/OKA++9hctBehQpLdkrk
BYTNoO83GzafxrknWrfxoqQiFero6zyjP5lBJyXfyTBtGdD5Ze7FgrVUuOB8
c3WC/wxKHXkcqoedb9NZOp1Bha5Dyowvd2dQu+yY3CYbBiw111HKEaTCozOK
I0PXZhBjSrq0A+f2nPAaP64+Ctz+eO+0q9EMikqLN6NYMGC4zm9l7xcU+IrS
2kPhm0HsR/vXGhxjwDdGjs8MJClQ/axXoYr7NPpy0yHQYQcDcgkKyyn3C0DV
FTF528ymUOq4+P2hIRmoXMK/pqFiBQT6n8Imjk6iy2JWp5SfyEBW60DMRB4/
3Bt/s+vemQl04gTDM3G1DPTxMEnYHcUH7W36ZHTOjqMxyh4TkSfS8F7BwUlb
f17ogZRuSd8ZQ7JGdl9TpqVg/trEKfIqD+RuexchFjaKtt+peBUNpOC/Qt0r
Gqe4Yf71b/qhTn9R8/yHE2vvrIQaWfcTOc9zwW/aG3ukpoaRlbQv53SWJLTP
uThGN+eEmotPbOOvDqFfjQcy+pol4MmiVUM99hzQP03o5BvhQRSbTvPu45OA
P4YeO2xZ9Q9cqyrhplT0o8rFxKmFzXQYMazH/G24CCxCnXxkfPtQTXOs2k5d
cVj760bj4tt58G3nK9pe21709VC0Y42NGKw4PoUyFtngy/26VCHQgy7TL0fK
O4lCuawvQ/x2s0BtvLnRR42FfCkldUuPRCDPfxWlvfwzQM3rzkK+bjcKo25v
nP6A72/lam+ioqdA7x0dPQmTLiSgz/XH4bkQnBwA0SInJoHWqZ0+dd6daK9S
WRGJc3zFc96PQpQJsOc8/4HWtx1I/MjSt1+G+P/dh1Rl3YYxUL1bk5joa0ce
5xq/t6YLQs0po4x75aOA55maPRW0o9LOst4xnGo/pkYa+53+Ahdb2wCt9W3I
O0KAI7uQHy4Ze7w6ED4M2ndlxDbPtaAXYcX3uq7zwaWGg+7D9YMg365f7F5f
MxJvldqxsJUXXn1R8CWUPgDW0ELn+KqbUOjTJJ2no9yQ/Uj1cYZ/H1Db37Ci
vqMRPf/rMdpXxQWNhdC7cnYP+M/+HitmpAE1578ViU/jhMdO60TOPWKBLWqJ
R/lFGlDZic9S35I4YLfBCbPbBt2gsOtke8GReuTMjbI0Hf+BGIOiq82cXYBz
u/r0/OM6FD5do3gxahFcMzM8f6S7Azy9uiZQrPcPMg31ypicmweFi9cHj7a0
g/SDiXOsQ38Q+V3I+qT3HIhX0M3Yl9QGNncuTWR+rEW3v8lmcXCxgeSodnTS
7xbgMuQX4Kpai77CidyEzBnQV8na3zHWBKJ1JN50p9SglEFTHr/L02A8bvZ1
/+FGEJp3yL5Yswb1UyrMow9MgcnPp0NKf9WDmG1b2Bd/VaMXL2t50nUngeAV
RRdv3TpwOoJep2xbjTgO8cUt7poA3yTOUir6aoHKKtuqJko1os1b6T8zHwfH
siyfBfjWAFNX3xH9j1XoZYrczXO3xoA8y98uW6camG7Ti1SyqULQ1zZ117tR
EDZukmS1qgp8+r0dCshVITXtIqHr7L+AXa8TpjlZCUrU2wzWtzERS7fz3MKz
EbDKqWhes7ECrKZ17Ge+YiLPf6Pqog7DoFXigKzK318gRe2NnYwrEynOV8R1
WQwBg7WhZ1dPloF+v5pKNQMmepR3z3y38SBQ/aBpvFO9FDTf2liJ5JhIhJEp
qG87ABSC/RdZZ3+AjXqu4W8XK9H1exFB1h79YLXWE5ul18VApdykLa2tEpkL
vJKeeNcHbAVFmvIVisC6w5H1F35Uohv6e26azPWC3IvqEwNBhWDvsJON+KdK
lLlzz+B1g17g9DpqLZT/BoyVZeojkyuR5KHtgWLpPcB56PoW31ckMD10fS7x
WSVS1/189+3KHiAs84CvNpEE1PYDT7yxR0aIpThK9ID6xzJ5a2NJ4H++yf4c
9rgcELlLvAckGX+rLg4mAcuMZ8Vq7Haavb8rhXpAu1VsPN2NBHtO302Li65E
Dhw5MVz8PWDp4TuXFiMSjAcVFKZGVaLw3Ez7gCkW6D0mHrmxB4FUB8Virki8
vhgvr1o1Cyg67JZaakTg3qO4uwMRlejOkHWuMJMF+oJijtZWIHBsLvdBFXaf
K/lbxn+zwN6h5s6HWQgMC9ZcTMLeJWxk+aWUBZoD8m/xBCGwQ8Ez1AC7uaxo
+sFvLFD87siC0VYEAgTOuCU8rUTvKf6t4RkscD/QpFL2fj7IWfnc3De8Em3o
vBP7OZgF1H/0Untv54ODnS9W38Le4Ls7vvIxC4Tob8tKu5YPNrQKyF3B7vON
uWcokAV8nvmf0zudD4zPd7UbY19qfW27Du/nzGfl9Xc18kH9NoaRDPbbTH/5
+LssUJr/VAl05AH5G1ZlKKwSrUQJ+9JvsoCyfMX2VXV5IL/v9c3P2EPX/lKu
vc4CD6ms1IXyPJB6ftzsLfaLSQkZcw4sYMa/+Q++FAJ+PYfmSOzo143g/VdZ
YChohmoWnAfUHl4ud8T+iK36vM8arxOnVfAD5IHnu5R0t2N/XJFcvN+UBV44
7QZ5mnkgbG9GiRr2DatcLF1MWMBGAsh9VMoDHRL1jzYt18NX8DT5KAsIG5cI
JUnmAb7Vo8WrsTsFzf/kNWaBON9XgWF/cwHn4UQFQezVT5xP/9LHufbhzJow
Vi6A1x+E82Lf3R6Yy6GH+1wuRw9vygVN+o17ObEXBT38vFWXBQLNbdY8K8kF
Cfz5ZuxQPFftlg5xgAXUmn0/ZsbngimvIssh7PyPaNO3drAAx3VXvYKnuSB0
0jevH7tkT7ZwxjY8V+KPNH8F5IIA3kcnerHbWX4u6N/KAh9XR6n2u+YC+ug2
2IXdN+wn64w6C7z+1bCNbZ8LLhb+Ce7AHp3tcTJyMwusXV0UI2iTCyLXx69u
xx7c/ul8lQoL7NKUc1M/kgvEgkPGWrDXCnSoHdzEAiv2/RnX188FssFp25bd
0uP6rO9G/F0e5BVb7ML1iLV+bcbuVfnl+Pf1LGC7+vaUs0Yu2CYpeWvZt2jf
1+NaxwLrNN56PtmI+xl13GnZM6delEIFFnBhTVm+WZ0LykODU5d9846OLi85
Fkg+Mx9XLJ4LbvEUKSw/t0SLGoJkWWAhx0KzWzAXsPoH/yx7kuYY898qFija
gNZyc+aCCfCvuBX70HmLl5DBAgHW083G0zmAv0FYePl9XSOGfc5Is4Bxa4Fi
7GAO6Dv1PmG5P2n3bWm3V+J9tGW7l/afHBDv4BDFwi6cI6D4SZwFykp9qUFv
c0CbjXLHKPZdrUIOGgSeNwfDM6yEHGCcV2w7iX39xtK3JhQWEI/o3QUickDq
pzT1WeyO/hfCnQVY4Jboj/cz3jngZ5NxPAeekzU/9trm8LLA5c10A/cTOcAp
cLBSHLu9i/OS8VI3UDt/V6TdMAecsFj7RHp5v1QpBzovdAOVUysu6e/JAQfu
O4Svwe72kvwWO9cN7ug/zJZUzgHTm1c6qWCv6XFTHJ7uBvczRnvLOXOA6+Ze
34PYTdbz/Hn6txvsiNTjvpuaDVLYqpMh2M8cXHLm6+gGkQO8l5deZAP3TGJN
LPZ7Fkectrd1g7FmSVOPqGxQ0BcY+hL7u3AkebmlG2TUPc/38skGnpLHDHOX
94W12KHfDd3gdLpqecSpbPD93m7KIPZcFaurCVXdINbM4DbBlw1ufi3JN8V5
8rlVUc/6ezfYnONpLn0+C6xply8+h/PNubO8wzKlG1yKl2hyOZEFrp0JdL6B
fZTP7vL3l93gZh9/co1RFthrUGnpgz1Gp9FtQzJ+r+L3YuE7s0DWT+boK+zz
nVe1/iZ2A70bEibyYllgaVyhbwL7utbTGx7EdIM3oWGid4q/grV1Btsjcd7m
hqgElz7uBhoezifkVb8C7pRP6hSc/2pBT05nO3cD3/zT3Bs5vwDCQ/TSq5hK
NP5L8KeCXjfY5GA/1kt+Aqk8VBc7fH5982+7/3CwC7RqOv9JsP4AGu4Wps5/
rEQcakcuaYd2gd3+yRQjmA4+6Oy5tb2oEqWbsJ+k6XUBkKL83YPrHQjvdvpd
2lSJ7masW7zL7gT6v0xMVue+Aqrph3xqpnCePBMbnv/UCaTutsm0NyeB/2aL
2PdFmMhfbuCXqlsn6MnOzPwcEg/M3V40qm9hIq0D14ofgE7w8OKCBaEcBco3
+FK4TjCRsfa2U+uITjAy/PerPy0KPFG+4P8U+wED3k+W1E6QVhdkTRmLBGPW
DbsVzZio5YmWcRylE6CIxWSJzEhgdcN+79GTTNTd6wVXCnYCF2J19XEYCZ5t
my1IMmeikSs0aSH+TqCnPnz5mmkEONbLjjx2jon+7eB4vIKzE3h2SVyQvhcO
Rn5m+dddYiLdWqs2xakO0BrYXcdhGw4OOmyJuHGZiczNbRfsJzvA9WSugIH9
4eCje3st5QoTxXXSTnyY6AApLJuPJUQ4uF3/YwxeZSKS/i9fe7wD5AxpcLyO
DgPuPz1jUu2ZaPDzkM3Rvx3A7bLXOv4PoWAfX8fH4JtM9PfUt2G//g4Q+PGe
i9zTUODLv4lT1ZGJVnD1lVb0dYCIG685wa1QIBLkcq8Me7CIaZckdk9axHcf
nVBQoEST43dmIknv1KKUng4wT7cY3VIWAtb1dv3yxvcun4Ojh351dQD1Y8O8
l96HgE1aU9myt5joV0s/lyR2d1/BY/EhIUBIdrwpH/sHQffx850doDBqTaDk
yRCgm/wia/E2E1kdpN6dau8AXnVbbp/UDgFzB464PHdjoszL7bIQ+8+KFTGx
q0OAhV/Lhd3uTJSlPTnr39YBOD4oj3VxhoA15/YHtGB/X6xO/dPaAXzeK7ur
soLBTJV/l8cdJmoS9jklh/1/P1G/BQ==
      "]]},
    Annotation[#, "Charting`Private`Tag$1124#1"]& ], 
   TagBox[
    {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[2], 
     Line3DBox[CompressedData["
1:eJwc13c81d8bAHChjJQyi0JCZoWMRKeklBBFZrK+lFVKUilUaMiIkChbRvbM
eJAtm3AvdxqXZLRoyO/c31/39Xq/Pq9zzn3Oc57znF2OV87+x8rCwrKRm4WF
Df8G9q74Um+nwynXEg1V1QE4ATTO4TQKahXexVMVnA7jV6IeHjowAGGE1OhQ
7DYP/GwjItPBKTp39ZjaAPA81z2giZ0U/mavZmY6HLR76mOuMQDC01wVL1Mp
SPvzwfjbfenw3LXa5/ahAWhNFW68kEJBPFZ/7jTuyQAbz8Waj8fwvIoKMzOv
Kej5hnB7u4EM2HVJ/8JzswE4PbnlHF8CBbW8IPg0y2SBj/I1xxTfAcgjtpul
RlKQ5lEpX9kf2fCf8P2NfY0DYLBX6sDRuxQkbt9E0LiXBxoK70R7eQbBOnLm
ipsHBXm8Zj28fSofuu74lbJYDsK6dGedf7YUJDj/uCC+rBDc9k/V++cNAtks
7bK9EQUdHfGdbR8ugpGvrqob/w2C2JNNG+oQBekqScY7bygBKH7xydJqCNS5
HdfRlSlo+ctBf9PdpUBL61qglQ2BpNPLNXlpCspRVgnYIVkGxq23ZOs3fwL7
V3alm0QoaN6Ze9sp+XK4/iSlY8j7E8wP7A9p2UxBvlts2y8JVkCv+5/Skd5P
kCCvsTzPTkFjLRGn2JcqwImj65jh/mHILNLRaVsmI5mktcrl/kroiFqzcEkY
hjyLTpYrk2S0mDlzb0dCFWjafH9aszYMhQFblz2HyCjyccP8tv/eg9nDKzb8
V0cga70Om3ozGdkUecgcEK+GM1OsY4OUEZDnWnpnUU5G98dTOun11cD58NSs
tOEodFR4mp7PJqP1Bayf5ZxqQEY1+85o4yjQx87mCCaS0ajvbl/1+RrYONb1
vFGVAF5cLz9fiSQju5rqpL03a2Hskek1q0ICsDx+T4h7SEb5GRvvpi/UQkDR
79ZxRSJYCHGX198io2OmL9Ucz9XBIyOn519SifDEgh5jepWMXtN/oKSiOhAP
HbFfkBqDUPezxV0uZPRZTYd4+W8dzKzmSuxOHoMHZO6gSDsy4u75dkL/IMBb
xbe7okTGgTr67eFWCzLK+hbjo+UJsFs4flYuZRxuJ9kmRpwhI8UNecb2kQD1
/tsz7SVI8OvO6OLOU2TkYzsmNYadUTrp/1SSBKL+u+XZsKde2sBhEQUw8x2u
lEuRICxVwZNxkozS9KQWTj0H0H73NJtHjgSHPnltKcFO8IswkooBCJn44/Fe
mQQdbGGdJ7HDpOim3DgAHucANdFjJPAyO7HFV5+MFBI2O6wlASTO/+lc+o8E
+rez6oeP4/WUe16zfQ0Q/mujpMQlEjCsYhXrsJfEvgurxB7I1xtt7EaClWMc
qenYt1k1Ej3fAPQ02nbkepHgqr1ntjf2GDKN/jEZr9ODdt/1JgkkCDryPNi3
NAm/tE0D0LDx3jHxiATWnY++6eqRkYg3b2BjFkDsVeW2pVwSKPuHp1ToktFD
geGQNexehqX62/PxvC7N+W+wU4a43hx6C7Bd6wD1SCEJKsS3NYditxVPZyvC
rjUp4BhZSoIgHd5Nlti3tZ1LiswGyCyuSdhfSwLqbw3uX0fJqO84mXd3LsDp
WaDd6CbBxDq+Km2mh5EVTLHvWLm+9rqXBIHRfRbS2CMztlndwz4b2KnW1k+C
F38z1jZh166SnR7C3pRkvCAyTILwuKdu5CNktOx0qe9WHsA9bc4XDWQSWDXo
vLuPXSsxgxjzDkC12zGTf4kEFy+PTXYgnD8fqrhKsfsl51sf/kYC8sEywVLs
qVcHT/Zjp57Xk738gwQ2n18ZJ2FXatvye2M+gBu3Bi/8IkGqahTxCnaDS0ay
PtjtmhI3erCSQUie11EQe325Dukp9o6FhMdx7GTgHTAg/DtMRtnOohmp2BdU
yyU+bCDDB2qkDQN7y+nn/3Vhz0tWShDZSIbaa1q3qrGPHBUqEi4A+HrsQVUH
PxmSVJclHLGHhWyf34NdyrNr7acgGfiIt6insSewLx3SwJ5O57i4exsZ2DzZ
ctWwl2/fwn0Oe+9ZjUv+O8hQ+VzOigt7bGr5lQDsk9709H3SZOAvL9tVpIPz
OY9N9RH2uzr8xbZ7yMB530n+FXbZjo0ckdh/PNkw8liODFq1AtrB2PNzj1AT
sXcf3+U1oUSG4g8Bt62wH5dxnU7Bbh6oQ9q6nwxyhZpZx7Bv2aX9LwP7huEN
rkiFDNrG38aUsJ++WSOdjf1a4U1OzwNkeLi3QHQb9gPskxdysStef9KYoE6G
eKq7Eyv2fypC8XnM9VyY40nTJEO+v43cvDYZyQdysb7Dvre/2CNXiwz9/uLL
o9hL7GpeMb8v1BullmiT4U1oxcdm7LFHFf9jjm8tb+NRc5gMBbq7c4qw97w6
b8dcz4YVVZ7mI2RIPOcYkYTdiqIZmon9ueTFhi5dMqxd9PF/jN30u8il19gr
HBLcySfIELFui5cD9opsQYmX2LntU+xxfYEFavw1I+x2gnUc0djzwhluSwZk
UDL7du8g9ovETS4PsZuYSAPbGTK8fShasBV7VZmD3QXm/1Ia/U/OggxXVfZ5
Nh4io7LC+9Gm2AV8HdlVrcgQXqdVmI+9/5f2ih52+ViOSm0bMlhyCf5JwG6r
e91Ejvl/90XbmVwkg4X3gbfXsR858uYQA+ch5dn+t36uOG5ZAvbS2CueVv0+
jF1M+4lc100yGL7YeOKJFo6PsY6sDPaTUCA8cosMKG9k/U3sLRHKwTzYXVzf
itDvkOE20avLCfsRC4euT/h8zf1iufgrgAzK239c18H+LSI21gG71mIPReYR
GW7svSi2dBCPo7eD2wSf6/uOn5uC48lAy7RmWGH3f1PlxKwz444GC2eryDDF
5musrElGNfrCUlbYVXr39YVVk0FeknBnJ3axY93zEthrPKc7WmrJMES1LObC
/nXfobR3uI7Vbyxff6iRDCp+6Vo0DTIq7SgLrcb1sC16b7xUJ57X2bUyGvt3
A3Pt7AwArk+3Ff6OkWHUVuPSijoZ3c2+qcOsw4oift52LBTgqx150aZGRvtv
is7sw/eFy1XXt0elKKA5z+B9qEpGm0lrS43RAILL7hbG0hTwc5POvY79U6+4
lDn2/Tz7t9jIUKC6XMPYCbtxEwf7TXwfnfX58tpHlgL7T47l6mI/2KFUXIjv
taXDf/a/VaTAFI9o8zrsQWFBzX/CsPefld6qRgGzzTuvBKmQkTA0lC0+BHiU
fO3w7HEKxN1MfR2ijMe/d13W/Bq+j2Ru51e6UuCX0D6Lt/vIaMrN+xW/HgBH
cQu7Ww4FHs6eu2CpSEYnflamq7Lhuld82+fCNwrczuCxOC5HRt1qZz1GK+tg
ZMlNaVGDCsPbztygyZDRl5QTmySs6oArSi2m/T4Vdpu17+yTIqMNv6UU7i3V
wvyWUjbxdir8qU8UsNuN4xmtb/IR9xUMpeIU1Q4qlMb5mVhh3xknmbJ9vhZ+
Hsk8frKTCgPqTtFm2INgublothaO6bu+8e6iQrer097T2ANah0VH6LXg2LIp
oamPCuGt66s0sXuc0vz5d6gWbuz4nu1OoMJfgYcSgtil6lrPZVXVgnKso1Td
ZyokJn1TG5DE92NJsNS9e7UgqJKz3mczDY4Lsbs6Y5ewukTw9K+Fzm6rxBRe
Gjha9Uo6YL+wv/2F7e1aaF3vdLBnCw0EOXqnLmDf83Rlh4ZvLYR+8A2R56dB
x4hrqAX22RclHhRPHAf2cx5UYRrIDszJn8aeId62mf1CLTQMWTub7KJB6VbG
b1XsH9YGTkRo1YKT4+MllQM0+CP9oHoj9jBl7cyLmrUgUk8wclCjgYUM2Z8L
u4lJNfc+9Vog4gocoU6D6OP2JziwH/RYonUo14K3TFnInCYNVIR7l1ix+zXQ
en7K1kKlkPKdTB0adD+0yvm9i4zk1nG8FBfGcXh/MEBUnwb+NwtSPmOX6Kvr
K/1aA9/rrpC5rGmQJK+fOYA98YPakWeLNWC7+LdOyoYG1B7ZwH7s6xY/DDjj
PrOH/1oasqXBRiMhhz7s/26Kum2drYHDI9x3btjRQMGGX7MH+84ez3P21BrY
/bnUmeqI4//qqVYn9va5c0JDPTUwP0wWf+9OAx2T3VFN2PfksA296aqBM20D
hkMeNGghxRI/YLfKSq683FkDdief3Fv0pEHcjS1KTM+nxc3/bqmBxddqizJX
8bwnBSYbsAdMKwvy19VA/UE9nhgfPI65WTZg71Fi/fOpuga8D228WHCDBof/
fFFg+lR5zvqEqhpIEb1f3uFLg30NT8rqsM/y3X68s6wGPov5Xl93iwYvtD6O
12JP8G8zEMmrgbUmNekrd2mwq9L5fg32UKetFsPZNfDMWCvpyT0a8Kpv0mG6
cuTOR9FZNeCxfmx7ZgAN3s6V/avGflD7hiVXWg08Tv0iMR5Eg6WIDXFMN/ev
Xm5MroHbY5a5K/dpkN/4zpPpbx+8r77zGvf/ny20BB7SYO/7c6eZHlN8JV01
sQZc/Bhd+4Jp4Lt9ZR/TfS6PFM2+rAGhvZwup0NoEP4gQZTp2Zxf6clxNbC5
vJTVNZQGd15pbWb688UqrfMvakDu/ee0+49ooMc+wsH0sCClcu7oGtCdyDn1
+jEN5u2vcTL9p6jB+brIGlAhLXyrekKDQDOuLUzfL7FJ1Du8BgZNK1OHntKA
5X6iGNPj5q+z7w6rAbaZdeeXwmhwPUzhANOfTN/hG3xcA3FGHZs2heN8Eyo3
Yfpld8njD0Nx3OR4O2QjaHCm6ZDP/9dJcE5UDcb5KdP9RC+SBh80al4z3enF
kW20+zVwZJ7dxD6KBscENHqZfvtK1V3tezVgEtI7HRdNg/sxIieZ+zKIXNem
fGrA3f21IUc8DVJDwp8y9zcxVv5OxLUaIJ8j7N/9kgbSwiNfmM6qfU1U42oN
iJy/sx0l0GBKdrsFM092fX/Q/sC9Bk6foS/7JtJA0zbwMDOveNNdiXyONeD/
lmtmKpkGnZ9G7Jn5uTr9oCzoIj4vhz6UiKTSYDMnB2cj9s22bc8WbGvg4HjE
A+M0Gsip2lcwveNWjWabBZ7X7bxKeQYNMpKi9jLPyx/e7zc9jWpA3uX4x+Ac
GlT20++1Yo9vL40P1ayBvLEtC9Kl2NVImczz2Ptwp+HvTTjOHs+Il1tpcC91
fssUMz97WydObqyBBuEp3ddtNLjYG1szzfQb++7EctYAR97X/P52GlCUbK7O
YD/qLZeyl60GduWKvjj0Eefba/XFOezUMre+syvVoNlo9XJTHw24/lMw/Y79
WbR6vRutGkROzd0rJtBAmSUjjh3Xq6ySGBgpq4bNTgnZa19oMKGcqKqAPdla
QlWgpBru3OVh2bdAA4EokyEl7Jk3zr8zLqwGDttca7tFGtBprff2Y3/hXFZW
n1MNslLOO2q/0iDg9SpDDbtYwaTgyzfV4C98ve/2Mq5v6rdEjmLvRYZbRR9X
Q9jRyLWfLHSoXTJessSuHMdPcrKphgRbQcuv/HTg73Z2D8fOZ50kxrn6Hgr9
Km2/H6SDyrdqvy343nl98+fEY933oBHyPHBdEB38T+u0muH7sftQ0VnGpSp4
k31AVrObDnaP1bQU8H3aOGwjaxhRCQYVwZ3uQhNw7Ibx1FlZMjp7eCovJK8C
7mTc19e7MAFRdyUFCPJkxP5snBGUVQ4x2rdi9+RMwIvpHQK8e3G/dH26azGj
DJb2PtKgLk3AyC3JQH/cDwS5J+tFBpQCO3mJ7RmaBBtJ6+w83M/UH1ofcfRM
CTiFxrHkP52ExNGZkGO4f0uOUX83JF0MpBmjDaH9kyB5KlB7Bb8vLJZ+/vQf
LITfIzkSMuJTELlr0fMxfofysCvVReOHjeMte5q7yxSo9z2gyhuQEdFrX+op
5TxIzz8Uea5kCgre5ebUmpDRQMNxh/Na2RBzbi7N598UKESePpZnQUa3YsVG
0m0yIa1tUVBebxoUbRJ4ouzIiJ9PNPmqZBosNu+9eTxiGgxVq+SDXMjIPdj0
p9n6ZGhxFO2dGZwGbyH7RSsvfK6LFkdu1L0ETp91Lwq3McB49YD/dV8yUnwQ
mSdQ8hz2bc7a98qBARmaWseLAvD9eI+TS5MYCl/DyVu5MxhgXeGgVPeIjB45
uUeE3ffG94vgFpcvDIgJK2pni8Z9b0Rm/pnfl9GqYONsluoMSJ2S1IpKIqP7
s/Jn7woHo+3Lgl+9fWbgSIVH90AW3scv6qIns58j4lYrkeGqGRg40aB/qQTn
7bRq+1mPBPSinubc9GsGzi0qJKXXkZHXjV2r20VSkITGvHqcxiwMe1tpbu4g
o6Z1PE6dbhmoJ27DoXe3ZsHDNfYX9RMZETh+fX8Rmo24vI9k2JbPQoc+H4ce
nYxcBrfu0RXIR3pKwZycy7Pwd0+ry+4lMnJLPuSZfaAIFQxezDFT+QztV5Ll
HvzD9fNpc5KUXQmaG40rcHX/DB9v72Rh3UBBvJeD1ik0lKFDuaMDfG8/w+Z7
RVfDNlGQ4fcXUofXVyKJDUKB98ifgSwmc6hDgIL8yvcEKjx8j+afqhL3iczB
ds8wO+IOCuqbvvk+ZV0tspc8ftLx7BzUlvg/X5OioKur4qziFwBdfusdcTd4
DiQ0g1U7FClo/w7JZYff9Sgq8OJ/btVzMORH97muRkGD8o/cnQ80osmDA4Nn
5/A4I6OXanQoSDGff2mdxwd0hyy3gy7yBT7fOdPAfYKC4oXTync0NqFUlZDK
3tNfoJrFMfnoGQqq9WpRWGZvQWmC7bpfb36BoM8sWzZaUlAqn0RVsksrqj3g
cY4v8wtI1QUvNzlQUO6Mkefl5jYkNLIsF9v3BSoF7GSD3SkoO2kqLYG3A9XZ
WqWFr3yBf7IjXzp8KOjA1a3nO/w60YWzAcHsu+bho/9DQ+4ACtpVyV+T+/Ej
2mQ15Lz5+DzwyE4Ftz2iIPeuMunDO7rRdc5jae9d5uGm4czzgOcUJLrlxSTp
SQ8q/TOx2/7xPIhGWJVpJlGQSlm1zlPvXnTBokyKnjUPIy6KTc5ZFJSi45qr
rNSHEJ1l69eWediexjHxspiC6rw3IuPxPlRkcc11PW0eLrhUyh+qxeNc2/Op
+Ek/CrcJa6/5PQ+Na+bPu1op6KSH6/xd/QG03Wcw9xb/AswRx+WvDFCQwfW3
bGhlAFmyjD+Pk10AE/IAukqioAZKwJx+Jb495SL+GeoswAPTuUvBsxTk4q0t
t+/GEBpe09jkemYBWjf7pjz+SUHP09zeJ0l/Qsdj92Ydt1sAmblELeo6Kvqi
/Ipj0+QnVBPQ4qPgsQCsbE6vTDdT0RHrkBstccNI7XeBF8fNBdjffXV1swgV
ldawBtBPjKAL9xQO5QYswOAHal6+NBXlqdvGZLOPItnX5UbNIQtA3DXz3U2F
iuakGo08OUbRpgJbQyL2VV3f9wnYb8hpsypzj6JOpXdyS9jdBmuCOrBLvjxr
W8k7ihSi9AN3hC7ApMoNQXlVKmriMRtsERlFS3g3vLHnnnpqOoPdWGBdN23/
KHLJbYwRfLQAzZpbdlxSo6KTYo3vhS6MomMTMlf1Hi9A40LciosmFZV8HuD1
LBtF9wNrg3WeLoC++Y36y4epKD20Ld2tchQdjPM9YYj9XNSv1STs3tybVS5V
jyK5m7Fka+wJ/Fd1+rHbDLmpOTWMonQ+tlc3sTc+VmnUQlT07/tDkmXXKArS
sFEvwD4cw0bfeISKRlk4SnQnR9GbA06rQmF43plHQflHqYjV943CFkECYiUW
QRv2K+nl+37oUdEbltr3PNsIqIw39XE/ds6UkRy541R0bXn3US5RAuLaVKsw
hl2BSN1jh91Z650q6y4CCqK6r8xj/575dk8r9j1PWvK/KRKQvLdfCd8zHP/v
qzovT1DR85/kH4N6BKSxJzv/LHbBvbebdU5S0dW8isBIHzzvz6tFpdgPa1tp
PzpNRXsFC5bu3iSg9YfEL1Vh55Fv+1uN/WMOq5X7bQJa2WeyUot939m/dQvY
RQWSuE8EEpDJU42MFuw3TYtPWhjieWllK7+fEpBtOpfyJ+ynefS9ZYyoSLg8
Q5QRTkCXuatLRrHPf+xD1th1pQsODEURkBRlhncc+7fWnVvCsc8++3KyII6A
dmvVmtGx7/VcLvuB/XDYvl+OaQT0RU92yzz2eJ80oWZjvL9H2D6eySSgdc3F
dovYgznlv61gv7b2LkY7m4A6rpeFfMU+8cmzT/EMzudzrhxCBQTEVivh9JMZ
N0mF6BjsnXr/FbEWE5AaxyPhFezVyWm+bdiLl7eZLpQSUCrZOeMXc52WwzZ/
sRtaB3q3vSegggR/o7/YB/28FJxN8Pj/7f5aWktAfErlrqvYgyi9gvHYtWat
L6XUE5DqO0ebf9gL7s+t+4i9/YXY4LMPBPTjWpDsGnY7cv3CGvN7IRe12y0E
dPDT1h6mP/c1IquaUpHjdrkwl3YCIu3lP8MSvgCGbVG9rtgFjS6OnP1IQG2D
D98y/ZnZsw+vsKteZBFBPQT0SdyFyHSLV6iyB3vkKpupQj8BzbqWTzP93Y63
+WxnqWjDJ4e7wkMENMl+o4vpUZYtmRrYPWO3vmEbIaC3xilhTGfreZnsjj1+
jrt8gUBAAkla0kzfwCKZ+Ab75ZDjjcRxAtp48kgcc/2J7nYvB7CXbq360Eoh
IM+sIhozDi1RxvEc56jISPvC+xI6Ae3gD+dgeujXpfhD2CkyQqFPZ/B6vILH
/2AfcDJ5k4Y9RFfkws05AmrY/Cb8N3ZHH+6MYeb3pUqyTgsE5CWyaztzvyLg
Rt5GMyrabO6QpPUDfz9o8/4H9vb1dvXXsfOG8rHNsBDRjPdLpS/M/TV1/XvM
nIpYbN8GDrIR0QLPRPYs9nSNJF4/7Jd+cn+DDUTU0x+1No19nWWgVB72VRXB
8lgeIko/LKBBw9560vCcwHkq+tZtVnpsGxHpqKZ+GsReMzvXNIHdvkDzyat9
RCR748xwMfYxZepysCUVLdVUspipENHZxEqUj70hLzOlHPvPOA5PHjUi+rZw
PySbOU4kwXAae1j5T5m7WkS0849mwRvsWd+fZp20oiL5uAvidseJ6E65qOcT
7Pv7uLw2WuPzvvjfDjEbIvrkoZdghf03mzCKsqEiM9Nd22JDiGhC9VI5CdeZ
qdDk+SQ7Kio3OZ7oPE5E67ilRh7gulfRVOVR7UxFKZLlq2YUInJtNKm6gf1C
6Z6YReyvKYqmx+lE1LzUds0Vu6agTK30f1T0NJ+rW3qGiK6sxnsZYC/d1s8f
iX34WoTY1HciKq9Pf7wZ+8fskQFnFyq6m6LL78wzhj5U9htGPFmAJh7F15sv
UVFg1dpm80NjKNe/hfU6rv9rcYaWTu44nxkvPLlejqG/DasbPuB7Z/3Q7eNb
r1GRRPk444T+ONqRvj2fPxDXYR/vB/H3qOiv6Tu/H6wklFWc73DRdwG/g6kO
R8KoaN8/u7KfVSRkYl6tZum2AMLW1oHVL6mIv4uP77oTGZ2r8HOh2i7A2Zxr
ynaZVNTLonRkjIeC/nR1pQycXgDGHp4C8VIq8mVd76aC+x2hTMu7sQcXwPa9
sBdbAxUtPPR8uLOEgkKORv4KkcZ18tSb5oIuKtJ8+tdx60Yq4otJfWqyCd93
eRlfbxKpyHKzSrCWLRW9o23luPx9HiJlND5YM3B+3l3KFi+holNz6rbTn+bh
6wF2h/M/cT68DI0w4KChF8O1si4V86B4Wv8qHzsNffGInK40o6ETUy7eDXHz
sC3NS4O6hYam5c5z38iioZfJ7M5/r82DcR+vU4MYDb01CyTd+kZDB9hV910w
ngcRn57aAgUassgbbe3WpqMfl8z3m8rOw2H5aG9zTRo64h/74u8TOhqjHDBI
+/sF9i4kA9sJGnrlsaE8qp+OfIQORabjfi9/veXa+7M0tHzvg9QbsQk06kEL
fJn8BaKFwp5ct6ehrB2PbHY5TyDCjem9IVe/QG189JCyJw1FLUsc6cmcQOZz
Wf266AtcO+Jhm3SLhhTUrSleXybQQFFXzHUO3H/af/D5F0JDl4IuaBQrTaK7
Ifwb9/TNwW2ro3KO0TQk1x715bb3JOoJcdw7Hz0HdX36tYXJNPShs8Bke/Ek
kjHLN/M2n4Ovdk7Gb97REF/pcdVXc5Mo1uz7O57tcxBR8fNqeBUNXTZnk+eV
n0JkyafnjIY+Q+SY+LhFCw2Z/QrgC3aYQpUdo3e/RX+GwpGJ8xL9NJT4pOHS
ptgp9Cn8ocOi6Wd4uItUGzxOQ+r5nFsXP06hwh7KAQXOz3AiVM61ZIaG9rMP
x0v8m0I5ah4U84ZZ2DamcJL6nYaqd9w22Ks8jYyqw+DytVmY7HYLamOho0uE
Kx4/7KdRidr7pnbJWdBOdniqw0NHudsWtR2eTiPCz8ZraZ9mACTP9ZUJ0VFz
UkI9a8U0qoqbKeC6PwNrizu29+2iI3kJro9+49OoxvjJFk3lGWi69jtlUYGO
bnwepqeyM5DZ1Ela/jADtlvJnkpRp6P2x3ak+7IM9Ely+f3gXQZM31hPGDxC
R38C9nWn6zMQf8+DIGNZBgzVI01+Azrq4vk21+3CQOGGUTVt7dPwY8dh4fZz
dPSqa8tB7yAGygqyY6NcmYaMyzmvwmzpSGjTzjq1lwxUSeXP0xSahlzevKIR
Zzry1L35xayQgdr7rPLO4ndx8JijZ5AnHT0/9aDb/gMDuTb8Gwk2n4KyMbLl
0Rt0ZHSG01NziIHi1m6Mn5ifBHue9hr9u3TUMrHhCYnOQGNltqY2oZNQRK++
3fSQjhI5mzu+zTOQAMvrZXaZSbCo4Lnq/JSOxDqvMiRXGOhVnyOJr3oCygpP
tyk+pyO3e3t3cP5jIDe2nWx/zCfAvW1li3g8jo+K72YR7E3K9KMeZhNgNFSe
ooadf2vFiAL2g7eoXuNnJ6BKPkHREPsjV4kfxtiHdkVHw5kJ0Cvp3n8Le/8R
X6No7OH3pDgfnJqAZgvq137sbZ1mdwTWGCj46cfkDToToDagcyH4JR053d7c
vIL9m/irTBapCdj33rp1MoGOXDe+LF3PMoMcL8cXX5GcgPn+zld/sJ/LWr3D
h33t8IF3JIkJmDI767b1FR2x7DB9roBd9oKZV83OCUiIT/qhjf1x7fpxG+wz
XJESN4UnIOWQeHM09qOcH2dKsZcaNOrPcE/A6uBF/SOJdHT52+royXUzqOHF
nYr6JTro37kwFJOE46N6wNMUu4e3usXGRTpIzCmX52Kf6l3XZ4U9jus7zXye
DmrP/kY0YteSs+N2wy7dGVo3O0uH08Peexexv3u8cuwR9haBhyH8E3RI6OoQ
Ov2ajlKakvqqsRf2OF1w+ESHzPNvY9awr9WWejZgz1VWg5xB/P2HaHahN3RU
o3qG0IL9U53Bpu/9dEjVcfdUxK6RyCXdh92r/KxXSA8d9vQS5aywx8d7B9Kx
myWe1Mtpo8O9oiKjYuyTv5aN1rCHmNgfm39PB41bqUecknGeZBYtrWOdQdW7
L7qrV9Ghp4AV3cK+ME/4jx17TyQ94F4FHcx79dQjsE/a3ARO7CdinnltLqWD
3QkP3mrsBuyMdG7sAZbVJ88X08HfwmSpF3u8yQdrHuy6fAG8rwvpAO38H6ew
j46VavBiF2kccVR6R4eJk+oefCl01JDcZrcF+/op3wWfXDo4bo1RlsV+e4vu
+a3YpW2qL9Vk0+FgcfeCDnaWeXExPuyXNXO62d7SQfPxZOY57IZ/7MuZXhOj
v+t0Jh0Uvw+fv4zd6jebOD92jtA4++fpdKCZZKzdw77rHYcl0w/IvA4bTaWD
7KphSgz2pCE3B6bve3wxQyKFDp3nuw/lYG9XUzzE9KkWco7rGzq8rJbtAeb3
EQaTzHmP/JRMyk+iw8XHNjZD2AUzmi4yXXavkv+PV3T4vNOFMotdQfNlDvN/
PQlmPamdQIeNw/p2LKl0NMLd2syMwzn+LJYH8XQI42MZEsQuTDYsYsbNfV4s
sz2WDtp7w/UUsNN85Tw3Y69V8tLc8oIO06FLeUewr/9FNd/I9ANpu5Oi6HDZ
Q+2SO/azrtX3uZj7Ih/lT4+gA6FYoDoQO1/KVAAH9jyyS6NcOM6f/JYNsdiJ
95Q+s2KnTI4KlD+hw3Pt5Ef1zHlFrIOXcV75Uk2Guh7g8X8Kqwum4bpRNeP1
HXubQtA+5ft0yDqrMSWLXaf4y94l7EFEpVsxgXh/y/gitbF7vjVWmcXOVsZF
tL5Lh+MBf3qdsO9wsTxBwJ5lLjs65YvjWR3CUYzdb1t2ajH2LzdnGv5cpoPg
ky36Rul09G9qr7QedsmYGtvtJnQYkrfgCcigI0Utc+Ih5nk8P5N325gOQTwr
X6OwH0zscVXFvr777xzRkA56/noD6dgjHtSwSWLXkprUfn2KDv9+jgd2YHdI
stZfxfWkzWfbDsljdJhbYI8UzKQj04Xmv7nYF3uXCDLqdCCmF9zNwX4q4eT2
WVz3lNsLvaV20MGiafx5TxYd9UnBdSL2Wvm0FnsROvjMT6jQsd+v2pb0EXuS
tixX0jach28vdf7ELjN+xTYfu6ndn/OCgnTYoECf3PmWjuZ4nzy7gl1MQFto
/WacJ/zP692xi2gYVzJwfd4oRpShrtFAO06PZ0M2PqdyQnvKVxlom+ne/Kd0
GvxN/2/lQA6uY6HZu2p/M9AhJzHd3BwaeFVS/93JoyOy4C2xrK8MJMHZk6Wu
RYPfg5kirwrp6KL19puXGQxUv3Dt57VeKrALfNfdUEpHv1key1kQGMi/5c+l
AVsqCB3/bKZbQUeDPHvELnUw0GQd65zoIgXunQ/RG6jC912L9ARfOQOd/hHe
EXiLAu7UOEmRGjrqKTXZx/qGgT4X+8+ZslOA76jvg/5aOoq0dD5cFcJAmp7F
Z/oUyRDceuntzzoc/+TXXAbYb6kfTBWUI0Nr6NOk39gF+vJSCcF4/W/TqFbS
+PtB1Sf/sPPJnDj85yEDPVc+vYe2kwwxmwQMNgAdscrdENV6wEA2sb+7lzaT
oXtwo7Mg9sufOb3yAxiI0+dR/KYlEjh6vWFRwU7bI+/r7cdA52ndVhplJAh8
EEZwxv5qyu/vn5sMVOzOanuriATrf1PBFfu4aYZJCPYONgvD6nck+N1VmuiG
3csl3jHBl4F2bHq6fDiTBGcf9WlfxT7Gt6hY78NAmToHbh2PI0H0TorQHezx
fdk2rN4MRKBpqpy5RYINQdtUIrDL5l3e7XCZgbSTb9Wb65BAhKrAVoSdd1Q7
6cslBvLQO2Y8dJAEXv5jlcXYl0udP9/Cvu1fWJeZOgn+Dom4lmIX8ythf+7K
QN5/65PP7SNB6jx6V4G9VtxMof4/BrJUepZgsosEojRpSi12j5jRkwKODNSc
3kLTX4/Xo6JCacOudE+Q87UDAx21tA5rWUeC7vIMsQ7swltyXu3BXmmwsOf4
v3HQzUgz78ReKk9CWvYM9EVdR013eRw2zuq868K+bd8t/wt2DCSrdjr70Mw4
7EFTrP3YkwWKW15Z4/O16cg/ha5xaL85rD+KPdcotlMSu6lrYWd2+zgoJI1s
JmDnkB1Oz7ZiIJpc2tM9LeOQO2zfzfTVuiuD5ZYMlKOyny4J40AvX68xhn3q
Mptsz3nc59h0LG0rGoeDBq/ySdgDUwZ6zLA3rNtvFvtuHGL1eg6SsbPcZDUk
mDOQeIZlNn/OOHRkP6pl+s9f/g0TZjgflPgVN6fh78lP8inYO8/NJS+fxf/X
mDeG9cU4fJBqVadhj/Kq/HwHO9e017OAqHGYSJEIYXrv7kluFuzcW/tv/X3G
HGe1i+kstg4tHKYMJPjfB4WfIePwqFVXn86Ms12R41MT3CeXOixdezAOGhw5
fkyfX3Ec2Iy9h7w7ZyFgHM6pxKQyXXn5s7LgGQb6J3jgB8NvHApvLJKZXjf6
QTzeGH9//HnofzfG4eJux29Mtzz3jyqC3SDxwCaa9zhYTpuvMT0q7ZVfkhED
rSrsDrHzwuOHdbJNYP/FlUgXx36Tw+UrwW0c1o83sjBdpmVNMtWQgeyPrj9r
4ToOMumHfjLHeSvcqi6F/eQcZ8aA0zh45alNMJ3v8FexzNMMVCNy6/MZ+3GI
qS/sYPqyXxBxD3YX8gXpj7bjcCY3L5vp77bFMnINGMj3ldKalRXe3/847jN9
MKChcx/2NdV/H6fNx+GAhtI5pq+PuSCgcYqB5F3r9djOjIOW+SiZGWdFh6L8
Y/gdEdiTlHHw6Djwr8tPpWJ/3H7fo+UEzp9LpyRadfC+f7M5yvTgEQ+WU9jH
KlQizLTGId59YIS57yujT3OMjuPzPjl26orqOGTsEvvKzJNfy384zI8xULeP
s2q69DjUye3sxqtFjyRf+n7SZaDein4TZclxcGndqsr02X6Tagvs159UO9aJ
jcM9y+5IZt7WlG5ptTrKQHanRZ1HhMdBKey1OhF7P9fotA3CdU+NMb6Rexxq
q18ojGDf61RvbHkIx+HmxdKr82Nwx6jkfS/2nn+7xIe1GIj9BsfO1dkx8HzJ
m9eDPYuU0myOfaw07fbj6TEIKtsf283cd+vVmLMHGaj18rBAKmUM9F7Um33E
HtQrp2OgwUDGqSwt/f1j4Hxj651W7MfEnpUoq+JzIcIqqVKBV95+2qMG+2SY
hBZVHr+Pwtd+MALGwOTsB3Iy9lt2N53PYLc+LfpV1n8MhAMu1r3Grn4k7EKt
HD5Hyudpl/zGwPuJd0wiM09clqrj8XvQ3tzkDePqGFzT/ikTj707vkjOSIaB
HtL/C5t2GINa7juT4cx4Bhu25+1ioLKwF4fox8ZA8aBW223siUQ2Uf1tDPQi
mlWln2MMvkp2SxpiJ9iobmfgd+iY38LryAgi7D1/QmwI3y9P4cnrYtI0uv2Y
/0FtPgFsc+vGEvD9pS3i5qlXPI3O2a9xpLwfBdMBwp/aapxvui/EXj6YRqE7
fa+86xgBi7tiC3b4fszwuxhgZT6NnnsGLtXMDkO84Lbh3HI6guh+j0MS00io
y/YKdfkT6NasKamV4P3a1jlL+jyFlHtDFc8IfoJoy+bemwW4b/kwevhb2RTK
+ijKf0NjCJYNq0LO5eL6tq00O9JvCk07n+mR1R+EyauMO0a4b7lB745/rT2F
uicbhe+7DoD5woq1OO5X5fedDoGVSdS4dz63+0Y/7EzYIPELv9eaUKBIYfkk
OuEcZ7wc0wdu73L6q2PoSFRA3sDr+iTyJVyr963qhe9syTZ7wuko/2Lrx/I9
k6hoE/q182UPmIJUTGAIHVXnhK+7Q5pAHIrqkZ7ULth5qPoT9R4dZfN6e1qF
TSDOopX96zg/Al9k2nFRX9yfPPmtvKQ5gWZOc718o9UBtXFaUSseOM7IglHA
wH1rpalQVEQbHJsN3LTqREcnBET110fQ0bM72zK8m1ogcXBBsN6Kjur3b/Ql
aNJR4aqRQpdoMz6n5x69P4P7ExH16Z00GprLJz0IDvgAnMeiXG8fpyPNVU3V
kCAaqqVcvLvW1ACLo9O/6Afx/fIuSENEmoYoBmO8Q4r18C7e/1rmXjpilDbd
vF1HRSYnzyT2LtTADZOjNFZJOvI1v6tmbEFFsw//XM1NqYJ5DmmnPYJ4Xh1r
55/fKeiey8lPT+LKwdh95FIzJx09v7b3GPcjCmoW6nmrbVkChL0Vo3O/aYjH
0S/MQIKC2rarbyi0LYSfqo/Ir7/QUMcj/y1nbcgo5k39yV92OZCSFLG5i0RD
7Bna3qM3SMgm8bHouiPpoMHmkkzooaG37BxDS6/GUeM+A78Pp5Ng3uffi8gG
Gtowdzc2NXcM7d82dlr0vyjYeTklvKyIhtIexXwNbyWiq+uVU/iEbwPFaz0l
OpWGjjx4P5swQUCBHgdEFrSvoMwfHKvXomnoOnKpbp0dRYGQ79E/+QxJuUlu
r7pPQ89tolet/40gnyieYI21eGTz1mFx8BoNDWxyNi/4PYwoL1L9zD+moBu3
CIqmDjS0Mdbyw6WVT8g/8vKpl6OZKOudyZXhMzRkd2Lichr7J2Qzp/jKxiMX
pZ89P2WEaEjN7qWq0a9B5PLMG23eWYgojWM5Eko0dJx9oXbT6gA6Je8zPa5f
jCYPvKpeEsXfj86327ENoJOsYztNzUuRFaF94ww3DXmvEtroS32I8m2DouHt
ckRITV3WWqEie6niU1cXe5FhBfGzkkslKg6RPJAyRUUC6dFdm/J7kHHWXckS
5/doy72PwQ4DVPQm9+/FS4ldKH9tj0S1Qg3KDahd0m2goldGvW7xUZ3oRvU7
fpmhWkSQ8h+9WEBFezd3K5PPt6M9Eh/E2J4C0ptqfj/6ioqeRlx8uxm1ItvO
lJm4kHpkZuY+EvKYijxYFK2tlpuQvtnrd9anG1C6+nqn6BtU9OmtUuqdikZE
Eed4VbzWgF5azlxgOFCRRNkTf4HEeqSySUDjZGIjGk29Ehx4hooSA+sXz6TW
oPAVruPSBz8guZ/CtgGHqKjtv8M0fotKlF5YWqMPH5D/fMCODlkq4jbe6MQQ
K0VfzvTrb9ZoQv/UGvq8hKjoqlFBTvLWAiTZT1jMy21CazMSaQ9Yqcjy9PGj
vgGZyG6jnlDvxmaUJfSOY3GBgvb/M04SdU1Ab/zXx3G5NKNOJX+JQSIFmVDz
2wxPB6IBW5VbVoXNaPLjNzGJNgrqNVm5oFsXBLJnfzf3MJqRQe69i51lFMR4
mPL2h/ErSN1CG2IItyAjPxOO3ykU1CF+tCDtcCYULaVF3VVvQWruNmphERRU
mSC+x8A+E/7JZiYRsdPNZbfpYVesOma2GJQJAodMqJoaLegXu8LfP+EUpNmm
0nWoORNIhPu8S9hVDQZb3bG73A1W7jmdBa03izdYHmxB0xltnqefUdDXgtb7
05ZvITqpzppFuwU5GnR8535KQd05fIfHruXAS+NMz/dHWpDOo7pvT0IoiGZ4
tNsvJgdiB+46rmFXDgn5p4v9Saszt2B5Dtx8diD82NEWdFn4JfefYApqUrAP
NvyVA5JPZZ60Y3/wLFnGHbvY2rp7FQG58GuHJ/9H3RbktGrgdfohBeWgGs27
YXlgu5XTJVevBY1Hv9HmuU9BpNd2Hc0Z+eD7NZLcr9+CrMYGR8PvUhDPLGJT
7ciHw1azZqwnW9ArbsOvR7An6Mt3v5nPh0N8gWP7sZ/hdeD55k9Bg8ZJ2/w0
CuC41xHJp9gn5l2PW2A/IPH8xu72AkjzPRB64FQLKjVg6RS/Q0HPi5TvqfgW
wgzndIG1QQsKiBGULvKjIA+plzH/PSoEIRG943ewm5C7LJyw7zHY6B2fUAhq
py/MJWBfOa0cJoj92EHTO6t1hVDLkn5lGHvG+N9ft25SkPGVvb1NHEXw2z71
1PHTLchNpm5G1xfXzYcPTU++LIIn6vZ637Hv8UwTGbpOQXaOx4tv5hbBj67a
pfWGLfi+8b4Uip2yQ/hTZm0RbD1nUSiEfUBwpeIgdvGSvS7stCLo2C7moIbd
oEXZ9vU1CupR+pVaI18MRkdFIl2xOw95Vbl6UxBnzUbhWe1iODXv2+KNfTFZ
WFAEu6h2saHwmWIYutKz6Q52j4CAax+vUnCf/ffP1evFwD1xrucJdu62CBVl
7ClHj95ICi4G994rp6KwvyQefEG/QkEnnWwK2uOKofOh62Asc3yzzF8vsKtk
mv63q6YYljU7drzB3t/Z3vrbi4IKwropht3FcEdFmpCCve3afeV32NtvOe7w
oxSD5/Sht2nYHfpZki5iN+gdF077WgzZZhtC07GfhePcfNh7vm4Z6GIvgY03
/X3/75vP3mrypKCVYx+NVoRK4MrpWF/mOEIxMrO+2B1kKKGSciVQ1H06lDnv
eekmWznsb//uCDI8VAJ5qzFvX2NvjVXoI3pQkLvcuYO+RiWgPXSZkIB9V+0F
/XDsJ3nPFb65WAKHzzbuYP7fbZ42cAT7+JYvk23eJfDMO/ZKJPb/7kgf/OZO
QelL+8NEYksg6EnUifvYB9dLqlhi//q1Ed6TSqCn62ulNXY2ocGDkm4UNJd9
uyBnoQT+DcdbnMF+4WPA0uhlCgpK+OucwFIKmhVPpI8x8+RXQ04U9vI7TRK3
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
Bbepzzh4dtTG+YwBBzSalOWEGnlQ8qVS4eVjDiqcvSz2h/iAYdYNUeJBNTWR
Zg85GP9e6uGGPRxY5uLoKkFcLK1nOu8WBzfiki2DxGUGXiyeR7z8tBzbzYWD
fxfeOmVhyAHzel+3+TPtL7GL2HmNg6eMT93MIB59RsJPhvjeKL+byRc4mHno
5+lHezmgmfFMYxFxpvmDsIvnOLjm46qtLOIKww1xssQH27P8Vp/mILaJsPYZ
ceCtA79Kjrh99cGDTSc42JZj7ZlEvO9+X+5i4oa+hoxXFhxsFlk7R2ofByye
fnaRJ5745L3BgUMc5Dsev+lCXLZDs2PGs9Tv3Zi9n4MBeSMltcRdxl8uW0Lc
dV7Vjd/7ONieMzJL05gDX5Z+l5nxikff9tzZw8EDG45uiiQ+LzG0bKadvlnr
21V1OSifLakuaMKBSlEjoxkfk9I+0qXFwcDdq9bbEt/1JN1zpp8MmcmXsRoc
nOv0WPAvcT/fnkcz40rydIy2UuMgZYFG7gZTDvzn2qY3Mw+3KNHuC5Q5qMlW
s/chPhkRnL9wZh7uRmwp2cRBn6SbvF7iKqvU/5Mm/iFYnrdzDQdV5LLLvptx
gK++vEaSuPTwl0UDy8k8Q7r0ov0c0BNE6/+I01x3icTLc1DrFEfnFnGD9Qrf
ZxH3zjQ/sFCag4retaZaBzjgOLTfhUf21fLx5Pc9Ahx0zXLRySP108HWf0Yj
xCO3Ce+JnezAQ8VRmQoHOZDnMN7ST3xcNfL7MW4H/qunrfIibl1tZs4mrnS4
SjCvrwPbRb2ijQ5xIFUuzbCS+OMSy3OvWjpw+88Jl9LDHNi/aPPDEOKLNvD1
VTI70COWcrHcggOvJqzHX8x8H3iiZXNaB15J955cb8mBY6eXa3sTd0pJPLA+
pQObF+6784h42H6zFXeIP1M4+HN5Ygcal1dv236MAwseqVtYzpzruc/CxMM7
UNQ9JzLkOAcquiV8ZxG3cFiHtXc78NeHfvNT1hy4cPDaQiB5It71NfmoZgeu
L70zr9aG5LPFc8M5JPcc5EIlGtLZmFeRsPnxZQ7cDtzsOULlga1Lo2BrKhtX
NWs9qiVOd9zg20qcX5dS1f6VjQ0DTb83XOHAdiEVwR/ET1ccEBn4yEaHLdrT
ZcTtLx25fop41axZ8aKhbLTJXO200JEDnLXV195RyP6Ud+euu8PG6e/x26Ou
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
Ev+UWXdTjfgE1b8/mtOGrPtip1KJZ5/q+nCSx8cYfRMj2lgbtl1uKIsi7hed
4J0wxseh8gU/rWUYWPxt79dbxAX8xo9tH+bjh4Deh2fNGDhw6MOTzcQbz7VL
CPbwUdWfbhqCDDz7bPRGXAM517P8Xnt38/Hs6m2R2QUM7JPXTAonbtO3M28B
8allS9Yzyxio5LdtPIj47C1B4wpdfFy1w659axMD98jqUR4Tj/m4nKPH4SPV
pE145n9yF2MY/heJq8v05l1u56Nu46Oc2apMXC4VL6tK3HO+97lbzXzkOLqk
fY5j4sKRry6UegpIeufs5zaR+kRT43pGAhMHEth3Kohn++5qvkl8wfihU3++
MTHdXza4hLiX+iDjRiPp/yYjSmMOE9fnXJDIJa62Bt5cqedj004zNYlmJuoN
UQc+Ew9eUBhqQuGjjHj0B+eF7XhW7kSyP/EP3nbpf2r4aKCfHvFwaTuqLnMQ
8SE+583Gu0BcrGzBX/817WhVe9/xKXHqLYUOlWo+Crw3/p6o0o4Us0+eD4lX
XHh/QbqSjx/3N/Z1mLXjWqfNCS7ERd9bTfwu5WPy3Qud9l7tuHMecE4RT2yO
MlEn/rT52dx7vu1YzY71tybe8HNA51MJH60768/4BrXj9mkpkxPECyw+z3tR
zMd7TVlvv8S044UiCUEL4kePXDp0opCPDwS/uvCy29F0/NGl/cSvpjZklPzl
o324teLcgnZs6tdJMyW+BvcVaBHfFpAgvqKsHR04s5aaEL9WvrhgWQEf1x/v
td3T2I5hubmrjYi3cM0vNeaRfXtwzeWgsXb8z4CzWZ/4lhQ3zj7ibwJFP8ZP
teO+2/IKesSVl4fPTcvl48kmAdksURb+crFW1iVuK/hWM/A3+f4Y/zFrAQuP
Rsk8BeKykw/2ChCPHmv0mpBnoc/v59U6xP3iTUYv5/Bxvotf2vzVLFzwfKHa
jP9ZHKS1B/mY1LQhWVOZhRt5Z9W0ic8/M6/mSzYfZ6v1Xz+4g4VFfutqtIgr
WtnPW0q8D/acv6DDwupkgWczXmbyvssri4/jqbLP7+9h4b/K3kMzXuSU4zCQ
yccsE4vWQFMW6l8bVJnxuvk//ayI7/jZZ/fpMAt/Cs1VnPHf558e+fOLnJek
qiW/T7Dwq6DW1hnfl6qapUT8Y3uPYJ0NC9PaH5nNuJJ2SuHrDD6qySjL9V1k
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
3NuUFp6I59+vfXTFJ7v4I36nMdGc59pAt2Qm7Dyspr3inKYSDtuTmWhVapmR
RSoTcmNNOlf6V3ppzxPxmYm6hKXm96Qx4d1issKKf04XdeSOZSIrNOov8Y0J
IUa6kivzzGtWinWMZKI72dKs8+lMyJ6RmR/BnvapwkknlIl6OtUjMrOYcO7o
zb4h7CJ+HqsTXzARt0JVSWgOE2gfOd0HsK/tbHASDmSi4/Mn6m7nMeGi/czH
rpX5O5bGdj9kokGnoBiNAib4tpjv7sBu0u3udPQBE7HvWH1ZqIgJUaZct1qw
n9LdsPqbG45z9hj3xA8mxN461F+DXV/77EcvJybS03KjpJQy4ZZnOELYabav
76w7j8ct3vZFvpIJFa6+4ZnYP7pdSPa2YKKTUm9ec1YzYSng76a0lfW1Cvky
cIqJ9n9wutxVw4Si5euKMdif73DfmG7ARKfdluPe1zPhgeVB5YfY1RfWRuvv
ZaKsxvV0oXYmrLk1P7kNu2qCu7btWrxeLg5zzBEmNO57EmWM91fC9ckr3n9m
0Xn3+K7EVXOwI/14jfbKPlWRrlQvnUVWXmBswzsHibNdWerYQxk8vPSiWeRR
fTd2E98chJy7FSuAXbp5F/f+nFkUVe07FyI4B2ssXWd+47rRm+LFOf95FpEZ
207eF58Dc15nT3Xshdd2y1v7ziJV5bofB+XnYJ1HyMGV+laz4c/FDdqzyDDv
7L8i7Tno523o58P18PNTg1Cx7zPoENvBfRdc5wDZNzkMfqIRdmxbOc6nzaAx
qkHMLrc5eCk/9fbHilM1dT4lzSCW5d/dfPfn4A3L7XEX7GdcBHZtj5lB2vFf
RvMezMGLMyNuTR9phGCd+/KxoBkkeylcWsxvDtZOu4k9w/X5fjCF967dDHr0
omv0x6s5+PYlyj0jmkboPbKOTd4wg0ZKNu5m+TYHthZmzsvhNMIq+ZJtiO80
Ov9i3UvGyBxE7m6E349pROuNX421tlMojm8iXNxsHrZpbbxn5II9ZWQ+2XAS
PVwvVqiXNw/8V07NzVvQiJMTa53fSE6gILVn/0zlF+D+MdXQL5o04uVi/iX7
+TGkPHVH47rPAnjmXbnyRRTXYV7+ZmeSgSTVfvoU9y8AkYQcVEZ4iE93HDeW
CI4irzNUYSHdRTjeWfiwJ5+HiH/zzubm3yHEVn3SZUPwIixVnrNtfcxDbC0W
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
ec/c3oD8f5TlJP4=
      "]]},
    Annotation[#, "Charting`Private`Tag$1124#2"]& ]},
  Axes->True,
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{345.43594306736446`, 310.8752375171048},
  ImageSizeRaw->Automatic,
  Method->{},
  PlotRange->{All, All, All},
  PlotRangePadding->{Automatic, Automatic, Automatic},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{1.1945257597218997`, -3.035802434446771, 0.8983383484900758},
  ViewVertical->{0.12039217321469453`, -0.27906895552986793`, 
   0.9526942020859115}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{
  3.5630120185237026`*^9, 3.6738143728281326`*^9, 3.7697572898985662`*^9, {
   3.77097553846595*^9, 3.7709755624964976`*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[5]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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
MJaYKlvDUGYiLgkK68Il4egHm+6/zikyc7SOVN+H+4+/3noaUv22YkaaCUrL
SFM75tXduQCC46/ajTMuNOU1THTrMTc0PeR9x6FdDbnN6jmXD6Z5cySqaGaW
sim1bOBytDb7PPz320fhLTysaGSJIDTxluRDr1WfPbH3J3JpgUJ6e10rI1uR
wBWGtV5ockwUZ4u4++tAjzEcNFLKk7U5Yy+LLcOhQ0uB5OJcvMSEtXwHE6Yz
njpvSZNxqcqr20hTDRdlyXwdLNfrc6+fDRpXT7/sHLgHkG72XqKuNV5RQAsi
yNT2P/oInRfWTTS0PQEiizliXWNPD8VUK7AiuUvT2fZsZJC3kHSnt2XqWnGX
T954croOuMZIF5016BjX9JZerrZOTQUCU2cqasXjY4qpdnxMzZwXMcQjqV7y
XQpD6+OqXzpImC/yB5BSVpEqNPDQMiksSkYkBial0VgLpDAVel04IwMGY6lL
wsFzzpd5D5P0rph7ANPeXbJ4Hoa+lwxyalDgNLfPumaGWyGuyX4qXeRnsSBD
t69Kee14yI2ddVNuSd8aCdQj7JWJK9Nad7Rhr6nPy5RY2FonnHW1OnmDYzph
9/ary00QJ8YOyu3iO0zIfaQ98MwOTNqnSvHWy3eeuHrSpaPJVkpRXGeqYCd0
9bdoSZsrlkvNFxxGTAGWQiF40rENRoEqpWpPEDulZgw5Ib5jhtagxj52OJQk
xs05mcVwkeNRhpum64YbkHItdxxw1PwAET6HqmbCTTJ8nnVjoL2oeRx0YN+2
X744zplW/D9lI0IcpG7nCfnhxiDffpKLLPiTVMq9yqJbNjcx49zu2+e7CSGt
NSvnpHsbuuZmZWLNlpViLpp1zXkuupmEu0WtY9EpW/w6YFCQArV98IlnP/6z
TZ2IECQIIDsrphmSxl3yvTAAH//2mdN63nxmHjl6JNf4P6pA6aXoysadR8sw
pgYWq0tg2PcvW7Fc3CDmW9zsIdv7NvyVtg67jCSV+v1fvv/CjHv1cL4Lzcv4
uhphmgS7JiIVyyr7OplsTJoNw4iU+VXbNmv6ZPL4CINMxCSlPGizG0NZtwOL
Fpb80Oo5+7xzWWOl71wbdfxV+WCS266BmdRqGIR3OkLQPArtmEM5zaQkOMYe
CiRp2tkyxUxQfJFvGo0z2TfVjVJKLoohkX6MD97oPp9WJ6Ym+u0Hllw2ppg1
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
LHCZ1dBl8gmw9d3zb5nrF4kQPSILlFhrxXljJ/n8o6ZiaQCKuox5BUw0JYxY
xkqHNXuetB56Usu/asi/P5UfnSOWPI2SdCc2VWcsh3PqTCkDH5peObq1PUsq
mXs5N3JzCePCiN2sERjWnBo3CkFI9Fr+FA5WOhCgpdhJz+cgdRnr6yomLDxF
g/bfkdUWoYOhLIyNvfDZlogkVokef/L/mxsuYyc74FrogImXvGdUPezDUw2+
SujPxTGcaTk2H5HRn3MvN+T5GemwdrzD34HOQ3HKtdApk9FrUgYP2ym/lmmx
rthRGXz96VuPp1I5XnJwOsonvgxSG7IsmAzdyPV5nhlD9/3m5O1fqduVqXEI
2PvvPnpqz/s7zlPG0ayHvnhLsgrW1lnpk92UcFNgMM7Da3c0/Itsr/Qv722T
qi91xG0CVVHW8cDQz7YY/3AdbuEi5t8zNf7JadGy4+VxoaPImvdHrGoGpt7j
uoxzXK4Szpn8lrZH4Ky+Gmb1bGgqyjaPtmY9bXN5/SF42tiOEP+RbV648BzH
5aAGJZxDb6DPOcTdsvE9Ee67jNkFnDNV1aWOc58qzT9kH9s8szgKsPXK/5gZ
OW12UHlTJ0FXXCqy4sV66ilohbm+TsgsV85TXFPARjN6s5ozfX+iUKXMt5L5
ojv8p8zg4cRQn4nYdMB5igkkXcw1cg/64mXDlEP7bmJWAcPMCI5pjmH/+vwr
p0S2tCycxJkHem6YcpLaPfU1nol2NWZ5Y2FNMpC/i3oPSvmy5l7HUTOX0NEc
R/9E3pcs7CGwVVaKmYz0AH/mt4xEvcrFfJ3f2xCNB5nFOQ8zvYC7agXoNy5V
NOubmfpD5C375lrom7N1LmlE7AmtbzjLqlmyMbuZA/rP/JnflhTl7EV8HbXJ
B5zV8iq9TmPuhB5oWglncYZD05WBw/S4+drAGxkAl7MLM+BMdm1ePEhab/LM
GBvX3j2T5m9IvpApnzoQ/EsOhAxe1mKt+W8f/IIL9Q26fEJAht7MusSfZlS4
cv5B/gy7v4dxP2IIl3+OEXG4Y9W6UmVhinLGfUqcmN6gVAHjemDT6SbuxEkS
/J8G+xcZflcA+CjDr+ca+vhpGSteo/m6tRdeOiPE37+1V1Z05NaQuD29MiSC
W8xbAVRBKgH4Q5JT14niFbr/i4BOXWhYMvn4t89koM/n67pHXzozBL367HHX
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
B8nn/j8mQY7H\
\>", "ImageResolution" -> \
72.],ExpressionUUID->"1c254890-57ba-40cf-a9cc-940cf39a7bf8"]
}, Open  ]],

Cell["Here is a matrix:", "Text",
 CellChangeTimes->{3.7709802284046926`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,ExpressionUUID->"38f4788e-7d0f-422e-8b90-94050a49d17b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"u", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"c", ",", "d"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7709801704973993`*^9, 3.7709801705013895`*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[1]:=",ExpressionUUID->"d806c2db-c6c2-4dbb-b8e6-8869e44d1305"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"c", ",", "d"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.770980299283095*^9, 3.7709809110069532`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[1]=",ExpressionUUID->"2fea991e-a8c2-4897-81ae-05f14083b808"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"u", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a1", ",", "b1", ",", "c1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"d1", ",", "e1", ",", "f1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"g1", ",", "h1", ",", "i1"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a2", ",", "b2", ",", "c2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"d2", ",", "e2", ",", "f2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"g2", ",", "h2", ",", "i2"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"w", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a3", ",", "b3", ",", "c3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"d3", ",", "e3", ",", "f3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"g3", ",", "h3", ",", "i3"}], "}"}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7709801704973993`*^9, 3.7709801705013895`*^9}, {
   3.770981400656687*^9, 3.7709814226098413`*^9}, {3.7709818371252375`*^9, 
   3.7709818740269647`*^9}, {3.7709832125292716`*^9, 3.7709832434048853`*^9}, 
   3.770983545161401*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[34]:=",ExpressionUUID->"108a7e70-5fec-4cb1-8d7c-7db5c9a1185b"],

Cell["\<\
Flatten an array of blocks with the shape of u into a single matrix:\
\>", "Text",
 CellChangeTimes->{3.7709802414793224`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,ExpressionUUID->"7eaef80f-95b7-4431-b760-460612b47299"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"u", ",", 
        RowBox[{"0", " ", "u"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0", " ", "u"}], ",", "v"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "4"}], "}"}]}], "}"}]}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.770980183549163*^9, 3.7709801948788652`*^9}, {
   3.770980250617391*^9, 3.7709802551682444`*^9}, {3.77098092124747*^9, 
   3.770980925239483*^9}, 3.7709809751635327`*^9, {3.7709811838027706`*^9, 
   3.770981186720997*^9}, {3.7709813591039925`*^9, 3.77098136213211*^9}, {
   3.770981883111302*^9, 3.7709818855157337`*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[11]:=",ExpressionUUID->"9ec8f40f-4a8f-4a6f-8daf-214dc98533af"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"a1", "b1", "c1", "0", "0", "0"},
     {"d1", "e1", "f1", "0", "0", "0"},
     {"g1", "h1", "i1", "0", "0", "0"},
     {"0", "0", "0", "a2", "b2", "c2"},
     {"0", "0", "0", "d2", "e2", "f2"},
     {"0", "0", "0", "g2", "h2", "i2"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.770980299544591*^9, 3.7709809110685964`*^9, 
  3.770980977658865*^9, 3.7709811870203347`*^9, 3.770981366831052*^9, 
  3.770981435574331*^9, 3.7709818867225933`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->
  "Out[11]//MatrixForm=",ExpressionUUID->"8782c3c7-230f-4d43-979f-\
6889ba86d8c6"]
}, Open  ]],

Cell["\<\
Flatten into a single matrix, effectively using the transpose of the blocks:\
\>", "Text",
 CellChangeTimes->{3.770980269743003*^9},
 FontFamily->"Times New Roman",
 FontSize->9,ExpressionUUID->"32a0d065-7e7e-450a-96ee-b0107db5a224"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"u", ",", 
        RowBox[{"0", " ", "u"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0", " ", "u"}], ",", "u"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "3"}], "}"}]}], "}"}]}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[8]:=",ExpressionUUID->"a68e1a79-797a-4b49-ade9-69a7a98572aa"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"a", "d", "g", "0", "0", "0"},
     {"b", "e", "h", "0", "0", "0"},
     {"c", "f", "i", "0", "0", "0"},
     {"0", "0", "0", "a", "d", "g"},
     {"0", "0", "0", "b", "e", "h"},
     {"0", "0", "0", "c", "f", "i"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7709802995665283`*^9, 3.7709817686309423`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->
  "Out[8]//MatrixForm=",ExpressionUUID->"3b565a35-5909-47b2-83fb-\
3bf8cd57b909"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"p", "[", "t", "]"}], "=."}], ";", 
  RowBox[{
   RowBox[{"\[Theta]", "[", "t", "]"}], "=."}], ";", 
  RowBox[{
   RowBox[{
    RowBox[{"p", "'"}], "[", "t", "]"}], "=."}], ";", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "=."}], ";", 
  RowBox[{
   RowBox[{"u", "[", "t", "]"}], "=."}], ";"}]], "Input",
 CellChangeTimes->{{3.7697957170895195`*^9, 3.769795769158761*^9}},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[28]:=",ExpressionUUID->"3e2b0c18-99c2-4932-831c-f3609c096f70"],

Cell[CellGroupData[{

Cell[BoxData[GridBox[{
   {Cell[TextData[{
     Cell[
     "StateSpaceModel", "ObjectName",ExpressionUUID->
      "d0f4cdc3-c5b0-4ceb-a132-fc38a70664b1"],
     Cell[BoxData[
      TemplateBox[{8},
       "Spacer1"]],ExpressionUUID->"c800c92a-b07b-45bb-816a-ef540993888c"],
     Cell[BoxData[
      StyleBox[
       DynamicModuleBox[{DocumentationBuild`Make`Private`result$$ = 
        "modelo de espa\[CCedilla]o de estados", 
        DocumentationBuild`Make`Private`translationlang$$ = 
        FrontEnd`CurrentValue[
         FrontEndObject[
          LinkObject["22cuk_shm", 88, 6]], "Language", "English"]}, 
        DynamicBox[ToBoxes[
         DocumentationBuild`Make`Private`translationlang$$ = 
           FrontEnd`CurrentValue[$FrontEnd, "Language", "English"]; 
          With[{DocumentationBuild`Make`Private`translationlang$ = 
             DocumentationBuild`Make`Private`translationlang$$}, 
            FE`Evaluate[
             FEPrivate`If[
              FEPrivate`SameQ[
               FEPrivate`Set[DocumentationBuild`Make`Private`result$$, 
                FEPrivate`TranslateKeyword[
                "StateSpaceModel", 
                 DocumentationBuild`Make`Private`translationlang$]], $Failed],
               "", 
              StringJoin[
              "(", DocumentationBuild`Make`Private`result$$, ")"]]]], 
          StandardForm],
         ImageSizeCache->{219., {3., 9.}}],
        DynamicModuleValues:>{}], "ObjectNameTranslation",
       StripOnInput->False]], "ObjectNameTranslation",ExpressionUUID->
      "bf7e8ba0-3037-48be-b735-fb6f6ad9b928"]
    }],ExpressionUUID->"ab8f4ee4-ad33-4d5a-81a7-4a2ea1dbfe76"], 
    "\[SpanFromLeft]"}
  }]], "ObjectNameGrid",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072355093164`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,ExpressionUUID->"222c6289-9a5e-43fb-82da-a8958bd5196c"],

Cell[BoxData[GridBox[{
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{
       TemplateBox[{
         Cell[
          TextData["StateSpaceModel"]], "paclet:ref/StateSpaceModel"},
        "RefLink",
        BaseStyle->{"InlineFormula"}], "[", 
       RowBox[{"{", 
        RowBox[{
         StyleBox["a", "TI"], ",", 
         StyleBox["b", "TI"], ",", 
         StyleBox["c", "TI"], ",", 
         StyleBox["d", "TI"]}], "}"}], "]"}]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "4cd8bea3-ac31-4b02-ba63-ada9b90bf8a9"],
     " \[LineSeparator]represents the standard state-space model with state \
matrix ",
     Cell[BoxData[
      StyleBox["a", "TI"]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "7a87f580-faa7-4aa9-8313-db6cf4b74ab1"],
     ", input matrix ",
     Cell[BoxData[
      StyleBox["b", "TI"]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "09014fa7-3053-461f-88dd-630a86660027"],
     ", output matrix ",
     Cell[BoxData[
      StyleBox["c", "TI"]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "bfa24e0b-4b51-41ed-ab25-a01b2066957a"],
     ", and transmission matrix ",
     Cell[BoxData[
      StyleBox["d", "TI"]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "fcd2c82f-16b2-4b1d-8564-77840ad412f5"],
     "."
    }],ExpressionUUID->"d3398d71-a2ef-4f31-b2c7-ccce2053548d"]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{
       TemplateBox[{
         Cell[
          TextData["StateSpaceModel"]], "paclet:ref/StateSpaceModel"},
        "RefLink",
        BaseStyle->{"InlineFormula"}], "[", 
       RowBox[{"{", 
        RowBox[{
         StyleBox["a", "TI"], ",", 
         StyleBox["b", "TI"], ",", 
         StyleBox["c", "TI"], ",", 
         StyleBox["d", "TI"], 
         StyleBox[",", "TI"], 
         StyleBox["e", "TI"]}], "}"}], "]"}]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "dcd367fb-748f-44c9-9e8d-f70268b774ed"],
     "\[LineSeparator]represents a descriptor state-space model with \
descriptor matrix ",
     Cell[BoxData[
      StyleBox["e", "TI"]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "9a5f4961-c443-4fe4-a6ce-a865578d844d"],
     "."
    }],ExpressionUUID->"9aeca844-ecff-409a-8659-d35f484cf814"]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{
       TemplateBox[{
         Cell[
          TextData["StateSpaceModel"]], "paclet:ref/StateSpaceModel"},
        "RefLink",
        BaseStyle->{"InlineFormula"}], "[", 
       StyleBox["sys", "TI"], "]"}]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "3288c693-c1c1-48ef-999b-39106e0670b7"],
     " \[LineSeparator]gives a state-space model corresponding to the systems \
model ",
     Cell[BoxData[
      StyleBox["sys", "TI"]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "83bdf0f9-fd7e-496c-b311-afc353fa129c"],
     "."
    }],ExpressionUUID->"fb3c505b-3d27-4034-9a08-8c609eb39f97"]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{
       TemplateBox[{
         Cell[
          TextData["StateSpaceModel"]], "paclet:ref/StateSpaceModel"},
        "RefLink",
        BaseStyle->{"InlineFormula"}], "[", 
       RowBox[{
        StyleBox["eqns", "TI"], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            SubscriptBox[
             StyleBox["x", "TI"], 
             StyleBox["1", "TR"]], ",", 
            SubscriptBox[
             StyleBox["x", "TI"], 
             StyleBox["10", "TR"]]}], "}"}], ",", 
          StyleBox["\[Ellipsis]", "TR"]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            SubscriptBox[
             StyleBox["u", "TI"], 
             StyleBox["1", "TR"]], ",", 
            SubscriptBox[
             StyleBox["u", "TI"], 
             StyleBox["10", "TR"]]}], "}"}], ",", 
          StyleBox["\[Ellipsis]", "TR"]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox[
           StyleBox["g", "TI"], 
           StyleBox["1", "TR"]], ",", 
          StyleBox["\[Ellipsis]", "TR"]}], "}"}], ",", 
        StyleBox["\[Tau]", "TI"]}], "]"}]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "f0ad32cc-4580-427b-a018-27d9aa9514c6"],
     "\[LineSeparator]gives the state-space model obtained by Taylor \
linearization about the point ",
     Cell[BoxData[
      RowBox[{
       StyleBox["(", "TI"], 
       RowBox[{
        SubscriptBox[
         SubscriptBox[
          StyleBox["x", "TI"], 
          StyleBox["i", "TI"]], 
         StyleBox["0", "TR"]], ",", 
        SubscriptBox[
         SubscriptBox[
          StyleBox["u", "TI"], 
          StyleBox["i", "TI"]], 
         StyleBox["0", "TR"]]}], ")"}]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "fc89d473-e461-4b5b-8120-b3b110ee063d"],
     " of the differential or difference equations ",
     Cell[BoxData[
      StyleBox["eqns", "TI"]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "0c57ea99-d795-4008-836d-a9c111be9f40"],
     " with outputs ",
     Cell[BoxData[
      SubscriptBox[
       StyleBox["g", "TI"], 
       StyleBox["i", "TI"]]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "7ad028b1-5af2-43ff-bc5f-e5669d3b0bab"],
     " and independent variable ",
     Cell[BoxData[
      StyleBox["\[Tau]", "TI"]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "3fe528ac-1af5-48e9-b3cf-11117ad18fc0"],
     "."
    }],ExpressionUUID->"c51f4ada-fd10-4f87-bc5a-e466a6cc7a41"]}
  }]], "Usage",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072355093164`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 GridBoxOptions->{
 GridBoxBackground->{
  "Columns" -> {{None}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {None, None, None, {None}}, "RowsIndexed" -> {}}},
 CellID->555892555,ExpressionUUID->"69324f4a-b42c-498f-ab77-22a27c2760f5"],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["StateSpaceModel"]], "paclet:ref/StateSpaceModel"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "d6b0d9fc-b933-4aac-9c9c-cc4cc661d702"],
 " can represent scalar and multivariate systems in continuous or discrete \
time."
}], "Notes",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072355093164`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->297346508,ExpressionUUID->"1cefdfb0-66d1-4001-a363-8dc2287a9f8f"],

Cell[TextData[{
 "Time delays can be represented in any state-space model, by using ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["SystemsModelDelay"]], "paclet:ref/SystemsModelDelay"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "20885dfa-d438-4c42-a113-9c9525dbfaf3"],
 " in any of the matrices. "
}], "Notes",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072355093164`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->10639350,ExpressionUUID->"72c7c26c-f058-4d10-97a1-0612555dfaef"],

Cell[TextData[{
 "A continuous-time system modeled by the equations ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"x", "'"}], 
      RowBox[{"(", "t", ")"}]}], "\[LongEqual]", 
     RowBox[{
      RowBox[{"a", ".", 
       RowBox[{"x", "(", "t", ")"}]}], "+", 
      RowBox[{"b", ".", 
       RowBox[{"u", "(", "t", ")"}]}]}]}], ",", " ", 
    RowBox[{
     RowBox[{"y", "(", "t", ")"}], "\[LongEqual]", 
     RowBox[{
      RowBox[{"c", ".", 
       RowBox[{"x", "(", "t", ")"}]}], "+", 
      RowBox[{"d", ".", 
       RowBox[{"u", "(", "t", ")"}]}]}]}]}], TraditionalForm]], "InlineMath",
  ExpressionUUID->"b9b45219-ed8b-4e10-a57f-bec340e5fb38"],
 " with states ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "\[Element]", 
    SuperscriptBox["\[DoubleStruckCapitalR]", "n"]}], TraditionalForm]], 
  "InlineMath",ExpressionUUID->"304dd1a1-8a55-46e8-9174-ca4e8b25fa99"],
 ", control inputs ",
 Cell[BoxData[
  FormBox[
   RowBox[{"u", "\[Element]", 
    SuperscriptBox["\[DoubleStruckCapitalR]", "p"]}], TraditionalForm]], 
  "InlineMath",ExpressionUUID->"0a1b4138-5aa2-4967-9967-5cb49f4306f7"],
 ", and outputs ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "\[Element]", 
    SuperscriptBox["\[DoubleStruckCapitalR]", "q"]}], TraditionalForm]], 
  "InlineMath",ExpressionUUID->"0fba3df5-6758-45ea-9f2b-c262410f5cdc"],
 " can be specified as ",
 Cell[BoxData[
  RowBox[{
   TemplateBox[{
     Cell[
      TextData["StateSpaceModel"]], "paclet:ref/StateSpaceModel"},
    "RefLink",
    BaseStyle->{"InlineFormula"}], "[", 
   RowBox[{"{", 
    RowBox[{
     StyleBox["a", "TI"], ",", 
     StyleBox["b", "TI"], ",", 
     StyleBox["c", "TI"], ",", 
     StyleBox["d", "TI"]}], "}"}], "]"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "4b4b18d9-f192-4ff5-83aa-b4157fd2c827"],
 "."
}], "Notes",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235510316*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->138973872,ExpressionUUID->"259e4a68-0180-44ce-8c6f-457c7e727bd5"],

Cell[TextData[{
 "A discrete-time system modeled by the equations ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"x", "(", 
      RowBox[{"k", "+", "1"}], ")"}], "\[LongEqual]", 
     RowBox[{
      RowBox[{"a", ".", 
       RowBox[{"x", "(", "k", ")"}]}], "+", 
      RowBox[{"b", ".", 
       RowBox[{"u", "(", "k", ")"}]}]}]}], ",", " ", 
    RowBox[{
     RowBox[{"y", "(", "k", ")"}], "\[LongEqual]", 
     RowBox[{
      RowBox[{"c", ".", 
       RowBox[{"x", "(", "k", ")"}]}], "+", 
      RowBox[{"d", ".", 
       RowBox[{"u", "(", "k", ")"}]}]}]}]}], TraditionalForm]], "InlineMath",
  ExpressionUUID->"2ed7c8fb-6017-4136-89d3-80d3d97993c2"],
 " with states ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "\[Element]", 
    SuperscriptBox["\[DoubleStruckCapitalR]", "n"]}], TraditionalForm]], 
  "InlineMath",ExpressionUUID->"b802b7e6-1006-47e1-a91f-5536110b140e"],
 ", control inputs ",
 Cell[BoxData[
  FormBox[
   RowBox[{"u", "\[Element]", 
    SuperscriptBox["\[DoubleStruckCapitalR]", "p"]}], TraditionalForm]], 
  "InlineMath",ExpressionUUID->"15fd027f-3be0-4420-91d9-35f9609cc4dc"],
 ", outputs ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "\[Element]", 
    SuperscriptBox["\[DoubleStruckCapitalR]", "q"]}], TraditionalForm]], 
  "InlineMath",ExpressionUUID->"a5c09740-3c85-47ec-8a51-162ce7cebf81"],
 ", and sampling period ",
 Cell[BoxData[
  StyleBox["\[Tau]", "TR"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "0107467c-777d-4805-bfb5-3ca81552d471"],
 " can be specified as ",
 Cell[BoxData[
  RowBox[{
   TemplateBox[{
     Cell[
      TextData["StateSpaceModel"]], "paclet:ref/StateSpaceModel"},
    "RefLink",
    BaseStyle->{"InlineFormula"}], "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      StyleBox["a", "TI"], ",", 
      StyleBox["b", "TI"], ",", 
      StyleBox["c", "TI"], ",", 
      StyleBox["d", "TI"]}], "}"}], ",", 
    RowBox[{
     TemplateBox[{
       Cell[
        TextData["SamplingPeriod"]], "paclet:ref/SamplingPeriod"},
      "RefLink",
      BaseStyle->{"InlineFormula"}], "->", 
     StyleBox["\[Tau]", "TR"]}]}], "]"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "dcf7c627-ff02-435d-90db-4825911b2f3c"],
 "."
}], "Notes",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235510316*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->773022565,ExpressionUUID->"3019cb44-b5bc-4f49-a5fb-40b447896fc8"],

Cell["\<\
Continuous-time and discrete-time descriptor state-space systems can be \
specified as follows: \
\>", "Notes",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235510316*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->19376661,ExpressionUUID->"64824876-e3ac-4df6-9d51-a05d1d222e82"],

Cell[BoxData[GridBox[{
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "bfc8d56b-c91e-45eb-8347-87a595365083"], 
    RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
      RowBox[{
       StyleBox["a", "TI"], ",", 
       StyleBox["b", "TI"], ",", 
       StyleBox["c", "TI"], ",", 
       StyleBox["d", "TI"], 
       StyleBox[",", "TI"], 
       StyleBox["e", "TI"]}], "}"}], "]"}], Cell[TextData[Cell[BoxData[
     FormBox[
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"e", ".", 
          RowBox[{"x", "'"}]}], 
         RowBox[{"(", "t", ")"}]}], "\[LongEqual]", 
        RowBox[{
         RowBox[{"a", ".", 
          RowBox[{"x", "(", "t", ")"}]}], "+", 
         RowBox[{"b", ".", 
          RowBox[{"u", "(", "t", ")"}]}]}]}], ",", " ", 
       RowBox[{
        RowBox[{"y", "(", "t", ")"}], "\[LongEqual]", 
        RowBox[{
         RowBox[{"c", ".", 
          RowBox[{"x", "(", "t", ")"}]}], "+", 
         RowBox[{"d", ".", 
          RowBox[{"u", "(", "t", ")"}]}]}]}]}], TraditionalForm]], 
     "InlineMath",ExpressionUUID->"7b76797b-713f-43d4-82bc-2664578d9e96"]], 
     "TableText",ExpressionUUID->"0f8dd53e-3c7e-4eef-8b22-cb0be35908ad"]},
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "bcfcf965-f444-4656-b9a2-dd361b219630"], 
    RowBox[{"StateSpaceModel", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        StyleBox["a", "TI"], ",", 
        StyleBox["b", "TI"], ",", 
        StyleBox["c", "TI"], ",", 
        StyleBox["d", "TI"], 
        StyleBox[",", "TI"], 
        StyleBox["e", "TI"]}], "}"}], ",", 
      RowBox[{
       TemplateBox[{
         Cell[
          TextData["SamplingPeriod"]], "paclet:ref/SamplingPeriod"},
        "RefLink",
        BaseStyle->{"2ColumnTableMod"}], "->", 
       StyleBox["\[Tau]", "TR"]}]}], "]"}], Cell[TextData[Cell[BoxData[
     FormBox[
      RowBox[{
       RowBox[{
        RowBox[{"e", ".", 
         RowBox[{"x", "(", 
          RowBox[{"k", "+", "1"}], ")"}]}], "\[LongEqual]", 
        RowBox[{
         RowBox[{"a", ".", 
          RowBox[{"x", "(", "k", ")"}]}], "+", 
         RowBox[{"b", ".", 
          RowBox[{"u", "(", "k", ")"}]}]}]}], ",", " ", 
       RowBox[{
        RowBox[{"y", "(", "k", ")"}], "\[LongEqual]", 
        RowBox[{
         RowBox[{"c", ".", 
          RowBox[{"x", "(", "k", ")"}]}], "+", 
         RowBox[{"d", ".", 
          RowBox[{"u", "(", "k", ")"}]}]}]}]}], TraditionalForm]], 
     "InlineMath",ExpressionUUID->"eb194be7-2dba-4ed1-8bdd-d4515e2a14aa"]], 
     "TableText",ExpressionUUID->"0b4e9386-e32b-4904-a2b6-a6776fbb82ba"]}
  }]], "2ColumnTableMod",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235510316*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 GridBoxOptions->{
 GridBoxBackground->{
  "Columns" -> {{None}}, "ColumnsIndexed" -> {}, "Rows" -> {None, {None}}, 
   "RowsIndexed" -> {}},
 GridBoxDividers->{"Rows" -> {{True, True, True}}}},
 CellID->64914368,ExpressionUUID->"abda6060-ab28-42ce-9f8a-f7b9c7ad71b8"],

Cell[TextData[{
 "For a system with ",
 Cell[BoxData[
  StyleBox["n", "TI"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "4fea415a-5d15-4a2a-851b-406e222059d9"],
 " states, ",
 Cell[BoxData[
  StyleBox["p", "TI"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "813c963a-9fa5-4523-93ca-6a52144d6d00"],
 " inputs, and ",
 Cell[BoxData[
  StyleBox["q", "TI"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "c9d9a519-228f-4e99-ac13-f1a637e442db"],
 " outputs, the matrices ",
 Cell[BoxData[
  StyleBox["a", "TI"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "49e5beb5-1018-4ee1-afa8-2cd32a93b21d"],
 ", ",
 Cell[BoxData[
  StyleBox["b", "TI"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "5b3aaab2-a418-4b22-948e-fd511443e872"],
 ", ",
 Cell[BoxData[
  StyleBox["c", "TI"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "43fd5ba8-0d4c-4300-a083-3b1ae42ac1ca"],
 ", ",
 Cell[BoxData[
  StyleBox["d", "TI"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "7fa85f3c-21f2-4224-bf8a-d3dd2aaf0989"],
 " and ",
 Cell[BoxData[
  StyleBox["e", "TI"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "0dc95c57-4cbb-4e97-bf8c-87ad64991ab5"],
 " should have dimensions ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    StyleBox["n", "TI"], ",", 
    StyleBox["n", "TI"]}], "}"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "3694127b-c5ff-4fb0-bee2-23055db06233"],
 ", ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    StyleBox["n", "TI"], ",", 
    StyleBox["p", "TI"]}], "}"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "1593e452-df93-4b23-afe6-acab8c5058a3"],
 ", ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    StyleBox["q", "TI"], ",", 
    StyleBox["n", "TI"]}], "}"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "29f73ba0-bc7a-476d-a0bb-178cbec30c31"],
 ", ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    StyleBox["q", "TI"], ",", 
    StyleBox["p", "TI"]}], "}"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "acaa14e6-daad-4f85-a2bc-b233ee3e8904"],
 ", and ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    StyleBox["n", "TI"], ",", 
    StyleBox["n", "TI"]}], "}"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "8ac504df-4a4b-4e37-a616-ab04f706e58e"],
 "."
}], "Notes",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072355113125`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->103490879,ExpressionUUID->"8f90bc67-67ee-4ae1-bd54-1755536ec113"],

Cell["The following short inputs can be used: ", "Notes",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072355113125`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->323769202,ExpressionUUID->"2f916f6e-ef60-4475-b2f5-fb3b1d312582"],

Cell[BoxData[GridBox[{
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "82e66024-d29b-438f-b8e8-37ec89388f7d"], 
    RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
      RowBox[{
       StyleBox["a", "TI"], ",", 
       StyleBox["b", "TI"], ",", 
       StyleBox["c", "TI"]}], "}"}], "]"}], Cell[TextData[Cell[BoxData[
     FormBox[
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"x", "'"}], 
         RowBox[{"(", "t", ")"}]}], "\[LongEqual]", 
        RowBox[{
         RowBox[{"a", ".", 
          RowBox[{"x", "(", "t", ")"}]}], "+", 
         RowBox[{"b", ".", 
          RowBox[{"u", "(", "t", ")"}]}]}]}], ",", " ", 
       RowBox[{
        RowBox[{"y", "(", "t", ")"}], "\[LongEqual]", 
        RowBox[{"c", ".", 
         RowBox[{"x", "(", "t", ")"}]}]}]}], TraditionalForm]], "InlineMath",
     ExpressionUUID->"45d4b845-5076-4a1f-946f-7d021398544a"]], "TableText",
     ExpressionUUID->"37907efa-5242-4305-b696-21c066546e84"]},
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "c1e36d76-49a3-4fa0-868c-83aeee740da7"], 
    RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
      RowBox[{
       StyleBox["a", "TI"], ",", 
       StyleBox["b", "TI"]}], "}"}], "]"}], Cell[TextData[Cell[BoxData[
     FormBox[
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"x", "'"}], 
         RowBox[{"(", "t", ")"}]}], "\[LongEqual]", 
        RowBox[{
         RowBox[{"a", ".", 
          RowBox[{"x", "(", "t", ")"}]}], "+", 
         RowBox[{"b", ".", 
          RowBox[{"u", "(", "t", ")"}]}]}]}], ",", " ", 
       RowBox[{
        RowBox[{"y", "(", "t", ")"}], "\[LongEqual]", 
        RowBox[{"x", "(", "t", ")"}]}]}], TraditionalForm]], "InlineMath",
     ExpressionUUID->"f0658b0d-244c-4be0-b0c5-5ef794ba9b16"]], "TableText",
     ExpressionUUID->"5e515404-15e0-4ee1-801e-f2250ef25a49"]},
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "ab2194c0-4662-4029-800a-c13f33aa696e"], 
    RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
      RowBox[{
       StyleBox["a", "TI"], ",", 
       StyleBox["b", "TI"], ",", 
       StyleBox["c", "TI"], ",", 
       TemplateBox[{
         Cell[
          TextData["Automatic"]], "paclet:ref/Automatic"},
        "RefLink",
        BaseStyle->{"2ColumnTableMod"}], ",", 
       StyleBox["e", "TI"]}], "}"}], "]"}], 
    FormBox[Cell[TextData[Cell[BoxData[
      FormBox[
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"e", ".", 
           RowBox[{"x", "'"}]}], 
          RowBox[{"(", "t", ")"}]}], "\[LongEqual]", 
         RowBox[{
          RowBox[{"a", ".", 
           RowBox[{"x", "(", "t", ")"}]}], "+", 
          RowBox[{"b", ".", 
           RowBox[{"u", "(", "t", ")"}]}]}]}], ",", " ", 
        RowBox[{
         RowBox[{"y", "(", "t", ")"}], "\[LongEqual]", 
         RowBox[{"c", ".", 
          RowBox[{"x", "(", "t", ")"}]}]}]}], TraditionalForm]], "InlineMath",
      ExpressionUUID->"14f4f7bf-93b2-4b1b-8e11-68b9b3524cc7"]], "TableText",
      ExpressionUUID->"3e6f722c-939d-4632-bade-53898ea99b2f"],
     TraditionalForm]},
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "7c13a374-8b4f-432e-8785-e172a6c4ca5e"], 
    RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
      RowBox[{
       StyleBox["a", "TI"], ",", 
       StyleBox["b", "TI"], ",", 
       TemplateBox[{
         Cell[
          TextData["Automatic"]], "paclet:ref/Automatic"},
        "RefLink",
        BaseStyle->{"2ColumnTableMod"}], ",", 
       TemplateBox[{
         Cell[
          TextData["Automatic"]], "paclet:ref/Automatic"},
        "RefLink",
        BaseStyle->{"2ColumnTableMod"}], ",", 
       StyleBox["e", "TI"]}], "}"}], "]"}], 
    FormBox[Cell[TextData[Cell[BoxData[
      FormBox[
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"e", ".", 
           RowBox[{"x", "'"}]}], 
          RowBox[{"(", "t", ")"}]}], "\[LongEqual]", 
         RowBox[{
          RowBox[{"a", ".", 
           RowBox[{"x", "(", "t", ")"}]}], "+", 
          RowBox[{"b", ".", 
           RowBox[{"u", "(", "t", ")"}]}]}]}], ",", " ", 
        RowBox[{
         RowBox[{"y", "(", "t", ")"}], "\[LongEqual]", 
         RowBox[{"x", "(", "t", ")"}]}]}], TraditionalForm]], "InlineMath",
      ExpressionUUID->"f66ddfdd-6cf1-4995-a45e-145ce6594d0f"]], "TableText",
      ExpressionUUID->"e1b6e302-6457-418e-9750-260073806770"],
     TraditionalForm]}
  }]], "2ColumnTableMod",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072355113125`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 GridBoxOptions->{
 GridBoxBackground->{
  "Columns" -> {{None}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {None, None, None, {None}}, "RowsIndexed" -> {}},
 GridBoxDividers->{"Rows" -> {{True, True, True, True, True}}}},
 CellID->658783933,ExpressionUUID->"62573f1c-d02e-4966-900d-8837b659a151"],

Cell[TextData[{
 "In ",
 Cell[BoxData[
  RowBox[{
   TemplateBox[{
     Cell[
      TextData["StateSpaceModel"]], "paclet:ref/StateSpaceModel"},
    "RefLink",
    BaseStyle->{"InlineFormula"}], "[", 
   StyleBox["sys", "TI"], "]"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "56de03fa-10c0-471d-b731-ad153204913b"],
 " the following systems can be converted: "
}], "Notes",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072355113125`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->5191429,ExpressionUUID->"3dafe634-7e55-446c-974b-70b76e80efe5"],

Cell[BoxData[GridBox[{
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "742a3263-0211-44f9-84a6-069a15f349bc"], 
    TemplateBox[{
      Cell[
       TextData["AffineStateSpaceModel"]], "paclet:ref/AffineStateSpaceModel"},
     "RefLink",
     BaseStyle->{"2ColumnTableMod"}], Cell[
    "approximate Taylor conversion", "TableText",ExpressionUUID->
     "b71d472d-8b24-415a-becd-186975d02cc7"]},
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "bf3ebb5d-89b2-4a29-b4da-6002bc796789"], 
    TemplateBox[{
      Cell[
       TextData["NonlinearStateSpaceModel"]], 
      "paclet:ref/NonlinearStateSpaceModel"},
     "RefLink",
     BaseStyle->{"2ColumnTableMod"}], Cell[
    "approximate Taylor conversion", "TableText",ExpressionUUID->
     "6ef925b2-9f82-41d2-bebe-bd134113de5a"]},
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "2b20b3f1-d0b7-47e2-a098-05ce9076a402"], 
    TemplateBox[{
      Cell[
       TextData["TransferFunctionModel"]], "paclet:ref/TransferFunctionModel"},
     "RefLink",
     BaseStyle->{"2ColumnTableMod"}], Cell[
    "exact conversion", "TableText",ExpressionUUID->
     "4d99f3b9-97a7-4c8c-8e51-52aff1f2b8c0"]}
  }]], "2ColumnTableMod",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072355113125`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 GridBoxOptions->{
 GridBoxBackground->{
  "Columns" -> {{None}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {None, None, {None}}, "RowsIndexed" -> {}},
 GridBoxDividers->{"Rows" -> {{True, True, True, True}}}},
 CellID->723005164,ExpressionUUID->"bf449ddb-ca1c-4926-a2e0-25a297f08f48"],

Cell[TextData[{
 "When converting from transfer-function model ",
 Cell[BoxData[
  StyleBox["sys", "TI"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "1a583edd-239b-4c9a-baaf-40b0cff3c3b0"],
 ", the controllable realization is used. "
}], "Notes",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235513275*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->257574754,ExpressionUUID->"d09067ed-8cb4-400d-84ed-4f864fee6b67"],

Cell[TextData[{
 "For equational input, default linearization points ",
 Cell[BoxData[
  SubscriptBox[
   StyleBox["x", "TI"], 
   SubscriptBox[
    StyleBox["i", "TI"], "0"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "a94f623f-2c68-41c6-9683-59ff80744853"],
 " and ",
 Cell[BoxData[
  SubscriptBox[
   StyleBox["u", "TI"], 
   SubscriptBox[
    StyleBox["j", "TI"], "0"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "328cfb02-cf15-4ec8-aa74-c0bb62e5a6a5"],
 " are taken to be zero. "
}], "Notes",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235513275*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->258661957,ExpressionUUID->"80108cbe-ef0f-46c8-9a57-be3ce71666f7"],

Cell["The following options can be given: ", "Notes",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235513275*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->418426427,ExpressionUUID->"307910ad-d6a5-478a-b7d3-2c75156feb34"],

Cell[BoxData[GridBox[{
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "73bbfed9-56bb-4a83-927f-c5c7678489ef"], 
    TemplateBox[{
      Cell[
       TextData["SamplingPeriod"]], "paclet:ref/SamplingPeriod"},
     "RefLink",
     BaseStyle->{"3ColumnTableMod"}], 
    TemplateBox[{
      Cell[
       TextData["Automatic"]], "paclet:ref/Automatic"},
     "RefLink",
     BaseStyle->{"3ColumnTableMod"}], Cell[
    "the sampling period", "TableText",ExpressionUUID->
     "c433cbd2-30d4-48bc-be86-8f288e839ad5"]},
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "29613eef-c8ec-4d24-8131-fe36f8b2d986"], 
    TemplateBox[{
      Cell[
       TextData["StateSpaceRealization"]], "paclet:ref/StateSpaceRealization"},
     "RefLink",
     BaseStyle->{"3ColumnTableMod"}], 
    TemplateBox[{
      Cell[
       TextData["Automatic"]], "paclet:ref/Automatic"},
     "RefLink",
     BaseStyle->{"3ColumnTableMod"}], Cell[
    "the canonical realization", "TableText",ExpressionUUID->
     "cc6b62c2-d974-49d2-802f-9d2964224196"]},
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "47e48f35-f115-43c8-9c0b-cb88846b258a"], 
    TemplateBox[{
      Cell[
       TextData["DescriptorStateSpace"]], "paclet:ref/DescriptorStateSpace"},
     "RefLink",
     BaseStyle->{"3ColumnTableMod"}], 
    TemplateBox[{
      Cell[
       TextData["Automatic"]], "paclet:ref/Automatic"},
     "RefLink",
     BaseStyle->{"3ColumnTableMod"}], Cell[
    "standard or descriptor realization", "TableText",ExpressionUUID->
     "f59ce3ce-8f76-49e1-9407-68cbc8c2d9e6"]},
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "18b53012-3aec-4a9f-b7bf-349f67733d23"], 
    TemplateBox[{
      Cell[
       TextData["SystemsModelLabels"]], "paclet:ref/SystemsModelLabels"},
     "RefLink",
     BaseStyle->{"3ColumnTableMod"}], 
    TemplateBox[{
      Cell[
       TextData["Automatic"]], "paclet:ref/Automatic"},
     "RefLink",
     BaseStyle->{"3ColumnTableMod"}], Cell[
    "the labels for the input, output, and state variables", "TableText",
     ExpressionUUID->"23c5d2e0-c27f-4c4b-9f4f-b631ea221e4d"]}
  }]], "3ColumnTableMod",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235513275*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 GridBoxOptions->{
 GridBoxBackground->{
  "Columns" -> {{None}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {None, None, None, {None}}, "RowsIndexed" -> {}},
 GridBoxDividers->{"Rows" -> {{True, True, True, True, True}}}},
 CellID->155227,ExpressionUUID->"bf0bb76d-db90-4ffc-9805-55ab1b20d440"],

Cell[BoxData[
 TagBox[
  ButtonBox[
   StyleBox[
    DynamicBox[ToBoxes[
      Overlay[{
        Grid[{{
           Spacer[10], 
           Apply[Sequence, 
            Map[ImageResize[#, {170, 
               Min[70, Part[
                  ImageDimensions[#], 2] + 5]}]& , 
             Take[
              Part[{{
                 Image[CompressedData["
1:eJztvddyI0iSIDi297KP+wv3F/e6L2d2r3t2dvewe2YrZuamZ6aqt7urq0um
okiSSRKCAAkSICEJSYCE1iS01loLQmutAV4AIJEgM5miKktNtycSGYjw8PBQ
Hu4RHpH/63/7/D/9w7/7u7/7uz/+e/D1n/7rl//xD3/4r1/9n/8B/Pi/Pvvj
P/3jZ3//P/6Pz/709//493/43/7b/wIi/3fwlwb+TsM3f4O/bphMpt9mc0pp
SIXCpVqjl07XkulGs9W3WFIqU6Za7TRaffBzMBgVS+1WexDwFT3gEy6XK53R
aOx25mKpZq3acXlLgFQhl6tUq71er5DPjcaTZqNWqdSazWahWGi129VqtV5v
1GrVbq/XAFBrFEsFn887/dlsNJuNQqnUqNeNNlOxUu20O9UpqW6z1QJUms12
wGu1erydVjOZTAIWx6NRLhU3mgwOuzObr4xHg1K53O10gj5POleoVst+XwAU
1+n2Ou1mpVafjMeVciUaDqfS+ca0tPr1dQrQqddqrWYjEo5nczlQhXoV1KAG
Pp1Wq1DIe9xOvz9cLBaa7fZkMul1WqVyBTTboN8rl6sAv1wqAf4rlQqIkUr5
FpujVq91Ou1coQDI1Gq1UCCQzRXq9Xq71bBbLfF4MpfL5vP54XAISvmluj4e
8jl9YRBQKSMItIl46sDjrc+2VBSGY31bRWF6cWTnKdVFoLh2YdptlEksDW1u
K/dQpi+/le7uGwl0BxJtPcLYdiCal7uqK10pGrTTmSwiFrP2cgMOhRstDgGX
tbHyYgcKw+OP4Xt7x+jDlecvYHvwPQj0+bO1bdgu8vDw4Agfj4YhW2uoQ4JW
r/7LF3+EYdDow4Ov//JnrcnhNmu++PNXeDwOgThcXX8mUaulfO7q6gsEcv+c
xWdQKYeH+6dEEuYQc0pmvFxdebW1wbrgUgjE50+/g8P2n3z9lUipk3DPkAcH
FDJleweyvQPb2dh6ubmFxRG2NtaR+/vbu/BUOnVKOFzdgdpdnjMq9YJ5jtiD
be6+2kdjUAfoM/rpKzjkEI3ncYT7KCQo+ozF5zCo669gkUj4aB+BRMCuVDqV
Qvzts6/xJAoSDkHsoUVyGQqBePbkxcqLDdQRavXlpsftRh0esVjnrzZfImBQ
JOADtt8bDG8n4c8L/V633e2BgM+bYwtDRsM1jemRKOIaQ5IjDFmdGTbPjzm2
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
l1cqf3CqAX7aCf5umI9/8fnpEZFuUon/v8/+lEslfvef//Oz1b1CpQw060o+
jT0+IeHIu9vbO3tQKBy5sbGLwqIxx4erK6s6i81hUq6+eonBEU8wBzsQKIvB
2kfuwff2cJQznUpGIjPsZs1///t/jCeTz/7nv/7zv3ytVFnb7R6Y/1ci7r/8
8z8dY0+QsKPNtXWz1UY/xa9vbpHI1H0kAo8jHqLg0L0DNpMJh8J3Xu3yJZcW
o4LGFkg59M///G3uOvo//u//Z2sXbbXYgDBhsyhisfT7r/4MgcEP9jEetwcJ
Qzz7+qtvn7+Mx2Nrqy/2Ucc76+t/+fLLrS0oiyM4xaMRCNTe9tqTZ6vQrV0i
iRIL+3//L797+vSJ0epSXMUg+3oa3QWBatbhOjzRsvJKxeL50QT7MR58bN+v
yCEYC4ftfbp+iTgwfvGNFHlsQROs23tGNMa2sn65jbRIZC4WDQ9W/P09mMbo
BML8FIOA7u2DSRELuFkcfq3RqZcLCOjOKZXOZLK0RudwaVX9GWAyO9e0g2Ea
S1ZLGZFUXi4W9Dqd2z3dgvbarF5f2GQ0aTTay0u5PxxMJJIKpSqcTLisZrns
MpZKZq6jDq877PcAjdVqsYrYbIfTqVDIjRaz3aRXKDStZo0vFBaKJZNB73S5
+qObXrOiUhl9dvvFOes6nQ76/QIuO1co2ywmlc7IFXJNdtclj43H4qwmk4jL
8/n8EonY6fbzeBxvNFUpXIvlilIhB/j0+vzzioR9boX8isti2d2eWCRZyOfl
MrHRaFSo9a1261LGQyIRWr1BqVI7nC6VRu31esLBkMVs0OhNRp1Kb7Tkrq/B
SJPLpJFo0u0tqPXXNmtaII3YXHmzLa0zpZ3unEgcIpHdelOaLwkbzWnwUemu
Q5HK9BMqKdVJmzOrVCf0ppTZnrfbg0A7ptCYfAH4I4onsnagz9kdGrUZiE6H
w6660uayWc4FTa1Snl9wOVxJpd7+abZ2PhoAE/3lI433oXc/9MRh6szTHwze
gzQeDt5YzfP54lswP6yxep0ffiByj07/w7WFcalYqs48EyYzXfmOQv9BoNtu
FYulXn/aJj9/1y+7S03uXJWWUx+4VE3uu0iNJ+MHmHep8z2Qyfw4b7ElMocF
qQc0l9GWHbfutPt7+AvvjqXskwXOoiJzgvepLXCW3beWq7n0mTljLGblvaS5
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
hbkGKZeFkGjzKcV5grWs7KjJdMfGrprK8uApLhLVRaK5tqEa2LFFJA5u7Kjg
B8Y/fyOFHpkJNMc+ZvqMzzZEvY0wCiW+CzqRy5fRyUSF1gLICpikze1dEKjk
M1yesNroDLptkIo8OJQpNCA+4M0c4u0UmnMDosPgLVCU+YzlP8Jaj3HOC44P
ijFR6G4EyoQ4MeEojm2kBn5goDCdKLz16NgGRxgPjqf3+PRaldls2t8/CMWS
Qv4Fmyu0u0OgWr+SmzK/ZpgPTocjzRaG9LoEheGWquJKbZwjClkcGaDCY07s
YlmUSHPxJWGVOnHOD1gdWYMpbbNlBOKQXBEXiMIgIFEkTObIxRnQnWlEEvGc
xQ6Fr40alUqh0qiN11GQV61R6jLpDAF3cHUlp1HPXC5/qdw+Y3vPLrwsbiAQ
Kvl8RRbDc0rzqrTXKm3CFSyKud6nL1USTRKsqDJZ6EqdSKZql+oYXxwWSkJ8
SWwwGqeAdhKPyi6vStW63+112u1nLEGz3f+1T7zfApTKH663jJKJZDI9Fen9
Xmeh8FRrtUVgPh0b1UomW+i8sSdzM91L6XX7r4V5t93Tm9Kd/kes7MV8tjp7
n+Fvnf/hMLkHd7slS0nju/i5UL3bj1j8vEdqmeZdaJH64EBtQe3hueqDyXsX
ebNc9Gv27o5WP3XD/FXDRzXnWxWdewfZj6O9vbiPX75/A8rWrwzuT/x7fhTL
CMuY8065Jy8e0Ll5rTk/Rv/mvjvE2+ksJSzN+nv0JvcTHqVwz4NlKeM7S1+O
eYzyvfh7+JO3td49gn+18BPV/pdo1d9eP07ulkubWSdXavK5bKPRzGYzAb/P
aDTHE8lMJjMYDIHxns+m67NncovFfKc3aNXLBr0+Nr1yGkun0+12s1yuDYe9
cqVSKuSBdhfxuywOT6/dFPAEDifQ7Uu1SjmbyZZKRfBxOZzXqVxx9pSizWJx
ewKg0FA42m53Crmp0hj2OcxWR7lcLhZL9Xoznc3mclmbw57OZJPx6eWRfC5X
q9eLhVKz2YjHwn5/oFKu+H2e5HWqWJz6YICslUo5k8k3mrVms10oFoqlImCs
1+1k0vnRaFQuFuLRkD8QLJeKtVotGo1kc6C0wmg8qVbL6WwOIJeKhXy5mooF
tGZbr9cpFMv9XrdSLmeymWarBQK1ajUWjV7JhHgiMVcEtQcV9xgtnm6nDepZ
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
                  "], "Byte", ColorSpace -> "RGB", ImageSize -> All, 
                  Interleaving -> True, Magnification -> Automatic], 
                 Image[CompressedData["
1:eJztfdd3G0m63x77xY/+F/xf+NUvPsev18ePfth77nrP9d6dvd7Z2ZFmpBlF
BjGCOYEkSEQCIIlAEgCRM4gcG7GRc84ZdDWahECQmtFIlEaj1U8U0F3hq6+r
uqt+X9XXhf/yz3/5p//zH373u999/Z/Axz/9/tv/9te//v7h//zP4OR/ffX1
v/7xqz/8y//46m9/+OMf/vpf//k/gsD/Dv4fgP/I8eVN9ACGTrt99PpAD4Y/
0YM+OsPhN6SBwH4IiEJDBikHidGT4RIH8tGUI1EgchAyouSwbtfHd1xOX+PO
IMHrIoYU68cOV8brEi97vWGB3Zv6jyj2uk5u1sxIPQzqrdvpdG/idllX8gYV
eF3J94VKqVgsld4tb61W63U79XrrbRIPrrrZqDea7TclGgkoFAu/VKtqpfoT
sZ12887qA+q1ms1hPdGDTqs1om21XOkMiaiUK8Ox5TJSmc16vVwptzvdO3VI
phJ36wCUu1UzhUJhWB8AtL1673QboJlSiXg6i4jdW188Zp2JhSKJWGhzemCv
Q6HWRUI+Lv8c9vn5XD6LdXpIZwr4ApVKTSYShDJVJp1SKpR6nY5+QKHR6WvL
Gx5/KOjzOL3+WrnA47Co9EOrUX9AIdNpTJFAyOcL9GYXKMvngmx2qFzInXM5
zFOOXKXkcXk+OGQ16SkUCvdc0gK11aryuBzNhZrLFUrFnDXcbrvddNhsjUZD
JReKpcpYLH5EpwjFcu4Zzwb5fC7HNhbH455ni5VOvUjYw+/sYsUSBeeMnUjl
FCI+nkiyOdwSwTmZTJZI5TQ6TSCSafQGPu+cc8pxw/5CNgVBbqCeUSU6ZLDB
QbtVd7u9SCPWyiQSJZUrqWRiiUTC4XBMeu3aJq5YLNshZ6VSkkkFOzsbAqFK
IZMq1BexaJx9cnhycko9oFksupmVFafbwzg+glw+jUzBOuEViwU6dXcFi73Q
qImEfVDnUrGEfy444fLkSrlcLlMoZEKRSA7knotFYnk0luBxzs0mUzSZAfok
IiGj0cBmczrv0PBDt5DHaYdDcXBAPyCIhNKl+bmxialUoUzb3Xw+OWO8UMxO
TS0tLq2srU7NzKwsLv345Anx4PCAiN/FE7wu6P/95U/PxmbodOYB+fCAfCAS
KXbXF1dxpFwq/vzxdwQCfX1p8S9/ebi+uvbkydNNLHYKsxCJJ/dWl/eIx/Vy
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
                  "], "Byte", ColorSpace -> "RGB", ImageSize -> All, 
                  Interleaving -> True, Magnification -> Automatic]}, 
                "IncludeEllipsis" -> False}, 1], 
              UpTo[4]]]], 
           Spacer[10]}}], 
        If[
         CurrentValue["MouseOver"], 
         Overlay[{
           Graphics[{
             RGBColor[0, 0.666667, 1, 0.06], 
             Rectangle[{-360, -40}, {360, 40}]}, ImageSize -> {720, 80}, 
            PlotRangePadding -> None, ImagePadding -> None], 
           Image[CompressedData["
1:eJzdmc9vE0cUxyNAosfeckGIXnujJy6tVKk9VOLStFVz4AIlRD00VQMSouXQ
/hEIIfXAta0qFTggkBqpCA40CSUJtKX8ik1i4ti7XjuJfyQkw/uud52345nx
7I+A1cM3tuPdnfeZN+/HjN869vXQiV0DAwMn36A/Q0dPvz8+fvTMJ2/Sh8/G
Tn45OjZy/KOxUyOjI+OHju2mf74TaA9JCPG/kdfaTKr9pCOkC6TbpBJJBNoi
FUk3SedIw6TBFGMplZJjnPQ7szmOrpNGXzPHWdLdhPbLukUae8UcB1PMfy9d
JR14BRznTXaU1tbFvLMq/lmqirsLrpjMlcWf8yVf0/R+ZtEV/xZrIl+pC6ex
oXtOjfQp3TMQV5YcP+rsX/AaYrZQ6dhsoykSeIsrLR3P+R3gUDIsrbbE7GI8
+1X6u1gV5brSP7FYenAo19ITdy21/Vx38mWxWG2oWIYy4DioYniwXMuUgStH
8yON55L2peToyks7yRAKeUAa90oKjrNJ1hLi9z7FL+a1QDFcWtsQy6vrtGaa
4rFbt84HhVpTZjmekCNS4xDTvcZ+sLxC8fpCVFpbEXmBws9LxHXvuWd81vQz
R7iNF5zjRgKOb2RfmPLSFMVoe/7IzuZmx94Zdg/e+98F3+Pap7R+TCz/lVZk
nwzH5IjEBeqDiQHz68nzTvZ2cYScgXBt3sAymSvJ+fhyDI79Xb4wrOlCrRXM
72Ysf4QceP/Y0cfdw/Kq7JO9lhxH+H3oNcx+34qul/VtFq0/ePz4n6O+47qT
d2SODy05LvD70C/p8pIf02y9VyQmFUd43fZr+/oFyme6+ZJ6lx8sOW5zDvRA
qmcjt8p283Wvio9O/ATXyPGEuVeNNe9E6sklSw6+j/P7VtWzc24jErN8vXuG
+JBjiAu9sGos1F5m0z1Ljsh65L13JL59X7dt1YnfO+n37fpr/Xh31bkLtYbZ
VEjCoVuzqNMYW/d9XMFHuhyMfMlsqlpybNlwFNc2fH9kxmGoJXOFiD+eWXIU
Oce0Zl2hXwpjOYt15RnqCHIKs+kvS46bnAN7UdWzsZbDnNlV23R5l8W3Jwnf
3dfkRqk/+dWS4xzn0OWQuQKrB5J94asq77ZZN4UncZeb+pySr0T2JN9Zcgxz
DlP/E/ZVPOdymfqrSB9AelrR93DoKZhN71lyDHIOnGtMaZ6PfMgZqlIdUXJI
9Q+vTkNfA2eofkk5dI8lB3TNpqZDTyhOIvWczbOuT5TXFM4ZdM+XavnPOgYN
xyjnQH+jG6e9frdZtmPX3LeH/nhYUvdvEPYEbjOylzockwO6xVlMc+bnL8qZ
jrTvU3GEa8/1/WDe60u+mDAxGDi+4hzYz+BsxjQubM1jPyL1XTyvlf2Yrmvj
gQt1nO1tq6S3E3BAVzkLzpd6jQ3BRuRr+AhrDj3lI9oPoT7ocmsWLAaOA8G9
LA9ne/6WJUuP88QhuXc01ZTXyWJxvtt1Nvp8pemfzfQTi+V5excLnoneB+ca
SW1D7kDc257PmVhi/P7xMcmReZDLcK4Rxz/oP2F/WB9gW1qWmL9H7SNdkVl4
zUTex14UfQv6SewfkKvgO8TWcn1deW9aloS/D35B+kPHE1MTYV7MiiUGR6jP
SZcT2v+TF/QasCFLlgQcofaSPiB9T/qNNEtaJHmkHGmK9AvpW9K7pN1y3syK
JSWHsfexVVKWOXYW0Q8cSViQ9/lvcv3CEYdFZug3DhsWFUM/cphYdAz9yqFi
QUzrGEgX03LssDosBl1MUQf7haXD8BJ6c/TW
            "], "Byte", ColorSpace -> "RGB", ImageSize -> Automatic, 
            Interleaving -> True, Magnification -> 0.5, MetaInformation -> 
            Association[
             "XMP" -> Association[
               "BasicSchema" -> 
                Association["CreatorTool" -> "Adobe Photoshop CS6 (Windows)"],
                 "MediaManagementSchema" -> 
                Association[
                 "DerivedFrom" -> 
                  Association[
                   "DerivedFrom" -> 
                    Association[
                    "InstanceID" -> 
                    "xmp.iid:315E8AE9F23F11E68D40D1AD19F900C2", "DocumentID" -> 
                    "xmp.did:315E8AEAF23F11E68D40D1AD19F900C2"]], 
                  "DocumentID" -> "xmp.did:315E8AECF23F11E68D40D1AD19F900C2", 
                  "InstanceID" -> "xmp.iid:315E8AEBF23F11E68D40D1AD19F900C2"],
                 "RightsManagementSchema" -> 
                Association[
                 "DerivedFrom" -> 
                  Association[
                   "DerivedFrom" -> 
                    Association[
                    "InstanceID" -> 
                    "xmp.iid:315E8AE9F23F11E68D40D1AD19F900C2", "DocumentID" -> 
                    "xmp.did:315E8AEAF23F11E68D40D1AD19F900C2"]]], 
                "PagedTextSchema" -> 
                Association[
                 "DerivedFrom" -> 
                  Association[
                   "DerivedFrom" -> 
                    Association[
                    "InstanceID" -> 
                    "xmp.iid:315E8AE9F23F11E68D40D1AD19F900C2", "DocumentID" -> 
                    "xmp.did:315E8AEAF23F11E68D40D1AD19F900C2"]]]], 
              "Comments" -> Association["Software" -> "Adobe ImageReady"]]]}, 
          Alignment -> {-0.85, Center}], 
         Overlay[{
           Graphics[{
             RGBColor[0, 0.666667, 1, 0], 
             Rectangle[{-360, -40}, {360, 40}]}, ImageSize -> {720, 80}, 
            PlotRangePadding -> None, ImagePadding -> None], 
           Image[CompressedData["
1:eJztmctL1FEUx4cUbNnOjYht29mqTUFQi6BNU5ELN5omLZpIg6hc1B8hIrRo
WxGULqQgoZzxAer4yPcDZJzxnY6Kb+Z2vsPMdOd67/3d30NnFh34huXv3ns+
93HOubeL1U/9j875fL6G8/SHv+rF9fr6qpd3L9Bf7gcaHtcFamtuBZ7X1tXW
X6kuoH+8nFIhiTH2X4yVkipJLaRe0ir7ZwnSMilIaiJVkIrzwGde9aQfzJl9
J9Xl2P9G0qBD/0ULkQJn7H85cz7/VtZOKjsDhmadE7u7u2xhYYGNjY2xvr4+
FgqFWGdnZ1JdXV1sYGCATU5OsqWlJXZ4eKjqZot0j9r47MqQ4Z1q4NXVVTY4
OJjx2UTBYDDJu7W1peq2+RQ4pAzb29ssHA7b8l+m8fFxdnBw4JrFgkG6lyKR
SHJO3TKk1d3dzdbX12VD+T3gKBc7TSQSbGpqyjP/RS0uLopD/iGVuOQ4EZdO
k0HD0uaCo1G2l6x8wF4bHR1N+hKPx9ne3l4yjm1sbCTbm8aDzc1NcfgahxxZ
OQ5n2uo8TE9Pq84rE/saGRnR9tXb28uOjo74Zr8ccDwTx9bFJZxRzLdoyBfp
b/CzaNFoVMsyMzMjNqmwyZF1LpAfdAw7OzvSebfigK2srGj36P7+Pv95qw2O
UnEs3Z6WrYMdDtj8/Lyy/7m5OfHzIkOOSr4RzqjuPOjMlAOxnP9WPCeC3TTk
aOEboV5SrbnVmTblgK2trSnnS6hd3hpyZE0AaiBZ34itVmaHA2vS09MjHQtz
ydlXQw7+HpesW2V9S3KVKw7YxMSEdCzkXs5+G3JkGV9780KOS/uqEt8WP+u+
hanyLHINZzEnHKo9izyt+71dwXAvkf0O8ZKzuCFHwoQDceysOIaHh3mXIoYc
y3wj3ONkfafzhpf7SpVHhJgSNuQI8o1UcR172crsnnP4KxtLqE8+G3I08Y1w
nzbYs645jo+PlTFFiI2vDTkq+EaqPQuhbvWKIxaLWcaUlF0z5CjmG+FdQ1Wv
C/HQMQfqc1UO7O/vFz8vNOSAvvENVTkdEnKtIw68Mxj2/1HFoOCo4xujvlGN
A6H2dsoxOzur7Bd3Apwbzm7b5IBCpnMGIWaiRjLlwF6y6lNYiw4dg4bjCd8J
alvMj25c+Iq6VeThDfOLe6DqPPBCTOTutiiELjnggNp5H/C+ZDU2BB9R8yHH
IN4hbmK9kB9UsdULFg1HWaptxuCTHT+8kCmLhgPyi3sDc+zlW6JXLBYc0Im3
Ubwv4c6ZTywGHFIW9Inax83aIHbg3Ju+z+lYDDmgO6QTj8l4m8G7hp31QWyD
/+n8AN/cstjggEpIbSJL2pAzEfdxF0XdMjQ0lLw/IFZh7XC2hHopa33dsNjk
SOsh6aeKx6Z1pHzJFQv0gNTq0P8PLFVrpHzINQtURLpBekP6QsJlNErCw/k8
qY/0ifSKdJVUIImbXrG44dDWPqZyyoJzyFnOOZywIO4L/yeXFxx2WCQMecVh
wqJgyDsOHYuGIS85ZCw40xqG9245TlkZFo3lO4MJS4bhL7E9ExQ=
            "], "Byte", ColorSpace -> "RGB", ImageSize -> Automatic, 
            Interleaving -> True, Magnification -> 0.5, MetaInformation -> 
            Association[
             "XMP" -> Association[
               "BasicSchema" -> 
                Association["CreatorTool" -> "Adobe Photoshop CS6 (Windows)"],
                 "MediaManagementSchema" -> 
                Association[
                 "DerivedFrom" -> 
                  Association[
                   "DerivedFrom" -> 
                    Association[
                    "InstanceID" -> 
                    "xmp.iid:315E8AE9F23F11E68D40D1AD19F900C2", "DocumentID" -> 
                    "xmp.did:315E8AEAF23F11E68D40D1AD19F900C2"]], 
                  "DocumentID" -> "xmp.did:315E8AECF23F11E68D40D1AD19F900C2", 
                  "InstanceID" -> "xmp.iid:315E8AEBF23F11E68D40D1AD19F900C2"],
                 "RightsManagementSchema" -> 
                Association[
                 "DerivedFrom" -> 
                  Association[
                   "DerivedFrom" -> 
                    Association[
                    "InstanceID" -> 
                    "xmp.iid:315E8AE9F23F11E68D40D1AD19F900C2", "DocumentID" -> 
                    "xmp.did:315E8AEAF23F11E68D40D1AD19F900C2"]]], 
                "PagedTextSchema" -> 
                Association[
                 "DerivedFrom" -> 
                  Association[
                   "DerivedFrom" -> 
                    Association[
                    "InstanceID" -> 
                    "xmp.iid:315E8AE9F23F11E68D40D1AD19F900C2", "DocumentID" -> 
                    "xmp.did:315E8AEAF23F11E68D40D1AD19F900C2"]]]], 
              "Comments" -> Association["Software" -> "Adobe ImageReady"]]]}, 
          Alignment -> {-0.85, Center}]]}, Alignment -> {Left, Center}]],
     ImageSizeCache->{1116., {57., 67.}}],
    Background:>FEPrivate`If[
      FEPrivate`SameQ[
       CurrentValue[
        EvaluationNotebook[], Background], None], 
      GrayLevel[1], 
      CurrentValue[
       EvaluationNotebook[], Background]]],
   Appearance->None,
   ButtonFunction:>(CurrentValue[
      EvaluationNotebook[], {TaggingRules, "Openers", "NotesSection"}] = Open),
   Evaluator->"System"],
  MouseAppearanceTag["LinkHand"]]], "NotesThumbnails",
 CellOpen->Dynamic[
   FEPrivate`Switch[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "Openers", "NotesSection"}], True, 
    False, Open, False, 
    Blank[], True]],
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072355142736`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,ExpressionUUID->"29d87a81-df6d-4297-bb39-21796de37669"],

Cell["", "PageDelimiter",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072355142736`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,ExpressionUUID->"427d2305-0936-4dad-be4a-a35f6a44b0f2"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {
       TaggingRules, "Openers", "PrimaryExamplesSection"}, Open], 
      Alternatives[True, Open]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{14., {0.45000000000000107`, 13.549999999999999`}}]],
  ExpressionUUID->"ed61ad9c-e8dd-42e0-858b-15b56a68dda0"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"1c0a8c42-bfc3-4771-940e-e3d661bf7cf6"],
 "Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(67)", "ExampleCount",ExpressionUUID->
  "a99da15c-c3df-4729-8131-3d42cb208559"]
}], "PrimaryExamplesSection",
 WholeCellGroupOpener->True,
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235566221*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellTags->"PrimaryExamplesSection",
 CellID->682806395,ExpressionUUID->"b8c67d5e-2539-4ebc-b2b8-e2e17abb7f16"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      Part[
       Dynamic[
        CurrentValue[
         EvaluationNotebook[], {
         TaggingRules, "Openers", "ExampleSection", "0"}, Closed]], 1], 
      Alternatives[Open, True]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{14., {0.45000000000000107`, 13.549999999999999`}}]],
  ExpressionUUID->"3de96a80-ff70-471b-af66-525220e386d0"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"bf1f1c53-d36e-409e-9f84-88ce0e14dd8f"],
 "Basic Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(5)", "ExampleCount",ExpressionUUID->
  "8ec5fd74-a991-4add-bce1-5b243e1cee69"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235567165*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->1921954844,ExpressionUUID->"ae2941ec-8f87-45ff-8352-7fd5c77d5a37"],

Cell["A state-space model of an integrator:", "ExampleText",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235567165*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->2085944325,ExpressionUUID->"54eb4d24-0bd0-492a-9e29-f75e50dc3a1a"],

Cell[BoxData[
 RowBox[{"StateSpaceModel", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"{", "0", "}"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"{", "1", "}"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"{", "1", "}"}], "}"}]}], "}"}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072355681334`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[1]:=",
 CellID->486079657,ExpressionUUID->"33607b65-2da2-41f9-ae2f-586d888a4b1a"],

Cell[BoxData[
 TemplateBox[{"0", "1", "1", "0", 
   InterpretationBox["\[InvisibleSpace]", None], {
   StateSpaceModel, {
    False, False, {False, False}}, {$CellContext`stname1}, {{
     Control`CommonDump`$DUMMY$}, {Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$}}, Identity, Automatic, 1, 1, 1, 1, {}, {
    False, False}, False, Automatic, None, Automatic}, {}},
  "StateSpaceModelFull",
  BaseStyle->{NumberMarks -> False},
  DisplayFunction->(TagBox[
    SubsuperscriptBox[
     RowBox[{"(", 
       GridBox[{{#, #2}, {#3, #4}}, AllowedDimensions -> {2, 2}, AutoDelete -> 
        False, AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
        BaseStyle -> {Deployed -> False}, GridBoxItemStyle -> {}, 
        GridBoxDividers -> {"Rows" -> {False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}, "Columns" -> {False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}}, 
        GridBoxBackground -> {"Rows" -> {{
             GrayLevel[1], 
             RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #5, 
     ButtonBox[
      GraphicsBox[{
        RGBColor[0.8, 0.85, 0.85], 
        EdgeForm[
         RGBColor[0.6, 0.7, 0.7]], 
        RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
        InsetBox[
         StyleBox[
         "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
          GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
          FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
      ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
        ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
      None], MultilineFunction -> None], 
    EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
          FrontEnd`Value[
           FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
      True}]]& ),
  InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{1, 1}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{2, 2}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{3, 3}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{4, 4}, ","], "}"}], "}"}], "}"}], ",", 
     "SamplingPeriod", "->", 
     RowBox[{#5}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
  Tooltip->StateSpaceModel]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072355681334`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[1]=",
 CellID->385599460,ExpressionUUID->"e5139874-f3f7-4c4a-b771-86c376129d2e"],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "7b59fcdd-073a-481f-9bdd-36ce07c9f81b"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072355691295`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->520956051,ExpressionUUID->"82d5c299-cd3e-4023-89af-f89d305574bd"],

Cell["A second\[Hyphen]order single-input, single-output system:", \
"ExampleText",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072355691295`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->61334184,ExpressionUUID->"669185c4-4bdf-4de5-bc65-7eb52350b84a"],

Cell[BoxData[
 RowBox[{"StateSpaceModel", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        SubscriptBox["a", "1"], ",", 
        SubscriptBox["a", "2"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        SubscriptBox["a", "3"], ",", 
        SubscriptBox["a", "4"]}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       SubscriptBox["b", "1"], "}"}], ",", 
      RowBox[{"{", 
       SubscriptBox["b", "2"], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["c", "1"], ",", 
       SubscriptBox["c", "2"]}], "}"}], "}"}]}], "}"}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072355691295`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[1]:=",
 CellID->393017972,ExpressionUUID->"fb7d1d7a-a598-4004-8678-4936122eaddf"],

Cell[BoxData[
 TemplateBox[{
   SubscriptBox["a", "1"], 
   SubscriptBox["a", "2"], 
   SubscriptBox["b", "1"], 
   SubscriptBox["a", "3"], 
   SubscriptBox["a", "4"], 
   SubscriptBox["b", "2"], 
   SubscriptBox["c", "1"], 
   SubscriptBox["c", "2"], "0", 
   InterpretationBox["\[InvisibleSpace]", None], {
   StateSpaceModel, {
    False, False, {
     False, False}}, {$CellContext`stname1, $CellContext`stname2}, {{
     Control`CommonDump`$DUMMY$}, {Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$}}, Identity, 
    Automatic, 1, 1, 2, 1, {}, {False, False}, False, Automatic, None, 
    Automatic}, {}},
  "StateSpaceModelFull",
  BaseStyle->{NumberMarks -> False},
  DisplayFunction->(TagBox[
    SubsuperscriptBox[
     RowBox[{"(", 
       GridBox[{{#, #2, #3}, {#4, #5, #6}, {#7, #8, #9}}, 
        AllowedDimensions -> {3, 3}, AutoDelete -> False, 
        AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
        BaseStyle -> {Deployed -> False}, GridBoxItemStyle -> {}, 
        GridBoxDividers -> {"Rows" -> {False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}, "Columns" -> {False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}}, 
        GridBoxBackground -> {"Rows" -> {{
             GrayLevel[1], 
             RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #10, 
     ButtonBox[
      GraphicsBox[{
        RGBColor[0.8, 0.85, 0.85], 
        EdgeForm[
         RGBColor[0.6, 0.7, 0.7]], 
        RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
        InsetBox[
         StyleBox[
         "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
          GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
          FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
      ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
        ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
      None], MultilineFunction -> None], 
    EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
          FrontEnd`Value[
           FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
      True}]]& ),
  InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{1, 2}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{4, 5}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{3, 3}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{6, 6}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{7, 8}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{9, 9}, ","], "}"}], "}"}], "}"}], ",", 
     "SamplingPeriod", "->", 
     RowBox[{#10}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
  Tooltip->StateSpaceModel]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072355701275`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[1]=",
 CellID->166643240,ExpressionUUID->"ee382a79-592e-405b-b5af-08bda0211b05"],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "62ad0aff-408b-40d2-b219-a7472e4c0ae0"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072355701275`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->417520338,ExpressionUUID->"f9221f4a-e2c7-4bf6-a6e5-7da5db325bb2"],

Cell["The state-space model of a transfer-function object:", "ExampleText",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072355701275`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->495761131,ExpressionUUID->"463b4430-7390-4c8a-a504-9b47ad5db9c9"],

Cell[BoxData[
 RowBox[{"StateSpaceModel", "[", 
  InterpretationBox[
   TemplateBox[{
     FractionBox["1", 
      RowBox[{
        RowBox[{"-", "a"}], "+", "s"}]], 
     FractionBox["1", 
      RowBox[{
        RowBox[{"-", "b"}], "+", "s"}]], 
     InterpretationBox["\[InvisibleSpace]", None], {
     TransferFunctionModel, {
      False, False, {False, False}}, $Failed, {{
       Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$}, {
       Control`CommonDump`$DUMMY$}}, InterpretationBox[#, 
       TransferFunctionModel[{{{1, 
         1}}, {{-$CellContext`a + $CellContext`s, -$CellContext`b + \
$CellContext`s}}}, $CellContext`s], AutoDelete -> True, Editable -> True, 
       BaseStyle -> "TransferFunctionModelMinimal"]& , $CellContext`s, 2, 1, 
      Control`CountStates[
       TransferFunctionModel[{{{1, 
         1}}, {{-$CellContext`a + $CellContext`s, -$CellContext`b + \
$CellContext`s}}}, $CellContext`s]], 1, {}, {False, False}, False, Automatic, 
      None, Automatic}, {}},
    "TransferFunctionModelFull",
    BaseStyle->{NumberMarks -> False},
    DisplayFunction->(TagBox[
      SubsuperscriptBox[
       RowBox[{"(", 
         GridBox[{{#, #2}}, AllowedDimensions -> {2, 1}, AutoDelete -> False, 
          AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
          BaseStyle -> {Deployed -> False}, GridBoxItemStyle -> {}, 
          GridBoxDividers -> {
           "Rows" -> {False, {False}, False}, 
            "Columns" -> {False, {False}, False}}, 
          GridBoxBackground -> {"Rows" -> {{
               GrayLevel[1], 
               RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #3, 
       ButtonBox[
        GraphicsBox[{
          RGBColor[0.8, 0.85, 0.85], 
          EdgeForm[
           RGBColor[0.6, 0.7, 0.7]], 
          RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
          InsetBox[
           StyleBox[
           "\[ScriptCapitalT]", Control`NonlinearModelsDump`LineColor -> 
            GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
            GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
            GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
            FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
        ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
          ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
        None], MultilineFunction -> None], 
      EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
            FrontEnd`Value[
             FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
        True}]]& ),
    InterpretationFunction->(
     RowBox[{"TransferFunctionModel", "[", "Unevaluated", "[", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{1, 2}, ","], "}"}], "}"}], "]", ",", "s", 
       ",", "SamplingPeriod", "->", 
       RowBox[{#3}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
    Tooltip->TransferFunctionModel],
   TransferFunctionModel[{{{1, 
     1}}, {{-$CellContext`a + $CellContext`s, -$CellContext`b + \
$CellContext`s}}}, $CellContext`s],
   AutoDelete->True,
   BaseStyle->"TransferFunctionModelMinimal",
   Editable->True], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235571124*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[1]:=",
 CellID->174471257,ExpressionUUID->"a3955abc-f058-4f67-a749-afc504ff4a0f"],

Cell[BoxData[
 TemplateBox[{"a", "0", "1", "0", "0", "b", "0", "1", "1", "1", "0", "0", 
   InterpretationBox["\[InvisibleSpace]", None], {
   StateSpaceModel, {
    False, False, {
     False, False}}, {$CellContext`stname1, $CellContext`stname2}, {{
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$}}, Identity, 
    Automatic, 2, 1, 2, 1, {}, {False, False}, False, Automatic, None, 
    Automatic}, {}},
  "StateSpaceModelFull",
  BaseStyle->{NumberMarks -> False},
  DisplayFunction->(TagBox[
    SubsuperscriptBox[
     RowBox[{"(", 
       GridBox[{{#, #2, #3, #4}, {#5, #6, #7, #8}, {#9, #10, #11, #12}}, 
        AllowedDimensions -> {4, 3}, AutoDelete -> False, 
        AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
        BaseStyle -> {Deployed -> False}, GridBoxItemStyle -> {}, 
        GridBoxDividers -> {"Rows" -> {False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}, "Columns" -> {False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}}, 
        GridBoxBackground -> {"Rows" -> {{
             GrayLevel[1], 
             RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #13, 
     ButtonBox[
      GraphicsBox[{
        RGBColor[0.8, 0.85, 0.85], 
        EdgeForm[
         RGBColor[0.6, 0.7, 0.7]], 
        RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
        InsetBox[
         StyleBox[
         "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
          GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
          FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
      ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
        ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
      None], MultilineFunction -> None], 
    EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
          FrontEnd`Value[
           FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
      True}]]& ),
  InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{1, 2}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{5, 6}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{3, 4}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{7, 8}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{9, 10}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{11, 12}, ","], "}"}], "}"}], "}"}], ",", 
     "SamplingPeriod", "->", 
     RowBox[{#13}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
  Tooltip->StateSpaceModel]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235571124*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[1]=",
 CellID->426513459,ExpressionUUID->"30b9a1fd-8e6f-4a44-8899-50397f92a4ac"],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "8106badf-4de0-4f27-974c-a7d5987c98f1"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235571124*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->627941619,ExpressionUUID->"7af4c5ea-4784-4ae8-a699-bac151ff6f86"],

Cell[TextData[{
 "The state-space model of a system with sampling period ",
 Cell[BoxData[
  StyleBox["\[Tau]", "TR"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "c3b80247-7f84-43ff-8dd6-d3e4ef2f7c3e"],
 ":"
}], "ExampleText",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235572122*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->2051678803,ExpressionUUID->"03b8e5a1-cf37-45ae-91d9-26341784e8eb"],

Cell[BoxData[
 RowBox[{"StateSpaceModel", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"DiagonalMatrix", "[", 
      RowBox[{"{", 
       RowBox[{
        SubscriptBox["a", "1"], ",", 
        SubscriptBox["a", "2"], ",", 
        SubscriptBox["a", "3"]}], "}"}], "]"}], ",", 
     RowBox[{"Table", "[", 
      RowBox[{"1", ",", 
       RowBox[{"{", "3", "}"}], ",", 
       RowBox[{"{", "1", "}"}]}], "]"}], ",", " ", 
     RowBox[{"Table", "[", 
      RowBox[{"1", ",", 
       RowBox[{"{", "1", "}"}], ",", 
       RowBox[{"{", "3", "}"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"SamplingPeriod", "\[Rule]", "\[Tau]"}]}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235572122*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[1]:=",
 CellID->420722142,ExpressionUUID->"ed158929-a068-4fb8-9d45-478a3ed13cec"],

Cell[BoxData[
 TemplateBox[{
   SubscriptBox["a", "1"], "0", "0", "1", "0", 
   SubscriptBox["a", "2"], "0", "1", "0", "0", 
   SubscriptBox["a", "3"], "1", "1", "1", "1", "0", "\[Tau]", {
   StateSpaceModel, {
    False, False, {
     False, False}}, {$CellContext`stname1, $CellContext`stname2, \
$CellContext`stname3}, {{Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$, 
      Control`CommonDump`$DUMMY$}}, Identity, Automatic, 1, 1, 3, 1, {}, {
    False, False}, False, Automatic, None, Automatic}, {}},
  "StateSpaceModelFull",
  BaseStyle->{NumberMarks -> False},
  DisplayFunction->(TagBox[
    SubsuperscriptBox[
     RowBox[{"(", 
       GridBox[{{#, #2, #3, #4}, {#5, #6, #7, #8}, {#9, #10, #11, #12}, {#13, \
#14, #15, #16}}, AllowedDimensions -> {4, 4}, AutoDelete -> False, 
        AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
        BaseStyle -> {Deployed -> False}, GridBoxItemStyle -> {}, 
        GridBoxDividers -> {"Rows" -> {False, False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}, 
          "Columns" -> {False, False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}}, 
        GridBoxBackground -> {"Rows" -> {{
             GrayLevel[1], 
             RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #17, 
     ButtonBox[
      GraphicsBox[{
        RGBColor[0.8, 0.85, 0.85], 
        EdgeForm[
         RGBColor[0.6, 0.7, 0.7]], 
        RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
        InsetBox[
         StyleBox[
         "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
          GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
          FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
      ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
        ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
      None], MultilineFunction -> None], 
    EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
          FrontEnd`Value[
           FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
      True}]]& ),
  InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{1, 3}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{5, 7}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{9, 11}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{4, 4}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{8, 8}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{12, 12}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{13, 15}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{16, 16}, ","], "}"}], "}"}], "}"}], ",", 
     "SamplingPeriod", "->", 
     RowBox[{#17}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
  Tooltip->StateSpaceModel]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235572122*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[1]=",
 CellID->111291727,ExpressionUUID->"d02c88ee-1def-4522-ac1f-9bbcb725025b"],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "0e6cdd1b-6e74-4b16-b000-5c645148bcfc"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072355731187`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->1022647295,ExpressionUUID->"cf5446ba-ff79-4879-b8e3-99c7b54a4de9"],

Cell["The state-space model of a set of ODEs:", "ExampleText",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072355731187`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->1321460124,ExpressionUUID->"c1a9f274-3d4d-497a-845c-0739e308443f"],

Cell[BoxData[
 RowBox[{"StateSpaceModel", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"m", " ", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[Phi]", "1"], "''"}], "[", "t", "]"}]}], "-", 
       RowBox[{"m", " ", 
        SuperscriptBox["\[CapitalOmega]", "2"], 
        RowBox[{
         SubscriptBox["\[Phi]", "1"], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Phi]", "1"], "[", "t", "]"}], "-", 
          RowBox[{
           SubscriptBox["\[Phi]", "2"], "[", "t", "]"}]}], ")"}], 
        RowBox[{"k", "/", "2"}]}]}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"m", " ", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[Phi]", "2"], "''"}], "[", "t", "]"}]}], "-", 
       RowBox[{"m", " ", 
        SuperscriptBox["\[CapitalOmega]", "2"], 
        RowBox[{
         SubscriptBox["\[Phi]", "2"], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Phi]", "1"], "[", "t", "]"}], "-", 
          RowBox[{
           SubscriptBox["\[Phi]", "2"], "[", "t", "]"}]}], ")"}], 
        RowBox[{"k", "/", "2"}]}]}], "\[Equal]", 
      RowBox[{"u", "[", "t", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["\[Phi]", "1"], "'"}], "[", "t", "]"}], ",", "0"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[Phi]", "1"], "[", "t", "]"}], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[Phi]", "2"], "[", "t", "]"}], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["\[Phi]", "2"], "'"}], "[", "t", "]"}], ",", "0"}], 
      "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"u", "[", "t", "]"}], ",", "0"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["\[Phi]", "2"], "[", "t", "]"}], "}"}], ",", "t"}], 
  "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072355731187`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[1]:=",
 CellID->504426794,ExpressionUUID->"d1accca9-b8b9-4571-8287-3f7d78ec8462"],

Cell[BoxData[
 TemplateBox[{"0", 
   RowBox[{"-", 
     FractionBox[
      RowBox[{"k", "-", 
        RowBox[{"2", " ", "m", " ", 
          SuperscriptBox["\[CapitalOmega]", "2"]}]}], 
      RowBox[{"2", " ", "m"}]]}], 
   FractionBox["k", 
    RowBox[{"2", " ", "m"}]], "0", "0", "1", "0", "0", "0", "0", "0", "0", 
   "0", "1", "0", "0", 
   FractionBox["k", 
    RowBox[{"2", " ", "m"}]], 
   RowBox[{"-", 
     FractionBox[
      RowBox[{"k", "-", 
        RowBox[{"2", " ", "m", " ", 
          SuperscriptBox["\[CapitalOmega]", "2"]}]}], 
      RowBox[{"2", " ", "m"}]]}], "0", 
   FractionBox["1", "m"], "0", "0", "1", "0", "0", 
   InterpretationBox["\[InvisibleSpace]", None], {
   StateSpaceModel, {
    False, False, {
     False, False}}, {$CellContext`stname1, $CellContext`stname2, \
$CellContext`stname3, $CellContext`stname4}, {{Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$, 
      Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$}}, Identity, 
    Automatic, 1, 1, 4, 1, {}, {False, False}, False, Automatic, None, {",", 
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               SubscriptBox["\[Phi]", "1"], "[", "t", "]"}], ",", "0"}], 
           "}"}], ",", 
         SubscriptBox["\[FormalX]", "1"], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               SubscriptBox["\[Phi]", "2"], "[", "t", "]"}], ",", "0"}], 
           "}"}], ",", 
         SubscriptBox["\[FormalX]", "2"]}], "}"}], ",", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{
           RowBox[{"u", "[", "t", "]"}], ",", "0"}], "}"}], "}"}], ",", 
     "Automatic", ",", "t"}}, {}},
  "StateSpaceModelFull",
  BaseStyle->{NumberMarks -> False},
  DisplayFunction->(TagBox[
    SubsuperscriptBox[
     RowBox[{"(", 
       GridBox[{{#, #2, #3, #4, #5}, {#6, #7, #8, #9, #10}, {#11, #12, #13, \
#14, #15}, {#16, #17, #18, #19, #20}, {#21, #22, #23, #24, #25}}, 
        AllowedDimensions -> {5, 5}, AutoDelete -> False, 
        AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
        BaseStyle -> {Deployed -> False}, GridBoxItemStyle -> {}, 
        GridBoxDividers -> {"Rows" -> {False, False, False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}, 
          "Columns" -> {False, False, False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}}, 
        GridBoxBackground -> {"Rows" -> {{
             GrayLevel[1], 
             RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #26, 
     ButtonBox[
      GraphicsBox[{
        RGBColor[0.8, 0.85, 0.85], 
        EdgeForm[
         RGBColor[0.6, 0.7, 0.7]], 
        RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
        InsetBox[
         StyleBox[
         "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
          GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
          FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
      ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
        ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
      None], MultilineFunction -> None], 
    EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
          FrontEnd`Value[
           FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
      True}]]& ),
  InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{1, 4}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{6, 9}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{11, 14}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{16, 19}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{5, 5}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{10, 10}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{15, 15}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{20, 20}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{21, 24}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{25, 25}, ","], "}"}], "}"}], "}"}], ",", 
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               SubscriptBox["\[Phi]", "1"], "[", "t", "]"}], ",", "0"}], 
           "}"}], ",", 
         SubscriptBox["\[FormalX]", "1"], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               SubscriptBox["\[Phi]", "2"], "[", "t", "]"}], ",", "0"}], 
           "}"}], ",", 
         SubscriptBox["\[FormalX]", "2"]}], "}"}], ",", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{
           RowBox[{"u", "[", "t", "]"}], ",", "0"}], "}"}], "}"}], ",", 
     "Automatic", ",", "t", ",", "SamplingPeriod", "->", 
     RowBox[{#26}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
  Tooltip->StateSpaceModel]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072355731187`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[1]=",
 CellID->1306127674,ExpressionUUID->"b3bd95a4-9783-4f0d-b9da-99654c59838a"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      Part[
       Dynamic[
        CurrentValue[
         EvaluationNotebook[], {
         TaggingRules, "Openers", "ExampleSection", "1"}, Closed]], 1], 
      Alternatives[Open, True]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{14., {0.45000000000000107`, 13.549999999999999`}}]],
  ExpressionUUID->"c3334b14-f425-4da5-84d6-12a56a20f547"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"bd8f6bc4-c3be-47da-9487-21edb25756b3"],
 "Scope",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(31)", "ExampleCount",ExpressionUUID->
  "67ac8305-e8cd-4f4e-b062-b2673f4a0f69"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072355741158`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->1293636265,ExpressionUUID->"2861292b-9f74-4034-aa65-2894310ce075"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      Part[
       Dynamic[
        CurrentValue[
         EvaluationNotebook[], {
         TaggingRules, "Openers", "ExampleSubsection", "6"}, Closed]], 1], 
      Alternatives[Open, True]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{14., {0.45000000000000107`, 13.549999999999999`}}]],
  ExpressionUUID->"602b489a-7576-4525-9306-271bb532c21a"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"53bd3546-efb7-4771-a930-0e0dca7e4743"],
 "Basic Uses",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(17)", "ExampleCount",ExpressionUUID->
  "cf3fc193-6735-4eb4-885e-30d927af6c10"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072355741158`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->94416814,ExpressionUUID->"650a0b54-46c5-4abe-bf76-0a731f8285d8"],

Cell["A second-order system:", "ExampleText",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072355751133`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->660884066,ExpressionUUID->"447f728a-95ca-414f-a099-61460149313d"],

Cell[BoxData[
 RowBox[{"StateSpaceModel", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"-", "2"}]}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "1", "}"}], ",", 
      RowBox[{"{", "2", "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"{", "1", "}"}], "}"}]}], "}"}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072355751133`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[1]:=",
 CellID->693074978,ExpressionUUID->"8e3c52d3-c016-4d87-82b6-cf497cba9aee"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"-", "1"}], "0", "1", "0", 
   RowBox[{"-", "2"}], "2", "1", "1", "1", 
   InterpretationBox["\[InvisibleSpace]", None], {
   StateSpaceModel, {
    False, False, {
     False, False}}, {$CellContext`stname1, $CellContext`stname2}, {{
     Control`CommonDump`$DUMMY$}, {Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$}}, Identity, 
    Automatic, 1, 1, 2, 1, {}, {False, False}, False, Automatic, None, 
    Automatic}, {}},
  "StateSpaceModelFull",
  BaseStyle->{NumberMarks -> False},
  DisplayFunction->(TagBox[
    SubsuperscriptBox[
     RowBox[{"(", 
       GridBox[{{#, #2, #3}, {#4, #5, #6}, {#7, #8, #9}}, 
        AllowedDimensions -> {3, 3}, AutoDelete -> False, 
        AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
        BaseStyle -> {Deployed -> False}, GridBoxItemStyle -> {}, 
        GridBoxDividers -> {"Rows" -> {False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}, "Columns" -> {False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}}, 
        GridBoxBackground -> {"Rows" -> {{
             GrayLevel[1], 
             RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #10, 
     ButtonBox[
      GraphicsBox[{
        RGBColor[0.8, 0.85, 0.85], 
        EdgeForm[
         RGBColor[0.6, 0.7, 0.7]], 
        RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
        InsetBox[
         StyleBox[
         "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
          GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
          FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
      ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
        ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
      None], MultilineFunction -> None], 
    EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
          FrontEnd`Value[
           FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
      True}]]& ),
  InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{1, 2}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{4, 5}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{3, 3}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{6, 6}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{7, 8}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{9, 9}, ","], "}"}], "}"}], "}"}], ",", 
     "SamplingPeriod", "->", 
     RowBox[{#10}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
  Tooltip->StateSpaceModel]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072355751133`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[1]=",
 CellID->1977590935,ExpressionUUID->"7db1f106-2451-45a6-a8d7-08caaa13e549"],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "12c77d57-5f99-48e6-bd68-d452f1340474"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235576111*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->1208288280,ExpressionUUID->"50eccab6-3cd1-46c4-bddf-a73b3c93fc08"],

Cell["A fourth-order system:", "ExampleText",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235576111*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->1338942319,ExpressionUUID->"32bf335b-3ed0-4225-becf-5e8b75b585e4"],

Cell[BoxData[
 RowBox[{"StateSpaceModel", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "0", ",", "1", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"-", "2"}], ",", "1", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "1", ",", 
        RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "1", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"-", "1"}], "}"}], ",", 
      RowBox[{"{", "0", "}"}], ",", 
      RowBox[{"{", "0", "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "}"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"{", "0", "}"}], "}"}]}], "}"}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235576111*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[1]:=",
 CellID->122418520,ExpressionUUID->"52fc1f78-cea8-46cb-bc58-bfda68f4af53"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"-", "1"}], "0", "1", "3", "1", "0", 
   RowBox[{"-", "2"}], "1", "2", 
   RowBox[{"-", "1"}], 
   RowBox[{"-", "1"}], "0", "1", "0", "0", "0", "0", "1", 
   RowBox[{"-", "1"}], "0", "1", "0", "0", "1", "0", 
   InterpretationBox["\[InvisibleSpace]", None], {
   StateSpaceModel, {
    False, False, {
     False, False}}, {$CellContext`stname1, $CellContext`stname2, \
$CellContext`stname3, $CellContext`stname4}, {{Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$, 
      Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$}}, Identity, 
    Automatic, 1, 1, 4, 1, {}, {False, False}, False, Automatic, None, 
    Automatic}, {}},
  "StateSpaceModelFull",
  BaseStyle->{NumberMarks -> False},
  DisplayFunction->(TagBox[
    SubsuperscriptBox[
     RowBox[{"(", 
       GridBox[{{#, #2, #3, #4, #5}, {#6, #7, #8, #9, #10}, {#11, #12, #13, \
#14, #15}, {#16, #17, #18, #19, #20}, {#21, #22, #23, #24, #25}}, 
        AllowedDimensions -> {5, 5}, AutoDelete -> False, 
        AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
        BaseStyle -> {Deployed -> False}, GridBoxItemStyle -> {}, 
        GridBoxDividers -> {"Rows" -> {False, False, False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}, 
          "Columns" -> {False, False, False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}}, 
        GridBoxBackground -> {"Rows" -> {{
             GrayLevel[1], 
             RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #26, 
     ButtonBox[
      GraphicsBox[{
        RGBColor[0.8, 0.85, 0.85], 
        EdgeForm[
         RGBColor[0.6, 0.7, 0.7]], 
        RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
        InsetBox[
         StyleBox[
         "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
          GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
          FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
      ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
        ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
      None], MultilineFunction -> None], 
    EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
          FrontEnd`Value[
           FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
      True}]]& ),
  InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{1, 4}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{6, 9}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{11, 14}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{16, 19}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{5, 5}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{10, 10}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{15, 15}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{20, 20}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{21, 24}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{25, 25}, ","], "}"}], "}"}], "}"}], ",", 
     "SamplingPeriod", "->", 
     RowBox[{#26}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
  Tooltip->StateSpaceModel]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235578102*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[1]=",
 CellID->948921576,ExpressionUUID->"c32feb07-676b-4958-97a9-04fb9c0ca20a"],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "ee05cb44-6944-43ce-8eb6-2a1f9f676edb"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235578102*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->1364097055,ExpressionUUID->"6f1310c8-02c7-4846-bc4c-321305a60a3a"],

Cell["A system with two inputs:", "ExampleText",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235578102*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->748526813,ExpressionUUID->"2d4ea7e8-3444-4e4c-a65d-438471f0b71e"],

Cell[BoxData[
 RowBox[{"StateSpaceModel", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", 
        RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "4", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2"}], ",", "2", ",", "1"}], "}"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", " ", "0.2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", " ", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "2"}], "}"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"1", ",", " ", 
       RowBox[{"-", "1"}], ",", " ", "0"}], "}"}], "}"}]}], "}"}], 
  "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235578102*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[1]:=",
 CellID->530941965,ExpressionUUID->"b6873b5c-d8e7-418f-9e26-e4d614d54e6e"],

Cell[BoxData[
 TemplateBox[{"1", 
   RowBox[{"-", "1"}], "0", 
   RowBox[{"-", "1"}], "0.2`", 
   RowBox[{"-", "1"}], "4", "1", 
   RowBox[{"-", "1"}], "1", 
   RowBox[{"-", "2"}], "2", "1", "0", "2", "1", 
   RowBox[{"-", "1"}], "0", "0", "0", 
   InterpretationBox["\[InvisibleSpace]", None], {
   StateSpaceModel, {
    False, False, {
     False, False}}, {$CellContext`stname1, $CellContext`stname2, \
$CellContext`stname3}, {{
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$, 
      Control`CommonDump`$DUMMY$}}, Identity, Automatic, 2, 1, 3, 1, {}, {
    False, False}, False, Automatic, None, Automatic}, {}},
  "StateSpaceModelFull",
  BaseStyle->{NumberMarks -> False},
  DisplayFunction->(TagBox[
    SubsuperscriptBox[
     RowBox[{"(", 
       GridBox[{{#, #2, #3, #4, #5}, {#6, #7, #8, #9, #10}, {#11, #12, #13, \
#14, #15}, {#16, #17, #18, #19, #20}}, AllowedDimensions -> {5, 4}, 
        AutoDelete -> False, AllowScriptLevelChange -> False, 
        ColumnAlignments -> {Center}, BaseStyle -> {Deployed -> False}, 
        GridBoxItemStyle -> {}, 
        GridBoxDividers -> {"Rows" -> {False, False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}, 
          "Columns" -> {False, False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}}, 
        GridBoxBackground -> {"Rows" -> {{
             GrayLevel[1], 
             RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #21, 
     ButtonBox[
      GraphicsBox[{
        RGBColor[0.8, 0.85, 0.85], 
        EdgeForm[
         RGBColor[0.6, 0.7, 0.7]], 
        RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
        InsetBox[
         StyleBox[
         "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
          GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
          FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
      ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
        ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
      None], MultilineFunction -> None], 
    EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
          FrontEnd`Value[
           FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
      True}]]& ),
  InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{1, 3}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{6, 8}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{11, 13}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{4, 5}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{9, 10}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{14, 15}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{16, 18}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{19, 20}, ","], "}"}], "}"}], "}"}], ",", 
     "SamplingPeriod", "->", 
     RowBox[{#21}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
  Tooltip->StateSpaceModel]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072355791416`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[1]=",
 CellID->1383073658,ExpressionUUID->"76c9300f-13a1-4feb-97b4-09a35817b2cc"],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "6ff70e1f-630f-4324-9657-fa9179a8f399"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072355791416`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->1976859856,ExpressionUUID->"5180e9d4-41cf-47ed-b5f6-6de922d28d96"],

Cell["A system with two outputs:", "ExampleText",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072355791416`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->1596082668,ExpressionUUID->"ec55bf15-faaa-46c2-b3b3-c909457581f1"],

Cell[BoxData[
 RowBox[{"StateSpaceModel", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "2", ",", "2", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", 
        RowBox[{"-", "2"}], ",", 
        RowBox[{"-", "1"}], ",", 
        RowBox[{"-", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2"}], ",", "0", ",", "2", ",", 
        RowBox[{"-", "2"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "1", ",", "0", ",", 
        RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "1", "}"}], ",", 
      RowBox[{"{", "2", "}"}], ",", 
      RowBox[{"{", "0", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"-", "1"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", 
        RowBox[{"-", "1"}], ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "1", ",", 
        RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "0", "}"}], ",", 
      RowBox[{"{", "0", "}"}]}], "}"}]}], "}"}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235580145*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[1]:=",
 CellID->1143166399,ExpressionUUID->"81b3a670-c74a-4602-ad0b-e093193901df"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"-", "1"}], "2", "2", "0", "1", 
   RowBox[{"-", "1"}], 
   RowBox[{"-", "2"}], 
   RowBox[{"-", "1"}], 
   RowBox[{"-", "1"}], "2", 
   RowBox[{"-", "2"}], "0", "2", 
   RowBox[{"-", "2"}], "0", "2", "1", "0", 
   RowBox[{"-", "1"}], 
   RowBox[{"-", "1"}], "1", 
   RowBox[{"-", "1"}], "0", "0", "0", "0", "0", "1", 
   RowBox[{"-", "1"}], "0", 
   InterpretationBox["\[InvisibleSpace]", None], {
   StateSpaceModel, {
    False, False, {
     False, False}}, {$CellContext`stname1, $CellContext`stname2, \
$CellContext`stname3, $CellContext`stname4}, {{Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$, 
      Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$}}, Identity, 
    Automatic, 1, 2, 4, 1, {}, {False, False}, False, Automatic, None, 
    Automatic}, {}},
  "StateSpaceModelFull",
  BaseStyle->{NumberMarks -> False},
  DisplayFunction->(TagBox[
    SubsuperscriptBox[
     RowBox[{"(", 
       GridBox[{{#, #2, #3, #4, #5}, {#6, #7, #8, #9, #10}, {#11, #12, #13, \
#14, #15}, {#16, #17, #18, #19, #20}, {#21, #22, #23, #24, #25}, {#26, #27, \
#28, #29, #30}}, AllowedDimensions -> {5, 6}, AutoDelete -> False, 
        AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
        BaseStyle -> {Deployed -> False}, GridBoxItemStyle -> {}, 
        GridBoxDividers -> {"Rows" -> {False, False, False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}, 
          "Columns" -> {False, False, False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}}, 
        GridBoxBackground -> {"Rows" -> {{
             GrayLevel[1], 
             RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #31, 
     ButtonBox[
      GraphicsBox[{
        RGBColor[0.8, 0.85, 0.85], 
        EdgeForm[
         RGBColor[0.6, 0.7, 0.7]], 
        RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
        InsetBox[
         StyleBox[
         "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
          GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
          FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
      ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
        ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
      None], MultilineFunction -> None], 
    EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
          FrontEnd`Value[
           FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
      True}]]& ),
  InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{1, 4}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{6, 9}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{11, 14}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{16, 19}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{5, 5}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{10, 10}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{15, 15}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{20, 20}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{21, 24}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{26, 29}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{25, 25}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{30, 30}, ","], "}"}], "}"}], "}"}], ",", 
     "SamplingPeriod", "->", 
     RowBox[{#31}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
  Tooltip->StateSpaceModel]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235580145*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[1]=",
 CellID->1744611339,ExpressionUUID->"2e0436c6-5b54-481f-a65e-a21b647c7513"],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "8e96a647-3d53-4f64-8a49-8b182f467c33"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235580145*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->244560855,ExpressionUUID->"db2371bd-c450-48db-bf86-96729c9866ad"],

Cell["Direct feedthrough is assumed to be zero:", "ExampleText",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072355811396`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->1528588449,ExpressionUUID->"9418d874-2f96-4524-9331-9bb6a13059a0"],

Cell[BoxData[
 RowBox[{"StateSpaceModel", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        RowBox[{"-", "4"}]}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "1", "}"}], ",", 
      RowBox[{"{", "1", "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], "}"}]}], "}"}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072355811396`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[1]:=",
 CellID->639193282,ExpressionUUID->"cadcca99-b3ff-404a-94ea-83d64d3b17a6"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"-", "1"}], "2", "1", "1", 
   RowBox[{"-", "4"}], "1", "1", "1", "0", 
   InterpretationBox["\[InvisibleSpace]", None], {
   StateSpaceModel, {
    False, False, {
     False, False}}, {$CellContext`stname1, $CellContext`stname2}, {{
     Control`CommonDump`$DUMMY$}, {Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$}}, Identity, 
    Automatic, 1, 1, 2, 1, {}, {False, False}, False, Automatic, None, 
    Automatic}, {}},
  "StateSpaceModelFull",
  BaseStyle->{NumberMarks -> False},
  DisplayFunction->(TagBox[
    SubsuperscriptBox[
     RowBox[{"(", 
       GridBox[{{#, #2, #3}, {#4, #5, #6}, {#7, #8, #9}}, 
        AllowedDimensions -> {3, 3}, AutoDelete -> False, 
        AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
        BaseStyle -> {Deployed -> False}, GridBoxItemStyle -> {}, 
        GridBoxDividers -> {"Rows" -> {False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}, "Columns" -> {False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}}, 
        GridBoxBackground -> {"Rows" -> {{
             GrayLevel[1], 
             RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #10, 
     ButtonBox[
      GraphicsBox[{
        RGBColor[0.8, 0.85, 0.85], 
        EdgeForm[
         RGBColor[0.6, 0.7, 0.7]], 
        RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
        InsetBox[
         StyleBox[
         "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
          GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
          FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
      ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
        ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
      None], MultilineFunction -> None], 
    EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
          FrontEnd`Value[
           FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
      True}]]& ),
  InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{1, 2}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{4, 5}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{3, 3}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{6, 6}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{7, 8}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{9, 9}, ","], "}"}], "}"}], "}"}], ",", 
     "SamplingPeriod", "->", 
     RowBox[{#10}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
  Tooltip->StateSpaceModel]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072355811396`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[1]=",
 CellID->1506561959,ExpressionUUID->"c66bf9fe-43ee-43c9-aa16-62b38aef6043"],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "252f28fa-1fa1-4d3a-9109-e6e66d3586f0"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235582138*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->878452994,ExpressionUUID->"8a3d57b6-73d1-4afb-a300-c7b96e0c08eb"],

Cell["Specify feedthrough:", "ExampleText",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235582138*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->209397033,ExpressionUUID->"308774e3-4818-474c-9ac8-0d8fb0dbf584"],

Cell[BoxData[
 RowBox[{"StateSpaceModel", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", 
        RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "1", "}"}], ",", 
      RowBox[{"{", "1", "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"{", "f", "}"}], "}"}]}], "}"}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235582138*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[1]:=",
 CellID->1757719845,ExpressionUUID->"eb065a5c-0938-4f25-8903-2ce534759f6e"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"-", "1"}], "1", "1", "2", 
   RowBox[{"-", "1"}], "1", "1", "1", "f", 
   InterpretationBox["\[InvisibleSpace]", None], {
   StateSpaceModel, {
    False, False, {
     False, False}}, {$CellContext`stname1, $CellContext`stname2}, {{
     Control`CommonDump`$DUMMY$}, {Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$}}, Identity, 
    Automatic, 1, 1, 2, 1, {}, {False, False}, False, Automatic, None, 
    Automatic}, {}},
  "StateSpaceModelFull",
  BaseStyle->{NumberMarks -> False},
  DisplayFunction->(TagBox[
    SubsuperscriptBox[
     RowBox[{"(", 
       GridBox[{{#, #2, #3}, {#4, #5, #6}, {#7, #8, #9}}, 
        AllowedDimensions -> {3, 3}, AutoDelete -> False, 
        AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
        BaseStyle -> {Deployed -> False}, GridBoxItemStyle -> {}, 
        GridBoxDividers -> {"Rows" -> {False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}, "Columns" -> {False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}}, 
        GridBoxBackground -> {"Rows" -> {{
             GrayLevel[1], 
             RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #10, 
     ButtonBox[
      GraphicsBox[{
        RGBColor[0.8, 0.85, 0.85], 
        EdgeForm[
         RGBColor[0.6, 0.7, 0.7]], 
        RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
        InsetBox[
         StyleBox[
         "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
          GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
          FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
      ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
        ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
      None], MultilineFunction -> None], 
    EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
          FrontEnd`Value[
           FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
      True}]]& ),
  InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{1, 2}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{4, 5}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{3, 3}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{6, 6}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{7, 8}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{9, 9}, ","], "}"}], "}"}], "}"}], ",", 
     "SamplingPeriod", "->", 
     RowBox[{#10}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
  Tooltip->StateSpaceModel]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072355831337`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[1]=",
 CellID->1691133722,ExpressionUUID->"be468b9d-cd0c-4877-bd6d-d06e0805c57e"],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "d2198977-e296-42d0-b16a-5b499bcaea92"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072355831337`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->3752570,ExpressionUUID->"a2075b86-a153-44c8-b02c-ef4d5c18de7a"],

Cell["The feedthrough is the sum of the inputs:", "ExampleText",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072355831337`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->2072743235,ExpressionUUID->"446b30ec-1ba0-48cc-aea4-b1810e474926"],

Cell[BoxData[
 RowBox[{"StateSpaceModel", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2"}], ",", 
        RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2"}], ",", "1", ",", 
        RowBox[{"-", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        RowBox[{"-", "1"}], ",", 
        RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "0"}], "}"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1"}], "}"}], "}"}]}], "}"}], 
  "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072355841312`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[1]:=",
 CellID->115829011,ExpressionUUID->"fc52db7b-f9d1-468c-b71a-f357a38504f7"],

Cell[BoxData[
 TemplateBox[{"1", "0", 
   RowBox[{"-", "2"}], "1", 
   RowBox[{"-", "1"}], 
   RowBox[{"-", "2"}], 
   RowBox[{"-", "1"}], "1", 
   RowBox[{"-", "1"}], 
   RowBox[{"-", "1"}], 
   RowBox[{"-", "1"}], "0", "1", "1", "1", 
   InterpretationBox["\[InvisibleSpace]", None], {
   StateSpaceModel, {
    False, False, {
     False, False}}, {$CellContext`stname1, $CellContext`stname2}, {{
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$, 
      Control`CommonDump`$DUMMY$}, {Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$}}, Identity, 
    Automatic, 3, 1, 2, 1, {}, {False, False}, False, Automatic, None, 
    Automatic}, {}},
  "StateSpaceModelFull",
  BaseStyle->{NumberMarks -> False},
  DisplayFunction->(TagBox[
    SubsuperscriptBox[
     RowBox[{"(", 
       GridBox[{{#, #2, #3, #4, #5}, {#6, #7, #8, #9, #10}, {#11, #12, #13, \
#14, #15}}, AllowedDimensions -> {5, 3}, AutoDelete -> False, 
        AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
        BaseStyle -> {Deployed -> False}, GridBoxItemStyle -> {}, 
        GridBoxDividers -> {"Rows" -> {False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}, "Columns" -> {False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}}, 
        GridBoxBackground -> {"Rows" -> {{
             GrayLevel[1], 
             RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #16, 
     ButtonBox[
      GraphicsBox[{
        RGBColor[0.8, 0.85, 0.85], 
        EdgeForm[
         RGBColor[0.6, 0.7, 0.7]], 
        RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
        InsetBox[
         StyleBox[
         "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
          GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
          FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
      ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
        ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
      None], MultilineFunction -> None], 
    EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
          FrontEnd`Value[
           FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
      True}]]& ),
  InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{1, 2}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{6, 7}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{3, 5}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{8, 10}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{11, 12}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{13, 15}, ","], "}"}], "}"}], "}"}], ",", 
     "SamplingPeriod", "->", 
     RowBox[{#16}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
  Tooltip->StateSpaceModel]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072355841312`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[1]=",
 CellID->528710895,ExpressionUUID->"c4b8b60d-3ed4-4191-8b43-38cd07a69115"],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "3fefd1de-384e-49ef-9015-edfe7fd7c6df"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072355850873`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->792418227,ExpressionUUID->"a1c84dd9-d3ee-4aab-9a14-123a3bf662b0"],

Cell["A discrete-time model:", "ExampleText",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072355850873`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->1855231343,ExpressionUUID->"3100e6a6-5eeb-4de2-9240-6ef7ca7de0b3"],

Cell[BoxData[
 RowBox[{"StateSpaceModel", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.1"}], ",", 
         RowBox[{"-", "0.001"}], ",", "0.1", ",", "0.001"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0.05", ",", "0.005", ",", 
         RowBox[{"-", "0.5"}], ",", 
         RowBox[{"-", "0.005"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "0", "}"}], ",", 
       RowBox[{"{", "0", "}"}], ",", 
       RowBox[{"{", "0", "}"}], ",", 
       RowBox[{"{", "1", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "0", ",", "0"}], " ", "}"}], "}"}]}], 
    "}"}], ",", " ", 
   RowBox[{"SamplingPeriod", "\[Rule]", "0.1"}]}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072355850873`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[1]:=",
 CellID->1558111008,ExpressionUUID->"b25479f5-996a-4d32-a84e-07fbd4c20bd0"],

Cell[BoxData[
 TemplateBox[{"0", "1", "0", "0", "0", 
   RowBox[{"-", "0.1`"}], 
   RowBox[{"-", "0.001`"}], "0.1`", "0.001`", "0", "0", "0", "0", "1", "0", 
   "0.05`", "0.005`", 
   RowBox[{"-", "0.5`"}], 
   RowBox[{"-", "0.005`"}], "1", "1", "0", "0", "0", "0", "0.1`", {
   StateSpaceModel, {
    False, False, {
     False, False}}, {$CellContext`stname1, $CellContext`stname2, \
$CellContext`stname3, $CellContext`stname4}, {{Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$, 
      Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$}}, Identity, 
    Automatic, 1, 1, 4, 1, {}, {False, False}, False, Automatic, None, 
    Automatic}, {}},
  "StateSpaceModelFull",
  BaseStyle->{NumberMarks -> False},
  DisplayFunction->(TagBox[
    SubsuperscriptBox[
     RowBox[{"(", 
       GridBox[{{#, #2, #3, #4, #5}, {#6, #7, #8, #9, #10}, {#11, #12, #13, \
#14, #15}, {#16, #17, #18, #19, #20}, {#21, #22, #23, #24, #25}}, 
        AllowedDimensions -> {5, 5}, AutoDelete -> False, 
        AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
        BaseStyle -> {Deployed -> False}, GridBoxItemStyle -> {}, 
        GridBoxDividers -> {"Rows" -> {False, False, False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}, 
          "Columns" -> {False, False, False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}}, 
        GridBoxBackground -> {"Rows" -> {{
             GrayLevel[1], 
             RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #26, 
     ButtonBox[
      GraphicsBox[{
        RGBColor[0.8, 0.85, 0.85], 
        EdgeForm[
         RGBColor[0.6, 0.7, 0.7]], 
        RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
        InsetBox[
         StyleBox[
         "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
          GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
          FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
      ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
        ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
      None], MultilineFunction -> None], 
    EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
          FrontEnd`Value[
           FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
      True}]]& ),
  InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{1, 4}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{6, 9}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{11, 14}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{16, 19}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{5, 5}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{10, 10}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{15, 15}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{20, 20}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{21, 24}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{25, 25}, ","], "}"}], "}"}], "}"}], ",", 
     "SamplingPeriod", "->", 
     RowBox[{#26}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
  Tooltip->StateSpaceModel]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072355860844`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[1]=",
 CellID->1493561588,ExpressionUUID->"c08c0e39-7586-47b1-8241-fcf8934033a9"],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "7fcabe31-20c3-4991-87e2-5cc87164f519"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072355860844`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->1117809630,ExpressionUUID->"96e81f69-d886-4fef-b495-d532bb39c1a3"],

Cell["A symbolic model:", "ExampleText",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072355860844`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->1627046142,ExpressionUUID->"a9ba4651-9cbc-4802-bed2-85ea97a0d54a"],

Cell[BoxData[
 RowBox[{"StateSpaceModel", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "k"}], "/", "m"}], ",", 
        RowBox[{
         RowBox[{"-", "c"}], "/", "m"}]}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"c", "/", "m"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"k", "/", "m"}], "-", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"c", "/", "m"}], ")"}], "2"]}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], "}"}]}], "}"}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235587082*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[1]:=",
 CellID->462713994,ExpressionUUID->"06dbf9d9-0dbb-4747-9f10-3be5f9ac092f"],

Cell[BoxData[
 TemplateBox[{"0", "1", 
   FractionBox["c", "m"], 
   RowBox[{"-", 
     FractionBox["k", "m"]}], 
   RowBox[{"-", 
     FractionBox["c", "m"]}], 
   RowBox[{
     RowBox[{"-", 
       FractionBox[
        SuperscriptBox["c", "2"], 
        SuperscriptBox["m", "2"]]}], "+", 
     FractionBox["k", "m"]}], "1", "0", "0", 
   InterpretationBox["\[InvisibleSpace]", None], {
   StateSpaceModel, {
    False, False, {
     False, False}}, {$CellContext`stname1, $CellContext`stname2}, {{
     Control`CommonDump`$DUMMY$}, {Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$}}, Identity, 
    Automatic, 1, 1, 2, 1, {}, {False, False}, False, Automatic, None, 
    Automatic}, {}},
  "StateSpaceModelFull",
  BaseStyle->{NumberMarks -> False},
  DisplayFunction->(TagBox[
    SubsuperscriptBox[
     RowBox[{"(", 
       GridBox[{{#, #2, #3}, {#4, #5, #6}, {#7, #8, #9}}, 
        AllowedDimensions -> {3, 3}, AutoDelete -> False, 
        AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
        BaseStyle -> {Deployed -> False}, GridBoxItemStyle -> {}, 
        GridBoxDividers -> {"Rows" -> {False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}, "Columns" -> {False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}}, 
        GridBoxBackground -> {"Rows" -> {{
             GrayLevel[1], 
             RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #10, 
     ButtonBox[
      GraphicsBox[{
        RGBColor[0.8, 0.85, 0.85], 
        EdgeForm[
         RGBColor[0.6, 0.7, 0.7]], 
        RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
        InsetBox[
         StyleBox[
         "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
          GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
          FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
      ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
        ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
      None], MultilineFunction -> None], 
    EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
          FrontEnd`Value[
           FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
      True}]]& ),
  InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{1, 2}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{4, 5}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{3, 3}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{6, 6}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{7, 8}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{9, 9}, ","], "}"}], "}"}], "}"}], ",", 
     "SamplingPeriod", "->", 
     RowBox[{#10}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
  Tooltip->StateSpaceModel]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235587082*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[1]=",
 CellID->1591532223,ExpressionUUID->"f116e55b-bc53-4376-8c5d-151effef84d4"],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "96989d6a-dada-47be-83d3-7e17b34bbde3"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235587082*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->1562377104,ExpressionUUID->"5bc08025-e860-4304-9914-05118df30db9"],

Cell["The state-space model of a transfer function:", "ExampleText",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235588081*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->1589435059,ExpressionUUID->"130b42ac-261e-4d38-9f15-0a2e0cbd43a7"],

Cell[BoxData[
 RowBox[{"StateSpaceModel", "[", 
  RowBox[{"TransferFunctionModel", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", "s"], ",", 
       FractionBox["1", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"s", "+", "1"}], ")"}], 
         RowBox[{"(", 
          RowBox[{"s", "+", "3"}], ")"}]}]]}], "}"}], "}"}], ",", "s"}], 
   "]"}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235588604*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[1]:=",
 CellID->1085951580,ExpressionUUID->"858ab552-fac1-4c16-86fe-39ad2e782e7c"],

Cell[BoxData[
 TemplateBox[{"0", "0", "0", "1", "0", "0", "0", "1", "0", "0", "0", 
   RowBox[{"-", "3"}], 
   RowBox[{"-", "4"}], "0", "1", "1", "1", "0", "0", "0", 
   InterpretationBox["\[InvisibleSpace]", None], {
   StateSpaceModel, {
    False, False, {
     False, False}}, {$CellContext`stname1, $CellContext`stname2, \
$CellContext`stname3}, {{
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$, 
      Control`CommonDump`$DUMMY$}}, Identity, Automatic, 2, 1, 3, 1, {}, {
    False, False}, False, Automatic, None, Automatic}, {}},
  "StateSpaceModelFull",
  BaseStyle->{NumberMarks -> False},
  DisplayFunction->(TagBox[
    SubsuperscriptBox[
     RowBox[{"(", 
       GridBox[{{#, #2, #3, #4, #5}, {#6, #7, #8, #9, #10}, {#11, #12, #13, \
#14, #15}, {#16, #17, #18, #19, #20}}, AllowedDimensions -> {5, 4}, 
        AutoDelete -> False, AllowScriptLevelChange -> False, 
        ColumnAlignments -> {Center}, BaseStyle -> {Deployed -> False}, 
        GridBoxItemStyle -> {}, 
        GridBoxDividers -> {"Rows" -> {False, False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}, 
          "Columns" -> {False, False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}}, 
        GridBoxBackground -> {"Rows" -> {{
             GrayLevel[1], 
             RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #21, 
     ButtonBox[
      GraphicsBox[{
        RGBColor[0.8, 0.85, 0.85], 
        EdgeForm[
         RGBColor[0.6, 0.7, 0.7]], 
        RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
        InsetBox[
         StyleBox[
         "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
          GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
          FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
      ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
        ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
      None], MultilineFunction -> None], 
    EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
          FrontEnd`Value[
           FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
      True}]]& ),
  InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{1, 3}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{6, 8}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{11, 13}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{4, 5}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{9, 10}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{14, 15}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{16, 18}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{19, 20}, ","], "}"}], "}"}], "}"}], ",", 
     "SamplingPeriod", "->", 
     RowBox[{#21}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
  Tooltip->StateSpaceModel]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072355905943`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[1]=",
 CellID->798856211,ExpressionUUID->"c3eb291f-3ff1-4f1d-8a85-1ce4078d7e2d"],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "85f6b37d-0f66-49ce-a971-f31c7d0f2587"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072355905943`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->1028923341,ExpressionUUID->"7e76e3df-7e4f-496d-8931-dc834d2de002"],

Cell["Perform symbolic conversions:", "ExampleText",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072355905943`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->1576266543,ExpressionUUID->"47c3ce4d-e5fa-4d7e-90df-b381e13d9fc3"],

Cell[BoxData[
 RowBox[{"StateSpaceModel", "[", 
  RowBox[{"TransferFunctionModel", "[", " ", 
   RowBox[{
    FractionBox["1", 
     RowBox[{
      RowBox[{"a", " ", 
       SuperscriptBox["s", "2"]}], "+", 
      RowBox[{"b", " ", "s"}], "+", "c"}]], ",", "s"}], "]"}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072355915904`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[1]:=",
 CellID->953518809,ExpressionUUID->"fbed14cb-6e53-4878-90f5-743cbfa127ff"],

Cell[BoxData[
 TemplateBox[{"0", "1", "0", 
   RowBox[{"-", 
     FractionBox["c", "a"]}], 
   RowBox[{"-", 
     FractionBox["b", "a"]}], "1", 
   FractionBox["1", "a"], "0", "0", 
   InterpretationBox["\[InvisibleSpace]", None], {
   StateSpaceModel, {
    False, False, {
     False, False}}, {$CellContext`stname1, $CellContext`stname2}, {{
     Control`CommonDump`$DUMMY$}, {Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$}}, Identity, 
    Automatic, 1, 1, 2, 1, {}, {False, False}, False, Automatic, None, 
    Automatic}, {}},
  "StateSpaceModelFull",
  BaseStyle->{NumberMarks -> False},
  DisplayFunction->(TagBox[
    SubsuperscriptBox[
     RowBox[{"(", 
       GridBox[{{#, #2, #3}, {#4, #5, #6}, {#7, #8, #9}}, 
        AllowedDimensions -> {3, 3}, AutoDelete -> False, 
        AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
        BaseStyle -> {Deployed -> False}, GridBoxItemStyle -> {}, 
        GridBoxDividers -> {"Rows" -> {False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}, "Columns" -> {False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}}, 
        GridBoxBackground -> {"Rows" -> {{
             GrayLevel[1], 
             RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #10, 
     ButtonBox[
      GraphicsBox[{
        RGBColor[0.8, 0.85, 0.85], 
        EdgeForm[
         RGBColor[0.6, 0.7, 0.7]], 
        RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
        InsetBox[
         StyleBox[
         "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
          GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
          FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
      ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
        ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
      None], MultilineFunction -> None], 
    EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
          FrontEnd`Value[
           FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
      True}]]& ),
  InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{1, 2}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{4, 5}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{3, 3}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{6, 6}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{7, 8}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{9, 9}, ","], "}"}], "}"}], "}"}], ",", 
     "SamplingPeriod", "->", 
     RowBox[{#10}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
  Tooltip->StateSpaceModel]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072355926237`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[1]=",
 CellID->84547526,ExpressionUUID->"9e1559c8-1681-415e-9b75-7e94c72dacec"],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "f8030878-529b-4998-b5c8-34fe6026f8d0"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072355935845`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->1816279043,ExpressionUUID->"4f0ac4ab-3c85-4216-808b-33a77a901e36"],

Cell[TextData[{
 "Taylor linearize an ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["AffineStateSpaceModel"]], "paclet:ref/AffineStateSpaceModel"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "fa543661-d0fd-4060-a2e1-387b8cea46d2"],
 ":"
}], "ExampleText",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072355945787`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->1869317243,ExpressionUUID->"4adfbaad-d0d4-4669-812f-b8e0cc1e8e96"],

Cell[BoxData[
 RowBox[{"StateSpaceModel", "[", 
  TemplateBox[{
    RowBox[{
      SubscriptBox["x", "1"], "+", 
      SubsuperscriptBox["x", "2", "2"]}], 
    RowBox[{
      RowBox[{"-", 
        SubscriptBox["x", "1"]}], " ", 
      SubscriptBox["x", "2"]}], "1", 
    SubscriptBox["x", "1"], 
    SubscriptBox["x", "1"], "0", 
    SubscriptBox["x", "1"], 
    SubscriptBox["x", "2"], 
    InterpretationBox["", Automatic], 
    InterpretationBox[" ", None], {
    2, 1, 1, 1, {1, 1}, None, False, False, False, False, 
     RowBox[{"{", "u", "}"}], "Automatic"}, {}},
   "AffineStateSpaceModelFull",
   BaseStyle->(NumberMarks -> False),
   DisplayFunction->(TagBox[
     GridBox[{{
        SubsuperscriptBox[
         RowBox[{"(", 
           
           GridBox[{{#7, #, #3}, {#8, #2, #4}, {#9, #5, #6}}, 
            GridBoxDividers -> {"Rows" -> {False, False, 
                Directive[
                 GrayLevel[0], 
                 GrayLevel[0.6]], False}, "ColumnsIndexed" -> {2 -> Directive[
                  GrayLevel[0], 
                  GrayLevel[0.6]], 3 -> Directive[
                  GrayLevel[0], 
                  GrayLevel[0.6]]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxItemStyle -> {"Columns" -> {
                Directive["InlineText", Smaller, 
                 GrayLevel[0.5]], {Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxBackground -> {"Rows" -> {{
                 GrayLevel[1], 
                 RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #10, 
         ButtonBox[
          GraphicsBox[{
            RGBColor[0.8, 0.85, 0.85], 
            EdgeForm[
             RGBColor[0.6, 0.7, 0.7]], 
            RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
            InsetBox[
             StyleBox[
             "\[ScriptCapitalA]", Control`NonlinearModelsDump`LineColor -> 
              GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
              GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
              GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
              FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
          ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
            ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
          None]]}}], 
     EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
           FrontEnd`Value[
            FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
       True}]]& ),
   InterpretationFunction->(RowBox[{"AffineStateSpaceModel[", "{", "{", 
      TemplateSlotSequence[{1, 2}, ","], "}", ",", "{{", 
      TemplateSlotSequence[{3, 3}, ","], "},", "{", 
      TemplateSlotSequence[{4, 4}, ","], "}}", ",", "{", 
      TemplateSlotSequence[{5, 5}, ","], "}", ",", "{{", 
      TemplateSlotSequence[{6, 6}, ","], "}}", "}", ",", "{", 
      TemplateSlotSequence[{7, 8}, ","], "}", ",", 
      RowBox[{"{", "u", "}"}], ",", "{", 
      TemplateSlotSequence[{9, 9}, ","], "}", ",", "Automatic", 
      ", SamplingPeriod -> ", #10, "]"}]& ),
   Tooltip->AffineStateSpaceModel], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072355945787`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[1]:=",
 CellID->1464038860,ExpressionUUID->"d0a2e150-b21c-442c-9a27-d2e72dc4955d"],

Cell[BoxData[
 TemplateBox[{"1", "0", "1", "0", "0", "0", "1", "0", "0", 
   InterpretationBox["\[InvisibleSpace]", None], {
   StateSpaceModel, {
    False, False, {
     False, False}}, {$CellContext`stname1, $CellContext`stname2}, {{
     Control`CommonDump`$DUMMY$}, {Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$}}, Identity, 
    Automatic, 1, 1, 2, 1, {}, {False, False}, False, Automatic, None, {",", 
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             SubscriptBox["x", "1"], ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             SubscriptBox["x", "2"], ",", "0"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"u", ",", "0"}], "}"}], "}"}], ",", 
     RowBox[{"{", "Automatic", "}"}]}}, {}},
  "StateSpaceModelFull",
  BaseStyle->(NumberMarks -> False),
  DisplayFunction->(TagBox[
    SubsuperscriptBox[
     RowBox[{"(", 
       GridBox[{{#, #2, #3}, {#4, #5, #6}, {#7, #8, #9}}, 
        AllowedDimensions -> {3, 3}, AutoDelete -> False, 
        AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
        BaseStyle -> (Deployed -> False), GridBoxItemStyle -> {}, 
        GridBoxDividers -> {"Rows" -> {False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}, "Columns" -> {False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}}, 
        GridBoxBackground -> {"Rows" -> {{
             GrayLevel[1], 
             RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #10, 
     ButtonBox[
      GraphicsBox[{
        RGBColor[0.8, 0.85, 0.85], 
        EdgeForm[
         RGBColor[0.6, 0.7, 0.7]], 
        RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
        InsetBox[
         StyleBox[
         "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
          GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
          FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
      ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
        ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
      None], MultilineFunction -> None], 
    EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
          FrontEnd`Value[
           FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
      True}]]& ),
  InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{1, 2}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{4, 5}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{3, 3}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{6, 6}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{7, 8}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{9, 9}, ","], "}"}], "}"}], "}"}], ",", 
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             SubscriptBox["x", "1"], ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             SubscriptBox["x", "2"], ",", "0"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"u", ",", "0"}], "}"}], "}"}], ",", 
     RowBox[{"{", "Automatic", "}"}], ",", "SamplingPeriod", "->", 
     RowBox[{#10}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
  Tooltip->StateSpaceModel]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072355955777`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[1]=",
 CellID->1026642840,ExpressionUUID->"9945edb9-b05a-4bc0-aec2-c002f9df551a"],

Cell[TextData[{
 "The linearization of an ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["AffineStateSpaceModel"]], "paclet:ref/AffineStateSpaceModel"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "ec3cb666-2bc0-42a9-9a08-c20210891a7f"],
 " with nonzero equilibrium values:"
}], "ExampleText",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072355955777`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->1156001141,ExpressionUUID->"800d2716-6b1a-48f8-b5ad-4ac421546fa1"],

Cell[BoxData[
 RowBox[{"StateSpaceModel", "[", 
  TemplateBox[{
    RowBox[{
      SubscriptBox["x", "1"], "+", 
      RowBox[{"2", " ", 
        SubscriptBox["x", "2"]}], "+", 
      SubsuperscriptBox["x", "2", "2"]}], 
    RowBox[{"1", "-", 
      SubscriptBox["x", "1"], "+", 
      SubscriptBox["x", "2"], "-", 
      RowBox[{
        SubscriptBox["x", "1"], " ", 
        SubscriptBox["x", "2"]}]}], "1", 
    SubscriptBox["x", "1"], 
    RowBox[{
      RowBox[{"-", "1"}], "+", 
      SubscriptBox["x", "1"]}], "0", 
    RowBox[{"{", 
      RowBox[{
        SubscriptBox["x", "1"], ",", "1"}], "}"}], 
    RowBox[{"{", 
      RowBox[{
        SubscriptBox["x", "2"], ",", 
        RowBox[{"-", "1"}]}], "}"}], 
    InterpretationBox["", Automatic], 
    InterpretationBox[" ", None], {
    2, 1, 1, 1, {1, 1}, None, False, False, False, False, 
     RowBox[{"{", "u", "}"}], "Automatic"}, {}},
   "AffineStateSpaceModelFull",
   BaseStyle->(NumberMarks -> False),
   DisplayFunction->(TagBox[
     GridBox[{{
        SubsuperscriptBox[
         RowBox[{"(", 
           
           GridBox[{{#7, #, #3}, {#8, #2, #4}, {#9, #5, #6}}, 
            GridBoxDividers -> {"Rows" -> {False, False, 
                Directive[
                 GrayLevel[0], 
                 GrayLevel[0.6]], False}, "ColumnsIndexed" -> {2 -> Directive[
                  GrayLevel[0], 
                  GrayLevel[0.6]], 3 -> Directive[
                  GrayLevel[0], 
                  GrayLevel[0.6]]}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxItemStyle -> {"Columns" -> {
                Directive["InlineText", Smaller, 
                 GrayLevel[0.5]], {Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxBackground -> {"Rows" -> {{
                 GrayLevel[1], 
                 RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #10, 
         ButtonBox[
          GraphicsBox[{
            RGBColor[0.8, 0.85, 0.85], 
            EdgeForm[
             RGBColor[0.6, 0.7, 0.7]], 
            RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
            InsetBox[
             StyleBox[
             "\[ScriptCapitalA]", Control`NonlinearModelsDump`LineColor -> 
              GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
              GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
              GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
              FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
          ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
            ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
          None]]}}], 
     EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
           FrontEnd`Value[
            FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
       True}]]& ),
   InterpretationFunction->(RowBox[{"AffineStateSpaceModel[", "{", "{", 
      TemplateSlotSequence[{1, 2}, ","], "}", ",", "{{", 
      TemplateSlotSequence[{3, 3}, ","], "},", "{", 
      TemplateSlotSequence[{4, 4}, ","], "}}", ",", "{", 
      TemplateSlotSequence[{5, 5}, ","], "}", ",", "{{", 
      TemplateSlotSequence[{6, 6}, ","], "}}", "}", ",", "{", 
      TemplateSlotSequence[{7, 8}, ","], "}", ",", 
      RowBox[{"{", "u", "}"}], ",", "{", 
      TemplateSlotSequence[{9, 9}, ","], "}", ",", "Automatic", 
      ", SamplingPeriod -> ", #10, "]"}]& ),
   Tooltip->AffineStateSpaceModel], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072355965743`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[2]:=",
 CellID->601416328,ExpressionUUID->"a252c851-ea5c-45ed-bad9-a44c46fc19a9"],

Cell[BoxData[
 TemplateBox[{"1", "0", "1", "0", "0", "1", "1", "0", "0", 
   InterpretationBox["\[InvisibleSpace]", None], {
   StateSpaceModel, {
    False, False, {
     False, False}}, {$CellContext`stname1, $CellContext`stname2}, {{
     Control`CommonDump`$DUMMY$}, {Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$}}, Identity, 
    Automatic, 1, 1, 2, 1, {}, {False, False}, False, Automatic, None, {",", 
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             SubscriptBox["x", "1"], ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             SubscriptBox["x", "2"], ",", "0"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"u", ",", "0"}], "}"}], "}"}], ",", 
     RowBox[{"{", "Automatic", "}"}]}}, {}},
  "StateSpaceModelFull",
  BaseStyle->(NumberMarks -> False),
  DisplayFunction->(TagBox[
    SubsuperscriptBox[
     RowBox[{"(", 
       GridBox[{{#, #2, #3}, {#4, #5, #6}, {#7, #8, #9}}, 
        AllowedDimensions -> {3, 3}, AutoDelete -> False, 
        AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
        BaseStyle -> (Deployed -> False), GridBoxItemStyle -> {}, 
        GridBoxDividers -> {"Rows" -> {False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}, "Columns" -> {False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}}, 
        GridBoxBackground -> {"Rows" -> {{
             GrayLevel[1], 
             RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #10, 
     ButtonBox[
      GraphicsBox[{
        RGBColor[0.8, 0.85, 0.85], 
        EdgeForm[
         RGBColor[0.6, 0.7, 0.7]], 
        RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
        InsetBox[
         StyleBox[
         "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
          GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
          FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
      ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
        ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
      None], MultilineFunction -> None], 
    EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
          FrontEnd`Value[
           FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
      True}]]& ),
  InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{1, 2}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{4, 5}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{3, 3}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{6, 6}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{7, 8}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{9, 9}, ","], "}"}], "}"}], "}"}], ",", 
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             SubscriptBox["x", "1"], ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             SubscriptBox["x", "2"], ",", "0"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"u", ",", "0"}], "}"}], "}"}], ",", 
     RowBox[{"{", "Automatic", "}"}], ",", "SamplingPeriod", "->", 
     RowBox[{#10}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
  Tooltip->StateSpaceModel]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072355965743`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[2]=",
 CellID->1902591882,ExpressionUUID->"59f889eb-dade-445a-bef0-da6248628ca1"],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "efcfc499-1bb0-4303-9c72-875892bfd7b9"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072355965743`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->2076631138,ExpressionUUID->"57633a66-0a17-4b41-a04e-128240a85025"],

Cell[TextData[{
 "Taylor linearize a ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["NonlinearStateSpaceModel"]], 
    "paclet:ref/NonlinearStateSpaceModel"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "30d23eee-99ee-48e3-bef7-c95bdec0159e"],
 ":"
}], "ExampleText",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072355975747`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->1035305322,ExpressionUUID->"aa8eb59e-39fe-4533-a8c7-305abe737a6d"],

Cell[BoxData[
 RowBox[{"StateSpaceModel", "[", 
  TemplateBox[{
    RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"u", " ", "x"}]}], 
    RowBox[{
      RowBox[{"-", "1"}], "+", "x"}], 
    RowBox[{"{", 
      RowBox[{"x", ",", "1"}], "}"}], 
    InterpretationBox["", Automatic], 
    InterpretationBox[" ", None], {1, 1, 1, 1, {}, None, False, False, False, 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"u", ",", "1"}], "}"}], "}"}], "Automatic"}, {}},
   "NonlinearStateSpaceModelFull",
   BaseStyle->(NumberMarks -> False),
   DisplayFunction->(TagBox[
     SubsuperscriptBox[
      RowBox[{"(", 
        GridBox[{{#3, #}, {#4, #2}}, {}, GridBoxDividers -> {"Rows" -> {False, 
             Directive[
              GrayLevel[0], 
              GrayLevel[0.6]], False}, "Columns" -> {False, 
             Directive[
              GrayLevel[0], 
              GrayLevel[0.6]], False}}, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxItemStyle -> {"Columns" -> {
             Directive["InlineText", Smaller, 
              GrayLevel[0.5]], {Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxBackground -> {"Rows" -> {{
              GrayLevel[1], 
              RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #5, 
      ButtonBox[
       GraphicsBox[{
         RGBColor[0.8, 0.85, 0.85], 
         EdgeForm[
          RGBColor[0.6, 0.7, 0.7]], 
         RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
         InsetBox[
          StyleBox[
          "\[ScriptCapitalN]", Control`NonlinearModelsDump`LineColor -> 
           GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
           GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
           GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
           FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
       ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
         ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
       None]], 
     EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
           FrontEnd`Value[
            FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
       True}]]& ),
   InterpretationFunction->(RowBox[{"NonlinearStateSpaceModel[", "{", "{", 
      TemplateSlotSequence[{1, 1}, ","], "}", ",", "{", 
      TemplateSlotSequence[{2, 2}, ","], "}", "}", ",", "{", 
      TemplateSlotSequence[{3, 3}, ","], "}", ",", 
      RowBox[{"{", 
        RowBox[{"{", 
          RowBox[{"u", ",", "1"}], "}"}], "}"}], ",", "{", 
      TemplateSlotSequence[{4, 4}, ","], "}", ",", "Automatic", 
      ", SamplingPeriod -> ", #5, ", SystemsModelLabels -> ", "{", {}, ",", 
      None, ",", None, "}", "]"}]& ),
   Tooltip->NonlinearStateSpaceModel], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072355975747`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[1]:=",
 CellID->1663740016,ExpressionUUID->"7b0de277-1c3b-41a4-b076-60648eb19c16"],

Cell[BoxData[
 TemplateBox[{"1", "1", "1", "0", 
   InterpretationBox["\[InvisibleSpace]", None], {
   StateSpaceModel, {
    False, False, {False, False}}, {$CellContext`stname1}, {{
     Control`CommonDump`$DUMMY$}, {Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$}}, Identity, Automatic, 1, 1, 1, 1, {}, {
    False, False}, False, Automatic, {{}, None, None}, {",", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"x", ",", "0"}], "}"}], "}"}], ",", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"u", ",", "0"}], "}"}], "}"}], ",", 
     RowBox[{"{", "Automatic", "}"}]}}, {}},
  "StateSpaceModelFull",
  BaseStyle->(NumberMarks -> False),
  DisplayFunction->(TagBox[
    SubsuperscriptBox[
     RowBox[{"(", 
       GridBox[{{#, #2}, {#3, #4}}, AllowedDimensions -> {2, 2}, AutoDelete -> 
        False, AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
        BaseStyle -> (Deployed -> False), GridBoxItemStyle -> {}, 
        GridBoxDividers -> {"Rows" -> {False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}, "Columns" -> {False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}}, 
        GridBoxBackground -> {"Rows" -> {{
             GrayLevel[1], 
             RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #5, 
     ButtonBox[
      GraphicsBox[{
        RGBColor[0.8, 0.85, 0.85], 
        EdgeForm[
         RGBColor[0.6, 0.7, 0.7]], 
        RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
        InsetBox[
         StyleBox[
         "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
          GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
          FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
      ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
        ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
      None], MultilineFunction -> None], 
    EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
          FrontEnd`Value[
           FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
      True}]]& ),
  InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{1, 1}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{2, 2}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{3, 3}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{4, 4}, ","], "}"}], "}"}], "}"}], ",", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"x", ",", "0"}], "}"}], "}"}], ",", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"u", ",", "0"}], "}"}], "}"}], ",", 
     RowBox[{"{", "Automatic", "}"}], ",", "SamplingPeriod", "->", 
     RowBox[{#5}], ",", "SystemsModelLabels", "->", 
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", "}"}], ",", "None", ",", "None"}], "}"}], "]"}]& ),
  Tooltip->StateSpaceModel]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072355975747`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[1]=",
 CellID->830256944,ExpressionUUID->"770954c8-ebd9-4cb0-8e96-a5a219d24ea5"],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "9b67ade3-fa3f-42b1-bf03-ce07e293f7f2"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072355985727`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->1886833373,ExpressionUUID->"6471a29f-7607-42cb-b065-b87faf203964"],

Cell["Linearize a nonlinear state-space model:", "ExampleText",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072355985727`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->117484762,ExpressionUUID->"23759ecd-6b69-45ec-a64f-5d6e848112bc"],

Cell[BoxData[
 RowBox[{"StateSpaceModel", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x2", "-", 
        SuperscriptBox["x3", "2"]}], ",", 
       RowBox[{"x3", "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["x1", "2"], "x3"}], "+", 
        RowBox[{"2", " ", "x3", " ", "u"}]}], ",", 
       RowBox[{
        SuperscriptBox["x1", "2"], "+", "u"}], ",", 
       RowBox[{
        RowBox[{"-", "x1"}], "-", 
        RowBox[{
         SuperscriptBox["x1", "2"], "x2"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x1", "+", "u"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x2", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x3", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x4", ",", "0"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"u", ",", "0"}], "}"}], "}"}]}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072355985727`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[1]:=",
 CellID->242856398,ExpressionUUID->"3d671c9d-3bf1-4184-817b-c455545d7ce4"],

Cell[BoxData[
 TemplateBox[{
  "0", "1", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "1", 
   RowBox[{"-", "1"}], "0", "0", "0", "0", "1", "0", "0", "0", "1", 
   InterpretationBox["\[InvisibleSpace]", None], {
   StateSpaceModel, {
    False, False, {
     False, False}}, {$CellContext`stname1, $CellContext`stname2, \
$CellContext`stname3, $CellContext`stname4}, {{Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$, 
      Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$}}, Identity, 
    Automatic, 1, 1, 4, 1, {}, {False, False}, False, Automatic, None, {",", 
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{"x1", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"x2", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"x3", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"x4", ",", "0"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"u", ",", "0"}], "}"}], "}"}]}}, {}},
  "StateSpaceModelFull",
  BaseStyle->{NumberMarks -> False},
  DisplayFunction->(TagBox[
    SubsuperscriptBox[
     RowBox[{"(", 
       GridBox[{{#, #2, #3, #4, #5}, {#6, #7, #8, #9, #10}, {#11, #12, #13, \
#14, #15}, {#16, #17, #18, #19, #20}, {#21, #22, #23, #24, #25}}, 
        AllowedDimensions -> {5, 5}, AutoDelete -> False, 
        AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
        BaseStyle -> {Deployed -> False}, GridBoxItemStyle -> {}, 
        GridBoxDividers -> {"Rows" -> {False, False, False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}, 
          "Columns" -> {False, False, False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}}, 
        GridBoxBackground -> {"Rows" -> {{
             GrayLevel[1], 
             RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #26, 
     ButtonBox[
      GraphicsBox[{
        RGBColor[0.8, 0.85, 0.85], 
        EdgeForm[
         RGBColor[0.6, 0.7, 0.7]], 
        RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
        InsetBox[
         StyleBox[
         "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
          GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
          FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
      ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
        ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
      None], MultilineFunction -> None], 
    EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
          FrontEnd`Value[
           FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
      True}]]& ),
  InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{1, 4}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{6, 9}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{11, 14}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{16, 19}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{5, 5}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{10, 10}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{15, 15}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{20, 20}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{21, 24}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{25, 25}, ","], "}"}], "}"}], "}"}], ",", 
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{"x1", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"x2", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"x3", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"x4", ",", "0"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"u", ",", "0"}], "}"}], "}"}], ",", "SamplingPeriod", "->", 
     RowBox[{#26}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
  Tooltip->StateSpaceModel]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072355995703`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[1]=",
 CellID->441381384,ExpressionUUID->"1f954e33-c25c-4c14-941c-71803267ae3d"],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "01e3e2dc-8fdd-4410-9e0e-1d85fd81b8ea"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072355995703`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->784009079,ExpressionUUID->"29ce693d-0290-4dad-8005-41a922048ba3"],

Cell["The linear state-space model of an ODE:", "ExampleText",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072355995703`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->1586232711,ExpressionUUID->"346f52dd-9372-4e43-84b9-bbf4c29b79e7"],

Cell[BoxData[
 RowBox[{"StateSpaceModel", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["a", "3"], " ", 
       RowBox[{
        RowBox[{"x", "'''"}], "[", "t", "]"}]}], "+", 
      RowBox[{
       SubscriptBox["a", "2"], " ", 
       RowBox[{
        RowBox[{"x", "''"}], "[", "t", "]"}]}], "+", 
      RowBox[{
       SubscriptBox["a", "1"], " ", 
       RowBox[{
        RowBox[{"x", "'"}], "[", "t", "]"}]}], "+", 
      RowBox[{
       SubscriptBox["a", "0"], " ", 
       RowBox[{"x", "[", "t", "]"}]}]}], "\[Equal]", 
     RowBox[{"f", "[", "t", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x", "[", "t", "]"}], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"x", "'"}], "[", "t", "]"}], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"x", "''"}], "[", "t", "]"}], ",", "0"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"f", "[", "t", "]"}], ",", "0"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "[", "t", "]"}], "}"}], ",", "t"}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235600568*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[1]:=",
 CellID->951179919,ExpressionUUID->"565f9429-b631-4b26-9bec-672e73003096"],

Cell[BoxData[
 TemplateBox[{"0", "1", "0", "0", "0", "0", "1", "0", 
   RowBox[{"-", 
     FractionBox[
      SubscriptBox["a", "0"], 
      SubscriptBox["a", "3"]]}], 
   RowBox[{"-", 
     FractionBox[
      SubscriptBox["a", "1"], 
      SubscriptBox["a", "3"]]}], 
   RowBox[{"-", 
     FractionBox[
      SubscriptBox["a", "2"], 
      SubscriptBox["a", "3"]]}], 
   FractionBox["1", 
    SubscriptBox["a", "3"]], "1", "0", "0", "0", 
   InterpretationBox["\[InvisibleSpace]", None], {
   StateSpaceModel, {
    False, False, {
     False, False}}, {$CellContext`stname1, $CellContext`stname2, \
$CellContext`stname3}, {{Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$, 
      Control`CommonDump`$DUMMY$}}, Identity, Automatic, 1, 1, 3, 1, {}, {
    False, False}, False, Automatic, None, {",", 
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"x", "[", "t", "]"}], ",", "0"}], "}"}], ",", 
         SubscriptBox["\[FormalX]", "1"], ",", 
         SubscriptBox["\[FormalX]", "2"]}], "}"}], ",", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{
           RowBox[{"f", "[", "t", "]"}], ",", "0"}], "}"}], "}"}], ",", 
     "Automatic", ",", "t"}}, {}},
  "StateSpaceModelFull",
  BaseStyle->{NumberMarks -> False},
  DisplayFunction->(TagBox[
    SubsuperscriptBox[
     RowBox[{"(", 
       GridBox[{{#, #2, #3, #4}, {#5, #6, #7, #8}, {#9, #10, #11, #12}, {#13, \
#14, #15, #16}}, AllowedDimensions -> {4, 4}, AutoDelete -> False, 
        AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
        BaseStyle -> {Deployed -> False}, GridBoxItemStyle -> {}, 
        GridBoxDividers -> {"Rows" -> {False, False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}, 
          "Columns" -> {False, False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}}, 
        GridBoxBackground -> {"Rows" -> {{
             GrayLevel[1], 
             RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #17, 
     ButtonBox[
      GraphicsBox[{
        RGBColor[0.8, 0.85, 0.85], 
        EdgeForm[
         RGBColor[0.6, 0.7, 0.7]], 
        RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
        InsetBox[
         StyleBox[
         "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
          GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
          FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
      ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
        ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
      None], MultilineFunction -> None], 
    EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
          FrontEnd`Value[
           FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
      True}]]& ),
  InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{1, 3}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{5, 7}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{9, 11}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{4, 4}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{8, 8}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{12, 12}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{13, 15}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{16, 16}, ","], "}"}], "}"}], "}"}], ",", 
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"x", "[", "t", "]"}], ",", "0"}], "}"}], ",", 
         SubscriptBox["\[FormalX]", "1"], ",", 
         SubscriptBox["\[FormalX]", "2"]}], "}"}], ",", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{
           RowBox[{"f", "[", "t", "]"}], ",", "0"}], "}"}], "}"}], ",", 
     "Automatic", ",", "t", ",", "SamplingPeriod", "->", 
     RowBox[{#17}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
  Tooltip->StateSpaceModel]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235600568*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[1]=",
 CellID->2102235106,ExpressionUUID->"f0ccd126-bf0a-4f7c-9d6e-75c64c8104b0"],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "4a2b3b85-4f2a-457c-930c-e366498f29dc"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235600568*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->921993031,ExpressionUUID->"9ebe8393-c32d-47fd-8b79-e5d5e22da9b4"],

Cell["An ODE with a derivative control term:", "ExampleText",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356015635`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->2107011538,ExpressionUUID->"41bd9319-d495-481f-9fbb-92c6014dec43"],

Cell[BoxData[
 RowBox[{"StateSpaceModel", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["K", "3"], " ", 
       RowBox[{
        RowBox[{"\[Phi]", "'''"}], "[", "t", "]"}]}], "+", 
      RowBox[{
       SubscriptBox["K", "2"], 
       RowBox[{
        RowBox[{"\[Phi]", "''"}], "[", "t", "]"}]}], "+", 
      RowBox[{
       SubscriptBox["K", "1"], " ", 
       RowBox[{
        RowBox[{"\[Phi]", "'"}], "[", "t", "]"}]}], "+", 
      RowBox[{
       SubscriptBox["K", "0"], 
       RowBox[{"\[Phi]", "[", "t", "]"}]}]}], "\[Equal]", 
     RowBox[{
      RowBox[{
       SubscriptBox["K", "a"], " ", 
       RowBox[{
        RowBox[{"\[Delta]", "'"}], "[", "t", "]"}]}], "+", 
      RowBox[{
       SubscriptBox["K", "b"], " ", 
       RowBox[{"\[Delta]", "[", "t", "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Phi]", "[", "t", "]"}], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Phi]", "'"}], "[", "t", "]"}], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Phi]", "''"}], "[", "t", "]"}], ",", "0"}], "}"}]}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Delta]", "[", "t", "]"}], ",", "0"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Phi]", "[", "t", "]"}], "}"}], ",", "t"}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356015635`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[1]:=",
 CellID->2031547046,ExpressionUUID->"567631cd-f23e-410a-865a-8f839d2e3e39"],

Cell[BoxData[
 TemplateBox[{"0", "1", "0", "0", "0", "0", "1", 
   FractionBox[
    SubscriptBox["K", "a"], 
    SubscriptBox["K", "3"]], 
   RowBox[{"-", 
     FractionBox[
      SubscriptBox["K", "0"], 
      SubscriptBox["K", "3"]]}], 
   RowBox[{"-", 
     FractionBox[
      SubscriptBox["K", "1"], 
      SubscriptBox["K", "3"]]}], 
   RowBox[{"-", 
     FractionBox[
      SubscriptBox["K", "2"], 
      SubscriptBox["K", "3"]]}], 
   RowBox[{"-", 
     FractionBox[
      RowBox[{
        FractionBox[
         RowBox[{
           SubscriptBox["K", "2"], " ", 
           SubscriptBox["K", "a"]}], 
         SubscriptBox["K", "3"]], "-", 
        SubscriptBox["K", "b"]}], 
      SubscriptBox["K", "3"]]}], "1", "0", "0", "0", 
   InterpretationBox["\[InvisibleSpace]", None], {
   StateSpaceModel, {
    False, False, {
     False, False}}, {$CellContext`stname1, $CellContext`stname2, \
$CellContext`stname3}, {{Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$, 
      Control`CommonDump`$DUMMY$}}, Identity, Automatic, 1, 1, 3, 1, {}, {
    False, False}, False, Automatic, None, {",", 
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"\[Phi]", "[", "t", "]"}], ",", "0"}], "}"}], ",", 
         SubscriptBox["\[FormalX]", "1"], ",", 
         SubscriptBox["\[FormalX]", "2"]}], "}"}], ",", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{
           RowBox[{"\[Delta]", "[", "t", "]"}], ",", "0"}], "}"}], "}"}], ",",
      "Automatic", ",", "t"}}, {}},
  "StateSpaceModelFull",
  BaseStyle->{NumberMarks -> False},
  DisplayFunction->(TagBox[
    SubsuperscriptBox[
     RowBox[{"(", 
       GridBox[{{#, #2, #3, #4}, {#5, #6, #7, #8}, {#9, #10, #11, #12}, {#13, \
#14, #15, #16}}, AllowedDimensions -> {4, 4}, AutoDelete -> False, 
        AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
        BaseStyle -> {Deployed -> False}, GridBoxItemStyle -> {}, 
        GridBoxDividers -> {"Rows" -> {False, False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}, 
          "Columns" -> {False, False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}}, 
        GridBoxBackground -> {"Rows" -> {{
             GrayLevel[1], 
             RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #17, 
     ButtonBox[
      GraphicsBox[{
        RGBColor[0.8, 0.85, 0.85], 
        EdgeForm[
         RGBColor[0.6, 0.7, 0.7]], 
        RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
        InsetBox[
         StyleBox[
         "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
          GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
          FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
      ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
        ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
      None], MultilineFunction -> None], 
    EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
          FrontEnd`Value[
           FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
      True}]]& ),
  InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{1, 3}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{5, 7}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{9, 11}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{4, 4}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{8, 8}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{12, 12}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{13, 15}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{16, 16}, ","], "}"}], "}"}], "}"}], ",", 
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"\[Phi]", "[", "t", "]"}], ",", "0"}], "}"}], ",", 
         SubscriptBox["\[FormalX]", "1"], ",", 
         SubscriptBox["\[FormalX]", "2"]}], "}"}], ",", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{
           RowBox[{"\[Delta]", "[", "t", "]"}], ",", "0"}], "}"}], "}"}], ",",
      "Automatic", ",", "t", ",", "SamplingPeriod", "->", 
     RowBox[{#17}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
  Tooltip->StateSpaceModel]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356015635`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[1]=",
 CellID->1620039243,ExpressionUUID->"07b3c9db-913a-410a-abd7-8df8fbc452ea"],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "5249fa76-348b-4dbd-b50d-d343745b50df"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235602562*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->2012015259,ExpressionUUID->"efe0c69e-6f4a-4efc-82d4-53c0066a0ac8"],

Cell[TextData[{
 "Use ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["Normal"]], "paclet:ref/Normal"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "40ce53ab-f3e2-4898-b57f-247d01eb7632"],
 " to obtain the matrices:"
}], "ExampleText",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235602562*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->1662952351,ExpressionUUID->"14b5c47a-231e-4add-8cff-4482c0e51c40"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"aa", ",", "bb", ",", "cc", ",", "dd"}], "}"}], "=", 
  RowBox[{"Normal", "[", 
   RowBox[{"StateSpaceModel", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Array", "[", 
       RowBox[{"a", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "2"}], "}"}]}], "]"}], ",", 
      RowBox[{"Array", "[", 
       RowBox[{"b", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "1"}], "}"}]}], "]"}], ",", 
      RowBox[{"Array", "[", 
       RowBox[{"c", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}]}], "]"}], ",", 
      RowBox[{"Array", "[", 
       RowBox[{"d", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}]}], "]"}]}], "}"}], "]"}], 
   "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235602562*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[1]:=",
 CellID->1608540980,ExpressionUUID->"19fe9162-755e-4a54-9d8d-6f8e2f9c2b1e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", "[", 
        RowBox[{"1", ",", "1"}], "]"}], ",", 
       RowBox[{"a", "[", 
        RowBox[{"1", ",", "2"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", "[", 
        RowBox[{"2", ",", "1"}], "]"}], ",", 
       RowBox[{"a", "[", 
        RowBox[{"2", ",", "2"}], "]"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"b", "[", 
       RowBox[{"1", ",", "1"}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", "[", 
       RowBox[{"2", ",", "1"}], "]"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"c", "[", 
       RowBox[{"1", ",", "1"}], "]"}], ",", 
      RowBox[{"c", "[", 
       RowBox[{"1", ",", "2"}], "]"}]}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"d", "[", 
      RowBox[{"1", ",", "1"}], "]"}], "}"}], "}"}]}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356035585`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[1]=",
 CellID->1566265941,ExpressionUUID->"1a8a03aa-d7e5-41cd-95bd-6ccda0e1f6d9"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      Part[
       Dynamic[
        CurrentValue[
         EvaluationNotebook[], {
         TaggingRules, "Openers", "ExampleSubsection", "7"}, Closed]], 1], 
      Alternatives[Open, True]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{14., {0.45000000000000107`, 13.549999999999999`}}]],
  ExpressionUUID->"3d3b34f5-73cb-48e2-b164-fe6ff4010e1c"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"0faa9de2-d1f8-45eb-893f-215a237e5d1d"],
 "Descriptor Systems",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(8)", "ExampleCount",ExpressionUUID->
  "322d3a0d-5a46-4c32-8e8d-6ca51ea85530"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356035585`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->1856019,ExpressionUUID->"39800183-3946-4327-ba6c-13eb2cd01a5e"],

Cell["A descriptor system:", "ExampleText",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235604557*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->147265615,ExpressionUUID->"e3473fe7-973e-40f0-8b8c-73967d2e6832"],

Cell[BoxData[
 RowBox[{"StateSpaceModel", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"{", "a", "}"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"{", "b", "}"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"{", "c", "}"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"{", "d", "}"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"{", "e", "}"}], "}"}]}], "}"}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235604557*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[1]:=",
 CellID->430914994,ExpressionUUID->"78d83359-b2e4-4173-ae53-78c213809e0c"],

Cell[BoxData[
 TemplateBox[{"e", "a", "b", "c", "d", 
   InterpretationBox["\[InvisibleSpace]", None], {
   StateSpaceModel, {
    False, False, {False, False}}, {$CellContext`stname1}, {{
     Control`CommonDump`$DUMMY$}, {Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$}}, Identity, Automatic, 1, 1, 1, 1, {}, {
    False, False}, True, Automatic, None, Automatic}, {}},
  "StateSpaceModelFull",
  BaseStyle->{NumberMarks -> False},
  DisplayFunction->(TagBox[
    SubsuperscriptBox[
     RowBox[{"(", 
       GridBox[{{#, #2, #3}, {"", #4, #5}}, AllowedDimensions -> {3, 2}, 
        AutoDelete -> False, AllowScriptLevelChange -> False, 
        ColumnAlignments -> {Center}, BaseStyle -> {Deployed -> False}, 
        GridBoxItemStyle -> {}, GridBoxDividers -> {"Rows" -> {False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}, "Columns" -> {False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}}, 
        GridBoxBackground -> {"Rows" -> {{
             GrayLevel[1], 
             RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #6, 
     ButtonBox[
      GraphicsBox[{
        RGBColor[0.8, 0.85, 0.85], 
        EdgeForm[
         RGBColor[0.6, 0.7, 0.7]], 
        RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
        InsetBox[
         StyleBox[
         "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
          GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
          FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
      ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
        ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
      None], MultilineFunction -> None], 
    EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
          FrontEnd`Value[
           FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
      True}]]& ),
  InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{2, 2}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{3, 3}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{4, 4}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{5, 5}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{1, 1}, ","], "}"}], "}"}], "}"}], ",", 
     "SamplingPeriod", "->", 
     RowBox[{#6}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
  Tooltip->StateSpaceModel]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235605554*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[1]=",
 CellID->367861177,ExpressionUUID->"5f076012-ec12-4a61-ab93-47dc2bc90f0e"],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "f8a4a085-98af-471a-861e-3e5bd7a7fcf9"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235605554*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->162151084,ExpressionUUID->"24c065b9-5b6e-48ee-b551-3ff407852360"],

Cell["A singular descriptor system:", "ExampleText",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235605554*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->265097545,ExpressionUUID->"4229b372-d166-403c-bf71-cd89ccc4b990"],

Cell[BoxData[
 RowBox[{"StateSpaceModel", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "3"}], ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "0", "}"}], ",", 
      RowBox[{"{", "1", "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"{", "0", "}"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], "}"}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235605554*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[1]:=",
 CellID->376782480,ExpressionUUID->"9c2a86d6-8058-402f-9de7-dc13b5f56d28"],

Cell[BoxData[
 TemplateBox[{"1", "1", 
   RowBox[{"-", "3"}], "1", "0", "0", "0", "0", "1", "1", "1", "0", "0", 
   InterpretationBox["\[InvisibleSpace]", None], {
   StateSpaceModel, {
    False, False, {
     False, False}}, {$CellContext`stname1, $CellContext`stname2}, {{
     Control`CommonDump`$DUMMY$}, {Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$}}, Identity, 
    Automatic, 1, 1, 2, 1, {}, {False, False}, True, Automatic, None, 
    Automatic}, {}},
  "StateSpaceModelFull",
  BaseStyle->{NumberMarks -> False},
  DisplayFunction->(TagBox[
    SubsuperscriptBox[
     RowBox[{"(", 
       GridBox[{{#, #2, #3, #4, #5}, {#6, #7, #8, #9, #10}, {
         "", "", #11, #12, #13}}, AllowedDimensions -> {5, 3}, AutoDelete -> 
        False, AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
        BaseStyle -> {Deployed -> False}, GridBoxItemStyle -> {}, 
        GridBoxDividers -> {"Rows" -> {False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}, "Columns" -> {False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}}, 
        GridBoxBackground -> {"Rows" -> {{
             GrayLevel[1], 
             RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #14, 
     ButtonBox[
      GraphicsBox[{
        RGBColor[0.8, 0.85, 0.85], 
        EdgeForm[
         RGBColor[0.6, 0.7, 0.7]], 
        RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
        InsetBox[
         StyleBox[
         "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
          GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
          FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
      ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
        ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
      None], MultilineFunction -> None], 
    EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
          FrontEnd`Value[
           FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
      True}]]& ),
  InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{3, 4}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{8, 9}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{5, 5}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{10, 10}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{11, 12}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{13, 13}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{1, 2}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{6, 7}, ","], "}"}], "}"}], "}"}], ",", 
     "SamplingPeriod", "->", 
     RowBox[{#14}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
  Tooltip->StateSpaceModel]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356065507`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[1]=",
 CellID->1002564418,ExpressionUUID->"36ef84be-622e-48a6-96ee-9a282b0fbbde"],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "2aca610e-0d01-4453-9524-732655da78c2"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356065507`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->149707020,ExpressionUUID->"60314572-335a-48f3-a88d-442dbaba586e"],

Cell[TextData[{
 "Use ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["Automatic"]], "paclet:ref/Automatic"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "58c530de-bc7b-4ac0-a10b-8b063b17f213"],
 " to create a descriptor system with default outputs: "
}], "ExampleText",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356075478`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->299839651,ExpressionUUID->"d10e1f4e-a6ee-457f-ab37-75657174feeb"],

Cell[BoxData[
 RowBox[{"StateSpaceModel", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2"}], ",", 
        RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "1", "}"}], ",", 
      RowBox[{"{", "0", "}"}]}], "}"}], ",", "Automatic", ",", "Automatic", 
    ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", 
        RowBox[{"-", ".5"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], "}"}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356075478`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[1]:=",
 CellID->113566029,ExpressionUUID->"4cf70f61-3ba7-4034-9c83-d0ec3c56c2fa"],

Cell[BoxData[
 TemplateBox[{"1", 
   RowBox[{"-", "0.5`"}], "1", "0", "1", "0", "1", 
   RowBox[{"-", "2"}], 
   RowBox[{"-", "1"}], "0", "1", "0", "0", "0", "1", "0", 
   InterpretationBox["\[InvisibleSpace]", None], {
   StateSpaceModel, {
    False, False, {
     False, False}}, {$CellContext`stname1, $CellContext`stname2}, {{
     Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$}}, Identity, 
    Automatic, 1, 2, 2, 1, {}, {False, False}, True, Automatic, None, 
    Automatic}, {}},
  "StateSpaceModelFull",
  BaseStyle->{NumberMarks -> False},
  DisplayFunction->(TagBox[
    SubsuperscriptBox[
     RowBox[{"(", 
       GridBox[{{#, #2, #3, #4, #5}, {#6, #7, #8, #9, #10}, {
         "", "", #11, #12, #13}, {"", "", #14, #15, #16}}, 
        AllowedDimensions -> {5, 4}, AutoDelete -> False, 
        AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
        BaseStyle -> {Deployed -> False}, GridBoxItemStyle -> {}, 
        GridBoxDividers -> {"Rows" -> {False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}, "Columns" -> {False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}}, 
        GridBoxBackground -> {"Rows" -> {{
             GrayLevel[1], 
             RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #17, 
     ButtonBox[
      GraphicsBox[{
        RGBColor[0.8, 0.85, 0.85], 
        EdgeForm[
         RGBColor[0.6, 0.7, 0.7]], 
        RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
        InsetBox[
         StyleBox[
         "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
          GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
          FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
      ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
        ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
      None], MultilineFunction -> None], 
    EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
          FrontEnd`Value[
           FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
      True}]]& ),
  InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{3, 4}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{8, 9}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{5, 5}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{10, 10}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{11, 12}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{14, 15}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{13, 13}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{16, 16}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{1, 2}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{6, 7}, ","], "}"}], "}"}], "}"}], ",", 
     "SamplingPeriod", "->", 
     RowBox[{#17}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
  Tooltip->StateSpaceModel]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356085424`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[1]=",
 CellID->31698500,ExpressionUUID->"c9b4b43c-d998-4074-8d17-7b3c62320072"],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "3b30b0df-298c-4318-9fa3-64903bc8513c"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356085424`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->23811874,ExpressionUUID->"8e09e82d-f6e5-4ba0-a968-45179ed1abbc"],

Cell["\<\
Systems can include both differential and algebraic equations:\
\>", "ExampleText",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235609543*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->88679416,ExpressionUUID->"a40c2a5b-82db-414e-a000-aa83d010eaad"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dynamics", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["x", "1"], "'"}], "[", "t", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "3"}], 
      RowBox[{
       SubscriptBox["x", "1"], "[", "t", "]"}]}], "+", 
     RowBox[{
      SubscriptBox["x", "2"], "[", "t", "]"}], "+", 
     RowBox[{"u", "[", "t", "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"constraint", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["x", "2"], "[", "t", "]"}], "+", 
     RowBox[{
      SubscriptBox["x", "1"], "[", "t", "]"}]}], "\[Equal]", "0"}]}], 
  ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235609543*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[1]:=",
 CellID->362544317,ExpressionUUID->"a5991ca7-e867-4d11-b241-932ece7d6747"],

Cell["The resulting model has a singular descriptor matrix:", "ExampleText",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356105423`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->181870821,ExpressionUUID->"67f04aba-963d-4937-afdf-67d1ff23e884"],

Cell[BoxData[
 RowBox[{"StateSpaceModel", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"dynamics", ",", "constraint"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["x", "1"], "[", "t", "]"}], ",", 
     RowBox[{
      SubscriptBox["x", "2"], "[", "t", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"u", "[", "t", "]"}], "}"}], ",", 
   RowBox[{
    SubscriptBox["x", "1"], "[", "t", "]"}], ",", "t"}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356105423`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[2]:=",
 CellID->219205162,ExpressionUUID->"bedbde55-c32e-4083-b768-6dc92ca75e13"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"-", "1"}], "0", "3", 
   RowBox[{"-", "1"}], 
   RowBox[{"-", "1"}], "0", "0", "1", "1", "0", "1", "0", "0", 
   InterpretationBox["\[InvisibleSpace]", None], {
   StateSpaceModel, {
    False, False, {
     False, False}}, {$CellContext`stname1, $CellContext`stname2}, {{
     Control`CommonDump`$DUMMY$}, {Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$}}, Identity, 
    Automatic, 1, 1, 2, 1, {}, {False, False}, True, Automatic, None, {",", 
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               SubscriptBox["x", "2"], "[", "t", "]"}], ",", "0"}], "}"}], 
         ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               SubscriptBox["x", "1"], "[", "t", "]"}], ",", "0"}], "}"}]}], 
       "}"}], ",", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{
           RowBox[{"u", "[", "t", "]"}], ",", "0"}], "}"}], "}"}], ",", 
     "Automatic", ",", "t"}}, {}},
  "StateSpaceModelFull",
  BaseStyle->{NumberMarks -> False},
  DisplayFunction->(TagBox[
    SubsuperscriptBox[
     RowBox[{"(", 
       GridBox[{{#, #2, #3, #4, #5}, {#6, #7, #8, #9, #10}, {
         "", "", #11, #12, #13}}, AllowedDimensions -> {5, 3}, AutoDelete -> 
        False, AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
        BaseStyle -> {Deployed -> False}, GridBoxItemStyle -> {}, 
        GridBoxDividers -> {"Rows" -> {False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}, "Columns" -> {False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}}, 
        GridBoxBackground -> {"Rows" -> {{
             GrayLevel[1], 
             RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #14, 
     ButtonBox[
      GraphicsBox[{
        RGBColor[0.8, 0.85, 0.85], 
        EdgeForm[
         RGBColor[0.6, 0.7, 0.7]], 
        RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
        InsetBox[
         StyleBox[
         "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
          GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
          FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
      ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
        ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
      None], MultilineFunction -> None], 
    EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
          FrontEnd`Value[
           FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
      True}]]& ),
  InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{3, 4}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{8, 9}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{5, 5}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{10, 10}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{11, 12}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{13, 13}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{1, 2}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{6, 7}, ","], "}"}], "}"}], "}"}], ",", 
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               SubscriptBox["x", "2"], "[", "t", "]"}], ",", "0"}], "}"}], 
         ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               SubscriptBox["x", "1"], "[", "t", "]"}], ",", "0"}], "}"}]}], 
       "}"}], ",", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{
           RowBox[{"u", "[", "t", "]"}], ",", "0"}], "}"}], "}"}], ",", 
     "Automatic", ",", "t", ",", "SamplingPeriod", "->", 
     RowBox[{#14}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
  Tooltip->StateSpaceModel]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356105423`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[2]=",
 CellID->656269415,ExpressionUUID->"d4841ee8-ade6-4010-b3b8-f38b40f47b83"],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "1798c279-7b27-43ec-98ac-68ceb1d584a5"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235611538*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->554429818,ExpressionUUID->"5bed56f0-1989-4583-bf78-42ae76e162b3"],

Cell["A discrete-time descriptor system from difference equations:", \
"ExampleText",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235611538*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->200033880,ExpressionUUID->"c36d2f5e-9837-4dfd-bb4b-0e255a494f50"],

Cell[BoxData[
 RowBox[{"StateSpaceModel", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"x", "[", 
       RowBox[{"k", "+", "1"}], "]"}], "\[Equal]", 
      RowBox[{".5", 
       RowBox[{"x", "[", "k", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"y", "[", "k", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"x", "[", "k", "]"}]}], "+", 
       RowBox[{"u", "[", "k", "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "[", "k", "]"}], ",", 
     RowBox[{"y", "[", "k", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"u", "[", "k", "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "[", "k", "]"}], "}"}], ",", "k"}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235611538*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[1]:=",
 CellID->106392111,ExpressionUUID->"dc87a965-e16e-49e8-b423-072d5636e2dd"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"-", "1"}], "0", 
   RowBox[{"-", "0.5`"}], "0.`", "0", "0", "0", "1.`", "1.`", 
   RowBox[{"-", "1"}], "1", "0", "0", "1", {
   StateSpaceModel, {
    False, False, {
     False, False}}, {$CellContext`stname1, $CellContext`stname2}, {{
     Control`CommonDump`$DUMMY$}, {Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$}}, Identity, 
    Automatic, 1, 1, 2, 1, {}, {False, False}, True, Automatic, None, {",", 
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"y", "[", "k", "]"}], ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"x", "[", "k", "]"}], ",", "0"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{
           RowBox[{"u", "[", "k", "]"}], ",", "0"}], "}"}], "}"}], ",", 
     "Automatic", ",", "k"}}, {}},
  "StateSpaceModelFull",
  BaseStyle->{NumberMarks -> False},
  DisplayFunction->(TagBox[
    SubsuperscriptBox[
     RowBox[{"(", 
       GridBox[{{#, #2, #3, #4, #5}, {#6, #7, #8, #9, #10}, {
         "", "", #11, #12, #13}}, AllowedDimensions -> {5, 3}, AutoDelete -> 
        False, AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
        BaseStyle -> {Deployed -> False}, GridBoxItemStyle -> {}, 
        GridBoxDividers -> {"Rows" -> {False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}, "Columns" -> {False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}}, 
        GridBoxBackground -> {"Rows" -> {{
             GrayLevel[1], 
             RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #14, 
     ButtonBox[
      GraphicsBox[{
        RGBColor[0.8, 0.85, 0.85], 
        EdgeForm[
         RGBColor[0.6, 0.7, 0.7]], 
        RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
        InsetBox[
         StyleBox[
         "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
          GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
          FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
      ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
        ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
      None], MultilineFunction -> None], 
    EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
          FrontEnd`Value[
           FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
      True}]]& ),
  InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{3, 4}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{8, 9}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{5, 5}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{10, 10}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{11, 12}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{13, 13}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{1, 2}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{6, 7}, ","], "}"}], "}"}], "}"}], ",", 
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"y", "[", "k", "]"}], ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"x", "[", "k", "]"}], ",", "0"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{
           RowBox[{"u", "[", "k", "]"}], ",", "0"}], "}"}], "}"}], ",", 
     "Automatic", ",", "k", ",", "SamplingPeriod", "->", 
     RowBox[{#14}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
  Tooltip->StateSpaceModel]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235611538*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[1]=",
 CellID->590793466,ExpressionUUID->"c33bb5c5-8e8f-4ddd-b224-a184347c5836"],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "3bd7bc9b-cacd-48fc-b8af-af7ee43ebe2f"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235611538*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->593538090,ExpressionUUID->"ad1b4652-e9fe-4757-90d5-222434acb7c0"],

Cell["A zero descriptor matrix gives an algebraic system:", "ExampleText",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356125317`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->76032227,ExpressionUUID->"0ef8ee33-5c28-45ff-a841-a619103df214"],

Cell[BoxData[
 RowBox[{"StateSpaceModel", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"-", "3"}], "}"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"{", "1", "}"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"{", "2", "}"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"1", "/", "2"}], "}"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"{", "0", "}"}], "}"}]}], "}"}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356125317`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[1]:=",
 CellID->707123906,ExpressionUUID->"f734aaf4-b0a3-4247-abe6-d59bf63275b5"],

Cell[BoxData[
 TemplateBox[{"0", 
   RowBox[{"-", "3"}], "1", "2", 
   FractionBox["1", "2"], 
   InterpretationBox["\[InvisibleSpace]", None], {
   StateSpaceModel, {
    False, False, {False, False}}, {$CellContext`stname1}, {{
     Control`CommonDump`$DUMMY$}, {Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$}}, Identity, Automatic, 1, 1, 1, 1, {}, {
    False, False}, True, Automatic, None, Automatic}, {}},
  "StateSpaceModelFull",
  BaseStyle->{NumberMarks -> False},
  DisplayFunction->(TagBox[
    SubsuperscriptBox[
     RowBox[{"(", 
       GridBox[{{#, #2, #3}, {"", #4, #5}}, AllowedDimensions -> {3, 2}, 
        AutoDelete -> False, AllowScriptLevelChange -> False, 
        ColumnAlignments -> {Center}, BaseStyle -> {Deployed -> False}, 
        GridBoxItemStyle -> {}, GridBoxDividers -> {"Rows" -> {False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}, "Columns" -> {False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}}, 
        GridBoxBackground -> {"Rows" -> {{
             GrayLevel[1], 
             RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #6, 
     ButtonBox[
      GraphicsBox[{
        RGBColor[0.8, 0.85, 0.85], 
        EdgeForm[
         RGBColor[0.6, 0.7, 0.7]], 
        RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
        InsetBox[
         StyleBox[
         "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
          GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
          FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
      ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
        ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
      None], MultilineFunction -> None], 
    EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
          FrontEnd`Value[
           FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
      True}]]& ),
  InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{2, 2}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{3, 3}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{4, 4}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{5, 5}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{1, 1}, ","], "}"}], "}"}], "}"}], ",", 
     "SamplingPeriod", "->", 
     RowBox[{#6}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
  Tooltip->StateSpaceModel]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356125317`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[1]=",
 CellID->1647280779,ExpressionUUID->"69c062a9-3985-49b3-b406-a6e5489480fc"],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "3564e912-fabb-40ce-a9b7-55c15593ee9a"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356125317`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->502028135,ExpressionUUID->"c8d37bd7-0580-4d8e-9b8c-99b23ccc2fd7"],

Cell[TextData[{
 "For descriptor systems, ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["Normal"]], "paclet:ref/Normal"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "10df8fd0-a96b-408d-86df-3e8daf9dc023"],
 " returns all five matrices:"
}], "ExampleText",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356125317`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->73225341,ExpressionUUID->"6627af05-30a8-4699-b704-fff9ab1429dc"],

Cell[BoxData[
 RowBox[{"MatrixForm", "/@", 
  RowBox[{"Normal", "[", 
   TemplateBox[{
     SubscriptBox["e", "1"], 
     SubscriptBox["e", "2"], 
     SubscriptBox["a", "1"], 
     SubscriptBox["a", "2"], 
     SubscriptBox["b", "1"], 
     SubscriptBox["e", "3"], 
     SubscriptBox["e", "4"], 
     SubscriptBox["a", "3"], 
     SubscriptBox["a", "4"], 
     SubscriptBox["b", "2"], 
     SubscriptBox["c", "1"], 
     SubscriptBox["c", "2"], 
     SubscriptBox["d", "1"], 
     InterpretationBox["\[InvisibleSpace]", None]},
    "StateSpaceModel",
    DisplayFunction->(SubsuperscriptBox[
      RowBox[{"(", 
        GridBox[{{
           TemplateSlotSequence[{1, 5}]}, {
           TemplateSlotSequence[{6, 10}]}, {"", "", 
           TemplateSlotSequence[{11, 13}]}}, AllowedDimensions -> {5, 3}, 
         AutoDelete -> False, AllowScriptLevelChange -> False, 
         ColumnAlignments -> {Center}, BaseStyle -> (Deployed -> False), 
         GridBoxItemStyle -> {}, 
         GridBoxDividers -> {
          "Rows" -> {False, False, True, {False}, False}, 
           "Columns" -> {False, False, True, False, True, {False}, False}}], 
        ")"}], #14, "\[ScriptCapitalS]", MultilineFunction -> None]& ),
    InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
       RowBox[{"{", 
         RowBox[{"{", 
           RowBox[{"{", 
             TemplateSlotSequence[{3, 4}, ","], "}"}], ",", 
           RowBox[{"{", 
             TemplateSlotSequence[{8, 9}, ","], "}"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"{", 
             TemplateSlotSequence[{5, 5}, ","], "}"}], ",", 
           RowBox[{"{", 
             TemplateSlotSequence[{10, 10}, ","], "}"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"{", 
             TemplateSlotSequence[{11, 12}, ","], "}"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"{", 
             TemplateSlotSequence[{13, 13}, ","], "}"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"{", 
             TemplateSlotSequence[{1, 2}, ","], "}"}], ",", 
           RowBox[{"{", 
             TemplateSlotSequence[{6, 7}, ","], "}"}], "}"}], "}"}], ",", 
       "SamplingPeriod", "->", 
       RowBox[{#14}], ",", "SystemsModelLabels", "->", "None", "]"}]& )], 
   "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235613529*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[1]:=",
 CellID->182535632,ExpressionUUID->"e8db4877-b45d-4e61-a19b-95e48e09e414"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        SubscriptBox["a", "1"], 
        SubscriptBox["a", "2"]},
       {
        SubscriptBox["a", "3"], 
        SubscriptBox["a", "4"]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        SubscriptBox["b", "1"]},
       {
        SubscriptBox["b", "2"]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        SubscriptBox["c", "1"], 
        SubscriptBox["c", "2"]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        SubscriptBox["d", "1"]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        SubscriptBox["e", "1"], 
        SubscriptBox["e", "2"]},
       {
        SubscriptBox["e", "3"], 
        SubscriptBox["e", "4"]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235613529*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[1]=",
 CellID->258582481,ExpressionUUID->"1f379c07-7160-48a0-920f-b5a549f31dd5"],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "c26ce506-9cd6-4e09-b049-120cd5fb5c36"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235613529*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->81540820,ExpressionUUID->"85a60d36-8d43-4e94-a7da-7207bad86f88"],

Cell["\<\
Invert the descriptor matrix to create a standard state-space model:\
\>", "ExampleText",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356145267`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->622759200,ExpressionUUID->"1c293dfd-9882-4deb-b514-aedab0741e62"],

Cell[BoxData[
 RowBox[{"StateSpaceModel", "[", 
  RowBox[{
   TemplateBox[{
     SubscriptBox["e", "1"], "0", 
     SubscriptBox["a", "1"], "0", 
     SubscriptBox["b", "1"], "0", 
     SubscriptBox["e", "2"], "0", 
     SubscriptBox["a", "2"], 
     SubscriptBox["b", "2"], 
     SubscriptBox["c", "1"], 
     SubscriptBox["c", "2"], "d", 
     InterpretationBox["\[InvisibleSpace]", None]},
    "StateSpaceModel",
    DisplayFunction->(SubsuperscriptBox[
      RowBox[{"(", 
        GridBox[{{
           TemplateSlotSequence[{1, 5}]}, {
           TemplateSlotSequence[{6, 10}]}, {"", "", 
           TemplateSlotSequence[{11, 13}]}}, AllowedDimensions -> {5, 3}, 
         AutoDelete -> False, AllowScriptLevelChange -> False, 
         ColumnAlignments -> {Center}, BaseStyle -> (Deployed -> False), 
         GridBoxItemStyle -> {}, 
         GridBoxDividers -> {
          "Rows" -> {False, False, True, {False}, False}, 
           "Columns" -> {False, False, True, False, True, {False}, False}}], 
        ")"}], #14, "\[ScriptCapitalS]", MultilineFunction -> None]& ),
    InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
       RowBox[{"{", 
         RowBox[{"{", 
           RowBox[{"{", 
             TemplateSlotSequence[{3, 4}, ","], "}"}], ",", 
           RowBox[{"{", 
             TemplateSlotSequence[{8, 9}, ","], "}"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"{", 
             TemplateSlotSequence[{5, 5}, ","], "}"}], ",", 
           RowBox[{"{", 
             TemplateSlotSequence[{10, 10}, ","], "}"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"{", 
             TemplateSlotSequence[{11, 12}, ","], "}"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"{", 
             TemplateSlotSequence[{13, 13}, ","], "}"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"{", 
             TemplateSlotSequence[{1, 2}, ","], "}"}], ",", 
           RowBox[{"{", 
             TemplateSlotSequence[{6, 7}, ","], "}"}], "}"}], "}"}], ",", 
       "SamplingPeriod", "->", 
       RowBox[{#14}], ",", "SystemsModelLabels", "->", "None", "]"}]& )], ",",
    " ", 
   RowBox[{"DescriptorStateSpace", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356145267`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[1]:=",
 CellID->23816840,ExpressionUUID->"a08603ae-5adb-4eec-9a78-bec0f27eb47c"],

Cell[BoxData[
 TemplateBox[{
   FractionBox[
    SubscriptBox["a", "1"], 
    SubscriptBox["e", "1"]], "0", 
   FractionBox[
    SubscriptBox["b", "1"], 
    SubscriptBox["e", "1"]], "0", 
   FractionBox[
    SubscriptBox["a", "2"], 
    SubscriptBox["e", "2"]], 
   FractionBox[
    SubscriptBox["b", "2"], 
    SubscriptBox["e", "2"]], 
   SubscriptBox["c", "1"], 
   SubscriptBox["c", "2"], "d", 
   InterpretationBox["\[InvisibleSpace]", None], {
   StateSpaceModel, {
    False, False, {
     False, False}}, {$CellContext`stname1, $CellContext`stname2}, {{
     Control`CommonDump`$DUMMY$}, {Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$}}, Identity, 
    Automatic, 1, 1, 2, 1, {}, {False, False}, False, Automatic, None, 
    Automatic}, {}},
  "StateSpaceModelFull",
  BaseStyle->{NumberMarks -> False},
  DisplayFunction->(TagBox[
    SubsuperscriptBox[
     RowBox[{"(", 
       GridBox[{{#, #2, #3}, {#4, #5, #6}, {#7, #8, #9}}, 
        AllowedDimensions -> {3, 3}, AutoDelete -> False, 
        AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
        BaseStyle -> {Deployed -> False}, GridBoxItemStyle -> {}, 
        GridBoxDividers -> {"Rows" -> {False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}, "Columns" -> {False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}}, 
        GridBoxBackground -> {"Rows" -> {{
             GrayLevel[1], 
             RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #10, 
     ButtonBox[
      GraphicsBox[{
        RGBColor[0.8, 0.85, 0.85], 
        EdgeForm[
         RGBColor[0.6, 0.7, 0.7]], 
        RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
        InsetBox[
         StyleBox[
         "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
          GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
          FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
      ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
        ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
      None], MultilineFunction -> None], 
    EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
          FrontEnd`Value[
           FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
      True}]]& ),
  InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{1, 2}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{4, 5}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{3, 3}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{6, 6}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{7, 8}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{9, 9}, ","], "}"}], "}"}], "}"}], ",", 
     "SamplingPeriod", "->", 
     RowBox[{#10}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
  Tooltip->StateSpaceModel]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356145267`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[1]=",
 CellID->1295603320,ExpressionUUID->"9fb587fd-36c9-4c59-a203-ff829a149351"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      Part[
       Dynamic[
        CurrentValue[
         EvaluationNotebook[], {
         TaggingRules, "Openers", "ExampleSubsection", "8"}, Closed]], 1], 
      Alternatives[Open, True]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{14., {0.45000000000000107`, 13.549999999999999`}}]],
  ExpressionUUID->"2bef651c-b6ce-4a62-b1af-5ecd51fe0f93"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"4878166b-d843-4075-ba5b-0933e668cb89"],
 "Time-Delay Systems",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(5)", "ExampleCount",ExpressionUUID->
  "c797ed44-8308-4070-932d-269eb95f57b0"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356145267`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->512438765,ExpressionUUID->"6fad13f1-f69a-435b-bed6-ed67b2f5b7e1"],

Cell["An output-delay system:", "ExampleText",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356145267`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->331053409,ExpressionUUID->"b8247dce-f0e2-493f-8dd8-6e64dfa014d2"],

Cell[BoxData[
 RowBox[{"StateSpaceModel", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"{", "a", "}"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"{", "b", "}"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"c", " ", 
       RowBox[{"SystemsModelDelay", "[", "3", "]"}]}], "}"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"{", "d", "}"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"{", "e", "}"}], "}"}]}], "}"}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356145267`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[1]:=",
 CellID->26452440,ExpressionUUID->"8da37b50-2d15-4a0e-bc5f-e4363757bd64"],

Cell[BoxData[
 TemplateBox[{"e", "a", "b", 
   RowBox[{"c", " ", 
     TemplateBox[{"3"}, "SystemsModelDelay"]}], "d", 
   InterpretationBox["\[InvisibleSpace]", None], {
   StateSpaceModel, {
    False, False, {False, False}}, {$CellContext`stname1}, {{
     Control`CommonDump`$DUMMY$}, {Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$}}, Identity, Automatic, 1, 1, 1, 1, {}, {
    False, False}, True, Automatic, None, Automatic}, {}},
  "StateSpaceModelFull",
  BaseStyle->{NumberMarks -> False},
  DisplayFunction->(TagBox[
    SubsuperscriptBox[
     RowBox[{"(", 
       GridBox[{{#, #2, #3}, {"", #4, #5}}, AllowedDimensions -> {3, 2}, 
        AutoDelete -> False, AllowScriptLevelChange -> False, 
        ColumnAlignments -> {Center}, BaseStyle -> {Deployed -> False}, 
        GridBoxItemStyle -> {}, GridBoxDividers -> {"Rows" -> {False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}, "Columns" -> {False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}}, 
        GridBoxBackground -> {"Rows" -> {{
             GrayLevel[1], 
             RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #6, 
     ButtonBox[
      GraphicsBox[{
        RGBColor[0.8, 0.85, 0.85], 
        EdgeForm[
         RGBColor[0.6, 0.7, 0.7]], 
        RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
        InsetBox[
         StyleBox[
         "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
          GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
          FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
      ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
        ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
      None], MultilineFunction -> None], 
    EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
          FrontEnd`Value[
           FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
      True}]]& ),
  InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{2, 2}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{3, 3}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{4, 4}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{5, 5}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{1, 1}, ","], "}"}], "}"}], "}"}], ",", 
     "SamplingPeriod", "->", 
     RowBox[{#6}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
  Tooltip->StateSpaceModel]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356155243`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[1]=",
 CellID->50987315,ExpressionUUID->"22efda3b-459b-4fbf-82e1-94cc87552b08"],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "d7d43da1-1847-4ac0-80d5-f374f9c53295"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356155243`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->456509550,ExpressionUUID->"ba7726f8-3a3b-4130-9470-ff5271253687"],

Cell["A system with two input delays:", "ExampleText",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356155243`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->265969797,ExpressionUUID->"8e471244-159b-4d90-a8ee-d155c882002e"],

Cell[BoxData[
 RowBox[{"StateSpaceModel", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "1"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", " ", 
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{"1", "/", "2"}], ")"}]}]}], "}"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"SystemsModelDelay", "[", "1", "]"}], "/", "2"}], "}"}], ",",
        " ", 
       RowBox[{"{", 
        RowBox[{"2", "*", 
         RowBox[{"SystemsModelDelay", "[", "2", "]"}]}], "}"}]}], "}"}], ",", 
     " ", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"1", ",", " ", "0"}], "}"}], "}"}], ",", " ", "\n", "   ", 
     RowBox[{"{", 
      RowBox[{"{", "0", "}"}], "}"}]}], "}"}], ",", " ", 
   RowBox[{"SamplingPeriod", " ", "->", " ", "None"}], ",", " ", 
   RowBox[{"SystemsModelLabels", " ", "->", " ", "None"}]}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356155243`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[1]:=",
 CellID->146475568,ExpressionUUID->"660fbcce-c922-4228-925e-ef02fb1273c8"],

Cell[BoxData[
 TemplateBox[{"0", "1", 
   FractionBox[
    TemplateBox[{"1"}, "SystemsModelDelay"], "2"], 
   RowBox[{"-", "1"}], 
   RowBox[{"-", 
     FractionBox["1", "2"]}], 
   RowBox[{"2", " ", 
     TemplateBox[{"2"}, "SystemsModelDelay"]}], "1", "0", "0", 
   InterpretationBox["\[InvisibleSpace]", None], {
   StateSpaceModel, {
    False, False, {
     False, False}}, {$CellContext`stname1, $CellContext`stname2}, {{
     Control`CommonDump`$DUMMY$}, {Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$}}, Identity, 
    Automatic, 1, 1, 2, 1, {}, {False, False}, False, Automatic, None, 
    Automatic}, {}},
  "StateSpaceModelFull",
  BaseStyle->{NumberMarks -> False},
  DisplayFunction->(TagBox[
    SubsuperscriptBox[
     RowBox[{"(", 
       GridBox[{{#, #2, #3}, {#4, #5, #6}, {#7, #8, #9}}, 
        AllowedDimensions -> {3, 3}, AutoDelete -> False, 
        AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
        BaseStyle -> {Deployed -> False}, GridBoxItemStyle -> {}, 
        GridBoxDividers -> {"Rows" -> {False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}, "Columns" -> {False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}}, 
        GridBoxBackground -> {"Rows" -> {{
             GrayLevel[1], 
             RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #10, 
     ButtonBox[
      GraphicsBox[{
        RGBColor[0.8, 0.85, 0.85], 
        EdgeForm[
         RGBColor[0.6, 0.7, 0.7]], 
        RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
        InsetBox[
         StyleBox[
         "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
          GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
          FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
      ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
        ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
      None], MultilineFunction -> None], 
    EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
          FrontEnd`Value[
           FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
      True}]]& ),
  InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{1, 2}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{4, 5}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{3, 3}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{6, 6}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{7, 8}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{9, 9}, ","], "}"}], "}"}], "}"}], ",", 
     "SamplingPeriod", "->", 
     RowBox[{#10}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
  Tooltip->StateSpaceModel]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356155243`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[1]=",
 CellID->1430185694,ExpressionUUID->"616ddda2-e447-408d-b7af-c259142ac181"],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "8c3fd900-c288-4eab-a3d3-5be7250bb16e"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356165214`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->238973469,ExpressionUUID->"d8a8e7f5-e144-405a-bf21-eec226fe3d43"],

Cell["A discrete-time system with a delay in the state matrix:", "ExampleText",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356165214`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->602932673,ExpressionUUID->"cc9154d3-3f99-4963-a9d0-6c9d52e31fda"],

Cell[BoxData[
 RowBox[{"StateSpaceModel", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       SubscriptBox["a\[SystemsModelDelay]", "\[Delta]"], "}"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", "b", "}"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", "c", "}"}], "}"}]}], "}"}], ",", 
   RowBox[{"SamplingPeriod", "\[Rule]", "T"}]}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356165214`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[1]:=",
 CellID->127658992,ExpressionUUID->"9f574953-75c4-407b-adad-48208a988f86"],

Cell[BoxData[
 TemplateBox[{
   SubscriptBox["a\[SystemsModelDelay]", "\[Delta]"], "b", "c", "0", "T", {
   StateSpaceModel, {
    False, False, {False, False}}, {$CellContext`stname1}, {{
     Control`CommonDump`$DUMMY$}, {Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$}}, Identity, Automatic, 1, 1, 1, 1, {}, {
    False, False}, False, Automatic, None, Automatic}, {}},
  "StateSpaceModelFull",
  BaseStyle->{NumberMarks -> False},
  DisplayFunction->(TagBox[
    SubsuperscriptBox[
     RowBox[{"(", 
       GridBox[{{#, #2}, {#3, #4}}, AllowedDimensions -> {2, 2}, AutoDelete -> 
        False, AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
        BaseStyle -> {Deployed -> False}, GridBoxItemStyle -> {}, 
        GridBoxDividers -> {"Rows" -> {False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}, "Columns" -> {False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}}, 
        GridBoxBackground -> {"Rows" -> {{
             GrayLevel[1], 
             RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #5, 
     ButtonBox[
      GraphicsBox[{
        RGBColor[0.8, 0.85, 0.85], 
        EdgeForm[
         RGBColor[0.6, 0.7, 0.7]], 
        RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
        InsetBox[
         StyleBox[
         "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
          GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
          FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
      ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
        ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
      None], MultilineFunction -> None], 
    EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
          FrontEnd`Value[
           FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
      True}]]& ),
  InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{1, 1}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{2, 2}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{3, 3}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{4, 4}, ","], "}"}], "}"}], "}"}], ",", 
     "SamplingPeriod", "->", 
     RowBox[{#5}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
  Tooltip->StateSpaceModel]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356165214`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[1]=",
 CellID->1766861892,ExpressionUUID->"de59a27c-a8b6-4e4d-8263-144001a3b1cf"],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "6b79bf51-438b-45b2-babc-e17551e11dbe"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356165214`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->36463491,ExpressionUUID->"28f2c53a-e727-4f7a-bd14-9080d86bb0ee"],

Cell["\<\
Create a time delay system directly from delay-differential equations:\
\>", "ExampleText",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356165214`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->260209879,ExpressionUUID->"795cc60a-1714-4975-87da-72fc59ac8e12"],

Cell[BoxData[
 RowBox[{"StateSpaceModel", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"x", "'"}], "[", "t", "]"}], "\[Equal]", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"x", "[", 
        RowBox[{"t", "-", "3"}], "]"}]}], "+", 
      RowBox[{"u", "[", "t", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "[", "t", "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"u", "[", "t", "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "[", "t", "]"}], "}"}], ",", "t"}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356165214`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[1]:=",
 CellID->581062211,ExpressionUUID->"c30e3d77-4461-4090-94b0-fcc5648d401a"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"-", 
     TemplateBox[{"3"}, "SystemsModelDelay"]}], "1", "1", "0", 
   InterpretationBox["\[InvisibleSpace]", None], {
   StateSpaceModel, {
    False, False, {False, False}}, {$CellContext`stname1}, {{
     Control`CommonDump`$DUMMY$}, {Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$}}, Identity, Automatic, 1, 1, 1, 1, {}, {
    False, False}, False, Automatic, None, {",", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{
           RowBox[{"x", "[", "t", "]"}], ",", "0"}], "}"}], "}"}], ",", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{
           RowBox[{"u", "[", "t", "]"}], ",", "0"}], "}"}], "}"}], ",", 
     "Automatic", ",", "t"}}, {}},
  "StateSpaceModelFull",
  BaseStyle->{NumberMarks -> False},
  DisplayFunction->(TagBox[
    SubsuperscriptBox[
     RowBox[{"(", 
       GridBox[{{#, #2}, {#3, #4}}, AllowedDimensions -> {2, 2}, AutoDelete -> 
        False, AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
        BaseStyle -> {Deployed -> False}, GridBoxItemStyle -> {}, 
        GridBoxDividers -> {"Rows" -> {False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}, "Columns" -> {False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}}, 
        GridBoxBackground -> {"Rows" -> {{
             GrayLevel[1], 
             RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #5, 
     ButtonBox[
      GraphicsBox[{
        RGBColor[0.8, 0.85, 0.85], 
        EdgeForm[
         RGBColor[0.6, 0.7, 0.7]], 
        RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
        InsetBox[
         StyleBox[
         "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
          GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
          FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
      ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
        ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
      None], MultilineFunction -> None], 
    EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
          FrontEnd`Value[
           FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
      True}]]& ),
  InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{1, 1}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{2, 2}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{3, 3}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{4, 4}, ","], "}"}], "}"}], "}"}], ",", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{
           RowBox[{"x", "[", "t", "]"}], ",", "0"}], "}"}], "}"}], ",", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{
           RowBox[{"u", "[", "t", "]"}], ",", "0"}], "}"}], "}"}], ",", 
     "Automatic", ",", "t", ",", "SamplingPeriod", "->", 
     RowBox[{#5}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
  Tooltip->StateSpaceModel]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356175184`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[1]=",
 CellID->489905173,ExpressionUUID->"3002165e-7782-4bc5-a2c6-929d16e7e86b"],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "71e8a611-6817-4eec-b92a-8446aeddc567"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356175184`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->511440417,ExpressionUUID->"13622d5e-9fd9-4935-9607-d46f762374a3"],

Cell["\<\
Delays in the differential terms create neutral time-delay systems:\
\>", "ExampleText",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356175184`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->8676627,ExpressionUUID->"d42ca54a-fbfd-4ae6-8b6b-f0af754e20bb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"eqs", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["x", "1"], "'"}], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{
        RowBox[{"-", ".5"}], 
        RowBox[{
         SubscriptBox["x", "1"], "[", "t", "]"}]}], "+", 
       RowBox[{
        SubscriptBox["x", "2"], "[", "t", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["x", "2"], "'"}], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{
        RowBox[{"-", ".2"}], 
        RowBox[{
         RowBox[{
          SubscriptBox["x", "1"], "'"}], "[", 
         RowBox[{"t", "-", "2"}], "]"}]}], "-", 
       RowBox[{"3", 
        RowBox[{
         SubscriptBox["x", "2"], "[", "t", "]"}]}], "+", 
       RowBox[{"u", "[", "t", "]"}]}]}]}], "}"}]}], ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356175184`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[1]:=",
 CellID->200734343,ExpressionUUID->"5f1f25c2-947f-42fc-811b-059445248802"],

Cell[BoxData[
 RowBox[{"StateSpaceModel", "[", 
  RowBox[{"eqs", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["x", "1"], "[", "t", "]"}], ",", 
     RowBox[{
      SubscriptBox["x", "2"], "[", "t", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"u", "[", "t", "]"}], "}"}], ",", 
   RowBox[{
    SubscriptBox["x", "1"], "[", "t", "]"}], ",", "t"}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356175184`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[2]:=",
 CellID->957058090,ExpressionUUID->"a56006c1-c344-4135-af59-bd1577339e9b"],

Cell[BoxData[
 TemplateBox[{"1.`", "0.`", 
   RowBox[{"-", "0.5`"}], "1.`", "0.`", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
     RowBox[{"0.2`", " ", 
       TemplateBox[{"2"}, "SystemsModelDelay"]}]}], "1.`", "0.`", 
   RowBox[{"-", "3.`"}], "1.`", "1", "0", "0", 
   InterpretationBox["\[InvisibleSpace]", None], {
   StateSpaceModel, {
    False, False, {
     False, False}}, {$CellContext`stname1, $CellContext`stname2}, {{
     Control`CommonDump`$DUMMY$}, {Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$}}, Identity, 
    Automatic, 1, 1, 2, 1, {}, {False, False}, True, Automatic, None, {",", 
     RowBox[{"{", 
       RowBox[{
         SubscriptBox["\[FormalX]", "1"], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               SubscriptBox["x", "1"], "[", "t", "]"}], ",", "0"}], "}"}]}], 
       "}"}], ",", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{
           RowBox[{"u", "[", "t", "]"}], ",", "0"}], "}"}], "}"}], ",", 
     "Automatic", ",", "t"}}, {}},
  "StateSpaceModelFull",
  BaseStyle->{NumberMarks -> False},
  DisplayFunction->(TagBox[
    SubsuperscriptBox[
     RowBox[{"(", 
       GridBox[{{#, #2, #3, #4, #5}, {#6, #7, #8, #9, #10}, {
         "", "", #11, #12, #13}}, AllowedDimensions -> {5, 3}, AutoDelete -> 
        False, AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
        BaseStyle -> {Deployed -> False}, GridBoxItemStyle -> {}, 
        GridBoxDividers -> {"Rows" -> {False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}, "Columns" -> {False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}}, 
        GridBoxBackground -> {"Rows" -> {{
             GrayLevel[1], 
             RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #14, 
     ButtonBox[
      GraphicsBox[{
        RGBColor[0.8, 0.85, 0.85], 
        EdgeForm[
         RGBColor[0.6, 0.7, 0.7]], 
        RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
        InsetBox[
         StyleBox[
         "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
          GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
          FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
      ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
        ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
      None], MultilineFunction -> None], 
    EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
          FrontEnd`Value[
           FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
      True}]]& ),
  InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{3, 4}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{8, 9}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{5, 5}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{10, 10}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{11, 12}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{13, 13}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{1, 2}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{6, 7}, ","], "}"}], "}"}], "}"}], ",", 
     RowBox[{"{", 
       RowBox[{
         SubscriptBox["\[FormalX]", "1"], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               SubscriptBox["x", "1"], "[", "t", "]"}], ",", "0"}], "}"}]}], 
       "}"}], ",", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{
           RowBox[{"u", "[", "t", "]"}], ",", "0"}], "}"}], "}"}], ",", 
     "Automatic", ",", "t", ",", "SamplingPeriod", "->", 
     RowBox[{#14}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
  Tooltip->StateSpaceModel]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356175184`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[2]=",
 CellID->486255250,ExpressionUUID->"8e0725c2-d7e2-4b00-84e4-5353faed3fbe"],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "baf6766c-c146-4867-8d95-b05df049418e"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235618516*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->1232338442,ExpressionUUID->"4a49bc83-6e68-49c0-8591-33f4015a7bb9"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      Part[
       Dynamic[
        CurrentValue[
         EvaluationNotebook[], {
         TaggingRules, "Openers", "ExampleSection", "2"}, Closed]], 1], 
      Alternatives[Open, True]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{14., {0.45000000000000107`, 13.549999999999999`}}]],
  ExpressionUUID->"68b6890e-8e70-4e49-a7cc-ab0482fc1dac"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"54ca3a91-fa81-4e33-931d-3feb70f027cc"],
 "Generalizations & Extensions",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(2)", "ExampleCount",ExpressionUUID->
  "c16b83b5-d0dd-4d13-9c9a-f583cb7a9cda"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235618516*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->1020263627,ExpressionUUID->"9c20e1b9-a846-408a-ac02-39e0d11d72f0"],

Cell["\<\
If the transmission matrix is not specified, the model is assumed to have \
zero feedthrough:\
\>", "ExampleText",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235618516*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->2058982188,ExpressionUUID->"6b3b96c8-9170-4ee4-b17f-870fdb7fbb34"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Normal", "[", 
   RowBox[{"StateSpaceModel", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["a", "1"], ",", 
          SubscriptBox["a", "2"]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["a", "3"], ",", 
          SubscriptBox["a", "4"]}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         SubscriptBox["b", "1"], "}"}], ",", 
        RowBox[{"{", 
         SubscriptBox["b", "2"], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         SubscriptBox["c", "1"], ",", 
         SubscriptBox["c", "2"]}], "}"}], "}"}]}], "}"}], "]"}], "]"}], "//", 
  "Last"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235618516*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[1]:=",
 CellID->762145958,ExpressionUUID->"454a544e-9e2f-4968-9318-52d564979b23"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", "0", "}"}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235618516*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[1]=",
 CellID->1876401093,ExpressionUUID->"2206835c-6f5d-47b9-ad66-7af03ac55c54"],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "4dc6ebf2-d1cb-42f8-a6c5-607ab7cccbda"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235618516*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->981001665,ExpressionUUID->"32438890-403f-4cb4-b1c3-d21cf4ebd655"],

Cell["\<\
If the outputs are not specified, they are assumed to be the states:\
\>", "ExampleText",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235619514*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->1463025636,ExpressionUUID->"6e38d705-f3b4-493c-b47a-fc9e606e4821"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Normal", "[", 
   RowBox[{"StateSpaceModel", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["a", "1"], ",", 
          SubscriptBox["a", "2"]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["a", "3"], ",", 
          SubscriptBox["a", "4"]}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         SubscriptBox["b", "1"], "}"}], ",", 
        RowBox[{"{", 
         SubscriptBox["b", "2"], "}"}]}], "}"}]}], "}"}], "]"}], "]"}], "[", 
  RowBox[{"[", 
   RowBox[{"3", ";;", "4"}], "]"}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235619514*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[1]:=",
 CellID->384106102,ExpressionUUID->"0e143b57-3f67-4bca-bbd3-67a9dd510238"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "0", "}"}], ",", 
     RowBox[{"{", "0", "}"}]}], "}"}]}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235619514*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[1]=",
 CellID->611232449,ExpressionUUID->"ba9ffd32-6ef9-4617-9cbf-b14186d01023"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      Part[
       Dynamic[
        CurrentValue[
         EvaluationNotebook[], {
         TaggingRules, "Openers", "ExampleSection", "3"}, Closed]], 1], 
      Alternatives[Open, True]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{14., {0.45000000000000107`, 13.549999999999999`}}]],
  ExpressionUUID->"c44dd075-9fe6-407a-bd45-343199255a77"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"4d4e1d48-5a14-4676-90fc-a952beff861b"],
 "Options",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(8)", "ExampleCount",ExpressionUUID->
  "1c391b7a-2084-4420-a5c5-b47dafaa4b32"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235619514*^9},
 FontFamily->"Times New Roman",
 FontSize->9,ExpressionUUID->"1d1321bf-b59e-404d-a1eb-d04b42e7894e"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      Part[
       Dynamic[
        CurrentValue[
         EvaluationNotebook[], {
         TaggingRules, "Openers", "ExampleSubsection", "9"}, Closed]], 1], 
      Alternatives[Open, True]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{14., {0.45000000000000107`, 13.549999999999999`}}]],
  ExpressionUUID->"a35c0656-e78e-40b7-bd92-36d06fc170cf"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"4d4aa8f2-85c0-4436-8175-094f14d08c65"],
 "SamplingPeriod",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(4)", "ExampleCount",ExpressionUUID->
  "442b1915-64ff-4aff-9559-d15652a80cb2"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235619514*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->514689934,ExpressionUUID->"5fb59861-35bc-4ffd-8584-88b7c01deed9"],

Cell["A continuous-time model:", "ExampleText",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235620511*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->2065624319,ExpressionUUID->"3b302388-5e22-4acf-ae26-78207e58b395"],

Cell[BoxData[
 RowBox[{"StateSpaceModel", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.01"}], ",", 
        RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "1", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"-", "1"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], "}"}]}], "}"}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235620511*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[1]:=",
 CellID->727292031,ExpressionUUID->"a06da1a0-5229-4309-86fa-8a9c25bd2ef7"],

Cell[BoxData[
 TemplateBox[{"0", "1", "1", 
   RowBox[{"-", "0.01`"}], 
   RowBox[{"-", "1"}], 
   RowBox[{"-", "1"}], "1", "0", "0", 
   InterpretationBox["\[InvisibleSpace]", None], {
   StateSpaceModel, {
    False, False, {
     False, False}}, {$CellContext`stname1, $CellContext`stname2}, {{
     Control`CommonDump`$DUMMY$}, {Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$}}, Identity, 
    Automatic, 1, 1, 2, 1, {}, {False, False}, False, Automatic, None, 
    Automatic}, {}},
  "StateSpaceModelFull",
  BaseStyle->{NumberMarks -> False},
  DisplayFunction->(TagBox[
    SubsuperscriptBox[
     RowBox[{"(", 
       GridBox[{{#, #2, #3}, {#4, #5, #6}, {#7, #8, #9}}, 
        AllowedDimensions -> {3, 3}, AutoDelete -> False, 
        AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
        BaseStyle -> {Deployed -> False}, GridBoxItemStyle -> {}, 
        GridBoxDividers -> {"Rows" -> {False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}, "Columns" -> {False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}}, 
        GridBoxBackground -> {"Rows" -> {{
             GrayLevel[1], 
             RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #10, 
     ButtonBox[
      GraphicsBox[{
        RGBColor[0.8, 0.85, 0.85], 
        EdgeForm[
         RGBColor[0.6, 0.7, 0.7]], 
        RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
        InsetBox[
         StyleBox[
         "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
          GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
          FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
      ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
        ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
      None], MultilineFunction -> None], 
    EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
          FrontEnd`Value[
           FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
      True}]]& ),
  InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{1, 2}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{4, 5}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{3, 3}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{6, 6}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{7, 8}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{9, 9}, ","], "}"}], "}"}], "}"}], ",", 
     "SamplingPeriod", "->", 
     RowBox[{#10}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
  Tooltip->StateSpaceModel]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235620511*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[1]=",
 CellID->1216166758,ExpressionUUID->"70e8c884-301c-4cac-8d2a-d815c130cefe"],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "74643886-dd42-4fc8-a863-6623e779d767"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235620511*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->2076264805,ExpressionUUID->"72656881-3910-49f7-b9ab-cc7c39c28b87"],

Cell["A discrete-time model with sampling period 2:", "ExampleText",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235620511*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->197334624,ExpressionUUID->"c2723837-fb27-4339-98b5-7d7a7a9b404e"],

Cell[BoxData[
 RowBox[{"StateSpaceModel", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"-", "1"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.1"}], ",", 
         RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "0", "}"}], ",", 
       RowBox[{"{", "1", "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}], "}"}]}], "}"}], ",", 
   RowBox[{"SamplingPeriod", "\[Rule]", "2"}]}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235620511*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[1]:=",
 CellID->888274600,ExpressionUUID->"8560912d-3631-46cc-a727-680aa345d9f0"],

Cell[BoxData[
 TemplateBox[{"1", 
   RowBox[{"-", "1"}], "0", 
   RowBox[{"-", "0.1`"}], 
   RowBox[{"-", "1"}], "1", "1", "1", "0", "2", {
   StateSpaceModel, {
    False, False, {
     False, False}}, {$CellContext`stname1, $CellContext`stname2}, {{
     Control`CommonDump`$DUMMY$}, {Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$}}, Identity, 
    Automatic, 1, 1, 2, 1, {}, {False, False}, False, Automatic, None, 
    Automatic}, {}},
  "StateSpaceModelFull",
  BaseStyle->{NumberMarks -> False},
  DisplayFunction->(TagBox[
    SubsuperscriptBox[
     RowBox[{"(", 
       GridBox[{{#, #2, #3}, {#4, #5, #6}, {#7, #8, #9}}, 
        AllowedDimensions -> {3, 3}, AutoDelete -> False, 
        AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
        BaseStyle -> {Deployed -> False}, GridBoxItemStyle -> {}, 
        GridBoxDividers -> {"Rows" -> {False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}, "Columns" -> {False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}}, 
        GridBoxBackground -> {"Rows" -> {{
             GrayLevel[1], 
             RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #10, 
     ButtonBox[
      GraphicsBox[{
        RGBColor[0.8, 0.85, 0.85], 
        EdgeForm[
         RGBColor[0.6, 0.7, 0.7]], 
        RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
        InsetBox[
         StyleBox[
         "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
          GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
          FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
      ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
        ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
      None], MultilineFunction -> None], 
    EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
          FrontEnd`Value[
           FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
      True}]]& ),
  InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{1, 2}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{4, 5}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{3, 3}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{6, 6}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{7, 8}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{9, 9}, ","], "}"}], "}"}], "}"}], ",", 
     "SamplingPeriod", "->", 
     RowBox[{#10}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
  Tooltip->StateSpaceModel]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356215086`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[1]=",
 CellID->774308147,ExpressionUUID->"7955efe5-a658-4354-8090-037aa69ceeb4"],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "6cd17d28-703a-4c53-ab9e-1da76ac30ef5"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356215086`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->1320797532,ExpressionUUID->"07a0f198-50fd-4f36-a1d6-4d12c9601770"],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["SamplingPeriod"]], "paclet:ref/SamplingPeriod"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "006f6a56-e4d3-42fc-bf8a-9fe1d1faa1ec"],
 " is ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["None"]], "paclet:ref/None"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "420490b1-29a3-4c6d-bcb8-bc14ffee848b"],
 " for continuous-time systems:"
}], "ExampleText",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356215086`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->710096095,ExpressionUUID->"dbbeab13-2b8b-4340-8bed-1318c3917e7a"],

Cell[BoxData[
 RowBox[{"StateSpaceModel", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.01"}], ",", 
         RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "1", "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"-", "1"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"1", ",", " ", "0"}], "}"}], "}"}]}], "}"}], ",", 
   RowBox[{"SamplingPeriod", "\[Rule]", "None"}]}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356215086`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[1]:=",
 CellID->1018442286,ExpressionUUID->"9191db61-7152-482c-a042-aef0df9b7fa1"],

Cell[BoxData[
 TemplateBox[{"0", "1", "1", 
   RowBox[{"-", "0.01`"}], 
   RowBox[{"-", "1"}], 
   RowBox[{"-", "1"}], "1", "0", "0", 
   InterpretationBox["\[InvisibleSpace]", None], {
   StateSpaceModel, {
    False, False, {
     False, False}}, {$CellContext`stname1, $CellContext`stname2}, {{
     Control`CommonDump`$DUMMY$}, {Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$}}, Identity, 
    Automatic, 1, 1, 2, 1, {}, {False, False}, False, Automatic, None, 
    Automatic}, {}},
  "StateSpaceModelFull",
  BaseStyle->{NumberMarks -> False},
  DisplayFunction->(TagBox[
    SubsuperscriptBox[
     RowBox[{"(", 
       GridBox[{{#, #2, #3}, {#4, #5, #6}, {#7, #8, #9}}, 
        AllowedDimensions -> {3, 3}, AutoDelete -> False, 
        AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
        BaseStyle -> {Deployed -> False}, GridBoxItemStyle -> {}, 
        GridBoxDividers -> {"Rows" -> {False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}, "Columns" -> {False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}}, 
        GridBoxBackground -> {"Rows" -> {{
             GrayLevel[1], 
             RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #10, 
     ButtonBox[
      GraphicsBox[{
        RGBColor[0.8, 0.85, 0.85], 
        EdgeForm[
         RGBColor[0.6, 0.7, 0.7]], 
        RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
        InsetBox[
         StyleBox[
         "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
          GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
          FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
      ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
        ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
      None], MultilineFunction -> None], 
    EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
          FrontEnd`Value[
           FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
      True}]]& ),
  InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{1, 2}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{4, 5}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{3, 3}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{6, 6}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{7, 8}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{9, 9}, ","], "}"}], "}"}], "}"}], ",", 
     "SamplingPeriod", "->", 
     RowBox[{#10}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
  Tooltip->StateSpaceModel]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356215086`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[1]=",
 CellID->2142358943,ExpressionUUID->"fae13cc8-d8cb-409b-9037-74387ddcdf3c"],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "84e571eb-bb92-4b6a-8659-d2747080a45d"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356215086`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->105661285,ExpressionUUID->"4e904f8e-f11b-4b91-9d2c-26b7609efd4e"],

Cell["A symbolic sampling period:", "ExampleText",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235622505*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->377859079,ExpressionUUID->"61d45922-ddc4-4068-ac1f-c99ac7ae2b45"],

Cell[BoxData[
 RowBox[{"ss", "=", 
  RowBox[{"StateSpaceModel", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "0.5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.5"}], ",", "0.5"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", "1", "}"}], ",", 
        RowBox[{"{", "0", "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}], "}"}]}], "}"}], ",", 
    RowBox[{"SamplingPeriod", "\[Rule]", "T"}]}], "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235622505*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[1]:=",
 CellID->2027724573,ExpressionUUID->"af628a6e-c8e9-4ebf-86f7-02fd1cd21c5b"],

Cell[BoxData[
 TemplateBox[{"1", "0.5`", "1", 
   RowBox[{"-", "0.5`"}], "0.5`", "0", "1", "0", "0", "T", {
   StateSpaceModel, {
    False, False, {
     False, False}}, {$CellContext`stname1, $CellContext`stname2}, {{
     Control`CommonDump`$DUMMY$}, {Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$}}, Identity, 
    Automatic, 1, 1, 2, 1, {}, {False, False}, False, Automatic, None, 
    Automatic}, {}},
  "StateSpaceModelFull",
  BaseStyle->{NumberMarks -> False},
  DisplayFunction->(TagBox[
    SubsuperscriptBox[
     RowBox[{"(", 
       GridBox[{{#, #2, #3}, {#4, #5, #6}, {#7, #8, #9}}, 
        AllowedDimensions -> {3, 3}, AutoDelete -> False, 
        AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
        BaseStyle -> {Deployed -> False}, GridBoxItemStyle -> {}, 
        GridBoxDividers -> {"Rows" -> {False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}, "Columns" -> {False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}}, 
        GridBoxBackground -> {"Rows" -> {{
             GrayLevel[1], 
             RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #10, 
     ButtonBox[
      GraphicsBox[{
        RGBColor[0.8, 0.85, 0.85], 
        EdgeForm[
         RGBColor[0.6, 0.7, 0.7]], 
        RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
        InsetBox[
         StyleBox[
         "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
          GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
          FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
      ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
        ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
      None], MultilineFunction -> None], 
    EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
          FrontEnd`Value[
           FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
      True}]]& ),
  InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{1, 2}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{4, 5}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{3, 3}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{6, 6}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{7, 8}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{9, 9}, ","], "}"}], "}"}], "}"}], ",", 
     "SamplingPeriod", "->", 
     RowBox[{#10}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
  Tooltip->StateSpaceModel]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235622505*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[1]=",
 CellID->1655605875,ExpressionUUID->"e1969f25-3d43-40be-925d-be8507334a79"],

Cell["Specify a numerical value:", "ExampleText",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235622505*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->293298898,ExpressionUUID->"6a09fe56-a0e0-4c8b-afbf-88e8722282a5"],

Cell[BoxData[
 RowBox[{"ss", "/.", 
  RowBox[{"T", "\[Rule]", "0.2"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235622505*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[2]:=",
 CellID->1291828322,ExpressionUUID->"6a77f095-1992-4bb9-bac1-6c11323e3e3d"],

Cell[BoxData[
 TemplateBox[{"1", "0.5`", "1", 
   RowBox[{"-", "0.5`"}], "0.5`", "0", "1", "0", "0", "0.2`", {
   StateSpaceModel, {
    False, False, {
     False, False}}, {$CellContext`stname1, $CellContext`stname2}, {{
     Control`CommonDump`$DUMMY$}, {Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$}}, Identity, 
    Automatic, 1, 1, 2, 1, {}, {False, False}, False, Automatic, None, 
    Automatic}, {}},
  "StateSpaceModelFull",
  BaseStyle->{NumberMarks -> False},
  DisplayFunction->(TagBox[
    SubsuperscriptBox[
     RowBox[{"(", 
       GridBox[{{#, #2, #3}, {#4, #5, #6}, {#7, #8, #9}}, 
        AllowedDimensions -> {3, 3}, AutoDelete -> False, 
        AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
        BaseStyle -> {Deployed -> False}, GridBoxItemStyle -> {}, 
        GridBoxDividers -> {"Rows" -> {False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}, "Columns" -> {False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}}, 
        GridBoxBackground -> {"Rows" -> {{
             GrayLevel[1], 
             RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #10, 
     ButtonBox[
      GraphicsBox[{
        RGBColor[0.8, 0.85, 0.85], 
        EdgeForm[
         RGBColor[0.6, 0.7, 0.7]], 
        RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
        InsetBox[
         StyleBox[
         "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
          GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
          FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
      ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
        ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
      None], MultilineFunction -> None], 
    EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
          FrontEnd`Value[
           FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
      True}]]& ),
  InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{1, 2}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{4, 5}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{3, 3}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{6, 6}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{7, 8}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{9, 9}, ","], "}"}], "}"}], "}"}], ",", 
     "SamplingPeriod", "->", 
     RowBox[{#10}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
  Tooltip->StateSpaceModel]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235622505*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[2]=",
 CellID->793450985,ExpressionUUID->"ee19928f-205b-420d-ba73-133d1e43de14"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      Part[
       Dynamic[
        CurrentValue[
         EvaluationNotebook[], {
         TaggingRules, "Openers", "ExampleSubsection", "10"}, Closed]], 1], 
      Alternatives[Open, True]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{14., {0.45000000000000107`, 13.549999999999999`}}]],
  ExpressionUUID->"73cf3cd7-bd85-4898-9148-56bea4019543"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"480baf39-db21-41b4-8cfd-5d3da176fbcf"],
 "StateSpaceRealization",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(3)", "ExampleCount",ExpressionUUID->
  "8ef1f410-c9a0-40bd-ad48-970b23c27b56"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356235027`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->568658042,ExpressionUUID->"41464721-fc60-4031-969c-64e7a15e941f"],

Cell["The controllable companion form:", "ExampleText",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356235027`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->2110182641,ExpressionUUID->"66451ebb-a18b-4621-9312-8af70dbf0d08"],

Cell[BoxData[
 RowBox[{
  RowBox[{"tf", "=", 
   InterpretationBox[
    TemplateBox[{
      FractionBox["1", 
       RowBox[{"4", "+", 
         RowBox[{"3", " ", "s"}], "+", 
         RowBox[{"2", " ", 
           SuperscriptBox["s", "2"]}], "+", 
         SuperscriptBox["s", "3"]}]], 
      InterpretationBox["\[InvisibleSpace]", None], {
      TransferFunctionModel, {
       False, False, {False, False}}, $Failed, {{
        Control`CommonDump`$DUMMY$}, {Control`CommonDump`$DUMMY$}}, 
       InterpretationBox[#, 
        TransferFunctionModel[{{{1}}, 4 + 3 $CellContext`s + 
          2 $CellContext`s^2 + $CellContext`s^3}, $CellContext`s], AutoDelete -> 
        True, Editable -> True, BaseStyle -> 
        "TransferFunctionModelMinimal"]& , $CellContext`s, 1, 1, 
       Control`CountStates[
        TransferFunctionModel[{{{1}}, 4 + 3 $CellContext`s + 
          2 $CellContext`s^2 + $CellContext`s^3}, $CellContext`s]], 1, {}, {
       False, False}, False, Automatic, None, Automatic}, {}},
     "TransferFunctionModelFull",
     BaseStyle->{NumberMarks -> False},
     DisplayFunction->(TagBox[
       SubsuperscriptBox[
        RowBox[{"(", 
          
          GridBox[{{#}}, AllowedDimensions -> {1, 1}, AutoDelete -> False, 
           AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
           BaseStyle -> {Deployed -> False}, GridBoxItemStyle -> {}, 
           GridBoxDividers -> {
            "Rows" -> {False, {False}, False}, 
             "Columns" -> {False, {False}, False}}, 
           GridBoxBackground -> {"Rows" -> {{
                GrayLevel[1], 
                RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #2, 
        ButtonBox[
         GraphicsBox[{
           RGBColor[0.8, 0.85, 0.85], 
           EdgeForm[
            RGBColor[0.6, 0.7, 0.7]], 
           RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
           InsetBox[
            StyleBox[
            "\[ScriptCapitalT]", Control`NonlinearModelsDump`LineColor -> 
             GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
             GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
             GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
             FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
         ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
           ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
         None], MultilineFunction -> None], 
       EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
             FrontEnd`Value[
              FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
         True}]]& ),
     InterpretationFunction->(
      RowBox[{"TransferFunctionModel", "[", "Unevaluated", "[", 
        RowBox[{"{", 
          RowBox[{"{", 
            TemplateSlotSequence[{1, 1}, ","], "}"}], "}"}], "]", ",", "s", 
        ",", "SamplingPeriod", "->", 
        RowBox[{#2}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
     Tooltip->TransferFunctionModel],
    TransferFunctionModel[{{{1}}, 4 + 3 $CellContext`s + 
      2 $CellContext`s^2 + $CellContext`s^3}, $CellContext`s],
    AutoDelete->True,
    BaseStyle->"TransferFunctionModelMinimal",
    Editable->True]}], ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356245003`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[3]:=",
 CellID->376335830,ExpressionUUID->"780d566f-15b2-4e01-bdd3-9fae0e3b84eb"],

Cell[BoxData[
 RowBox[{"ssc", "=", 
  RowBox[{"StateSpaceModel", "[", "tf", "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356245003`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[4]:=",
 CellID->1133482744,ExpressionUUID->"0166161b-a4c7-40d3-ad47-25e6f6f04823"],

Cell[BoxData[
 TemplateBox[{"0", "1", "0", "0", "0", "0", "1", "0", 
   RowBox[{"-", "4"}], 
   RowBox[{"-", "3"}], 
   RowBox[{"-", "2"}], "1", "1", "0", "0", "0", 
   InterpretationBox["\[InvisibleSpace]", None], {
   StateSpaceModel, {
    False, False, {
     False, False}}, {$CellContext`stname1, $CellContext`stname2, \
$CellContext`stname3}, {{Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$, 
      Control`CommonDump`$DUMMY$}}, Identity, Automatic, 1, 1, 3, 1, {}, {
    False, False}, False, Automatic, None, Automatic}, {}},
  "StateSpaceModelFull",
  BaseStyle->{NumberMarks -> False},
  DisplayFunction->(TagBox[
    SubsuperscriptBox[
     RowBox[{"(", 
       GridBox[{{#, #2, #3, #4}, {#5, #6, #7, #8}, {#9, #10, #11, #12}, {#13, \
#14, #15, #16}}, AllowedDimensions -> {4, 4}, AutoDelete -> False, 
        AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
        BaseStyle -> {Deployed -> False}, GridBoxItemStyle -> {}, 
        GridBoxDividers -> {"Rows" -> {False, False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}, 
          "Columns" -> {False, False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}}, 
        GridBoxBackground -> {"Rows" -> {{
             GrayLevel[1], 
             RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #17, 
     ButtonBox[
      GraphicsBox[{
        RGBColor[0.8, 0.85, 0.85], 
        EdgeForm[
         RGBColor[0.6, 0.7, 0.7]], 
        RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
        InsetBox[
         StyleBox[
         "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
          GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
          FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
      ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
        ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
      None], MultilineFunction -> None], 
    EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
          FrontEnd`Value[
           FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
      True}]]& ),
  InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{1, 3}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{5, 7}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{9, 11}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{4, 4}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{8, 8}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{12, 12}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{13, 15}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{16, 16}, ","], "}"}], "}"}], "}"}], ",", 
     "SamplingPeriod", "->", 
     RowBox[{#17}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
  Tooltip->StateSpaceModel]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356245003`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[4]=",
 CellID->1279701943,ExpressionUUID->"17ebb053-1e1b-473e-a350-1e5a4c114bcc"],

Cell["The observable companion form:", "ExampleText",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356245003`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->147217082,ExpressionUUID->"d81cd1cb-0818-49bd-ae10-248fd5ce2557"],

Cell[BoxData[
 RowBox[{"sso", "=", 
  RowBox[{"StateSpaceModel", "[", 
   RowBox[{"tf", ",", 
    RowBox[{
    "StateSpaceRealization", "\[Rule]", "\"\<ObservableCompanion\>\""}]}], 
   "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356245003`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[6]:=",
 CellID->1454324516,ExpressionUUID->"b2e708a8-5869-44ee-ab6b-aad490e47b63"],

Cell[BoxData[
 TemplateBox[{"0", "0", 
   RowBox[{"-", "4"}], "1", "1", "0", 
   RowBox[{"-", "3"}], "0", "0", "1", 
   RowBox[{"-", "2"}], "0", "0", "0", "1", "0", 
   InterpretationBox["\[InvisibleSpace]", None], {
   StateSpaceModel, {
    False, False, {
     False, False}}, {$CellContext`stname1, $CellContext`stname2, \
$CellContext`stname3}, {{Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$, 
      Control`CommonDump`$DUMMY$}}, Identity, Automatic, 1, 1, 3, 1, {}, {
    False, False}, False, Automatic, None, Automatic}, {}},
  "StateSpaceModelFull",
  BaseStyle->{NumberMarks -> False},
  DisplayFunction->(TagBox[
    SubsuperscriptBox[
     RowBox[{"(", 
       GridBox[{{#, #2, #3, #4}, {#5, #6, #7, #8}, {#9, #10, #11, #12}, {#13, \
#14, #15, #16}}, AllowedDimensions -> {4, 4}, AutoDelete -> False, 
        AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
        BaseStyle -> {Deployed -> False}, GridBoxItemStyle -> {}, 
        GridBoxDividers -> {"Rows" -> {False, False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}, 
          "Columns" -> {False, False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}}, 
        GridBoxBackground -> {"Rows" -> {{
             GrayLevel[1], 
             RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #17, 
     ButtonBox[
      GraphicsBox[{
        RGBColor[0.8, 0.85, 0.85], 
        EdgeForm[
         RGBColor[0.6, 0.7, 0.7]], 
        RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
        InsetBox[
         StyleBox[
         "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
          GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
          FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
      ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
        ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
      None], MultilineFunction -> None], 
    EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
          FrontEnd`Value[
           FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
      True}]]& ),
  InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{1, 3}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{5, 7}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{9, 11}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{4, 4}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{8, 8}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{12, 12}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{13, 15}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{16, 16}, ","], "}"}], "}"}], "}"}], ",", 
     "SamplingPeriod", "->", 
     RowBox[{#17}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
  Tooltip->StateSpaceModel]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235625534*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[6]=",
 CellID->139011346,ExpressionUUID->"93c920b6-4b09-4ff4-899a-c75b430874cc"],

Cell["The Jordan form:", "ExampleText",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356264935`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->1517279418,ExpressionUUID->"2a712cba-363f-49e7-9006-07c07059da6e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Last", "[", 
    RowBox[{"JordanModelDecomposition", "[", "ssc", "]"}], "]"}], "//", "N"}],
   "//", "Chop"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356264935`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[8]:=",
 CellID->1694353848,ExpressionUUID->"cdb4d19e-da71-483f-882a-6de4eeedcdcb"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{
     RowBox[{"-", "0.17468540428030588`"}], "-", 
     RowBox[{"1.5468688872313963`", " ", "\[ImaginaryI]"}]}], "0", "0", 
   RowBox[{"0.2019853943575349`", "\[VeryThinSpace]", "-", 
     RowBox[{"0.305652596727456`", " ", "\[ImaginaryI]"}]}], "0", 
   RowBox[{"-", "1.6506291914393882`"}], "0", "0.5960292112849302`", "0", "0", 
   RowBox[{
     RowBox[{"-", "0.17468540428030588`"}], "+", 
     RowBox[{"1.5468688872313963`", " ", "\[ImaginaryI]"}]}], 
   RowBox[{"0.20198539435753493`", "\[VeryThinSpace]", "+", 
     RowBox[{"0.3056525967274561`", " ", "\[ImaginaryI]"}]}], 
   RowBox[{
     RowBox[{"-", "0.402264743750524`"}], "-", 
     RowBox[{"0.09202782955343328`", " ", "\[ImaginaryI]"}]}], 
   "0.3670294875010481`", 
   RowBox[{
     RowBox[{"-", "0.402264743750524`"}], "+", 
     RowBox[{"0.09202782955343328`", " ", "\[ImaginaryI]"}]}], "0", 
   InterpretationBox["\[InvisibleSpace]", None], {
   StateSpaceModel, {
    False, False, {
     False, False}}, {$CellContext`stname1, $CellContext`stname2, \
$CellContext`stname3}, {{Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$, 
      Control`CommonDump`$DUMMY$}}, Identity, Automatic, 1, 1, 3, 1, {}, {
    False, False}, False, Automatic, None, Automatic}, {}},
  "StateSpaceModelFull",
  BaseStyle->{NumberMarks -> False},
  DisplayFunction->(TagBox[
    SubsuperscriptBox[
     RowBox[{"(", 
       GridBox[{{#, #2, #3, #4}, {#5, #6, #7, #8}, {#9, #10, #11, #12}, {#13, \
#14, #15, #16}}, AllowedDimensions -> {4, 4}, AutoDelete -> False, 
        AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
        BaseStyle -> {Deployed -> False}, GridBoxItemStyle -> {}, 
        GridBoxDividers -> {"Rows" -> {False, False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}, 
          "Columns" -> {False, False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}}, 
        GridBoxBackground -> {"Rows" -> {{
             GrayLevel[1], 
             RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #17, 
     ButtonBox[
      GraphicsBox[{
        RGBColor[0.8, 0.85, 0.85], 
        EdgeForm[
         RGBColor[0.6, 0.7, 0.7]], 
        RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
        InsetBox[
         StyleBox[
         "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
          GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
          FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
      ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
        ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
      None], MultilineFunction -> None], 
    EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
          FrontEnd`Value[
           FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
      True}]]& ),
  InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{1, 3}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{5, 7}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{9, 11}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{4, 4}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{8, 8}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{12, 12}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{13, 15}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{16, 16}, ","], "}"}], "}"}], "}"}], ",", 
     "SamplingPeriod", "->", 
     RowBox[{#17}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
  Tooltip->StateSpaceModel]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356264935`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[8]=",
 CellID->2103770286,ExpressionUUID->"fdd91a08-6d4a-4b33-9bd8-0b9757f191cf"],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "c588098f-3f46-4b7f-8fd0-60ada0b56914"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356264935`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->638375429,ExpressionUUID->"1d3352cc-9fdc-48c0-a7d2-96bb0fea9f08"],

Cell["The realizations of a discrete-time model:", "ExampleText",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356264935`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->347534791,ExpressionUUID->"3a60432e-d60a-4ace-b988-0b2cfb7408cc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"tf", "=", 
   InterpretationBox[
    TemplateBox[{
      FractionBox[
       RowBox[{"b3", "+", 
         RowBox[{"b2", " ", "z"}], "+", 
         RowBox[{"b1", " ", 
           SuperscriptBox["z", "2"]}], "+", 
         RowBox[{"b0", " ", 
           SuperscriptBox["z", "3"]}]}], 
       RowBox[{"a3", "+", 
         RowBox[{"a2", " ", "z"}], "+", 
         RowBox[{"a1", " ", 
           SuperscriptBox["z", "2"]}], "+", 
         SuperscriptBox["z", "3"]}]], "T", {
      TransferFunctionModel, {
       False, False, {False, False}}, $Failed, {{
        Control`CommonDump`$DUMMY$}, {Control`CommonDump`$DUMMY$}}, 
       InterpretationBox[#, 
        TransferFunctionModel[{{{$CellContext`b3 + $CellContext`b2 \
$CellContext`z + $CellContext`b1 $CellContext`z^2 + $CellContext`b0 \
$CellContext`z^3}}, $CellContext`a3 + $CellContext`a2 $CellContext`z + \
$CellContext`a1 $CellContext`z^2 + $CellContext`z^3}, $CellContext`z, 
         SamplingPeriod -> $CellContext`T], AutoDelete -> True, Editable -> 
        True, BaseStyle -> "TransferFunctionModelMinimal"]& , $CellContext`z, 
       1, 1, 
       Control`CountStates[
        TransferFunctionModel[{{{$CellContext`b3 + $CellContext`b2 \
$CellContext`z + $CellContext`b1 $CellContext`z^2 + $CellContext`b0 \
$CellContext`z^3}}, $CellContext`a3 + $CellContext`a2 $CellContext`z + \
$CellContext`a1 $CellContext`z^2 + $CellContext`z^3}, $CellContext`z, 
         SamplingPeriod -> $CellContext`T]], 1, {}, {False, False}, False, 
       Automatic, None, Automatic}, {}},
     "TransferFunctionModelFull",
     BaseStyle->{NumberMarks -> False},
     DisplayFunction->(TagBox[
       SubsuperscriptBox[
        RowBox[{"(", 
          
          GridBox[{{#}}, AllowedDimensions -> {1, 1}, AutoDelete -> False, 
           AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
           BaseStyle -> {Deployed -> False}, GridBoxItemStyle -> {}, 
           GridBoxDividers -> {
            "Rows" -> {False, {False}, False}, 
             "Columns" -> {False, {False}, False}}, 
           GridBoxBackground -> {"Rows" -> {{
                GrayLevel[1], 
                RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #2, 
        ButtonBox[
         GraphicsBox[{
           RGBColor[0.8, 0.85, 0.85], 
           EdgeForm[
            RGBColor[0.6, 0.7, 0.7]], 
           RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
           InsetBox[
            StyleBox[
            "\[ScriptCapitalT]", Control`NonlinearModelsDump`LineColor -> 
             GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
             GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
             GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
             FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
         ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
           ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
         None], MultilineFunction -> None], 
       EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
             FrontEnd`Value[
              FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
         True}]]& ),
     InterpretationFunction->(
      RowBox[{"TransferFunctionModel", "[", "Unevaluated", "[", 
        RowBox[{"{", 
          RowBox[{"{", 
            TemplateSlotSequence[{1, 1}, ","], "}"}], "}"}], "]", ",", "z", 
        ",", "SamplingPeriod", "->", 
        RowBox[{#2}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
     Tooltip->TransferFunctionModel],
    TransferFunctionModel[{{{$CellContext`b3 + $CellContext`b2 $CellContext`z + \
$CellContext`b1 $CellContext`z^2 + $CellContext`b0 $CellContext`z^3}}, \
$CellContext`a3 + $CellContext`a2 $CellContext`z + $CellContext`a1 \
$CellContext`z^2 + $CellContext`z^3}, $CellContext`z, 
     SamplingPeriod -> $CellContext`T],
    AutoDelete->True,
    BaseStyle->"TransferFunctionModelMinimal",
    Editable->True]}], ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356264935`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[1]:=",
 CellID->1178917060,ExpressionUUID->"3c5eb940-4d9e-4b2d-a8af-6e71cb58d801"],

Cell[BoxData[
 RowBox[{"ssc", "=", 
  RowBox[{"StateSpaceModel", "[", "tf", "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235627529*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[2]:=",
 CellID->2066998792,ExpressionUUID->"09e7fc4d-7496-4dff-84b9-50de88aa0d2f"],

Cell[BoxData[
 TemplateBox[{"0", "1", "0", "0", "0", "0", "1", "0", 
   RowBox[{"-", "a3"}], 
   RowBox[{"-", "a2"}], 
   RowBox[{"-", "a1"}], "1", 
   RowBox[{
     RowBox[{
       RowBox[{"-", "a3"}], " ", "b0"}], "+", "b3"}], 
   RowBox[{
     RowBox[{
       RowBox[{"-", "a2"}], " ", "b0"}], "+", "b2"}], 
   RowBox[{
     RowBox[{
       RowBox[{"-", "a1"}], " ", "b0"}], "+", "b1"}], "b0", "T", {
   StateSpaceModel, {
    False, False, {
     False, False}}, {$CellContext`stname1, $CellContext`stname2, \
$CellContext`stname3}, {{Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$, 
      Control`CommonDump`$DUMMY$}}, Identity, Automatic, 1, 1, 3, 1, {}, {
    False, False}, False, Automatic, None, Automatic}, {}},
  "StateSpaceModelFull",
  BaseStyle->{NumberMarks -> False},
  DisplayFunction->(TagBox[
    SubsuperscriptBox[
     RowBox[{"(", 
       GridBox[{{#, #2, #3, #4}, {#5, #6, #7, #8}, {#9, #10, #11, #12}, {#13, \
#14, #15, #16}}, AllowedDimensions -> {4, 4}, AutoDelete -> False, 
        AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
        BaseStyle -> {Deployed -> False}, GridBoxItemStyle -> {}, 
        GridBoxDividers -> {"Rows" -> {False, False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}, 
          "Columns" -> {False, False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}}, 
        GridBoxBackground -> {"Rows" -> {{
             GrayLevel[1], 
             RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #17, 
     ButtonBox[
      GraphicsBox[{
        RGBColor[0.8, 0.85, 0.85], 
        EdgeForm[
         RGBColor[0.6, 0.7, 0.7]], 
        RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
        InsetBox[
         StyleBox[
         "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
          GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
          FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
      ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
        ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
      None], MultilineFunction -> None], 
    EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
          FrontEnd`Value[
           FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
      True}]]& ),
  InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{1, 3}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{5, 7}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{9, 11}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{4, 4}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{8, 8}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{12, 12}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{13, 15}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{16, 16}, ","], "}"}], "}"}], "}"}], ",", 
     "SamplingPeriod", "->", 
     RowBox[{#17}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
  Tooltip->StateSpaceModel]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235627529*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[2]=",
 CellID->358396716,ExpressionUUID->"6c13c595-4c3b-4568-8919-7669fe4274ae"],

Cell[BoxData[
 RowBox[{"sso", "=", 
  RowBox[{"StateSpaceModel", "[", 
   RowBox[{"tf", ",", 
    RowBox[{
    "StateSpaceRealization", "\[Rule]", "\"\<ObservableCompanion\>\""}]}], 
   "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235627529*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[3]:=",
 CellID->442176480,ExpressionUUID->"cdd0aa25-7ebd-4f78-a9ee-e6f9dd95848d"],

Cell[BoxData[
 TemplateBox[{"0", "0", 
   RowBox[{"-", "a3"}], 
   RowBox[{
     RowBox[{
       RowBox[{"-", "a3"}], " ", "b0"}], "+", "b3"}], "1", "0", 
   RowBox[{"-", "a2"}], 
   RowBox[{
     RowBox[{
       RowBox[{"-", "a2"}], " ", "b0"}], "+", "b2"}], "0", "1", 
   RowBox[{"-", "a1"}], 
   RowBox[{
     RowBox[{
       RowBox[{"-", "a1"}], " ", "b0"}], "+", "b1"}], "0", "0", "1", "b0", 
   "T", {StateSpaceModel, {
    False, False, {
     False, False}}, {$CellContext`stname1, $CellContext`stname2, \
$CellContext`stname3}, {{Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$, 
      Control`CommonDump`$DUMMY$}}, Identity, Automatic, 1, 1, 3, 1, {}, {
    False, False}, False, Automatic, None, Automatic}, {}},
  "StateSpaceModelFull",
  BaseStyle->{NumberMarks -> False},
  DisplayFunction->(TagBox[
    SubsuperscriptBox[
     RowBox[{"(", 
       GridBox[{{#, #2, #3, #4}, {#5, #6, #7, #8}, {#9, #10, #11, #12}, {#13, \
#14, #15, #16}}, AllowedDimensions -> {4, 4}, AutoDelete -> False, 
        AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
        BaseStyle -> {Deployed -> False}, GridBoxItemStyle -> {}, 
        GridBoxDividers -> {"Rows" -> {False, False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}, 
          "Columns" -> {False, False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}}, 
        GridBoxBackground -> {"Rows" -> {{
             GrayLevel[1], 
             RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #17, 
     ButtonBox[
      GraphicsBox[{
        RGBColor[0.8, 0.85, 0.85], 
        EdgeForm[
         RGBColor[0.6, 0.7, 0.7]], 
        RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
        InsetBox[
         StyleBox[
         "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
          GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
          FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
      ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
        ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
      None], MultilineFunction -> None], 
    EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
          FrontEnd`Value[
           FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
      True}]]& ),
  InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{1, 3}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{5, 7}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{9, 11}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{4, 4}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{8, 8}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{12, 12}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{13, 15}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{16, 16}, ","], "}"}], "}"}], "}"}], ",", 
     "SamplingPeriod", "->", 
     RowBox[{#17}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
  Tooltip->StateSpaceModel]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235627529*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[3]=",
 CellID->645135267,ExpressionUUID->"b10ca9fa-deb8-4fc1-8140-b00a21d5c7b6"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Last", "[", 
    RowBox[{"JordanModelDecomposition", "[", 
     RowBox[{"sso", "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"b0", "\[Rule]", "1"}], ",", 
        RowBox[{"b1", "\[Rule]", "2"}], ",", 
        RowBox[{"b2", "\[Rule]", "3"}], ",", 
        RowBox[{"b3", "\[Rule]", "4"}], ",", 
        RowBox[{"a1", "\[Rule]", 
         RowBox[{"-", "1"}]}], ",", 
        RowBox[{"a2", "\[Rule]", 
         RowBox[{"-", "2"}]}], ",", 
        RowBox[{"a3", "\[Rule]", 
         RowBox[{"-", "3"}]}]}], "}"}]}], "]"}], "]"}], "//", "N"}], "//", 
  "Chop"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235627529*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[4]:=",
 CellID->1497125294,ExpressionUUID->"d76de0e7-450f-435e-bd84-e92c4fa0bac9"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{
     RowBox[{"-", "0.6872118816045321`"}], "+", 
     RowBox[{"0.889496640726871`", " ", "\[ImaginaryI]"}]}], "0", "0", 
   RowBox[{
     RowBox[{"-", "0.2602768009427799`"}], "+", 
     RowBox[{"0.40304635192899796`", " ", "\[ImaginaryI]"}]}], "0", 
   RowBox[{
     RowBox[{"-", "0.6872118816045321`"}], "-", 
     RowBox[{"0.889496640726871`", " ", "\[ImaginaryI]"}]}], "0", 
   RowBox[{
     RowBox[{"-", "0.2602768009427799`"}], "-", 
     RowBox[{"0.40304635192899796`", " ", "\[ImaginaryI]"}]}], "0", "0", 
   "2.374423763209064`", "3.520553601885559`", "1.`", "1.`", "1.`", "1.`", 
   "T", {StateSpaceModel, {
    False, False, {
     False, False}}, {$CellContext`stname1, $CellContext`stname2, \
$CellContext`stname3}, {{Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$, 
      Control`CommonDump`$DUMMY$}}, Identity, Automatic, 1, 1, 3, 1, {}, {
    False, False}, False, Automatic, None, Automatic}, {}},
  "StateSpaceModelFull",
  BaseStyle->{NumberMarks -> False},
  DisplayFunction->(TagBox[
    SubsuperscriptBox[
     RowBox[{"(", 
       GridBox[{{#, #2, #3, #4}, {#5, #6, #7, #8}, {#9, #10, #11, #12}, {#13, \
#14, #15, #16}}, AllowedDimensions -> {4, 4}, AutoDelete -> False, 
        AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
        BaseStyle -> {Deployed -> False}, GridBoxItemStyle -> {}, 
        GridBoxDividers -> {"Rows" -> {False, False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}, 
          "Columns" -> {False, False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}}, 
        GridBoxBackground -> {"Rows" -> {{
             GrayLevel[1], 
             RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #17, 
     ButtonBox[
      GraphicsBox[{
        RGBColor[0.8, 0.85, 0.85], 
        EdgeForm[
         RGBColor[0.6, 0.7, 0.7]], 
        RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
        InsetBox[
         StyleBox[
         "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
          GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
          FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
      ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
        ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
      None], MultilineFunction -> None], 
    EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
          FrontEnd`Value[
           FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
      True}]]& ),
  InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{1, 3}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{5, 7}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{9, 11}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{4, 4}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{8, 8}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{12, 12}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{13, 15}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{16, 16}, ","], "}"}], "}"}], "}"}], ",", 
     "SamplingPeriod", "->", 
     RowBox[{#17}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
  Tooltip->StateSpaceModel]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235627529*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[4]=",
 CellID->159624581,ExpressionUUID->"aa3256fc-d0a2-4e4a-b87a-874b9a60087e"],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "bf769075-b137-44e1-8bbd-0b5427185af7"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235628524*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->17891657,ExpressionUUID->"e01f327a-29b9-448a-bef7-b37df23cf86e"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      Part[
       Dynamic[
        CurrentValue[
         EvaluationNotebook[], {
         TaggingRules, "Openers", "ExampleSubsection", "12"}, Closed]], 1], 
      Alternatives[Open, True]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{14., {0.45000000000000107`, 13.549999999999999`}}]],
  ExpressionUUID->"bcb5db09-2c5a-44e1-aff0-6c4ae6a1c2d1"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"0bce0b4a-6e7d-4676-bd7d-5dc8567f84c2"],
 "SystemsModelLabels",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount",ExpressionUUID->
  "9b7a2c03-bc26-4d29-bcba-0a58ae98b6a6"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235628524*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->1044654864,ExpressionUUID->"bf9b5cfb-fd99-462c-8638-3803bea77921"],

Cell["Label the inputs, outputs, and states:", "ExampleText",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235628524*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->1835485023,ExpressionUUID->"28b6d5b6-1661-48fb-993c-0403df3cf7a8"],

Cell[BoxData[
 RowBox[{"StateSpaceModel", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"-", "1.4"}], ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"-", "10"}], ",", 
         RowBox[{"-", "0.1"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.707"}], ",", 
         RowBox[{"-", "0.2"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", 
         RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"SystemsModelLabels", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*SubscriptBox[\(\[Delta]\), \(c\)]\)\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(\[Delta]\), \(f\)]\)\>\""}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Theta]\>\"", ",", 
        "\"\<\!\(\*OverscriptBox[\(\[Theta]\), \
\(\[FilledSmallCircle]\)]\)\>\"", ",", "\"\<\[Gamma]\>\""}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Theta]\>\"", ",", "\"\<\[Alpha]\>\"", ",", 
        "\"\<\!\(\*OverscriptBox[\(\[Theta]\), \
\(\[FilledSmallCircle]\)]\)\>\""}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235628524*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[7]:=",
 CellID->394192406,ExpressionUUID->"87aafa58-8451-4546-98f8-557763d79e7b"],

Cell[BoxData[
 TemplateBox[{"0", "0", "1", "0", "0", "0", 
   RowBox[{"-", "1.4`"}], "1", 
   RowBox[{"-", "0.707`"}], 
   RowBox[{"-", "0.2`"}], "0", 
   RowBox[{"-", "10"}], 
   RowBox[{"-", "0.1`"}], "3", 
   RowBox[{"-", "1"}], "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", "1", 
   RowBox[{"-", "1"}], "0", "0", "0", 
   InterpretationBox["\[InvisibleSpace]", None], 
   "\"\\!\\(\\*SubscriptBox[\\(\[Delta]\\), \\(c\\)]\\)\"", 
   "\"\\!\\(\\*SubscriptBox[\\(\[Delta]\\), \\(f\\)]\\)\"", "\"\[Theta]\"", 
   "\"\\!\\(\\*OverscriptBox[\\(\[Theta]\\), \
\\(\[FilledSmallCircle]\\)]\\)\"", "\"\[Gamma]\"", "\"\[Theta]\"", 
   "\"\[Alpha]\"", 
   "\"\\!\\(\\*OverscriptBox[\\(\[Theta]\\), \
\\(\[FilledSmallCircle]\\)]\\)\"", {
   StateSpaceModel, {
    True, True, {
     True, False}}, {$CellContext`stname1, $CellContext`stname2, \
$CellContext`stname3}, {{
     "\!\(\*SubscriptBox[\(\[Delta]\), \(c\)]\)", 
      "\!\(\*SubscriptBox[\(\[Delta]\), \(f\)]\)"}, {
     "\[Theta]", 
      "\!\(\*OverscriptBox[\(\[Theta]\), \(\[FilledSmallCircle]\)]\)", 
      "\[Gamma]"}, {
     "\[Theta]", "\[Alpha]", 
      "\!\(\*OverscriptBox[\(\[Theta]\), \(\[FilledSmallCircle]\)]\)"}}, 
    Identity, Automatic, 2, 3, 3, 1, {{1, 1}, {1, 2}, {2, 1}, {2, 2}, {2, 
    3}, {3, 1}, {3, 2}, {3, 3}}, {True, True}, False, 
    Automatic, {{
     "\!\(\*SubscriptBox[\(\[Delta]\), \(c\)]\)", 
      "\!\(\*SubscriptBox[\(\[Delta]\), \(f\)]\)"}, {
     "\[Theta]", 
      "\!\(\*OverscriptBox[\(\[Theta]\), \(\[FilledSmallCircle]\)]\)", 
      "\[Gamma]"}, {
     "\[Theta]", "\[Alpha]", 
      "\!\(\*OverscriptBox[\(\[Theta]\), \(\[FilledSmallCircle]\)]\)"}}, 
    Automatic}, {}},
  "StateSpaceModelFull",
  BaseStyle->{NumberMarks -> False},
  DisplayFunction->(TagBox[
    SubsuperscriptBox[
     RowBox[{"(", 
       GridBox[{{
         "", "", "\[SpanFromLeft]", 
          "\[SpanFromLeft]", #32, #33}, {#37, #, #2, #3, #4, #5}, {#38, #6, \
#7, #8, #9, #10}, {#39, #11, #12, #13, #14, #15}, {#34, #16, #17, #18, #19, \
#20}, {#35, #21, #22, #23, #24, #25}, {#36, #26, #27, #28, #29, #30}}, 
        AllowedDimensions -> {6, 7}, AutoDelete -> False, 
        AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
        BaseStyle -> {Deployed -> False}, 
        GridBoxItemStyle -> {"Rows" -> {{"InlineText", Smaller, 
             GrayLevel[0.5], ShowSyntaxStyles -> False, 
             InputFieldBoxOptions -> {
              FieldSize -> Tiny, BaseStyle -> {"InlineText", Smaller, 
                 GrayLevel[0.5], TextAlignment -> Center}, 
               Alignment -> {Center, Automatic}}}, {Automatic}}, "Columns" -> {
            Directive["InlineText", Smaller, 
             GrayLevel[0.5], ShowSyntaxStyles -> False, 
             InputFieldBoxOptions -> {
              FieldSize -> Tiny, BaseStyle -> {"InlineText", Smaller, 
                 GrayLevel[0.5], TextAlignment -> Center}, 
               Alignment -> {Center, Automatic}}], {Automatic}}}, 
        GridBoxDividers -> {"Rows" -> {False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}, "Columns" -> {False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}}, GridBoxBackground -> {"Rows" -> {
            GrayLevel[1], {
             GrayLevel[1], 
             RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #31, 
     ButtonBox[
      GraphicsBox[{
        RGBColor[0.8, 0.85, 0.85], 
        EdgeForm[
         RGBColor[0.6, 0.7, 0.7]], 
        RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
        InsetBox[
         StyleBox[
         "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
          GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
          FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
      ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
        ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
      None], MultilineFunction -> None], 
    EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
          FrontEnd`Value[
           FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
      True}]]& ),
  InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{1, 3}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{6, 8}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{11, 13}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{4, 5}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{9, 10}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{14, 15}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{16, 18}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{21, 23}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{26, 28}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{19, 20}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{24, 25}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{29, 30}, ","], "}"}], "}"}], "}"}], ",", 
     "SamplingPeriod", "->", 
     RowBox[{#31}], ",", "SystemsModelLabels", "->", 
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{#32, ",", #33}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{#34, ",", #35, ",", #36}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{#37, ",", #38, ",", #39}], "}"}]}], "}"}], "]"}]& ),
  Tooltip->StateSpaceModel]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235628524*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[7]=",
 CellID->200912670,ExpressionUUID->"68f34b36-907e-4973-a2f0-3ea0db5f1238"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      Part[
       Dynamic[
        CurrentValue[
         EvaluationNotebook[], {
         TaggingRules, "Openers", "ExampleSection", "4"}, Closed]], 1], 
      Alternatives[Open, True]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{14., {0.45000000000000107`, 13.549999999999999`}}]],
  ExpressionUUID->"d8561fc2-db82-4849-b252-04d046161fda"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"58664899-95a4-4bf2-9632-1a4c04c6bb35"],
 "Applications",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(7)", "ExampleCount",ExpressionUUID->
  "a041c6f8-76e1-4b5d-9fd9-46cf40f4c043"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.76980723562949*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->258228157,ExpressionUUID->"057b0088-6558-4a2d-9dc6-9efea3510888"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      Part[
       Dynamic[
        CurrentValue[
         EvaluationNotebook[], {
         TaggingRules, "Openers", "ExampleSubsection", "13"}, Closed]], 1], 
      Alternatives[Open, True]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{14., {0.45000000000000107`, 13.549999999999999`}}]],
  ExpressionUUID->"dfb582df-41e8-4b75-a0a2-547a69491a42"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"418a3845-27a1-4dfb-8bc7-c31e1c48d914"],
 "Chemical Systems",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount",ExpressionUUID->
  "ee377496-f0aa-4896-99ad-29dafdaf22b0"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.76980723562949*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->264468543,ExpressionUUID->"b7dc38ef-3cf7-40f6-989a-1aa1a5b8b67b"],

Cell["\<\
Equations governing the concentration in a two-stage chemical reactor with \
constant flow rate:\
\>", "ExampleText",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.76980723562949*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->397636833,ExpressionUUID->"8495a909-1a4b-4ab5-88f9-86b97f2e2efb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"stage1", "=", 
   RowBox[{
    RowBox[{
     SubscriptBox["v", "1"], " ", 
     RowBox[{
      RowBox[{
       SubscriptBox["c", "1"], "'"}], "[", "t", "]"}]}], " ", "\[Equal]", " ", 
    RowBox[{
     RowBox[{
      SubscriptBox["q", "1"], " ", 
      RowBox[{
       SubscriptBox["c", "f1"], "[", "t", "]"}]}], "+", 
     RowBox[{"r", " ", 
      RowBox[{
       SubscriptBox["c", "2"], "[", 
       RowBox[{"t", "-", "\[Alpha]"}], "]"}]}], "+", 
     RowBox[{
      SubscriptBox["q", "d"], 
      RowBox[{
       SubscriptBox["c", "d"], "[", "t", "]"}]}], " ", "-", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["q", "1"], "+", "r", "+", 
        SubscriptBox["q", "d"]}], ")"}], 
      RowBox[{
       SubscriptBox["c", "1"], "[", "t", "]"}]}], "-", 
     RowBox[{
      SubscriptBox["v", "1"], 
      SubscriptBox["k", "1"], 
      RowBox[{
       SubscriptBox["c", "1"], "[", "t", "]"}]}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stage2", "=", 
   RowBox[{
    RowBox[{
     SubscriptBox["v", 
      RowBox[{"2", " "}]], 
     RowBox[{
      RowBox[{
       SubscriptBox["c", "2"], "'"}], "[", "t", "]"}]}], "\[Equal]", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["q", "1"], "+", "r", "+", 
        SubscriptBox["q", "d"], "-", 
        SubscriptBox["q", "p1"]}], ")"}], 
      RowBox[{
       SubscriptBox["c", "1"], "[", "t", "]"}]}], " ", "+", 
     RowBox[{
      SubscriptBox["q", "2"], 
      RowBox[{
       SubscriptBox["c", "f2"], "[", "t", "]"}]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["q", "p2"], "+", "r"}], ")"}], 
      RowBox[{
       SubscriptBox["c", "2"], "[", "t", "]"}]}], " ", "-", " ", 
     RowBox[{
      SubscriptBox["v", "2"], 
      SubscriptBox["k", "2"], 
      RowBox[{
       SubscriptBox["c", "2"], "[", "t", "]"}]}]}]}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.76980723562949*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[1]:=",
 CellID->65471712,ExpressionUUID->"88f7883f-b6f6-4255-9ede-08731e2120bc"],

Cell["A state-space model for the reactor:", "ExampleText",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.76980723562949*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->291788353,ExpressionUUID->"a0b9ea67-05fd-421b-ae98-f3a31520d08e"],

Cell[BoxData[
 RowBox[{"reactor", "=", 
  RowBox[{"StateSpaceModel", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"stage1", ",", " ", "stage2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["c", "1"], "[", "t", "]"}], ",", 
      RowBox[{
       SubscriptBox["c", "2"], "[", "t", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["c", "f1"], "[", "t", "]"}], ",", 
      RowBox[{
       SubscriptBox["c", "f2"], "[", "t", "]"}], ",", 
      RowBox[{
       SubscriptBox["c", "d"], "[", "t", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["c", "1"], "[", 
       RowBox[{"t", "-", 
        SubscriptBox["\[Tau]", "1"]}], "]"}], ",", 
      RowBox[{
       SubscriptBox["c", "2"], "[", 
       RowBox[{"t", "-", 
        SubscriptBox["\[Tau]", "2"]}], "]"}]}], "}"}], ",", "t"}], 
   "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356305184`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[3]:=",
 CellID->86474325,ExpressionUUID->"4ce94c34-9b0f-426e-b4a4-c4ad83ef21b4"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"-", 
     FractionBox[
      RowBox[{"r", "+", 
        SubscriptBox["q", "1"], "+", 
        SubscriptBox["q", "d"], "+", 
        RowBox[{
          SubscriptBox["k", "1"], " ", 
          SubscriptBox["v", "1"]}]}], 
      SubscriptBox["v", "1"]]}], 
   FractionBox[
    RowBox[{"r", " ", 
      TemplateBox[{"\[Alpha]"}, "SystemsModelDelay"]}], 
    SubscriptBox["v", "1"]], 
   FractionBox[
    SubscriptBox["q", "1"], 
    SubscriptBox["v", "1"]], "0", 
   FractionBox[
    SubscriptBox["q", "d"], 
    SubscriptBox["v", "1"]], 
   RowBox[{"-", 
     FractionBox[
      RowBox[{
        RowBox[{"-", "r"}], "-", 
        SubscriptBox["q", "1"], "-", 
        SubscriptBox["q", "d"], "+", 
        SubscriptBox["q", "p1"]}], 
      SubscriptBox["v", "2"]]}], 
   RowBox[{"-", 
     FractionBox[
      RowBox[{"r", "+", 
        SubscriptBox["q", "p2"], "+", 
        RowBox[{
          SubscriptBox["k", "2"], " ", 
          SubscriptBox["v", "2"]}]}], 
      SubscriptBox["v", "2"]]}], "0", 
   FractionBox[
    SubscriptBox["q", "2"], 
    SubscriptBox["v", "2"]], "0", 
   TemplateBox[{
     SubscriptBox["\[Tau]", "1"]}, "SystemsModelDelay"], "0", "0", "0", "0", 
   "0", 
   TemplateBox[{
     SubscriptBox["\[Tau]", "2"]}, "SystemsModelDelay"], "0", "0", "0", 
   InterpretationBox["\[InvisibleSpace]", None], {
   StateSpaceModel, {
    False, False, {
     False, False}}, {$CellContext`stname1, $CellContext`stname2}, {{
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$, 
      Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$}}, Identity, 
    Automatic, 3, 2, 2, 1, {}, {False, False}, False, Automatic, None, {",", 
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               SubscriptBox["c", "1"], "[", "t", "]"}], ",", "0"}], "}"}], 
         ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               SubscriptBox["c", "2"], "[", "t", "]"}], ",", "0"}], "}"}]}], 
       "}"}], ",", 
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               SubscriptBox["c", "f1"], "[", "t", "]"}], ",", "0"}], "}"}], 
         ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               SubscriptBox["c", "f2"], "[", "t", "]"}], ",", "0"}], "}"}], 
         ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               SubscriptBox["c", "d"], "[", "t", "]"}], ",", "0"}], "}"}]}], 
       "}"}], ",", "Automatic", ",", "t"}}, {}},
  "StateSpaceModelFull",
  BaseStyle->{NumberMarks -> False},
  DisplayFunction->(TagBox[
    SubsuperscriptBox[
     RowBox[{"(", 
       GridBox[{{#, #2, #3, #4, #5}, {#6, #7, #8, #9, #10}, {#11, #12, #13, \
#14, #15}, {#16, #17, #18, #19, #20}}, AllowedDimensions -> {5, 4}, 
        AutoDelete -> False, AllowScriptLevelChange -> False, 
        ColumnAlignments -> {Center}, BaseStyle -> {Deployed -> False}, 
        GridBoxItemStyle -> {}, GridBoxDividers -> {"Rows" -> {False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}, "Columns" -> {False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}}, 
        GridBoxBackground -> {"Rows" -> {{
             GrayLevel[1], 
             RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #21, 
     ButtonBox[
      GraphicsBox[{
        RGBColor[0.8, 0.85, 0.85], 
        EdgeForm[
         RGBColor[0.6, 0.7, 0.7]], 
        RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
        InsetBox[
         StyleBox[
         "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
          GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
          FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
      ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
        ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
      None], MultilineFunction -> None], 
    EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
          FrontEnd`Value[
           FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
      True}]]& ),
  InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{1, 2}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{6, 7}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{3, 5}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{8, 10}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{11, 12}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{16, 17}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{13, 15}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{18, 20}, ","], "}"}], "}"}], "}"}], ",", 
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               SubscriptBox["c", "1"], "[", "t", "]"}], ",", "0"}], "}"}], 
         ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               SubscriptBox["c", "2"], "[", "t", "]"}], ",", "0"}], "}"}]}], 
       "}"}], ",", 
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               SubscriptBox["c", "f1"], "[", "t", "]"}], ",", "0"}], "}"}], 
         ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               SubscriptBox["c", "f2"], "[", "t", "]"}], ",", "0"}], "}"}], 
         ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               SubscriptBox["c", "d"], "[", "t", "]"}], ",", "0"}], "}"}]}], 
       "}"}], ",", "Automatic", ",", "t", ",", "SamplingPeriod", "->", 
     RowBox[{#21}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
  Tooltip->StateSpaceModel]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356305184`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[3]=",
 CellID->401954372,ExpressionUUID->"24747a31-ea39-4956-a5c0-283599a7bd06"],

Cell["Control the inputs with unity feedback:", "ExampleText",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356305184`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->171149838,ExpressionUUID->"dfb42d36-1bd6-4fb1-a0e1-9e5ae2b422f9"],

Cell[BoxData[
 RowBox[{"closedloop", "=", 
  RowBox[{"SystemsModelFeedbackConnect", "[", 
   RowBox[{"reactor", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "2"}], "}"}]}], "}"}]}], "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356305184`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[4]:=",
 CellID->419547885,ExpressionUUID->"aea2e378-d7c2-49c8-9ce5-dac5c8ee4d16"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{
     RowBox[{"-", 
       FractionBox[
        RowBox[{"r", "+", 
          SubscriptBox["q", "1"], "+", 
          SubscriptBox["q", "d"], "+", 
          RowBox[{
            SubscriptBox["k", "1"], " ", 
            SubscriptBox["v", "1"]}]}], 
        SubscriptBox["v", "1"]]}], "-", 
     FractionBox[
      RowBox[{
        SubscriptBox["q", "1"], " ", 
        TemplateBox[{
          SubscriptBox["\[Tau]", "1"]}, "SystemsModelDelay"]}], 
      SubscriptBox["v", "1"]]}], 
   FractionBox[
    RowBox[{"r", " ", 
      TemplateBox[{"\[Alpha]"}, "SystemsModelDelay"]}], 
    SubscriptBox["v", "1"]], 
   FractionBox[
    SubscriptBox["q", "1"], 
    SubscriptBox["v", "1"]], "0", 
   FractionBox[
    SubscriptBox["q", "d"], 
    SubscriptBox["v", "1"]], 
   RowBox[{"-", 
     FractionBox[
      RowBox[{
        RowBox[{"-", "r"}], "-", 
        SubscriptBox["q", "1"], "-", 
        SubscriptBox["q", "d"], "+", 
        SubscriptBox["q", "p1"]}], 
      SubscriptBox["v", "2"]]}], 
   RowBox[{
     RowBox[{"-", 
       FractionBox[
        RowBox[{"r", "+", 
          SubscriptBox["q", "p2"], "+", 
          RowBox[{
            SubscriptBox["k", "2"], " ", 
            SubscriptBox["v", "2"]}]}], 
        SubscriptBox["v", "2"]]}], "-", 
     FractionBox[
      RowBox[{
        SubscriptBox["q", "2"], " ", 
        TemplateBox[{
          SubscriptBox["\[Tau]", "2"]}, "SystemsModelDelay"]}], 
      SubscriptBox["v", "2"]]}], "0", 
   FractionBox[
    SubscriptBox["q", "2"], 
    SubscriptBox["v", "2"]], "0", 
   TemplateBox[{
     SubscriptBox["\[Tau]", "1"]}, "SystemsModelDelay"], "0", "0", "0", "0", 
   "0", 
   TemplateBox[{
     SubscriptBox["\[Tau]", "2"]}, "SystemsModelDelay"], "0", "0", "0", 
   InterpretationBox["\[InvisibleSpace]", None], {
   StateSpaceModel, {
    False, False, {
     False, False}}, {$CellContext`stname1, $CellContext`stname2}, {{
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$, 
      Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$}}, Identity, 
    Automatic, 3, 2, 2, 1, {}, {False, False}, False, Automatic, None, {",", 
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               SubscriptBox["c", "1"], "[", "t", "]"}], ",", "0"}], "}"}], 
         ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               SubscriptBox["c", "2"], "[", "t", "]"}], ",", "0"}], "}"}]}], 
       "}"}], ",", 
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             SubscriptBox["\[FormalU]", "1"], ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             SubscriptBox["\[FormalU]", "2"], ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               SubscriptBox["c", "d"], "[", "t", "]"}], ",", "0"}], "}"}]}], 
       "}"}], ",", "Automatic", ",", "t"}}, {}},
  "StateSpaceModelFull",
  BaseStyle->{NumberMarks -> False},
  DisplayFunction->(TagBox[
    SubsuperscriptBox[
     RowBox[{"(", 
       GridBox[{{#, #2, #3, #4, #5}, {#6, #7, #8, #9, #10}, {#11, #12, #13, \
#14, #15}, {#16, #17, #18, #19, #20}}, AllowedDimensions -> {5, 4}, 
        AutoDelete -> False, AllowScriptLevelChange -> False, 
        ColumnAlignments -> {Center}, BaseStyle -> {Deployed -> False}, 
        GridBoxItemStyle -> {}, GridBoxDividers -> {"Rows" -> {False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}, "Columns" -> {False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}}, 
        GridBoxBackground -> {"Rows" -> {{
             GrayLevel[1], 
             RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #21, 
     ButtonBox[
      GraphicsBox[{
        RGBColor[0.8, 0.85, 0.85], 
        EdgeForm[
         RGBColor[0.6, 0.7, 0.7]], 
        RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
        InsetBox[
         StyleBox[
         "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
          GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
          FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
      ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
        ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
      None], MultilineFunction -> None], 
    EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
          FrontEnd`Value[
           FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
      True}]]& ),
  InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{1, 2}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{6, 7}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{3, 5}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{8, 10}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{11, 12}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{16, 17}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{13, 15}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{18, 20}, ","], "}"}], "}"}], "}"}], ",", 
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               SubscriptBox["c", "1"], "[", "t", "]"}], ",", "0"}], "}"}], 
         ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               SubscriptBox["c", "2"], "[", "t", "]"}], ",", "0"}], "}"}]}], 
       "}"}], ",", 
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             SubscriptBox["\[FormalU]", "1"], ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             SubscriptBox["\[FormalU]", "2"], ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               SubscriptBox["c", "d"], "[", "t", "]"}], ",", "0"}], "}"}]}], 
       "}"}], ",", "Automatic", ",", "t", ",", "SamplingPeriod", "->", 
     RowBox[{#21}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
  Tooltip->StateSpaceModel]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356305184`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[4]=",
 CellID->1811060389,ExpressionUUID->"c4c59203-7220-461b-a377-1a28d19667fb"],

Cell["\<\
Substitute numeric values and simulate the response to a disturbance:\
\>", "ExampleText",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356305184`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->146513102,ExpressionUUID->"a491c0d6-e03a-403f-bc70-66bb07da109d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"closedloop", "=", 
   RowBox[{"closedloop", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Alpha]", "\[Rule]", "1"}], ",", " ", 
      RowBox[{
       SubscriptBox["\[Tau]", "1"], "\[Rule]", "3"}], ",", " ", 
      RowBox[{
       SubscriptBox["\[Tau]", "2"], "\[Rule]", "2"}], ",", " ", 
      RowBox[{
       SubscriptBox["v", "1"], "\[Rule]", "1"}], ",", " ", 
      RowBox[{
       SubscriptBox["v", "2"], "\[Rule]", "1"}], ",", 
      RowBox[{
       SubscriptBox["q", "1"], "\[Rule]", ".4"}], ",", " ", 
      RowBox[{
       SubscriptBox["q", "d"], "\[Rule]", ".6"}], ",", " ", 
      RowBox[{
       SubscriptBox["q", "2"], "\[Rule]", ".5"}], ",", " ", 
      RowBox[{"r", "\[Rule]", ".5"}], ",", " ", 
      RowBox[{
       SubscriptBox["k", "1"], "\[Rule]", ".5"}], ",", " ", 
      RowBox[{
       SubscriptBox["k", "2"], "\[Rule]", ".5"}], ",", " ", 
      RowBox[{
       SubscriptBox["q", "p1"], "\[Rule]", "1"}], ",", 
      RowBox[{
       SubscriptBox["q", "p2"], "\[Rule]", "1"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"response", "=", 
   RowBox[{"OutputResponse", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"closedloop", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "12"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356305184`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[5]:=",
 CellID->197633641,ExpressionUUID->"68e07cae-0aef-4d79-961c-d2ae115c74e4"],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{"response", ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "12"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356315165`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[7]:=",
 CellID->327235981,ExpressionUUID->"922093a8-548f-45df-90da-f70501fcf687"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
fFM=
    "], {{0, 138}, {240, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{240, 138},
  PlotRange->{{0, 240}, {0, 138}}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356315165`*^9},
 ImageSize->{244, 138},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellTags->"RasterizedOutput",
 CellLabel->"Out[7]=",
 CellID->1523568013,ExpressionUUID->"5e0290b4-02a3-48ba-85f3-e5260760a1f4"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      Part[
       Dynamic[
        CurrentValue[
         EvaluationNotebook[], {
         TaggingRules, "Openers", "ExampleSubsection", "14"}, Closed]], 1], 
      Alternatives[Open, True]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{14., {0.45000000000000107`, 13.549999999999999`}}]],
  ExpressionUUID->"c43f9106-7c95-4bd9-b6c6-a624bb7b80a3"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"f1712768-dd42-4745-99e9-29c8d26765e4"],
 "Electrical Systems",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(2)", "ExampleCount",ExpressionUUID->
  "bb9286c5-0eca-4473-84f2-db03b77c833c"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356315165`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->48480253,ExpressionUUID->"732573c7-3008-484e-8616-3b014a068dec"],

Cell["A series resistance-inductance-capacitance (RLC) circuit:", \
"ExampleText",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356315165`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->918396903,ExpressionUUID->"046bbd2c-945b-4fd7-80ec-9de94c712c85"],

Cell[BoxData[
 RowBox[{
  RowBox[{"eqns", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"L", " ", 
       RowBox[{
        RowBox[{"q", "''"}], "[", "t", "]"}]}], "+", 
      RowBox[{"R", " ", 
       RowBox[{
        RowBox[{"q", "'"}], "[", "t", "]"}]}], "+", 
      RowBox[{
       FractionBox["1", "C"], " ", 
       RowBox[{"q", "[", "t", "]"}]}]}], "\[Equal]", 
     RowBox[{"V", "[", "t", "]"}]}], "}"}]}], ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356315165`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[1]:=",
 CellID->439758476,ExpressionUUID->"ce973efd-b0a4-4fe9-800c-2c8feec117e0"],

Cell[BoxData[
 RowBox[{"m1", "=", 
  RowBox[{"StateSpaceModel", "[", 
   RowBox[{"eqns", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"q", "[", "t", "]"}], ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"q", "'"}], "[", "t", "]"}], ",", "0"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"V", "[", "t", "]"}], ",", "0"}], "}"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"q", "'"}], "[", "t", "]"}], "}"}], ",", "t"}], 
   "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.76980723563251*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[2]:=",
 CellID->925370588,ExpressionUUID->"091ed9a6-af7c-4295-8cac-c279404183fe"],

Cell[BoxData[
 TemplateBox[{"0", "1", "0", 
   RowBox[{"-", 
     FractionBox["1", 
      RowBox[{"C", " ", "L"}]]}], 
   RowBox[{"-", 
     FractionBox["R", "L"]}], 
   FractionBox["1", "L"], "0", "1", "0", 
   InterpretationBox["\[InvisibleSpace]", None], {
   StateSpaceModel, {
    False, False, {
     False, False}}, {$CellContext`stname1, $CellContext`stname2}, {{
     Control`CommonDump`$DUMMY$}, {Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$}}, Identity, 
    Automatic, 1, 1, 2, 1, {}, {False, False}, False, Automatic, None, {",", 
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"q", "[", "t", "]"}], ",", "0"}], "}"}], ",", 
         SubscriptBox["\[FormalX]", "1"]}], "}"}], ",", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{
           RowBox[{"V", "[", "t", "]"}], ",", "0"}], "}"}], "}"}], ",", 
     "Automatic", ",", "t"}}, {}},
  "StateSpaceModelFull",
  BaseStyle->{NumberMarks -> False},
  DisplayFunction->(TagBox[
    SubsuperscriptBox[
     RowBox[{"(", 
       GridBox[{{#, #2, #3}, {#4, #5, #6}, {#7, #8, #9}}, 
        AllowedDimensions -> {3, 3}, AutoDelete -> False, 
        AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
        BaseStyle -> {Deployed -> False}, GridBoxItemStyle -> {}, 
        GridBoxDividers -> {"Rows" -> {False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}, "Columns" -> {False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}}, 
        GridBoxBackground -> {"Rows" -> {{
             GrayLevel[1], 
             RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #10, 
     ButtonBox[
      GraphicsBox[{
        RGBColor[0.8, 0.85, 0.85], 
        EdgeForm[
         RGBColor[0.6, 0.7, 0.7]], 
        RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
        InsetBox[
         StyleBox[
         "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
          GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
          FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
      ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
        ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
      None], MultilineFunction -> None], 
    EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
          FrontEnd`Value[
           FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
      True}]]& ),
  InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{1, 2}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{4, 5}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{3, 3}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{6, 6}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{7, 8}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{9, 9}, ","], "}"}], "}"}], "}"}], ",", 
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"q", "[", "t", "]"}], ",", "0"}], "}"}], ",", 
         SubscriptBox["\[FormalX]", "1"]}], "}"}], ",", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{
           RowBox[{"V", "[", "t", "]"}], ",", "0"}], "}"}], "}"}], ",", 
     "Automatic", ",", "t", ",", "SamplingPeriod", "->", 
     RowBox[{#10}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
  Tooltip->StateSpaceModel]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.76980723563251*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[2]=",
 CellID->418662081,ExpressionUUID->"4d374f51-45b4-496b-a477-b59d8a7e2fe7"],

Cell["The same RLC circuit modeled as a descriptor state space:", \
"ExampleText",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.76980723563251*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->450865748,ExpressionUUID->"c97df1c2-59c8-462c-9aa2-cadf87c4d290"],

Cell[BoxData[
 RowBox[{
  RowBox[{"eqns", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"L", " ", 
       RowBox[{
        RowBox[{"i", "'"}], "[", "t", "]"}]}], "==", 
      RowBox[{
       SubscriptBox["v", "l"], "[", "t", "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["v", "c"], "'"}], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"1", "/", "C"}], " ", 
       RowBox[{"i", "[", "t", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"R", " ", 
       RowBox[{"i", "[", "t", "]"}]}], "\[Equal]", 
      RowBox[{
       SubscriptBox["v", "r"], "[", "t", "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["v", "l"], "[", "t", "]"}], "+", 
       RowBox[{
        SubscriptBox["v", "c"], "[", "t", "]"}], "+", 
       RowBox[{
        SubscriptBox["v", "r"], "[", "t", "]"}]}], "\[Equal]", 
      RowBox[{
       SubscriptBox["v", "s"], "[", "t", "]"}]}]}], "}"}]}], ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.76980723563251*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[3]:=",
 CellID->88888377,ExpressionUUID->"467d692b-062c-49d4-a8e0-d487ec04ab80"],

Cell[BoxData[
 RowBox[{"m2", "=", 
  RowBox[{"StateSpaceModel", "[", 
   RowBox[{"eqns", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"i", "[", "t", "]"}], ",", 
      RowBox[{
       SubscriptBox["v", "l"], "[", "t", "]"}], ",", 
      RowBox[{
       SubscriptBox["v", "c"], "[", "t", "]"}], ",", 
      RowBox[{
       SubscriptBox["v", "r"], "[", "t", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["v", "s"], "[", "t", "]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", "[", "t", "]"}], "}"}], ",", "t"}], "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.76980723563251*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[4]:=",
 CellID->115780778,ExpressionUUID->"6307d0ed-d0be-472b-956a-fab074b57214"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"-", "L"}], "0", "0", "0", "0", 
   RowBox[{"-", "1"}], "0", "0", "0", "0", "0", 
   RowBox[{"-", "1"}], "0", 
   RowBox[{"-", 
     FractionBox["1", "C"]}], "0", "0", "0", "0", "0", "0", "0", "0", "R", 
   "0", "0", 
   RowBox[{"-", "1"}], "0", "0", "0", "0", "0", "0", "1", "1", "1", 
   RowBox[{"-", "1"}], "1", "0", "0", "0", "0", 
   InterpretationBox["\[InvisibleSpace]", None], {
   StateSpaceModel, {
    False, False, {
     False, False}}, {$CellContext`stname1, $CellContext`stname2, \
$CellContext`stname3, $CellContext`stname4}, {{Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$, 
      Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$}}, Identity, 
    Automatic, 1, 1, 4, 1, {}, {False, False}, True, Automatic, None, {",", 
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               SubscriptBox["v", "c"], "[", "t", "]"}], ",", "0"}], "}"}], 
         ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               SubscriptBox["v", "l"], "[", "t", "]"}], ",", "0"}], "}"}], 
         ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               SubscriptBox["v", "r"], "[", "t", "]"}], ",", "0"}], "}"}], 
         ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"i", "[", "t", "]"}], ",", "0"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{
           RowBox[{
             SubscriptBox["v", "s"], "[", "t", "]"}], ",", "0"}], "}"}], 
       "}"}], ",", "Automatic", ",", "t"}}, {}},
  "StateSpaceModelFull",
  BaseStyle->{NumberMarks -> False},
  DisplayFunction->(TagBox[
    SubsuperscriptBox[
     RowBox[{"(", 
       GridBox[{{#, #2, #3, #4, #5, #6, #7, #8, #9}, {#10, #11, #12, #13, \
#14, #15, #16, #17, #18}, {#19, #20, #21, #22, #23, #24, #25, #26, #27}, \
{#28, #29, #30, #31, #32, #33, #34, #35, #36}, {
         "", "", "", "", #37, #38, #39, #40, #41}}, 
        AllowedDimensions -> {9, 5}, AutoDelete -> False, 
        AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
        BaseStyle -> {Deployed -> False}, GridBoxItemStyle -> {}, 
        GridBoxDividers -> {"Rows" -> {False, False, False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}, 
          "Columns" -> {False, False, False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], False, False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}}, 
        GridBoxBackground -> {"Rows" -> {{
             GrayLevel[1], 
             RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #42, 
     ButtonBox[
      GraphicsBox[{
        RGBColor[0.8, 0.85, 0.85], 
        EdgeForm[
         RGBColor[0.6, 0.7, 0.7]], 
        RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
        InsetBox[
         StyleBox[
         "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
          GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
          FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
      ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
        ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
      None], MultilineFunction -> None], 
    EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
          FrontEnd`Value[
           FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
      True}]]& ),
  InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{5, 8}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{14, 17}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{23, 26}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{32, 35}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{9, 9}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{18, 18}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{27, 27}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{36, 36}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{37, 40}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{41, 41}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{1, 4}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{10, 13}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{19, 22}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{28, 31}, ","], "}"}], "}"}], "}"}], ",", 
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               SubscriptBox["v", "c"], "[", "t", "]"}], ",", "0"}], "}"}], 
         ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               SubscriptBox["v", "l"], "[", "t", "]"}], ",", "0"}], "}"}], 
         ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               SubscriptBox["v", "r"], "[", "t", "]"}], ",", "0"}], "}"}], 
         ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"i", "[", "t", "]"}], ",", "0"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{
           RowBox[{
             SubscriptBox["v", "s"], "[", "t", "]"}], ",", "0"}], "}"}], 
       "}"}], ",", "Automatic", ",", "t", ",", "SamplingPeriod", "->", 
     RowBox[{#42}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
  Tooltip->StateSpaceModel]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356335106`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[4]=",
 CellID->1297167795,ExpressionUUID->"25768071-fb70-492c-8649-945de3b96762"],

Cell["Both models are equivalent:", "ExampleText",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356335106`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->37693977,ExpressionUUID->"f3ca5365-b744-4348-9e7a-bb5f6350ada6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TransferFunctionModel", "[", "m1", "]"}], "[", "s", "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356335106`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[5]:=",
 CellID->552253779,ExpressionUUID->"4d560e04-ed8e-4818-91c4-75614850715f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   FractionBox["s", 
    RowBox[{"L", " ", 
     RowBox[{"(", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"C", " ", "L"}]], "+", 
       FractionBox[
        RowBox[{"R", " ", "s"}], "L"], "+", 
       SuperscriptBox["s", "2"]}], ")"}]}]], "}"}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356335106`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[5]=",
 CellID->245146221,ExpressionUUID->"155eba71-d426-49d0-b3d7-61612547c476"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TransferFunctionModel", "[", "m2", "]"}], "[", "s", "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356335106`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[6]:=",
 CellID->8307132,ExpressionUUID->"f4cd2df7-4ba8-4102-8793-5b458169a76a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   FractionBox[
    RowBox[{"C", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          RowBox[{"-", "1"}], "-", 
          RowBox[{"C", " ", "R", " ", "s"}], "-", 
          RowBox[{"C", " ", "L", " ", 
           SuperscriptBox["s", "2"]}]}], "C"]}], "+", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "1"}], "-", 
         RowBox[{"C", " ", "s"}], "-", 
         RowBox[{"C", " ", "R", " ", "s"}], "-", 
         RowBox[{"C", " ", "L", " ", 
          SuperscriptBox["s", "2"]}]}], "C"]}], ")"}]}], 
    RowBox[{
     RowBox[{"-", "1"}], "-", 
     RowBox[{"C", " ", "R", " ", "s"}], "-", 
     RowBox[{"C", " ", "L", " ", 
      SuperscriptBox["s", "2"]}]}]], "}"}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356335106`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[6]=",
 CellID->1298901401,ExpressionUUID->"47257465-cbf9-4407-8619-5192f9379505"],

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"%%", "-", "%"}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356345077`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[7]:=",
 CellID->259733622,ExpressionUUID->"fcd3ccfa-d09a-47d2-a882-c3ed9de6c9fe"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", "0", "}"}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356345077`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[7]=",
 CellID->1464574852,ExpressionUUID->"d962f51d-1522-4a62-9d4e-16c15288db98"],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "f90173c4-4458-46e8-81c6-17db5b2ce6dd"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356345077`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->172558114,ExpressionUUID->"822e9f4f-2e1e-4cb7-bba5-bf1dfde04a2a"],

Cell["A circuit with two loops modeled with Kirchhoff's laws:", "ExampleText",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356345077`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->107757680,ExpressionUUID->"95af268b-1816-4e36-97a1-17cc549057ea"],

Cell[BoxData[
 GraphicsBox[{
   {Thickness[0.004273504273504274], 
    {RGBColor[
     0.025908000000000042`, 0.033047999999999966`, 0.033864000000000005`], 
     Opacity[1.], JoinForm[{"Miter", 4.}], 
     JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{18.667,
       82.1895}, {18.667, 79.98049999999999}, {16.876, 78.1895}, {
      14.667000000000002`, 78.1895}, {12.458000000000002`, 78.1895}, {
      10.667000000000002`, 79.98049999999999}, {10.667000000000002`, 
      82.1895}, {10.667000000000002`, 84.3985}, {12.458000000000002`, 
      86.1895}, {14.667000000000002`, 86.1895}, {16.876, 86.1895}, {18.667, 
      84.3985}, {18.667, 82.1895}}},
      CurveClosed->{1}]}, 
    {RGBColor[
     0.025908000000000042`, 0.033047999999999966`, 0.033864000000000005`], 
     Opacity[1.], JoinForm[{"Miter", 4.}], 
     JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{18.667,
       11.873000000000001`}, {18.667, 9.664000000000001}, {16.876, 
      7.873000000000001}, {14.667000000000002`, 7.873000000000001}, {
      12.458000000000002`, 7.873000000000001}, {10.667000000000002`, 
      9.664000000000001}, {10.667000000000002`, 11.873000000000001`}, {
      10.667000000000002`, 14.082}, {12.458000000000002`, 
      15.873000000000001`}, {14.667000000000002`, 15.873000000000001`}, {
      16.876, 15.873000000000001`}, {18.667, 14.082}, {18.667, 
      11.873000000000001`}}},
      CurveClosed->{1}]}, 
    {RGBColor[
     0.025908000000000042`, 0.033047999999999966`, 0.033864000000000005`], 
     Opacity[1.], CapForm["Round"], JoinForm["Round"], 
     JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
      0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
      3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
      1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
      3}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGILIGYC4hl5Qs0HVhk5PF46+4hCT4hDrb1p3K6JgXD+
RaXbP+uYghwOnFroum19qIPIOveHVUuCHPbNl9K/2xHsYHPfv3e6WzBcvj5r
T8nkF8Fw+S0nyvbN7wqBy/8IBpqsEwqXl299HbjjXChcPgRkcUEYXB7snoth
cPe8UjPkWGOQjJMPtF2CRS/Z4Vcd0CHTQx10N819v3wbbj5Yv0OKgy3X9cUF
nQg+2LyWEFT+mWAIX4F4/ksQ/0kyxPyVCD5YPicEgy9+89z34NsI94HlM1Jw
8sH++YRwP4wPcz8KH+geMP8SifxpKXD3w/gw96LzI1OsgSkCzX1SqTj5YP8s
SYW7H8aHuR+FDwvPFhL5Hqmo4e+Rihr+SHzFDUUZE20R7vv890rFy1MIPjC1
yrUGp8H5uz15mLT90+DpD50PTg8TsjH4FSCLr3g4AADM6K2o
      "],
      CurveClosed->{0}]}, 
    {RGBColor[
     0.025908000000000042`, 0.033047999999999966`, 0.033864000000000005`], 
     Opacity[1.], CapForm["Round"], JoinForm["Round"], 
     JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{220.5205, 44.4063}, {
      220.5205, 11.8733}, {18.666499999999985`, 11.8733}}},
      CurveClosed->{0}]}, 
    {RGBColor[
     0.025908000000000042`, 0.033047999999999966`, 0.033864000000000005`], 
     Opacity[1.], CapForm["Round"], JoinForm["Round"], 
     JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}}}, {{{227.4326, 
      43.09570000000001}, {225.5526, 43.91470000000001}, {223.1456, 
      44.40670000000001}, {220.5206, 44.40670000000001}, {217.8956, 
      44.40670000000001}, {215.48860000000002`, 43.91470000000001}, {213.6086,
       43.09570000000001}}},
      CurveClosed->{0}]}, 
    {RGBColor[
     0.025908000000000042`, 0.033047999999999966`, 0.033864000000000005`], 
     Opacity[1.], CapForm["Round"], JoinForm["Round"], 
     JoinedCurveBox[{{{0, 2, 0}}}, {{{227.4326, 49.197300000000006`}, {
      213.6086, 49.197300000000006`}}},
      CurveClosed->{0}]}, 
    {FaceForm[{RGBColor[
     0.025908000000000042`, 0.033047999999999966`, 0.033864000000000005`], 
     Opacity[1.]}], 
     FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{125.0078, 82.1895}, {
      121.0098, 79.1895}, {121.0098, 85.1895}}}], 
     FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
      0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
      14.480500000000001`, 75.3291}, {15.1645, 75.3291}, {15.1645, 
      73.14609999999999}, {17.3465, 73.14609999999999}, {17.3465, 72.4631}, {
      15.1645, 72.4631}, {15.1645, 70.28009999999999}, {14.480500000000001`, 
      70.28009999999999}, {14.480500000000001`, 72.4631}, {
      12.297500000000001`, 72.4631}, {12.297500000000001`, 
      73.14609999999999}, {14.480500000000001`, 73.14609999999999}}}], 
     FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{17.02, 21.043}, {
      11.975999999999999`, 21.043}, {11.975999999999999`, 21.526}, {17.02, 
      21.526}}}]}, 
    {Thickness[0.004273504273504274], 
     FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
      1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
      3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
      1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
      3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {
      1, 3, 3}}}, CompressedData["
1:eJxdVF1Ik1EYXjoUrVw/u9CbRXrRIuqmn13E4p39ohGoZzvfxS40sAuhP6iI
FUrQolXghd0UZEGBRRHRlYQUaCyNLdfFGDWwpi0EpU3BIAnrPd952okd+C6e
73t/nud53/NtPn66vbvS4XCs4qeDnwp+6ra/vFeICmof9kTn1lv0rtUXC1w3
OBbozKdighRsYxxSCTcEMRr2rLPoY2P2V+9NQQ51XBbZ9RhvUgFrDc5F3M8P
r7HIqQowTib41Fi03Nszco7x1nD/6FK1RcWheKuP8U8vv6iySKUPdSP/gtT1
TgriaG/4GnAf+D2Rmt9t4AlJ+RQTfIr475KamG7PmKAT6lSi/iej1+b3w+Bm
lt+4bLDdryJImYdn/LV1FjH7gfqaoOZXBf9cQbp7h8+KpPMD9c7QhqDWs1SG
5wweY3r9X2Up366XkaX6dv9JWepvx49DD/O7xOG5t5Ies32xgsEq3Tlr8GCB
DZ4WNM/ji8YlHeV2nVOYxwTyPwvi6Ig7KfV8M9CfAr80/E2DTwp4Cn5PIv6L
1PvzQdBOdXJSzzspSLnhnYa+BPZpBt/fC+3fDPiMG6zGkX1tsN3vBfQxHyUn
PyjIX8sTeoX+t6DnPvbjMr5fgR+n4EeXLO2b+uw/Bv/Cgs6qhF3wqw377Ub9
FqHn4UB8M/K/hTS/PdjnNyE975WOErbnt1fofXoAffvg3zPwDQhS8iLDUu/n
fvQflaToxg/i/iTA5xDuS9rgI+pF1mB7Hv/8O4D8WfgRAJ5Hfz9wEfP3AS9K
fV93GGzr22aw7ecW8GXcoAQ0wZ9F8PcIesTyMwvYtwbs0wLqbQT/Yhn+jf6N
8P+PpD61ULtRn++3snekBXqrcb+7MP/VuP8XMR8X4q+W3ff//o9/Aa3QWmE=

      "]], 
     FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
      1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
      3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
      1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
      0}}}, CompressedData["
1:eJxlk09I1EEUx1fdIPfQH/Kgh6w8efHUYTskvO2QwXaoDvMb0MMWY4c6aGCH
DOyihAVFbFBqvyAt15T2YMRv23YxV1zLzHaD2ugnmMXqwWLNP8F6iN7MPBjY
Bubw+c37vfd933lz6FzbmdYKj8dThjuAuxz37oZxu+2DgKtV0aal6xxG0kF/
ZUYAUmfVTQ6Xw9VehowUbbplWIZ33jF8QgbcLYm/V8J9JfGPONR42a5n8wLe
z+Ea5nA2n6lrfifgUqMvNzRCet4ImNqqb7k9ymGh2HUh8VrAz9Ox2p4xDtuI
HS/+59xQe6PP0fkbEgLOyxXjgDS+f0qAR644h+d2IXJ8VsBjDM+94rCcqXOv
ZAX8wXKpJP3/mfyY4HDS3xsIfSG9yDNB/LAooGcVBaQ4XEx0hO+vCOjvwzXN
4QiGt/4W4JOCZrX+o+uGZXz1BuV/q+sXN6h+mkMSj71xyrfDAryuQiRG9beZ
8st1yN9NpvqzHep/nWm9DsUXmNbrkF+/DB+Wa9Wwut9lpu8HWV5H+3em9HTH
SO8i0/29FHBAGuAyyKL8v3Gq/5XBjUAofyppeC2SDjqThpXfM8SYX/k3b/RL
PZOfiMstdV9pl+ZhL/nxjfw5aMGxUD4zmKf+aiy4huOwzyU/i+TXR+Ifun5x
juJzTOdPUT8ppuavF/vFU/xA/kQNq3xPDcv3VHhCeuLaj65BAVhtq35C9++3
6b1NM6Uv3C9AHrdkDav/lwyr+VzReioHaH7WmJr3zQEzD+p+HpBfZZbWa9N8
7LT0PD+kfvdYUPr+/wG75O9c
      "]], 
     FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
      1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
      3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
      1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
      3}}}, CompressedData["
1:eJxdVF9IU1EYn5uBqfWgsUEstlpb0aKycD1Y7evhnHtVaJI9FSiIQuc8KFgP
BtrLAo0wsJcFSmCgBS3YXiY4CIUkWLWCZrB8GLS9WFgNDSsa9d1zDjvUw334
ne+c73y/P+fu7xu6OOCw2Ww1+BH87Pg9JKnNMScHR3Dcmb9gwr7L/W29fo3P
FCKTrhMcdtlx4bwJf3Ij6/MhDgcSw1en/CbcH2yKwlkO9zZGw631Jgy04QFQ
9a9GFb/d7i7OrWpcmpt+7n1mAE1tVnLnOHzI4oYnBuyMu3ECDkk8vvHAAGu+
ymkOE858dnvKgAXc/uMUh+tYHr0jz186rvGtpczsyhGNX85igwCHdHujPYjn
LX4FH4cOhOMz6n4vh1DPYnvjYwOuYDni4QCtuJDSmGG78AuNvyDdnpwh9Il5
Ff5oCH0CPrW/bMByBgfwq342U/IJqPvqNRbz7NZYzO8yq+eF/h6z2t+FcnSj
/s1RJOxVegelXzE3h0cob+KYCTfWAy11Lo27JmODTQ6Nn6Lc6TKT+tSYcNcq
F5n0Z17pm2OST6fy4xWTfnymVSz4TdB/6xEKWxUc+A2T/vqoyMvSKpP8a6mc
d41J/UoETtZhAEoMOi09ckTO/01jkY+fGlt5GLEr/gUi/CcNKm/fCRxuwYZ7
ONzE9osNVObXrfJ2iIp+pYMqjx1U8I8GFO6i8AmvjwdV/zCV86D+K15caKbw
Hu1I7lW4TGT/JrU/T4QeY7XK/wSBIaSf2WJyvmki30NRY9H/ncai3wqT7xHP
W3qytPJjjYh8hJIMjmI5u4NKvnGld1jja1aebms8g/YP/5L8+xeUf33qvbxm
0Iv22JdV3tEPwccj8zn2m1X/D///P/4CsHXtDA==
      "]], 
     FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
       1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
        3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
       3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
       3}, {1, 3, 3}, {1, 3, 3}}}, {CompressedData["
1:eJxFU19oUnEUHkZW5IOMWGAjbMloXr33itkfCvxI7u8qtISkGHtYYAscWYGL
erFiFS0YQitGhIvwQSpYMbbyYYH14CAcrFg9tIHFWiBRBtGDjRF09Ljrw+Xy
3XPOd77znXN3RS8cP2NqaWnx0lN7f3KYh8ZOd+F9NbKSHRRYx0vz9GFZoM/a
c/DFHidWKZw+qiNWXnv6e0qCa7htcX5a5/gBN16FLCZpRxB2Kg/MydggUcKx
IHr6D30J+1QDl8Kp++evN3GUwqnXKvfTgih3ejZP/FRxm+ir3iAcBNttHuzr
mwlZOoII5P78+6h6cDE2WkluamL4KOGbbuATJLcwriPeeuNNsaSiYzIRGz2l
I1/MaLn9Kh6nC/ZJl856dys8z6qAs0QGzLo5viSQtiklx0kXtpOcyDuBRP6R
TXkmsZ5iw697Eq76ScBLgVtxMmhIYn1ZgeRYYCR+WeL6BwIrZN/COYn9Sgm0
Eb15QOL5rzTxYK3+bBPX/fA3+DON/jsF76PVxf03CsyQvNJNF2btNHBFwx1q
X97qxgDR+Zc1VBa6o9YnTWyi8UcOywau8y/KfA9UX9d/TcE42ZEwN/z4rPD+
tgn206vyfcgCVrI7k1JZT0Twfqcbfh8RME+09/YPq/iVpIROAVsvHYiusj9b
BPwkd+27wvv6oSEUpQMryLzfnIavNf8eullfWoOFzu/tJZeB6/vLSgau51ec
XP9cw17KzoedzP9BQ5XC3VNdPM9fzbj/u2SHT27+D+v/x3+91mgC
       "], CompressedData["
1:eJxTTMoPSmViYGCQBGIQHWy55UTZNW2HC9+DHy997ebw9pJvkkCAroPShqKM
iT/dHBTYGqc6N+s5bARy30q5Q+QL9B3q7E3jdvm7O0zNE2o+oGfgsHz2EYUN
Le4OKoYca2SyDBx2e/Iwae9E479F8M3idnnyMHg4/LlS8VIt0cAhHshl4vdw
WCUTlWLtD5WX8nAQaD5waqGtgUPmxLc19qoeDknW9/17lQ0cmLXbxW5qeTjM
d932+S8Dgm/fnfP8d6M+nD/BGSjArO/AywQUkPVwMAF6d1+7HsR/jB4OnkkC
EZY8ehD7nrk7FO2bL6U/Vxfi32PuDhuAyudb6TpMAlpvusTd4fvKj5d8L+lA
9Fe7O9RMBVpQr+PwExh8s0PcIfY76jiI3zz3PVgfGl4KOg4lQONqpN0h9v3R
hpjP4u6AHv4A9iihkg==
       "]}]}}, 
   {RGBColor[
    0.025908000000000042`, 0.033047999999999966`, 0.033864000000000005`], 
    Thickness[0.004273504273504274], Opacity[1.], CapForm["Round"], JoinForm[
    "Round"], 
    JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{124.27055693069308`, 
     44.9063}, {124.27055693069308`, 12.3733}, {19.346448019801972`, 
     12.3733}}},
     CurveClosed->{0}]}, {
    {RGBColor[
     0.025908000000000042`, 0.033047999999999966`, 0.033864000000000005`], 
     Opacity[1.], CapForm["Round"], JoinForm["Round"], 
     JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}}}, {{{130.9326, 
      45.09570000000001}, {129.0526, 45.91470000000001}, {126.6456, 
      46.40670000000001}, {124.0206, 46.40670000000001}, {121.3956, 
      46.40670000000001}, {118.98860000000002`, 45.91470000000001}, {117.1086,
       45.09570000000001}}},
      CurveClosed->{0}]}, 
    {RGBColor[
     0.025908000000000042`, 0.033047999999999966`, 0.033864000000000005`], 
     Opacity[1.], CapForm["Round"], JoinForm["Round"], 
     JoinedCurveBox[{{{0, 2, 0}}}, {{{130.9326, 51.197300000000006`}, {
      117.1086, 51.197300000000006`}}},
      CurveClosed->{0}]}}, 
   {RGBColor[
    0.025908000000000042`, 0.033047999999999966`, 0.033864000000000005`], 
    Thickness[0.004273504273504274], Opacity[1.], CapForm["Round"], JoinForm[
    "Round"], 
    JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{124.14677274870343`, 
     51.909990909090965`}, {124.14677274870343`, 82.471293939394}, {
     104.161228194248, 82.471293939394}}},
     CurveClosed->{0}]}, 
   FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
     3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 
    3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
    3}}}, CompressedData["
1:eJxdVE1IlFEUnUYaJppCgwpNxAmZfqbB2Yz9LPSWyptXTEWa2Huk9GFQKIlW
Qz9STZSKE0GFuSiYIKZRilCQFgZaaGAGJkOLCmxRUm4MdJGLILrz3cs8cPEW
5/3cd8655z2v1XrsdI7D4ViFoxqHE0dVvOXXX4+GHH/Xpi/TEvYNT0ZHdxp8
aTRRUAoa1jlx4q2EfwOL6UhEw9bB9jP3khKCsyWumNJwf6GjItQjYSqKB07x
eqvBM8s1P5LHDZ5LPpooLpdwB68fOKnh6zRu8EvYUL93eLJOwxAeXyiSYPM7
oqEb2SznSTiH2xeFhgu43LGWz5cb7I71VsZDBj+sxAIBDa+lx+nPY33bNBxE
2FXI570ayhpGpGe7hFe4nCjSACGcKDP4LJarEAb/RrkNteyPl7HF/vh4f5uE
m0inxc/1brCeAN/XY7DN567BNv8+c972P2Hqb0Y7atB/nwsFe9nv58wnX0MK
7R18KWEpHbFy1xv8pKB0tuSnymKFdkfHFfkTk1CIy65nivrjY3+6Fen5ECZ+
lxX1o9lgW597xfpHAfPYrvR1Rf19KigvcUX6bwni26fIvyYBTbkYgH4FhzJ+
1Ari/8ZgOx9pg+08zCnS3yio/38U5e2igKMWFnRruIblR+KC/MvnvKW43g7O
45Qg/QHGMwI+4fX1u9nfMeaD/r8rxokHAl5gOWsj4zauv5r3nxDkxzz7ExTw
DeX3vmd+WwS9h5TBdv1Og+16zYreY5D9rON+aEH5OKBgV+a53ma9e9jvMYPP
Z/K0JpzFj7H97VfCpP8w8/sepvdyVUEjtse5n/Pez/4mOJ+fVfZ/WPl//AdT
j+W3
    "]]},
  AspectRatio->Automatic,
  ImagePadding->{{0., 0.}, {0., 0.}},
  ImageSize->{234., 108.},
  PlotRange->{{0., 234.}, {0., 108.}},
  PlotRangePadding->Automatic]], "Picture",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356345077`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->1897036801,ExpressionUUID->"41486864-e2ce-4322-9a64-04d62cfdd09f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"components", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"L", " ", 
       RowBox[{
        SuperscriptBox[
         SubscriptBox["i", "2"], "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], "\[Equal]", 
      RowBox[{
       SubscriptBox["v", "l"], "[", "t", "]"}]}], ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        SubscriptBox["v", "c1"], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
      FractionBox[
       RowBox[{
        SubscriptBox["i", "1"], "[", "t", "]"}], 
       SubscriptBox["C", "1"]]}], ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        SubscriptBox["v", "c2"], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
      FractionBox[
       RowBox[{
        SubscriptBox["i", "2"], "[", "t", "]"}], 
       SubscriptBox["C", "2"]]}]}], "}"}]}], ";", 
  RowBox[{"kirchhoff", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"R", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SubscriptBox["i", "1"], "[", "t", "]"}], "+", 
         RowBox[{
          SubscriptBox["i", "2"], "[", "t", "]"}]}], ")"}]}], "\[Equal]", 
      RowBox[{
       SubscriptBox["v", "r"], "[", "t", "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["v", "c1"], "[", "t", "]"}], "+", 
       RowBox[{
        SubscriptBox["v", "r"], "[", "t", "]"}]}], "\[Equal]", 
      RowBox[{
       SubscriptBox["v", "s"], "[", "t", "]"}]}], ",", 
     RowBox[{
      RowBox[{
       SubscriptBox["v", "c1"], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{
        SubscriptBox["v", "l"], "[", "t", "]"}], "+", 
       RowBox[{
        SubscriptBox["v", "c2"], "[", "t", "]"}]}]}]}], "}"}]}], 
  ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356355076`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[1]:=",
 CellID->365254080,ExpressionUUID->"d4ea09dc-9426-45f3-8dba-4b5de63e42a1"],

Cell["\<\
The resulting state-space model includes the algebraic constraints:\
\>", "ExampleText",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356355076`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->60159605,ExpressionUUID->"4d33f731-07b2-4163-9586-e2fdf07fcb62"],

Cell[BoxData[
 RowBox[{"StateSpaceModel", "[", 
  RowBox[{
   RowBox[{"Join", "[", 
    RowBox[{"components", ",", "kirchhoff"}], "]"}], ",", 
   RowBox[{"{", " ", 
    RowBox[{
     RowBox[{
      SubscriptBox["v", "c1"], "[", "t", "]"}], ",", " ", 
     RowBox[{
      SubscriptBox["v", "c2"], "[", "t", "]"}], ",", " ", 
     RowBox[{
      SubscriptBox["i", "2"], "[", "t", "]"}], ",", 
     RowBox[{
      SubscriptBox["i", "1"], "[", "t", "]"}], ",", 
     RowBox[{
      SubscriptBox["v", "r"], "[", "t", "]"}], ",", " ", 
     RowBox[{
      SubscriptBox["v", "l"], "[", "t", "]"}]}], "}"}], ",", " ", 
   RowBox[{
    SubscriptBox["v", "s"], "[", "t", "]"}], ",", " ", 
   RowBox[{
    SubscriptBox["v", "c2"], "[", "t", "]"}], ",", "t"}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356355076`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[2]:=",
 CellID->19927795,ExpressionUUID->"ffd27cc7-fe5d-4d27-930b-54ae0603c2aa"],

Cell[BoxData[
 TemplateBox[{"0", "0", 
   RowBox[{"-", "L"}], "0", "0", "0", "0", "0", "0", "0", "0", 
   RowBox[{"-", "1"}], "0", 
   RowBox[{"-", "1"}], "0", "0", "0", "0", "0", "0", "0", "0", 
   RowBox[{"-", 
     FractionBox["1", 
      SubscriptBox["C", "1"]]}], "0", "0", "0", "0", 
   RowBox[{"-", "1"}], "0", "0", "0", "0", "0", "0", 
   RowBox[{"-", 
     FractionBox["1", 
      SubscriptBox["C", "2"]]}], "0", "0", "0", "0", "0", "0", "0", "0", "0", 
   "0", "0", "0", "R", "R", 
   RowBox[{"-", "1"}], "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", 
   "0", "1", "0", 
   RowBox[{"-", "1"}], "0", "0", "0", "0", "0", "0", "1", 
   RowBox[{"-", "1"}], "0", "0", "0", 
   RowBox[{"-", "1"}], "0", "0", "1", "0", "0", "0", "0", "0", 
   InterpretationBox["\[InvisibleSpace]", None], {
   StateSpaceModel, {
    False, False, {
     False, False}}, {$CellContext`stname1, $CellContext`stname2, \
$CellContext`stname3, $CellContext`stname4, $CellContext`stname5, \
$CellContext`stname6}, {{Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$, 
      Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$, 
      Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$}}, Identity, 
    Automatic, 1, 1, 6, 1, {}, {False, False}, True, Automatic, None, {",", 
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               SubscriptBox["i", "2"], "[", "t", "]"}], ",", "0"}], "}"}], 
         ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               SubscriptBox["v", "c1"], "[", "t", "]"}], ",", "0"}], "}"}], 
         ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               SubscriptBox["v", "l"], "[", "t", "]"}], ",", "0"}], "}"}], 
         ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               SubscriptBox["i", "1"], "[", "t", "]"}], ",", "0"}], "}"}], 
         ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               SubscriptBox["v", "r"], "[", "t", "]"}], ",", "0"}], "}"}], 
         ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               SubscriptBox["v", "c2"], "[", "t", "]"}], ",", "0"}], "}"}]}], 
       "}"}], ",", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{
           RowBox[{
             SubscriptBox["v", "s"], "[", "t", "]"}], ",", "0"}], "}"}], 
       "}"}], ",", "Automatic", ",", "t"}}, {}},
  "StateSpaceModelFull",
  BaseStyle->{NumberMarks -> False},
  DisplayFunction->(TagBox[
    SubsuperscriptBox[
     RowBox[{"(", 
       GridBox[{{#, #2, #3, #4, #5, #6, #7, #8, #9, #10, #11, #12, #13}, \
{#14, #15, #16, #17, #18, #19, #20, #21, #22, #23, #24, #25, #26}, {#27, #28, \
#29, #30, #31, #32, #33, #34, #35, #36, #37, #38, #39}, {#40, #41, #42, #43, \
#44, #45, #46, #47, #48, #49, #50, #51, #52}, {#53, #54, #55, #56, #57, #58, \
#59, #60, #61, #62, #63, #64, #65}, {#66, #67, #68, #69, #70, #71, #72, #73, \
#74, #75, #76, #77, #78}, {
         "", "", "", "", "", "", #79, #80, #81, #82, #83, #84, #85}}, 
        AllowedDimensions -> {13, 7}, AutoDelete -> False, 
        AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
        BaseStyle -> {Deployed -> False}, GridBoxItemStyle -> {}, 
        GridBoxDividers -> {
         "Rows" -> {False, False, False, False, False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}, 
          "Columns" -> {False, False, False, False, False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], False, False, False, False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}}, 
        GridBoxBackground -> {"Rows" -> {{
             GrayLevel[1], 
             RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #86, 
     ButtonBox[
      GraphicsBox[{
        RGBColor[0.8, 0.85, 0.85], 
        EdgeForm[
         RGBColor[0.6, 0.7, 0.7]], 
        RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
        InsetBox[
         StyleBox[
         "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
          GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
          FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
      ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
        ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
      None], MultilineFunction -> None], 
    EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
          FrontEnd`Value[
           FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
      True}]]& ),
  InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{7, 12}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{20, 25}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{33, 38}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{46, 51}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{59, 64}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{72, 77}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{13, 13}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{26, 26}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{39, 39}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{52, 52}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{65, 65}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{78, 78}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{79, 84}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{85, 85}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{1, 6}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{14, 19}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{27, 32}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{40, 45}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{53, 58}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{66, 71}, ","], "}"}], "}"}], "}"}], ",", 
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               SubscriptBox["i", "2"], "[", "t", "]"}], ",", "0"}], "}"}], 
         ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               SubscriptBox["v", "c1"], "[", "t", "]"}], ",", "0"}], "}"}], 
         ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               SubscriptBox["v", "l"], "[", "t", "]"}], ",", "0"}], "}"}], 
         ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               SubscriptBox["i", "1"], "[", "t", "]"}], ",", "0"}], "}"}], 
         ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               SubscriptBox["v", "r"], "[", "t", "]"}], ",", "0"}], "}"}], 
         ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               SubscriptBox["v", "c2"], "[", "t", "]"}], ",", "0"}], "}"}]}], 
       "}"}], ",", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{
           RowBox[{
             SubscriptBox["v", "s"], "[", "t", "]"}], ",", "0"}], "}"}], 
       "}"}], ",", "Automatic", ",", "t", ",", "SamplingPeriod", "->", 
     RowBox[{#86}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
  Tooltip->StateSpaceModel]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356355076`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[2]=",
 CellID->1293182556,ExpressionUUID->"82877899-d3de-41e2-b3e1-8dc4e0692cce"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      Part[
       Dynamic[
        CurrentValue[
         EvaluationNotebook[], {
         TaggingRules, "Openers", "ExampleSubsection", "15"}, Closed]], 1], 
      Alternatives[Open, True]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{14., {0.45000000000000107`, 13.549999999999999`}}]],
  ExpressionUUID->"529985fa-416c-44b8-b84d-21047343b4bf"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"11650c49-81ab-4be0-bea7-d6cae0fe6f37"],
 "Mechanical Systems",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(4)", "ExampleCount",ExpressionUUID->
  "119efd8b-cb43-4ee2-9d7f-22230954afdd"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356355076`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->74149643,ExpressionUUID->"c40a3ffb-fdbf-48d1-b6f1-ab7f189bb250"],

Cell["Linearize an inverted pendulum model:", "ExampleText",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356355076`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->937682655,ExpressionUUID->"d281c0e1-c3be-4d69-9cb5-63ea615d08ea"],

Cell[BoxData[
 RowBox[{"StateSpaceModel", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"M", "+", "m"}], ")"}], 
        RowBox[{
         RowBox[{"x", "''"}], "[", "t", "]"}]}], "-", 
       RowBox[{"m", " ", "l", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
        SuperscriptBox[
         RowBox[{
          RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "2"]}], "+", 
       RowBox[{"m", " ", "l", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
        RowBox[{
         RowBox[{"\[Theta]", "''"}], "[", "t", "]"}]}]}], "\[Equal]", 
      RowBox[{"F", "[", "t", "]"}]}], ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"m", " ", 
        RowBox[{
         RowBox[{"x", "''"}], "[", "t", "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
       RowBox[{"m", " ", "l", " ", 
        RowBox[{
         RowBox[{"\[Theta]", "''"}], "[", "t", "]"}]}]}], "\[Equal]", 
      RowBox[{"m", " ", "g", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Theta]", "[", "t", "]"}], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x", "[", "t", "]"}], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"x", "'"}], "[", "t", "]"}], ",", "0"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"F", "[", "t", "]"}], ",", "0"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Theta]", "[", "t", "]"}], ",", 
     RowBox[{"x", "[", "t", "]"}]}], "}"}], ",", "t"}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356365013`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[1]:=",
 CellID->342301562,ExpressionUUID->"01cc003e-2cda-4f45-8487-c76bb0786d30"],

Cell[BoxData[
 TemplateBox[{"0", "1", "0", "0", "0", 
   RowBox[{"-", 
     FractionBox[
      RowBox[{"g", " ", 
        RowBox[{"(", 
          RowBox[{
            RowBox[{"-", "m"}], "-", "M"}], ")"}]}], 
      RowBox[{"l", " ", "M"}]]}], "0", "0", "0", 
   RowBox[{"-", 
     FractionBox["1", 
      RowBox[{"l", " ", "M"}]]}], "0", "0", "0", "1", "0", 
   RowBox[{"-", 
     FractionBox[
      RowBox[{"g", " ", "m"}], "M"]}], "0", "0", "0", 
   FractionBox["1", "M"], "1", "0", "0", "0", "0", "0", "0", "1", "0", "0", 
   InterpretationBox["\[InvisibleSpace]", None], {
   StateSpaceModel, {
    False, False, {
     False, False}}, {$CellContext`stname1, $CellContext`stname2, \
$CellContext`stname3, $CellContext`stname4}, {{Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$, 
      Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$}}, Identity, 
    Automatic, 1, 2, 4, 1, {}, {False, False}, False, Automatic, None, {",", 
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"\[Theta]", "[", "t", "]"}], ",", "0"}], "}"}], ",", 
         SubscriptBox["\[FormalX]", "1"], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"x", "[", "t", "]"}], ",", "0"}], "}"}], ",", 
         SubscriptBox["\[FormalX]", "2"]}], "}"}], ",", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{
           RowBox[{"F", "[", "t", "]"}], ",", "0"}], "}"}], "}"}], ",", 
     "Automatic", ",", "t"}}, {}},
  "StateSpaceModelFull",
  BaseStyle->{NumberMarks -> False},
  DisplayFunction->(TagBox[
    SubsuperscriptBox[
     RowBox[{"(", 
       GridBox[{{#, #2, #3, #4, #5}, {#6, #7, #8, #9, #10}, {#11, #12, #13, \
#14, #15}, {#16, #17, #18, #19, #20}, {#21, #22, #23, #24, #25}, {#26, #27, \
#28, #29, #30}}, AllowedDimensions -> {5, 6}, AutoDelete -> False, 
        AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
        BaseStyle -> {Deployed -> False}, GridBoxItemStyle -> {}, 
        GridBoxDividers -> {"Rows" -> {False, False, False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}, 
          "Columns" -> {False, False, False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}}, 
        GridBoxBackground -> {"Rows" -> {{
             GrayLevel[1], 
             RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #31, 
     ButtonBox[
      GraphicsBox[{
        RGBColor[0.8, 0.85, 0.85], 
        EdgeForm[
         RGBColor[0.6, 0.7, 0.7]], 
        RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
        InsetBox[
         StyleBox[
         "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
          GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
          FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
      ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
        ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
      None], MultilineFunction -> None], 
    EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
          FrontEnd`Value[
           FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
      True}]]& ),
  InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{1, 4}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{6, 9}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{11, 14}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{16, 19}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{5, 5}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{10, 10}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{15, 15}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{20, 20}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{21, 24}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{26, 29}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{25, 25}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{30, 30}, ","], "}"}], "}"}], "}"}], ",", 
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"\[Theta]", "[", "t", "]"}], ",", "0"}], "}"}], ",", 
         SubscriptBox["\[FormalX]", "1"], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"x", "[", "t", "]"}], ",", "0"}], "}"}], ",", 
         SubscriptBox["\[FormalX]", "2"]}], "}"}], ",", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{
           RowBox[{"F", "[", "t", "]"}], ",", "0"}], "}"}], "}"}], ",", 
     "Automatic", ",", "t", ",", "SamplingPeriod", "->", 
     RowBox[{#31}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
  Tooltip->StateSpaceModel]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356365013`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[1]=",
 CellID->2004443316,ExpressionUUID->"1e36e475-5b29-45df-a05e-55850bf2a34c"],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "289afe63-139d-4273-bc52-ec83d561a77f"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356365013`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->132740086,ExpressionUUID->"9860bc4e-7c79-4573-80f6-cec7956d8d1c"],

Cell["\<\
State-space model of a typical mechanical mass-spring-damper system:\
\>", "ExampleText",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356365013`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->146416294,ExpressionUUID->"9e2525fb-4190-421f-94ec-54da82e43953"],

Cell[BoxData[
 RowBox[{"StateSpaceModel", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"M", " ", 
       RowBox[{
        RowBox[{"x", "''"}], "[", "t", "]"}]}], "+", 
      RowBox[{"C", " ", 
       RowBox[{
        RowBox[{"x", "'"}], "[", "t", "]"}]}], "+", 
      RowBox[{"K", " ", 
       RowBox[{"x", "[", "t", "]"}]}]}], "\[Equal]", 
     RowBox[{"F", "[", "t", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x", "[", "t", "]"}], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"x", "'"}], "[", "t", "]"}], ",", "0"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"F", "[", "t", "]"}], ",", "0"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "[", "t", "]"}], "}"}], ",", "t"}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356365013`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[1]:=",
 CellID->226853304,ExpressionUUID->"2c784ffb-393f-40ee-9ec0-f3292abd5122"],

Cell[BoxData[
 TemplateBox[{"0", "1", "0", 
   RowBox[{"-", 
     FractionBox["K", "M"]}], 
   RowBox[{"-", 
     FractionBox["C", "M"]}], 
   FractionBox["1", "M"], "1", "0", "0", 
   InterpretationBox["\[InvisibleSpace]", None], {
   StateSpaceModel, {
    False, False, {
     False, False}}, {$CellContext`stname1, $CellContext`stname2}, {{
     Control`CommonDump`$DUMMY$}, {Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$}}, Identity, 
    Automatic, 1, 1, 2, 1, {}, {False, False}, False, Automatic, None, {",", 
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"x", "[", "t", "]"}], ",", "0"}], "}"}], ",", 
         SubscriptBox["\[FormalX]", "1"]}], "}"}], ",", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{
           RowBox[{"F", "[", "t", "]"}], ",", "0"}], "}"}], "}"}], ",", 
     "Automatic", ",", "t"}}, {}},
  "StateSpaceModelFull",
  BaseStyle->{NumberMarks -> False},
  DisplayFunction->(TagBox[
    SubsuperscriptBox[
     RowBox[{"(", 
       GridBox[{{#, #2, #3}, {#4, #5, #6}, {#7, #8, #9}}, 
        AllowedDimensions -> {3, 3}, AutoDelete -> False, 
        AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
        BaseStyle -> {Deployed -> False}, GridBoxItemStyle -> {}, 
        GridBoxDividers -> {"Rows" -> {False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}, "Columns" -> {False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}}, 
        GridBoxBackground -> {"Rows" -> {{
             GrayLevel[1], 
             RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #10, 
     ButtonBox[
      GraphicsBox[{
        RGBColor[0.8, 0.85, 0.85], 
        EdgeForm[
         RGBColor[0.6, 0.7, 0.7]], 
        RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
        InsetBox[
         StyleBox[
         "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
          GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
          FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
      ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
        ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
      None], MultilineFunction -> None], 
    EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
          FrontEnd`Value[
           FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
      True}]]& ),
  InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{1, 2}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{4, 5}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{3, 3}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{6, 6}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{7, 8}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{9, 9}, ","], "}"}], "}"}], "}"}], ",", 
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"x", "[", "t", "]"}], ",", "0"}], "}"}], ",", 
         SubscriptBox["\[FormalX]", "1"]}], "}"}], ",", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{
           RowBox[{"F", "[", "t", "]"}], ",", "0"}], "}"}], "}"}], ",", 
     "Automatic", ",", "t", ",", "SamplingPeriod", "->", 
     RowBox[{#10}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
  Tooltip->StateSpaceModel]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356365013`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[1]=",
 CellID->526119804,ExpressionUUID->"085b9bb4-d97a-44a1-8999-1d80c4d4f788"],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "0d758bca-231d-4028-9cc3-39af7ffd8a13"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356375017`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->605128462,ExpressionUUID->"43c6bd75-2a07-4a95-9d47-3024086bc7f6"],

Cell["A two-stage mass-spring-damper system with delayed feedback:", \
"ExampleText",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356375017`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->602204204,ExpressionUUID->"b2cbcf03-28f3-482e-9cdb-f2d219e5f60e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"eqns", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"m2", " ", 
        RowBox[{
         RowBox[{"x2", "''"}], "[", "t", "]"}]}], "+", 
       RowBox[{"b2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"x2", "'"}], "[", "t", "]"}], "-", " ", 
          RowBox[{
           RowBox[{"x1", "'"}], "[", "t", "]"}]}], ")"}]}], "+", 
       RowBox[{"k2", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"x2", "[", "t", "]"}], "-", 
          RowBox[{"x1", "[", "t", "]"}]}], ")"}]}], "-", 
       RowBox[{"g", " ", 
        RowBox[{"x1", "[", 
         RowBox[{"t", "-", "\[Tau]"}], "]"}]}]}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"m1", " ", 
        RowBox[{
         RowBox[{"x1", "''"}], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"b1", "+", "b2"}], ")"}], 
        RowBox[{
         RowBox[{"x1", "'"}], "[", "t", "]"}]}], "-", 
       RowBox[{"b2", " ", 
        RowBox[{
         RowBox[{"x2", "'"}], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"k1", "+", "k2"}], ")"}], 
        RowBox[{"x1", "[", "t", "]"}]}], " ", "-", " ", 
       RowBox[{"k2", " ", 
        RowBox[{"x2", "[", "t", "]"}]}], "+", 
       RowBox[{"g", " ", 
        RowBox[{"x1", "[", 
         RowBox[{"t", "-", "\[Tau]"}], "]"}]}]}], "\[Equal]", "0"}]}], 
    "}"}]}], ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356375017`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[1]:=",
 CellID->743195659,ExpressionUUID->"3d7330d0-93c8-4663-8dcb-e118a03a0015"],

Cell[BoxData[
 RowBox[{"StateSpaceModel", "[", 
  RowBox[{"eqns", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x2", "[", "t", "]"}], ",", 
     RowBox[{
      RowBox[{"x2", "'"}], "[", "t", "]"}], ",", 
     RowBox[{"x1", "[", "t", "]"}], ",", 
     RowBox[{
      RowBox[{"x1", "'"}], "[", "t", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"u", "[", "t", "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x2", "[", "t", "]"}], ",", 
     RowBox[{"x1", "[", "t", "]"}]}], "}"}], ",", "t"}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356375017`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[2]:=",
 CellID->763010187,ExpressionUUID->"3982dd7f-76f9-4007-bab2-7f2da7458bbb"],

Cell[BoxData[
 TemplateBox[{"0", "1", "0", "0", "0", 
   RowBox[{"-", 
     FractionBox["k2", "m2"]}], 
   RowBox[{"-", 
     FractionBox["b2", "m2"]}], 
   RowBox[{"-", 
     FractionBox[
      RowBox[{
        RowBox[{"-", "k2"}], "-", 
        RowBox[{"g", " ", 
          TemplateBox[{"\[Tau]"}, "SystemsModelDelay"]}]}], "m2"]}], 
   FractionBox["b2", "m2"], "0", "0", "0", "0", "1", "0", 
   FractionBox["k2", "m1"], 
   FractionBox["b2", "m1"], 
   RowBox[{"-", 
     FractionBox[
      RowBox[{"k1", "+", "k2", "+", 
        RowBox[{"g", " ", 
          TemplateBox[{"\[Tau]"}, "SystemsModelDelay"]}]}], "m1"]}], 
   RowBox[{"-", 
     FractionBox[
      RowBox[{"b1", "+", "b2"}], "m1"]}], "0", "1", "0", "0", "0", "0", "0", 
   "0", "1", "0", "0", 
   InterpretationBox["\[InvisibleSpace]", None], {
   StateSpaceModel, {
    False, False, {
     False, False}}, {$CellContext`stname1, $CellContext`stname2, \
$CellContext`stname3, $CellContext`stname4}, {{Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$, 
      Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$}}, Identity, 
    Automatic, 1, 2, 4, 1, {}, {False, False}, False, Automatic, None, {",", 
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"x2", "[", "t", "]"}], ",", "0"}], "}"}], ",", 
         SubscriptBox["\[FormalX]", "1"], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"x1", "[", "t", "]"}], ",", "0"}], "}"}], ",", 
         SubscriptBox["\[FormalX]", "2"]}], "}"}], ",", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{
           RowBox[{"u", "[", "t", "]"}], ",", "0"}], "}"}], "}"}], ",", 
     "Automatic", ",", "t"}}, {}},
  "StateSpaceModelFull",
  BaseStyle->{NumberMarks -> False},
  DisplayFunction->(TagBox[
    SubsuperscriptBox[
     RowBox[{"(", 
       GridBox[{{#, #2, #3, #4, #5}, {#6, #7, #8, #9, #10}, {#11, #12, #13, \
#14, #15}, {#16, #17, #18, #19, #20}, {#21, #22, #23, #24, #25}, {#26, #27, \
#28, #29, #30}}, AllowedDimensions -> {5, 6}, AutoDelete -> False, 
        AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
        BaseStyle -> {Deployed -> False}, GridBoxItemStyle -> {}, 
        GridBoxDividers -> {"Rows" -> {False, False, False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}, 
          "Columns" -> {False, False, False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}}, 
        GridBoxBackground -> {"Rows" -> {{
             GrayLevel[1], 
             RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #31, 
     ButtonBox[
      GraphicsBox[{
        RGBColor[0.8, 0.85, 0.85], 
        EdgeForm[
         RGBColor[0.6, 0.7, 0.7]], 
        RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
        InsetBox[
         StyleBox[
         "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
          GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
          FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
      ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
        ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
      None], MultilineFunction -> None], 
    EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
          FrontEnd`Value[
           FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
      True}]]& ),
  InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{1, 4}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{6, 9}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{11, 14}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{16, 19}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{5, 5}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{10, 10}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{15, 15}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{20, 20}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{21, 24}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{26, 29}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{25, 25}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{30, 30}, ","], "}"}], "}"}], "}"}], ",", 
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"x2", "[", "t", "]"}], ",", "0"}], "}"}], ",", 
         SubscriptBox["\[FormalX]", "1"], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"x1", "[", "t", "]"}], ",", "0"}], "}"}], ",", 
         SubscriptBox["\[FormalX]", "2"]}], "}"}], ",", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{
           RowBox[{"u", "[", "t", "]"}], ",", "0"}], "}"}], "}"}], ",", 
     "Automatic", ",", "t", ",", "SamplingPeriod", "->", 
     RowBox[{#31}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
  Tooltip->StateSpaceModel]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356375017`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[2]=",
 CellID->679627351,ExpressionUUID->"0305acb0-8f9a-4615-85f2-57d5ce4a5e21"],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "8e93a912-77e2-42c6-961d-c16d8bd66ed1"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356375017`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->166941181,ExpressionUUID->"22875434-2557-4c2b-9606-06e1f2ac0820"],

Cell["\<\
The cutting force required in a lathe depends on the cutting depth from the \
previous rotation:\
\>", "ExampleText",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356385164`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->555800297,ExpressionUUID->"f773d9c2-99e8-451b-b68a-2f9765167135"],

Cell[BoxData[
 RowBox[{"StateSpaceModel", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"k", " ", 
      RowBox[{"x", "[", "t", "]"}]}], "+", 
     RowBox[{"c", " ", 
      RowBox[{
       SuperscriptBox["x", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}], "+", 
     RowBox[{"m", " ", 
      RowBox[{
       SuperscriptBox["x", "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}]}], "\[Equal]", 
    RowBox[{
     RowBox[{"-", "\[Alpha]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"f", "[", "t", "]"}], "+", 
       RowBox[{"x", "[", "t", "]"}], "-", 
       RowBox[{"x", "[", 
        RowBox[{"t", "-", "\[Tau]"}], "]"}]}], ")"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "[", "t", "]"}], ",", 
     RowBox[{
      RowBox[{"x", "'"}], "[", "t", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"f", "[", "t", "]"}], "}"}], ",", 
   RowBox[{"x", "[", "t", "]"}], ",", "t"}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356385164`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[1]:=",
 CellID->674081182,ExpressionUUID->"9efc0c40-ac23-4fa5-9ed5-0ee4b75900f5"],

Cell[BoxData[
 TemplateBox[{"0", "1", "0", 
   RowBox[{"-", 
     FractionBox[
      RowBox[{"k", "+", "\[Alpha]", "-", 
        RowBox[{"\[Alpha]", " ", 
          TemplateBox[{"\[Tau]"}, "SystemsModelDelay"]}]}], "m"]}], 
   RowBox[{"-", 
     FractionBox["c", "m"]}], 
   RowBox[{"-", 
     FractionBox["\[Alpha]", "m"]}], "1", "0", "0", 
   InterpretationBox["\[InvisibleSpace]", None], {
   StateSpaceModel, {
    False, False, {
     False, False}}, {$CellContext`stname1, $CellContext`stname2}, {{
     Control`CommonDump`$DUMMY$}, {Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$}}, Identity, 
    Automatic, 1, 1, 2, 1, {}, {False, False}, False, Automatic, None, {",", 
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"x", "[", "t", "]"}], ",", "0"}], "}"}], ",", 
         SubscriptBox["\[FormalX]", "1"]}], "}"}], ",", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{
           RowBox[{"f", "[", "t", "]"}], ",", "0"}], "}"}], "}"}], ",", 
     "Automatic", ",", "t"}}, {}},
  "StateSpaceModelFull",
  BaseStyle->{NumberMarks -> False},
  DisplayFunction->(TagBox[
    SubsuperscriptBox[
     RowBox[{"(", 
       GridBox[{{#, #2, #3}, {#4, #5, #6}, {#7, #8, #9}}, 
        AllowedDimensions -> {3, 3}, AutoDelete -> False, 
        AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
        BaseStyle -> {Deployed -> False}, GridBoxItemStyle -> {}, 
        GridBoxDividers -> {"Rows" -> {False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}, "Columns" -> {False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}}, 
        GridBoxBackground -> {"Rows" -> {{
             GrayLevel[1], 
             RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #10, 
     ButtonBox[
      GraphicsBox[{
        RGBColor[0.8, 0.85, 0.85], 
        EdgeForm[
         RGBColor[0.6, 0.7, 0.7]], 
        RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
        InsetBox[
         StyleBox[
         "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
          GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
          FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
      ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
        ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
      None], MultilineFunction -> None], 
    EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
          FrontEnd`Value[
           FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
      True}]]& ),
  InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{1, 2}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{4, 5}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{3, 3}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{6, 6}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{7, 8}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{9, 9}, ","], "}"}], "}"}], "}"}], ",", 
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"x", "[", "t", "]"}], ",", "0"}], "}"}], ",", 
         SubscriptBox["\[FormalX]", "1"]}], "}"}], ",", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{
           RowBox[{"f", "[", "t", "]"}], ",", "0"}], "}"}], "}"}], ",", 
     "Automatic", ",", "t", ",", "SamplingPeriod", "->", 
     RowBox[{#10}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
  Tooltip->StateSpaceModel]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356385164`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[1]=",
 CellID->1099810733,ExpressionUUID->"738c5dfc-dc21-44e9-9b72-cd193d2a88a5"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      Part[
       Dynamic[
        CurrentValue[
         EvaluationNotebook[], {
         TaggingRules, "Openers", "ExampleSection", "5"}, Closed]], 1], 
      Alternatives[Open, True]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{14., {0.45000000000000107`, 13.549999999999999`}}]],
  ExpressionUUID->"efa897a3-5987-4ab1-a501-6fa30837aa33"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"29532ee3-3d81-491a-a5c5-b3f7492feb60"],
 "Properties & Relations",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(14)", "ExampleCount",ExpressionUUID->
  "35dc7746-26f9-4675-a681-cd1271749a2a"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356385164`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->2123667759,ExpressionUUID->"276bfb20-d798-4a21-823c-61aba153f5b0"],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "78a0c3df-af89-4445-be27-46f15433481d"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356385164`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->197152038,ExpressionUUID->"89673e7c-af9e-44ce-ab79-e7f7a6a53396"],

Cell["The state-space representation of a system is not unique:", \
"ExampleText",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235639499*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->617935138,ExpressionUUID->"a31e7b98-e8b4-4a8e-b041-09ea903cdaa2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"ssm", "=", " ", 
    RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2.7121"}], ",", "3.9238"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "4.2371"}], ",", "1.9429"}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"-", "2.3857"}], "}"}], ",", 
         RowBox[{"{", "4.4438", "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], "}"}]}], "}"}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ssmt", "=", 
    RowBox[{"StateSpaceTransform", "[", 
     RowBox[{"ssm", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.842"}], ",", "2.6891"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "4.6641"}], ",", "3.3886"}], "}"}]}], "}"}]}], 
     "]"}]}]}], "}"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235639499*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[1]:=",
 CellID->404947474,ExpressionUUID->"6cceb454-0f50-4990-85d3-be19dcdff88b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
     RowBox[{"-", "2.7121`"}], "3.9238`", 
     RowBox[{"-", "2.3857`"}], 
     RowBox[{"-", "4.2371`"}], "1.9429`", "4.4438`", "1", "1", "0", 
     InterpretationBox["\[InvisibleSpace]", None], {
     StateSpaceModel, {
      False, False, {
       False, False}}, {$CellContext`stname1, $CellContext`stname2}, {{
       Control`CommonDump`$DUMMY$}, {Control`CommonDump`$DUMMY$}, {
       Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$}}, Identity, 
      Automatic, 1, 1, 2, 1, {}, {False, False}, False, Automatic, None, 
      Automatic}, {}},
    "StateSpaceModelFull",
    BaseStyle->{NumberMarks -> False},
    DisplayFunction->(TagBox[
      SubsuperscriptBox[
       RowBox[{"(", 
         GridBox[{{#, #2, #3}, {#4, #5, #6}, {#7, #8, #9}}, 
          AllowedDimensions -> {3, 3}, AutoDelete -> False, 
          AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
          BaseStyle -> {Deployed -> False}, GridBoxItemStyle -> {}, 
          GridBoxDividers -> {"Rows" -> {False, False, 
              Directive[
               GrayLevel[0], 
               GrayLevel[0.6]], {False}, False}, "Columns" -> {False, False, 
              Directive[
               GrayLevel[0], 
               GrayLevel[0.6]], {False}, False}}, 
          GridBoxBackground -> {"Rows" -> {{
               GrayLevel[1], 
               RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #10, 
       ButtonBox[
        GraphicsBox[{
          RGBColor[0.8, 0.85, 0.85], 
          EdgeForm[
           RGBColor[0.6, 0.7, 0.7]], 
          RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
          InsetBox[
           StyleBox[
           "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
            GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
            GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
            GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
            FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
        ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
          ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
        None], MultilineFunction -> None], 
      EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
            FrontEnd`Value[
             FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
        True}]]& ),
    InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
       RowBox[{"{", 
         RowBox[{"{", 
           RowBox[{"{", 
             TemplateSlotSequence[{1, 2}, ","], "}"}], ",", 
           RowBox[{"{", 
             TemplateSlotSequence[{4, 5}, ","], "}"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"{", 
             TemplateSlotSequence[{3, 3}, ","], "}"}], ",", 
           RowBox[{"{", 
             TemplateSlotSequence[{6, 6}, ","], "}"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"{", 
             TemplateSlotSequence[{7, 8}, ","], "}"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"{", 
             TemplateSlotSequence[{9, 9}, ","], "}"}], "}"}], "}"}], ",", 
       "SamplingPeriod", "->", 
       RowBox[{#10}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
    Tooltip->StateSpaceModel], ",", 
   TemplateBox[{
     RowBox[{"-", "4.076984060408602`"}], "3.434538654209941`", 
     RowBox[{"-", "2.067699797869655`"}], 
     RowBox[{"-", "7.23298797324906`"}], "3.307784060408602`", 
     RowBox[{"-", "1.5346038562367519`"}], 
     RowBox[{"-", "5.5061`"}], "6.0777`", "0", 
     InterpretationBox["\[InvisibleSpace]", None], {
     StateSpaceModel, {
      False, False, {
       False, False}}, {$CellContext`stname1, $CellContext`stname2}, {{
       Control`CommonDump`$DUMMY$}, {Control`CommonDump`$DUMMY$}, {
       Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$}}, Identity, 
      Automatic, 1, 1, 2, 1, {}, {False, False}, False, Automatic, None, 
      Automatic}, {}},
    "StateSpaceModelFull",
    BaseStyle->{NumberMarks -> False},
    DisplayFunction->(TagBox[
      SubsuperscriptBox[
       RowBox[{"(", 
         GridBox[{{#, #2, #3}, {#4, #5, #6}, {#7, #8, #9}}, 
          AllowedDimensions -> {3, 3}, AutoDelete -> False, 
          AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
          BaseStyle -> {Deployed -> False}, GridBoxItemStyle -> {}, 
          GridBoxDividers -> {"Rows" -> {False, False, 
              Directive[
               GrayLevel[0], 
               GrayLevel[0.6]], {False}, False}, "Columns" -> {False, False, 
              Directive[
               GrayLevel[0], 
               GrayLevel[0.6]], {False}, False}}, 
          GridBoxBackground -> {"Rows" -> {{
               GrayLevel[1], 
               RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #10, 
       ButtonBox[
        GraphicsBox[{
          RGBColor[0.8, 0.85, 0.85], 
          EdgeForm[
           RGBColor[0.6, 0.7, 0.7]], 
          RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
          InsetBox[
           StyleBox[
           "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
            GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
            GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
            GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
            FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
        ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
          ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
        None], MultilineFunction -> None], 
      EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
            FrontEnd`Value[
             FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
        True}]]& ),
    InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
       RowBox[{"{", 
         RowBox[{"{", 
           RowBox[{"{", 
             TemplateSlotSequence[{1, 2}, ","], "}"}], ",", 
           RowBox[{"{", 
             TemplateSlotSequence[{4, 5}, ","], "}"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"{", 
             TemplateSlotSequence[{3, 3}, ","], "}"}], ",", 
           RowBox[{"{", 
             TemplateSlotSequence[{6, 6}, ","], "}"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"{", 
             TemplateSlotSequence[{7, 8}, ","], "}"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"{", 
             TemplateSlotSequence[{9, 9}, ","], "}"}], "}"}], "}"}], ",", 
       "SamplingPeriod", "->", 
       RowBox[{#10}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
    Tooltip->StateSpaceModel]}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356404963`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[1]=",
 CellID->1468366160,ExpressionUUID->"7441c68c-3bb7-49ff-9039-7cb42858ea59"],

Cell["\<\
Similar state-space models have identical transfer functions:\
\>", "ExampleText",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356404963`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->868307797,ExpressionUUID->"546af5a0-5982-4cda-888c-1bff6c364bc5"],

Cell[BoxData[
 RowBox[{"TransferFunctionModel", "/@", " ", 
  RowBox[{"{", 
   RowBox[{"ssm", ",", "ssmt"}], "}"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356404963`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[2]:=",
 CellID->1188140101,ExpressionUUID->"deb53bc5-ced1-4cc6-9f03-4bde6636026f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    TemplateBox[{
      FractionBox[
       RowBox[{"44.23223842000001`", "\[VeryThinSpace]", "+", 
         RowBox[{"2.0581000000000005`", " ", "\[FormalS]"}]}], 
       RowBox[{"11.35619389`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.7691999999999999`", " ", "\[FormalS]"}], "+", 
         SuperscriptBox["\[FormalS]", "2"]}]], 
      InterpretationBox["\[InvisibleSpace]", None], {
      TransferFunctionModel, {
       False, False, {False, False}}, $Failed, {{
        Control`CommonDump`$DUMMY$}, {Control`CommonDump`$DUMMY$}}, 
       InterpretationBox[#, 
        TransferFunctionModel[{{{
           44.23223842000001 + 2.0581000000000005` \[FormalS]}}, 11.35619389 + 
          0.7691999999999999 \[FormalS] + \[FormalS]^2}, \[FormalS]], 
        AutoDelete -> True, Editable -> True, BaseStyle -> 
        "TransferFunctionModelMinimal"]& , \[FormalS], 1, 1, 
       Control`CountStates[
        TransferFunctionModel[{{{
           44.23223842000001 + 2.0581000000000005` \[FormalS]}}, 11.35619389 + 
          0.7691999999999999 \[FormalS] + \[FormalS]^2}, \[FormalS]]], 
       1, {}, {False, False}, False, Automatic, None, Automatic}, {}},
     "TransferFunctionModelFull",
     BaseStyle->{NumberMarks -> False},
     DisplayFunction->(TagBox[
       SubsuperscriptBox[
        RowBox[{"(", 
          
          GridBox[{{#}}, AllowedDimensions -> {1, 1}, AutoDelete -> False, 
           AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
           BaseStyle -> {Deployed -> False}, GridBoxItemStyle -> {}, 
           GridBoxDividers -> {
            "Rows" -> {False, {False}, False}, 
             "Columns" -> {False, {False}, False}}, 
           GridBoxBackground -> {"Rows" -> {{
                GrayLevel[1], 
                RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #2, 
        ButtonBox[
         GraphicsBox[{
           RGBColor[0.8, 0.85, 0.85], 
           EdgeForm[
            RGBColor[0.6, 0.7, 0.7]], 
           RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
           InsetBox[
            StyleBox[
            "\[ScriptCapitalT]", Control`NonlinearModelsDump`LineColor -> 
             GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
             GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
             GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
             FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
         ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
           ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
         None], MultilineFunction -> None], 
       EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
             FrontEnd`Value[
              FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
         True}]]& ),
     InterpretationFunction->(
      RowBox[{"TransferFunctionModel", "[", "Unevaluated", "[", 
        RowBox[{"{", 
          RowBox[{"{", 
            TemplateSlotSequence[{1, 1}, ","], "}"}], "}"}], "]", ",", 
        "\[FormalS]", ",", "SamplingPeriod", "->", 
        RowBox[{#2}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
     Tooltip->TransferFunctionModel],
    TransferFunctionModel[{{{
       44.23223842000001 + 2.0581000000000005` \[FormalS]}}, 11.35619389 + 
      0.7691999999999999 \[FormalS] + \[FormalS]^2}, \[FormalS]],
    AutoDelete->True,
    BaseStyle->"TransferFunctionModelMinimal",
    Editable->True], ",", 
   InterpretationBox[
    TemplateBox[{
      FractionBox[
       RowBox[{"44.23223841999997`", "\[VeryThinSpace]", "+", 
         RowBox[{"2.058100000000001`", " ", "\[FormalS]"}]}], 
       RowBox[{"11.356193890000002`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.7692000000000001`", " ", "\[FormalS]"}], "+", 
         SuperscriptBox["\[FormalS]", "2"]}]], 
      InterpretationBox["\[InvisibleSpace]", None], {
      TransferFunctionModel, {
       False, False, {False, False}}, $Failed, {{
        Control`CommonDump`$DUMMY$}, {Control`CommonDump`$DUMMY$}}, 
       InterpretationBox[#, 
        TransferFunctionModel[{{{
           44.23223841999997 + 2.058100000000001 \[FormalS]}}, 
          11.356193890000002` + 
          0.7692000000000001 \[FormalS] + \[FormalS]^2}, \[FormalS]], 
        AutoDelete -> True, Editable -> True, BaseStyle -> 
        "TransferFunctionModelMinimal"]& , \[FormalS], 1, 1, 
       Control`CountStates[
        TransferFunctionModel[{{{
           44.23223841999997 + 2.058100000000001 \[FormalS]}}, 
          11.356193890000002` + 
          0.7692000000000001 \[FormalS] + \[FormalS]^2}, \[FormalS]]], 
       1, {}, {False, False}, False, Automatic, None, Automatic}, {}},
     "TransferFunctionModelFull",
     BaseStyle->{NumberMarks -> False},
     DisplayFunction->(TagBox[
       SubsuperscriptBox[
        RowBox[{"(", 
          
          GridBox[{{#}}, AllowedDimensions -> {1, 1}, AutoDelete -> False, 
           AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
           BaseStyle -> {Deployed -> False}, GridBoxItemStyle -> {}, 
           GridBoxDividers -> {
            "Rows" -> {False, {False}, False}, 
             "Columns" -> {False, {False}, False}}, 
           GridBoxBackground -> {"Rows" -> {{
                GrayLevel[1], 
                RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #2, 
        ButtonBox[
         GraphicsBox[{
           RGBColor[0.8, 0.85, 0.85], 
           EdgeForm[
            RGBColor[0.6, 0.7, 0.7]], 
           RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
           InsetBox[
            StyleBox[
            "\[ScriptCapitalT]", Control`NonlinearModelsDump`LineColor -> 
             GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
             GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
             GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
             FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
         ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
           ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
         None], MultilineFunction -> None], 
       EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
             FrontEnd`Value[
              FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
         True}]]& ),
     InterpretationFunction->(
      RowBox[{"TransferFunctionModel", "[", "Unevaluated", "[", 
        RowBox[{"{", 
          RowBox[{"{", 
            TemplateSlotSequence[{1, 1}, ","], "}"}], "}"}], "]", ",", 
        "\[FormalS]", ",", "SamplingPeriod", "->", 
        RowBox[{#2}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
     Tooltip->TransferFunctionModel],
    TransferFunctionModel[{{{
       44.23223841999997 + 2.058100000000001 \[FormalS]}}, 
      11.356193890000002` + 
      0.7692000000000001 \[FormalS] + \[FormalS]^2}, \[FormalS]],
    AutoDelete->True,
    BaseStyle->"TransferFunctionModelMinimal",
    Editable->True]}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356404963`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[2]=",
 CellID->2095463443,ExpressionUUID->"5f5dee30-05bc-4715-989f-4c85992d293f"],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "b67f69e8-d5ee-412c-8342-68409ed3ee84"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356404963`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->1910698109,ExpressionUUID->"18f103aa-7fdf-4017-b2a1-33910c0807c4"],

Cell["\<\
The controllable and observable companion forms are duals of each other:\
\>", "ExampleText",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356404963`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->1590533474,ExpressionUUID->"4bb97a6c-0386-457e-bd7b-f41ca452a50d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"tfm", "=", 
   InterpretationBox[
    TemplateBox[{
      FractionBox[
       RowBox[{
         RowBox[{
           SuperscriptBox["s", "3"], " ", 
           SubscriptBox["b", "0"]}], "+", 
         RowBox[{
           SuperscriptBox["s", "2"], " ", 
           SubscriptBox["b", "1"]}], "+", 
         RowBox[{"s", " ", 
           SubscriptBox["b", "2"]}], "+", 
         SubscriptBox["b", "3"]}], 
       RowBox[{
         SuperscriptBox["s", "3"], "+", 
         RowBox[{
           SuperscriptBox["s", "2"], " ", 
           SubscriptBox["a", "1"]}], "+", 
         RowBox[{"s", " ", 
           SubscriptBox["a", "2"]}], "+", 
         SubscriptBox["a", "3"]}]], 
      InterpretationBox["\[InvisibleSpace]", None], {
      TransferFunctionModel, {
       False, False, {False, False}}, $Failed, {{
        Control`CommonDump`$DUMMY$}, {Control`CommonDump`$DUMMY$}}, 
       InterpretationBox[#, 
        TransferFunctionModel[{{{$CellContext`s^3 
             Subscript[$CellContext`b, 0] + $CellContext`s^2 
             Subscript[$CellContext`b, 1] + $CellContext`s 
             Subscript[$CellContext`b, 2] + 
            Subscript[$CellContext`b, 
              3]}}, $CellContext`s^3 + $CellContext`s^2 
           Subscript[$CellContext`a, 1] + $CellContext`s 
           Subscript[$CellContext`a, 2] + 
          Subscript[$CellContext`a, 3]}, $CellContext`s], AutoDelete -> True, 
        Editable -> True, BaseStyle -> 
        "TransferFunctionModelMinimal"]& , $CellContext`s, 1, 1, 
       Control`CountStates[
        TransferFunctionModel[{{{$CellContext`s^3 
             Subscript[$CellContext`b, 0] + $CellContext`s^2 
             Subscript[$CellContext`b, 1] + $CellContext`s 
             Subscript[$CellContext`b, 2] + 
            Subscript[$CellContext`b, 
              3]}}, $CellContext`s^3 + $CellContext`s^2 
           Subscript[$CellContext`a, 1] + $CellContext`s 
           Subscript[$CellContext`a, 2] + 
          Subscript[$CellContext`a, 3]}, $CellContext`s]], 1, {}, {
       False, False}, False, Automatic, None, Automatic}, {}},
     "TransferFunctionModelFull",
     BaseStyle->{NumberMarks -> False},
     DisplayFunction->(TagBox[
       SubsuperscriptBox[
        RowBox[{"(", 
          
          GridBox[{{#}}, AllowedDimensions -> {1, 1}, AutoDelete -> False, 
           AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
           BaseStyle -> {Deployed -> False}, GridBoxItemStyle -> {}, 
           GridBoxDividers -> {
            "Rows" -> {False, {False}, False}, 
             "Columns" -> {False, {False}, False}}, 
           GridBoxBackground -> {"Rows" -> {{
                GrayLevel[1], 
                RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #2, 
        ButtonBox[
         GraphicsBox[{
           RGBColor[0.8, 0.85, 0.85], 
           EdgeForm[
            RGBColor[0.6, 0.7, 0.7]], 
           RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
           InsetBox[
            StyleBox[
            "\[ScriptCapitalT]", Control`NonlinearModelsDump`LineColor -> 
             GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
             GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
             GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
             FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
         ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
           ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
         None], MultilineFunction -> None], 
       EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
             FrontEnd`Value[
              FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
         True}]]& ),
     InterpretationFunction->(
      RowBox[{"TransferFunctionModel", "[", "Unevaluated", "[", 
        RowBox[{"{", 
          RowBox[{"{", 
            TemplateSlotSequence[{1, 1}, ","], "}"}], "}"}], "]", ",", "s", 
        ",", "SamplingPeriod", "->", 
        RowBox[{#2}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
     Tooltip->TransferFunctionModel],
    TransferFunctionModel[{{{$CellContext`s^3 
         Subscript[$CellContext`b, 0] + $CellContext`s^2 
         Subscript[$CellContext`b, 1] + $CellContext`s 
         Subscript[$CellContext`b, 2] + 
        Subscript[$CellContext`b, 3]}}, $CellContext`s^3 + $CellContext`s^2 
       Subscript[$CellContext`a, 1] + $CellContext`s 
       Subscript[$CellContext`a, 2] + 
      Subscript[$CellContext`a, 3]}, $CellContext`s],
    AutoDelete->True,
    BaseStyle->"TransferFunctionModelMinimal",
    Editable->True]}], ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356415267`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[1]:=",
 CellID->1409860290,ExpressionUUID->"31458bf1-115d-4b68-b7ac-69374660326a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"ssc", ",", "sso"}], "}"}], "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"StateSpaceModel", "[", 
      RowBox[{"tfm", ",", 
       RowBox[{"StateSpaceRealization", "\[Rule]", "form"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"form", ",", 
       RowBox[{"{", 
        RowBox[{
        "\"\<ControllableCompanion\>\"", ",", "\"\<ObservableCompanion\>\""}],
         "}"}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356415267`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[2]:=",
 CellID->365775997,ExpressionUUID->"e6650709-138f-4e0d-a352-a8af05962260"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"0", "1", "0", "0", "0", "0", "1", "0", 
     RowBox[{"-", 
       SubscriptBox["a", "3"]}], 
     RowBox[{"-", 
       SubscriptBox["a", "2"]}], 
     RowBox[{"-", 
       SubscriptBox["a", "1"]}], "1", 
     RowBox[{
       RowBox[{
         RowBox[{"-", 
           SubscriptBox["a", "3"]}], " ", 
         SubscriptBox["b", "0"]}], "+", 
       SubscriptBox["b", "3"]}], 
     RowBox[{
       RowBox[{
         RowBox[{"-", 
           SubscriptBox["a", "2"]}], " ", 
         SubscriptBox["b", "0"]}], "+", 
       SubscriptBox["b", "2"]}], 
     RowBox[{
       RowBox[{
         RowBox[{"-", 
           SubscriptBox["a", "1"]}], " ", 
         SubscriptBox["b", "0"]}], "+", 
       SubscriptBox["b", "1"]}], 
     SubscriptBox["b", "0"], 
     InterpretationBox["\[InvisibleSpace]", None], {
     StateSpaceModel, {
      False, False, {
       False, False}}, {$CellContext`stname1, $CellContext`stname2, \
$CellContext`stname3}, {{Control`CommonDump`$DUMMY$}, {
       Control`CommonDump`$DUMMY$}, {
       Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$, 
        Control`CommonDump`$DUMMY$}}, Identity, Automatic, 1, 1, 3, 1, {}, {
      False, False}, False, Automatic, None, Automatic}, {}},
    "StateSpaceModelFull",
    BaseStyle->{NumberMarks -> False},
    DisplayFunction->(TagBox[
      SubsuperscriptBox[
       RowBox[{"(", 
         GridBox[{{#, #2, #3, #4}, {#5, #6, #7, #8}, {#9, #10, #11, #12}, \
{#13, #14, #15, #16}}, AllowedDimensions -> {4, 4}, AutoDelete -> False, 
          AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
          BaseStyle -> {Deployed -> False}, GridBoxItemStyle -> {}, 
          GridBoxDividers -> {"Rows" -> {False, False, False, 
              Directive[
               GrayLevel[0], 
               GrayLevel[0.6]], {False}, False}, 
            "Columns" -> {False, False, False, 
              Directive[
               GrayLevel[0], 
               GrayLevel[0.6]], {False}, False}}, 
          GridBoxBackground -> {"Rows" -> {{
               GrayLevel[1], 
               RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #17, 
       ButtonBox[
        GraphicsBox[{
          RGBColor[0.8, 0.85, 0.85], 
          EdgeForm[
           RGBColor[0.6, 0.7, 0.7]], 
          RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
          InsetBox[
           StyleBox[
           "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
            GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
            GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
            GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
            FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
        ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
          ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
        None], MultilineFunction -> None], 
      EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
            FrontEnd`Value[
             FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
        True}]]& ),
    InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
       RowBox[{"{", 
         RowBox[{"{", 
           RowBox[{"{", 
             TemplateSlotSequence[{1, 3}, ","], "}"}], ",", 
           RowBox[{"{", 
             TemplateSlotSequence[{5, 7}, ","], "}"}], ",", 
           RowBox[{"{", 
             TemplateSlotSequence[{9, 11}, ","], "}"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"{", 
             TemplateSlotSequence[{4, 4}, ","], "}"}], ",", 
           RowBox[{"{", 
             TemplateSlotSequence[{8, 8}, ","], "}"}], ",", 
           RowBox[{"{", 
             TemplateSlotSequence[{12, 12}, ","], "}"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"{", 
             TemplateSlotSequence[{13, 15}, ","], "}"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"{", 
             TemplateSlotSequence[{16, 16}, ","], "}"}], "}"}], "}"}], ",", 
       "SamplingPeriod", "->", 
       RowBox[{#17}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
    Tooltip->StateSpaceModel], ",", 
   TemplateBox[{"0", "0", 
     RowBox[{"-", 
       SubscriptBox["a", "3"]}], 
     RowBox[{
       RowBox[{
         RowBox[{"-", 
           SubscriptBox["a", "3"]}], " ", 
         SubscriptBox["b", "0"]}], "+", 
       SubscriptBox["b", "3"]}], "1", "0", 
     RowBox[{"-", 
       SubscriptBox["a", "2"]}], 
     RowBox[{
       RowBox[{
         RowBox[{"-", 
           SubscriptBox["a", "2"]}], " ", 
         SubscriptBox["b", "0"]}], "+", 
       SubscriptBox["b", "2"]}], "0", "1", 
     RowBox[{"-", 
       SubscriptBox["a", "1"]}], 
     RowBox[{
       RowBox[{
         RowBox[{"-", 
           SubscriptBox["a", "1"]}], " ", 
         SubscriptBox["b", "0"]}], "+", 
       SubscriptBox["b", "1"]}], "0", "0", "1", 
     SubscriptBox["b", "0"], 
     InterpretationBox["\[InvisibleSpace]", None], {
     StateSpaceModel, {
      False, False, {
       False, False}}, {$CellContext`stname1, $CellContext`stname2, \
$CellContext`stname3}, {{Control`CommonDump`$DUMMY$}, {
       Control`CommonDump`$DUMMY$}, {
       Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$, 
        Control`CommonDump`$DUMMY$}}, Identity, Automatic, 1, 1, 3, 1, {}, {
      False, False}, False, Automatic, None, Automatic}, {}},
    "StateSpaceModelFull",
    BaseStyle->{NumberMarks -> False},
    DisplayFunction->(TagBox[
      SubsuperscriptBox[
       RowBox[{"(", 
         GridBox[{{#, #2, #3, #4}, {#5, #6, #7, #8}, {#9, #10, #11, #12}, \
{#13, #14, #15, #16}}, AllowedDimensions -> {4, 4}, AutoDelete -> False, 
          AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
          BaseStyle -> {Deployed -> False}, GridBoxItemStyle -> {}, 
          GridBoxDividers -> {"Rows" -> {False, False, False, 
              Directive[
               GrayLevel[0], 
               GrayLevel[0.6]], {False}, False}, 
            "Columns" -> {False, False, False, 
              Directive[
               GrayLevel[0], 
               GrayLevel[0.6]], {False}, False}}, 
          GridBoxBackground -> {"Rows" -> {{
               GrayLevel[1], 
               RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #17, 
       ButtonBox[
        GraphicsBox[{
          RGBColor[0.8, 0.85, 0.85], 
          EdgeForm[
           RGBColor[0.6, 0.7, 0.7]], 
          RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
          InsetBox[
           StyleBox[
           "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
            GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
            GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
            GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
            FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
        ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
          ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
        None], MultilineFunction -> None], 
      EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
            FrontEnd`Value[
             FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
        True}]]& ),
    InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
       RowBox[{"{", 
         RowBox[{"{", 
           RowBox[{"{", 
             TemplateSlotSequence[{1, 3}, ","], "}"}], ",", 
           RowBox[{"{", 
             TemplateSlotSequence[{5, 7}, ","], "}"}], ",", 
           RowBox[{"{", 
             TemplateSlotSequence[{9, 11}, ","], "}"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"{", 
             TemplateSlotSequence[{4, 4}, ","], "}"}], ",", 
           RowBox[{"{", 
             TemplateSlotSequence[{8, 8}, ","], "}"}], ",", 
           RowBox[{"{", 
             TemplateSlotSequence[{12, 12}, ","], "}"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"{", 
             TemplateSlotSequence[{13, 15}, ","], "}"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"{", 
             TemplateSlotSequence[{16, 16}, ","], "}"}], "}"}], "}"}], ",", 
       "SamplingPeriod", "->", 
       RowBox[{#17}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
    Tooltip->StateSpaceModel]}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356415267`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[2]=",
 CellID->1869759348,ExpressionUUID->"54d08ef6-7b71-4977-afac-3158233f831a"],

Cell["Compute their dual representations:", "ExampleText",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356415267`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->270827651,ExpressionUUID->"2c1996b7-6046-4e56-a141-a23736c95ac3"],

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Refine", "[", 
    RowBox[{
     RowBox[{"DualSystemsModel", "[", "model", "]"}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        SubscriptBox["b", "_"], ",", 
        SubscriptBox["a", "_"]}], "}"}], "\[Element]", "Reals"}]}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"model", ",", 
     RowBox[{"{", 
      RowBox[{"ssc", ",", "sso"}], "}"}]}], "}"}]}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356415267`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[3]:=",
 CellID->843952863,ExpressionUUID->"39fe4c0c-fcbd-46a3-980a-0b89705b88d3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"0", "0", 
     RowBox[{"-", 
       SubscriptBox["a", "3"]}], 
     RowBox[{
       RowBox[{
         RowBox[{"-", 
           SubscriptBox["a", "3"]}], " ", 
         SubscriptBox["b", "0"]}], "+", 
       SubscriptBox["b", "3"]}], "1", "0", 
     RowBox[{"-", 
       SubscriptBox["a", "2"]}], 
     RowBox[{
       RowBox[{
         RowBox[{"-", 
           SubscriptBox["a", "2"]}], " ", 
         SubscriptBox["b", "0"]}], "+", 
       SubscriptBox["b", "2"]}], "0", "1", 
     RowBox[{"-", 
       SubscriptBox["a", "1"]}], 
     RowBox[{
       RowBox[{
         RowBox[{"-", 
           SubscriptBox["a", "1"]}], " ", 
         SubscriptBox["b", "0"]}], "+", 
       SubscriptBox["b", "1"]}], "0", "0", "1", 
     SubscriptBox["b", "0"], 
     InterpretationBox["\[InvisibleSpace]", None], {
     StateSpaceModel, {
      False, False, {
       False, False}}, {$CellContext`stname1, $CellContext`stname2, \
$CellContext`stname3}, {{Control`CommonDump`$DUMMY$}, {
       Control`CommonDump`$DUMMY$}, {
       Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$, 
        Control`CommonDump`$DUMMY$}}, Identity, Automatic, 1, 1, 3, 1, {}, {
      False, False}, False, Automatic, None, Automatic}, {}},
    "StateSpaceModelFull",
    BaseStyle->{NumberMarks -> False},
    DisplayFunction->(TagBox[
      SubsuperscriptBox[
       RowBox[{"(", 
         GridBox[{{#, #2, #3, #4}, {#5, #6, #7, #8}, {#9, #10, #11, #12}, \
{#13, #14, #15, #16}}, AllowedDimensions -> {4, 4}, AutoDelete -> False, 
          AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
          BaseStyle -> {Deployed -> False}, GridBoxItemStyle -> {}, 
          GridBoxDividers -> {"Rows" -> {False, False, False, 
              Directive[
               GrayLevel[0], 
               GrayLevel[0.6]], {False}, False}, 
            "Columns" -> {False, False, False, 
              Directive[
               GrayLevel[0], 
               GrayLevel[0.6]], {False}, False}}, 
          GridBoxBackground -> {"Rows" -> {{
               GrayLevel[1], 
               RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #17, 
       ButtonBox[
        GraphicsBox[{
          RGBColor[0.8, 0.85, 0.85], 
          EdgeForm[
           RGBColor[0.6, 0.7, 0.7]], 
          RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
          InsetBox[
           StyleBox[
           "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
            GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
            GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
            GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
            FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
        ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
          ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
        None], MultilineFunction -> None], 
      EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
            FrontEnd`Value[
             FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
        True}]]& ),
    InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
       RowBox[{"{", 
         RowBox[{"{", 
           RowBox[{"{", 
             TemplateSlotSequence[{1, 3}, ","], "}"}], ",", 
           RowBox[{"{", 
             TemplateSlotSequence[{5, 7}, ","], "}"}], ",", 
           RowBox[{"{", 
             TemplateSlotSequence[{9, 11}, ","], "}"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"{", 
             TemplateSlotSequence[{4, 4}, ","], "}"}], ",", 
           RowBox[{"{", 
             TemplateSlotSequence[{8, 8}, ","], "}"}], ",", 
           RowBox[{"{", 
             TemplateSlotSequence[{12, 12}, ","], "}"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"{", 
             TemplateSlotSequence[{13, 15}, ","], "}"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"{", 
             TemplateSlotSequence[{16, 16}, ","], "}"}], "}"}], "}"}], ",", 
       "SamplingPeriod", "->", 
       RowBox[{#17}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
    Tooltip->StateSpaceModel], ",", 
   TemplateBox[{"0", "1", "0", "0", "0", "0", "1", "0", 
     RowBox[{"-", 
       SubscriptBox["a", "3"]}], 
     RowBox[{"-", 
       SubscriptBox["a", "2"]}], 
     RowBox[{"-", 
       SubscriptBox["a", "1"]}], "1", 
     RowBox[{
       RowBox[{
         RowBox[{"-", 
           SubscriptBox["a", "3"]}], " ", 
         SubscriptBox["b", "0"]}], "+", 
       SubscriptBox["b", "3"]}], 
     RowBox[{
       RowBox[{
         RowBox[{"-", 
           SubscriptBox["a", "2"]}], " ", 
         SubscriptBox["b", "0"]}], "+", 
       SubscriptBox["b", "2"]}], 
     RowBox[{
       RowBox[{
         RowBox[{"-", 
           SubscriptBox["a", "1"]}], " ", 
         SubscriptBox["b", "0"]}], "+", 
       SubscriptBox["b", "1"]}], 
     SubscriptBox["b", "0"], 
     InterpretationBox["\[InvisibleSpace]", None], {
     StateSpaceModel, {
      False, False, {
       False, False}}, {$CellContext`stname1, $CellContext`stname2, \
$CellContext`stname3}, {{Control`CommonDump`$DUMMY$}, {
       Control`CommonDump`$DUMMY$}, {
       Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$, 
        Control`CommonDump`$DUMMY$}}, Identity, Automatic, 1, 1, 3, 1, {}, {
      False, False}, False, Automatic, None, Automatic}, {}},
    "StateSpaceModelFull",
    BaseStyle->{NumberMarks -> False},
    DisplayFunction->(TagBox[
      SubsuperscriptBox[
       RowBox[{"(", 
         GridBox[{{#, #2, #3, #4}, {#5, #6, #7, #8}, {#9, #10, #11, #12}, \
{#13, #14, #15, #16}}, AllowedDimensions -> {4, 4}, AutoDelete -> False, 
          AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
          BaseStyle -> {Deployed -> False}, GridBoxItemStyle -> {}, 
          GridBoxDividers -> {"Rows" -> {False, False, False, 
              Directive[
               GrayLevel[0], 
               GrayLevel[0.6]], {False}, False}, 
            "Columns" -> {False, False, False, 
              Directive[
               GrayLevel[0], 
               GrayLevel[0.6]], {False}, False}}, 
          GridBoxBackground -> {"Rows" -> {{
               GrayLevel[1], 
               RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #17, 
       ButtonBox[
        GraphicsBox[{
          RGBColor[0.8, 0.85, 0.85], 
          EdgeForm[
           RGBColor[0.6, 0.7, 0.7]], 
          RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
          InsetBox[
           StyleBox[
           "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
            GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
            GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
            GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
            FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
        ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
          ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
        None], MultilineFunction -> None], 
      EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
            FrontEnd`Value[
             FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
        True}]]& ),
    InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
       RowBox[{"{", 
         RowBox[{"{", 
           RowBox[{"{", 
             TemplateSlotSequence[{1, 3}, ","], "}"}], ",", 
           RowBox[{"{", 
             TemplateSlotSequence[{5, 7}, ","], "}"}], ",", 
           RowBox[{"{", 
             TemplateSlotSequence[{9, 11}, ","], "}"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"{", 
             TemplateSlotSequence[{4, 4}, ","], "}"}], ",", 
           RowBox[{"{", 
             TemplateSlotSequence[{8, 8}, ","], "}"}], ",", 
           RowBox[{"{", 
             TemplateSlotSequence[{12, 12}, ","], "}"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"{", 
             TemplateSlotSequence[{13, 15}, ","], "}"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"{", 
             TemplateSlotSequence[{16, 16}, ","], "}"}], "}"}], "}"}], ",", 
       "SamplingPeriod", "->", 
       RowBox[{#17}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
    Tooltip->StateSpaceModel]}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356425247`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[3]=",
 CellID->2138740476,ExpressionUUID->"c0417d2b-7995-41ad-9ffe-5701a43610d9"],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "3da5a3d2-f87b-46f9-a8ec-c2d4994c523a"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356425247`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->1690321792,ExpressionUUID->"8270aaa9-592d-4edb-8612-5212115ccc11"],

Cell["The eigenvalues of the state matrix are invariant:", "ExampleText",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356425247`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->177191981,ExpressionUUID->"8723d8bd-caab-4a45-85d5-f250076c6efd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"ssm", "=", " ", 
    RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3.5483", ",", 
           RowBox[{"-", "4.1308"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3.1786", ",", "2.8758"}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "4.5882", "}"}], ",", 
         RowBox[{"{", "2.8867", "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1.192"}], ",", 
          RowBox[{"-", "2.7873"}]}], "}"}], "}"}]}], "}"}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ssmt", "=", 
    RowBox[{"StateSpaceTransform", "[", 
     RowBox[{"ssm", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2.3878", ",", 
          RowBox[{"-", "3.243"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "3.9273"}], ",", 
          RowBox[{"-", "3.4311"}]}], "}"}]}], "}"}]}], "]"}]}]}], 
  "}"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356425247`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[1]:=",
 CellID->1653289925,ExpressionUUID->"fea3e0d6-904a-4c5e-8635-6d77fd590633"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"3.5483`", 
     RowBox[{"-", "4.1308`"}], "4.5882`", "3.1786`", "2.8758`", "2.8867`", 
     RowBox[{"-", "1.192`"}], 
     RowBox[{"-", "2.7873`"}], "0", 
     InterpretationBox["\[InvisibleSpace]", None], {
     StateSpaceModel, {
      False, False, {
       False, False}}, {$CellContext`stname1, $CellContext`stname2}, {{
       Control`CommonDump`$DUMMY$}, {Control`CommonDump`$DUMMY$}, {
       Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$}}, Identity, 
      Automatic, 1, 1, 2, 1, {}, {False, False}, False, Automatic, None, 
      Automatic}, {}},
    "StateSpaceModelFull",
    BaseStyle->{NumberMarks -> False},
    DisplayFunction->(TagBox[
      SubsuperscriptBox[
       RowBox[{"(", 
         GridBox[{{#, #2, #3}, {#4, #5, #6}, {#7, #8, #9}}, 
          AllowedDimensions -> {3, 3}, AutoDelete -> False, 
          AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
          BaseStyle -> {Deployed -> False}, GridBoxItemStyle -> {}, 
          GridBoxDividers -> {"Rows" -> {False, False, 
              Directive[
               GrayLevel[0], 
               GrayLevel[0.6]], {False}, False}, "Columns" -> {False, False, 
              Directive[
               GrayLevel[0], 
               GrayLevel[0.6]], {False}, False}}, 
          GridBoxBackground -> {"Rows" -> {{
               GrayLevel[1], 
               RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #10, 
       ButtonBox[
        GraphicsBox[{
          RGBColor[0.8, 0.85, 0.85], 
          EdgeForm[
           RGBColor[0.6, 0.7, 0.7]], 
          RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
          InsetBox[
           StyleBox[
           "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
            GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
            GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
            GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
            FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
        ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
          ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
        None], MultilineFunction -> None], 
      EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
            FrontEnd`Value[
             FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
        True}]]& ),
    InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
       RowBox[{"{", 
         RowBox[{"{", 
           RowBox[{"{", 
             TemplateSlotSequence[{1, 2}, ","], "}"}], ",", 
           RowBox[{"{", 
             TemplateSlotSequence[{4, 5}, ","], "}"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"{", 
             TemplateSlotSequence[{3, 3}, ","], "}"}], ",", 
           RowBox[{"{", 
             TemplateSlotSequence[{6, 6}, ","], "}"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"{", 
             TemplateSlotSequence[{7, 8}, ","], "}"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"{", 
             TemplateSlotSequence[{9, 9}, ","], "}"}], "}"}], "}"}], ",", 
       "SamplingPeriod", "->", 
       RowBox[{#10}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
    Tooltip->StateSpaceModel], ",", 
   TemplateBox[{
    "4.62256577598383`", "3.563291091584069`", "0.30488797865268613`", 
     RowBox[{"-", "4.2114582238994185`"}], "1.8015342240161714`", 
     RowBox[{"-", "1.1903140562975998`"}], "8.10030569`", "13.42916103`", "0", 
     InterpretationBox["\[InvisibleSpace]", None], {
     StateSpaceModel, {
      False, False, {
       False, False}}, {$CellContext`stname1, $CellContext`stname2}, {{
       Control`CommonDump`$DUMMY$}, {Control`CommonDump`$DUMMY$}, {
       Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$}}, Identity, 
      Automatic, 1, 1, 2, 1, {}, {False, False}, False, Automatic, None, 
      Automatic}, {}},
    "StateSpaceModelFull",
    BaseStyle->{NumberMarks -> False},
    DisplayFunction->(TagBox[
      SubsuperscriptBox[
       RowBox[{"(", 
         GridBox[{{#, #2, #3}, {#4, #5, #6}, {#7, #8, #9}}, 
          AllowedDimensions -> {3, 3}, AutoDelete -> False, 
          AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
          BaseStyle -> {Deployed -> False}, GridBoxItemStyle -> {}, 
          GridBoxDividers -> {"Rows" -> {False, False, 
              Directive[
               GrayLevel[0], 
               GrayLevel[0.6]], {False}, False}, "Columns" -> {False, False, 
              Directive[
               GrayLevel[0], 
               GrayLevel[0.6]], {False}, False}}, 
          GridBoxBackground -> {"Rows" -> {{
               GrayLevel[1], 
               RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #10, 
       ButtonBox[
        GraphicsBox[{
          RGBColor[0.8, 0.85, 0.85], 
          EdgeForm[
           RGBColor[0.6, 0.7, 0.7]], 
          RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
          InsetBox[
           StyleBox[
           "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
            GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
            GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
            GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
            FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
        ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
          ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
        None], MultilineFunction -> None], 
      EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
            FrontEnd`Value[
             FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
        True}]]& ),
    InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
       RowBox[{"{", 
         RowBox[{"{", 
           RowBox[{"{", 
             TemplateSlotSequence[{1, 2}, ","], "}"}], ",", 
           RowBox[{"{", 
             TemplateSlotSequence[{4, 5}, ","], "}"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"{", 
             TemplateSlotSequence[{3, 3}, ","], "}"}], ",", 
           RowBox[{"{", 
             TemplateSlotSequence[{6, 6}, ","], "}"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"{", 
             TemplateSlotSequence[{7, 8}, ","], "}"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"{", 
             TemplateSlotSequence[{9, 9}, ","], "}"}], "}"}], "}"}], ",", 
       "SamplingPeriod", "->", 
       RowBox[{#10}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
    Tooltip->StateSpaceModel]}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356425247`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[1]=",
 CellID->1229896646,ExpressionUUID->"785905e6-226f-4c99-a778-5ae064c31dba"],

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{
   RowBox[{"Composition", "[", 
    RowBox[{"Eigenvalues", ",", "First", ",", "Normal"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"ssm", ",", "ssmt"}], "}"}]}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356425247`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[2]:=",
 CellID->448737276,ExpressionUUID->"45217328-1024-4a23-a864-803612ca20c5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"3.2120499999999996`", "\[VeryThinSpace]", "+", 
      RowBox[{"3.607921398464773`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"3.2120499999999996`", "\[VeryThinSpace]", "-", 
      RowBox[{"3.607921398464773`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"3.2120500000000005`", "\[VeryThinSpace]", "+", 
      RowBox[{"3.607921398464772`", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"3.2120500000000005`", "\[VeryThinSpace]", "-", 
      RowBox[{"3.607921398464772`", " ", "\[ImaginaryI]"}]}]}], "}"}]}], 
  "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235643524*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[2]=",
 CellID->1342826947,ExpressionUUID->"937470e7-ec01-442f-bf6b-eae5a050cccf"],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "27f0ada2-f6b3-406b-ab01-ed74ae73ddc4"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235643524*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->1825210859,ExpressionUUID->"bc91e332-17de-4909-8595-ab39919648b7"],

Cell["\<\
The state matrix satisfies its characteristic equation (Cayley\[Dash]Hamilton \
theorem):\
\>", "ExampleText",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235643524*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->253626326,ExpressionUUID->"bd5c6aa7-084f-4587-a9ea-4ba0574dc57e"],

Cell[BoxData[
 RowBox[{"ssm", "=", 
  RowBox[{"StateSpaceModel", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Array", "[", 
      RowBox[{"a", ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "3"}], "}"}]}], "]"}], ",", 
     RowBox[{"Array", "[", 
      RowBox[{"b", ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "1"}], "}"}]}], "]"}], ",", 
     RowBox[{"Array", "[", 
      RowBox[{"c", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"d", "[", 
        RowBox[{"1", ",", "1"}], "]"}], "}"}], "}"}]}], "}"}], 
   "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235643524*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[1]:=",
 CellID->2090105434,ExpressionUUID->"dafeefbc-4b9e-43a9-b98b-3ee7032cd14b"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"a", "[", 
     RowBox[{"1", ",", "1"}], "]"}], 
   RowBox[{"a", "[", 
     RowBox[{"1", ",", "2"}], "]"}], 
   RowBox[{"a", "[", 
     RowBox[{"1", ",", "3"}], "]"}], 
   RowBox[{"b", "[", 
     RowBox[{"1", ",", "1"}], "]"}], 
   RowBox[{"a", "[", 
     RowBox[{"2", ",", "1"}], "]"}], 
   RowBox[{"a", "[", 
     RowBox[{"2", ",", "2"}], "]"}], 
   RowBox[{"a", "[", 
     RowBox[{"2", ",", "3"}], "]"}], 
   RowBox[{"b", "[", 
     RowBox[{"2", ",", "1"}], "]"}], 
   RowBox[{"a", "[", 
     RowBox[{"3", ",", "1"}], "]"}], 
   RowBox[{"a", "[", 
     RowBox[{"3", ",", "2"}], "]"}], 
   RowBox[{"a", "[", 
     RowBox[{"3", ",", "3"}], "]"}], 
   RowBox[{"b", "[", 
     RowBox[{"3", ",", "1"}], "]"}], 
   RowBox[{"c", "[", 
     RowBox[{"1", ",", "1"}], "]"}], 
   RowBox[{"c", "[", 
     RowBox[{"1", ",", "2"}], "]"}], 
   RowBox[{"c", "[", 
     RowBox[{"1", ",", "3"}], "]"}], 
   RowBox[{"d", "[", 
     RowBox[{"1", ",", "1"}], "]"}], 
   InterpretationBox["\[InvisibleSpace]", None], {
   StateSpaceModel, {
    False, False, {
     False, False}}, {$CellContext`stname1, $CellContext`stname2, \
$CellContext`stname3}, {{Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$, 
      Control`CommonDump`$DUMMY$}}, Identity, Automatic, 1, 1, 3, 1, {}, {
    False, False}, False, Automatic, None, Automatic}, {}},
  "StateSpaceModelFull",
  BaseStyle->{NumberMarks -> False},
  DisplayFunction->(TagBox[
    SubsuperscriptBox[
     RowBox[{"(", 
       GridBox[{{#, #2, #3, #4}, {#5, #6, #7, #8}, {#9, #10, #11, #12}, {#13, \
#14, #15, #16}}, AllowedDimensions -> {4, 4}, AutoDelete -> False, 
        AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
        BaseStyle -> {Deployed -> False}, GridBoxItemStyle -> {}, 
        GridBoxDividers -> {"Rows" -> {False, False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}, 
          "Columns" -> {False, False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}}, 
        GridBoxBackground -> {"Rows" -> {{
             GrayLevel[1], 
             RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #17, 
     ButtonBox[
      GraphicsBox[{
        RGBColor[0.8, 0.85, 0.85], 
        EdgeForm[
         RGBColor[0.6, 0.7, 0.7]], 
        RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
        InsetBox[
         StyleBox[
         "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
          GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
          FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
      ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
        ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
      None], MultilineFunction -> None], 
    EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
          FrontEnd`Value[
           FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
      True}]]& ),
  InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{1, 3}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{5, 7}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{9, 11}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{4, 4}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{8, 8}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{12, 12}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{13, 15}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{16, 16}, ","], "}"}], "}"}], "}"}], ",", 
     "SamplingPeriod", "->", 
     RowBox[{#17}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
  Tooltip->StateSpaceModel]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235643524*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[1]=",
 CellID->986851906,ExpressionUUID->"a46aab77-5f7a-432d-bb31-ae3b2b4952a2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"A", "=", 
    RowBox[{
     RowBox[{"Composition", "[", 
      RowBox[{"First", ",", "Normal"}], "]"}], "[", "ssm", "]"}]}], ")"}], "//",
   "MatrixForm"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356444836`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[2]:=",
 CellID->544686488,ExpressionUUID->"4b6b2e12-0993-4cca-9c0d-921e988a99c3"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"a", "[", 
       RowBox[{"1", ",", "1"}], "]"}], 
      RowBox[{"a", "[", 
       RowBox[{"1", ",", "2"}], "]"}], 
      RowBox[{"a", "[", 
       RowBox[{"1", ",", "3"}], "]"}]},
     {
      RowBox[{"a", "[", 
       RowBox[{"2", ",", "1"}], "]"}], 
      RowBox[{"a", "[", 
       RowBox[{"2", ",", "2"}], "]"}], 
      RowBox[{"a", "[", 
       RowBox[{"2", ",", "3"}], "]"}]},
     {
      RowBox[{"a", "[", 
       RowBox[{"3", ",", "1"}], "]"}], 
      RowBox[{"a", "[", 
       RowBox[{"3", ",", "2"}], "]"}], 
      RowBox[{"a", "[", 
       RowBox[{"3", ",", "3"}], "]"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356444836`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[2]//MatrixForm=",
 CellID->1003778361,ExpressionUUID->"5d4706aa-29cc-4fcb-a911-ef13b509d759"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CoefficientList", "[", 
    RowBox[{
     RowBox[{"CharacteristicPolynomial", "[", 
      RowBox[{"A", ",", "s"}], "]"}], ",", "s"}], "]"}], ".", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"MatrixPower", "[", 
      RowBox[{"A", ",", "n"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "0", ",", "3"}], "}"}]}], "]"}]}], "//", 
  "Simplify"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356444836`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[3]:=",
 CellID->42217064,ExpressionUUID->"d4ac6d07-29e7-444f-99f6-4076ce2c981f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356444836`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[3]=",
 CellID->2018866142,ExpressionUUID->"9cd8fc2b-1c6e-49af-9fa3-ff2bc91af877"],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "81a9f0a8-e9d8-49b2-ac89-44a4bcb9add5"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356444836`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->1662493465,ExpressionUUID->"fe7f5bd7-7b9b-42de-8e3b-adeef06dccd6"],

Cell["A controllable system:", "ExampleText",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356454806`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->1273759421,ExpressionUUID->"c109cf1d-5ee8-4963-812b-b7de8c601b12"],

Cell[BoxData[{
 RowBox[{"StateSpaceModel", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"DiagonalMatrix", "[", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["\[Lambda]", "1"], ",", 
       SubscriptBox["\[Lambda]", "2"], ",", 
       SubscriptBox["\[Lambda]", "3"]}], "}"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       SubscriptBox["b", "1"], "}"}], ",", 
      RowBox[{"{", 
       SubscriptBox["b", "2"], "}"}], ",", 
      RowBox[{"{", 
       SubscriptBox["b", "3"], "}"}]}], "}"}]}], "}"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ControllableModelQ", "[", "%", "]"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356454806`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[1]:=",
 CellID->1957595451,ExpressionUUID->"906265a8-e034-4423-9e42-e0162e1b3c3d"],

Cell[BoxData[
 TemplateBox[{
   SubscriptBox["\[Lambda]", "1"], "0", "0", 
   SubscriptBox["b", "1"], "0", 
   SubscriptBox["\[Lambda]", "2"], "0", 
   SubscriptBox["b", "2"], "0", "0", 
   SubscriptBox["\[Lambda]", "3"], 
   SubscriptBox["b", "3"], 
   InterpretationBox["\[InvisibleSpace]", None], {
   StateSpaceModel, {
    False, False, {
     False, False}}, {$CellContext`stname1, $CellContext`stname2, \
$CellContext`stname3}, {{Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$, 
      Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$, 
      Control`CommonDump`$DUMMY$}}, Identity, Automatic, 1, -3, 3, 1, {}, {
    False, False}, False, Automatic, None, Automatic}, {}},
  "StateSpaceModelFull",
  BaseStyle->{NumberMarks -> False},
  DisplayFunction->(TagBox[
    SubsuperscriptBox[
     RowBox[{"(", 
       GridBox[{{#, #2, #3, #4}, {#5, #6, #7, #8}, {#9, #10, #11, #12}}, 
        AllowedDimensions -> {4, 3}, AutoDelete -> False, 
        AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
        BaseStyle -> {Deployed -> False}, GridBoxItemStyle -> {}, 
        GridBoxDividers -> {"Rows" -> {False, False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}, 
          "Columns" -> {False, False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}}, 
        GridBoxBackground -> {"Rows" -> {{
             GrayLevel[1], 
             RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #13, 
     ButtonBox[
      GraphicsBox[{
        RGBColor[0.8, 0.85, 0.85], 
        EdgeForm[
         RGBColor[0.6, 0.7, 0.7]], 
        RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
        InsetBox[
         StyleBox[
         "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
          GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
          FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
      ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
        ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
      None], MultilineFunction -> None], 
    EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
          FrontEnd`Value[
           FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
      True}]]& ),
  InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{1, 3}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{5, 7}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{9, 11}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{4, 4}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{8, 8}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{12, 12}, ","], "}"}], "}"}], "}"}], ",", 
     "SamplingPeriod", "->", 
     RowBox[{#13}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
  Tooltip->StateSpaceModel]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356454806`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[1]=",
 CellID->841625994,ExpressionUUID->"48e00f1c-48dd-414f-af7c-4c90086fd25f"],

Cell[BoxData["True"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356454806`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[1]=",
 CellID->1880782016,ExpressionUUID->"570d85cb-9ac7-434c-980e-d0cdba21e96b"],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "c3f344dc-8ad6-4ea3-aff6-0d417fef4090"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356454806`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->2032382482,ExpressionUUID->"65183680-ede8-4001-a87a-3bf3d3516425"],

Cell["An uncontrollable system:", "ExampleText",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356454806`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->377485792,ExpressionUUID->"dfb0f0e9-85ac-4836-9982-371772bc5661"],

Cell[BoxData[{
 RowBox[{"StateSpaceModel", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"DiagonalMatrix", "[", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["\[Lambda]", "1"], ",", 
       SubscriptBox["\[Lambda]", "2"], ",", 
       SubscriptBox["\[Lambda]", "3"]}], "}"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       SubscriptBox["b", "1"], "}"}], ",", 
      RowBox[{"{", 
       SubscriptBox["b", "2"], "}"}], ",", 
      RowBox[{"{", "0", "}"}]}], "}"}]}], "}"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ControllableModelQ", "[", "%", "]"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235646478*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[1]:=",
 CellID->737012906,ExpressionUUID->"e8949414-4afe-45c2-a85a-c47659fa9cb5"],

Cell[BoxData[
 TemplateBox[{
   SubscriptBox["\[Lambda]", "1"], "0", "0", 
   SubscriptBox["b", "1"], "0", 
   SubscriptBox["\[Lambda]", "2"], "0", 
   SubscriptBox["b", "2"], "0", "0", 
   SubscriptBox["\[Lambda]", "3"], "0", 
   InterpretationBox["\[InvisibleSpace]", None], {
   StateSpaceModel, {
    False, False, {
     False, False}}, {$CellContext`stname1, $CellContext`stname2, \
$CellContext`stname3}, {{Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$, 
      Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$, 
      Control`CommonDump`$DUMMY$}}, Identity, Automatic, 1, -3, 3, 1, {}, {
    False, False}, False, Automatic, None, Automatic}, {}},
  "StateSpaceModelFull",
  BaseStyle->{NumberMarks -> False},
  DisplayFunction->(TagBox[
    SubsuperscriptBox[
     RowBox[{"(", 
       GridBox[{{#, #2, #3, #4}, {#5, #6, #7, #8}, {#9, #10, #11, #12}}, 
        AllowedDimensions -> {4, 3}, AutoDelete -> False, 
        AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
        BaseStyle -> {Deployed -> False}, GridBoxItemStyle -> {}, 
        GridBoxDividers -> {"Rows" -> {False, False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}, 
          "Columns" -> {False, False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}}, 
        GridBoxBackground -> {"Rows" -> {{
             GrayLevel[1], 
             RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #13, 
     ButtonBox[
      GraphicsBox[{
        RGBColor[0.8, 0.85, 0.85], 
        EdgeForm[
         RGBColor[0.6, 0.7, 0.7]], 
        RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
        InsetBox[
         StyleBox[
         "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
          GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
          FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
      ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
        ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
      None], MultilineFunction -> None], 
    EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
          FrontEnd`Value[
           FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
      True}]]& ),
  InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{1, 3}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{5, 7}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{9, 11}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{4, 4}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{8, 8}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{12, 12}, ","], "}"}], "}"}], "}"}], ",", 
     "SamplingPeriod", "->", 
     RowBox[{#13}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
  Tooltip->StateSpaceModel]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235646478*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[1]=",
 CellID->1491542719,ExpressionUUID->"ff530bce-6e65-4ca3-8620-fc289f562cb6"],

Cell[BoxData["False"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235646478*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[1]=",
 CellID->781866802,ExpressionUUID->"9eead547-d115-4f98-a796-3d3bbfc3daf5"],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "9a6d5757-ad89-4adc-994d-a34e394d1e62"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235646478*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->1215872446,ExpressionUUID->"0b37b156-de94-46c2-9795-c15933b44df2"],

Cell["A controllable system with non-distinct eigenvalues:", "ExampleText",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235646478*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->644304660,ExpressionUUID->"b7ec7528-afea-439a-845b-31a7c16114c8"],

Cell[BoxData[{
 RowBox[{"StateSpaceModel", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        SubscriptBox["\[Lambda]", "1"], ",", "1", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        SubscriptBox["\[Lambda]", "1"], ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", 
        SubscriptBox["\[Lambda]", "3"]}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "0", "}"}], ",", 
      RowBox[{"{", 
       SubscriptBox["b", "2"], "}"}], ",", 
      RowBox[{"{", 
       SubscriptBox["b", "3"], "}"}]}], "}"}]}], "}"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ControllableModelQ", "[", "%", "]"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235646478*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[1]:=",
 CellID->661195481,ExpressionUUID->"4bb18385-3912-497d-ac71-fa3b93442593"],

Cell[BoxData[
 TemplateBox[{
   SubscriptBox["\[Lambda]", "1"], "1", "0", "0", "0", 
   SubscriptBox["\[Lambda]", "1"], "0", 
   SubscriptBox["b", "2"], "0", "0", 
   SubscriptBox["\[Lambda]", "3"], 
   SubscriptBox["b", "3"], 
   InterpretationBox["\[InvisibleSpace]", None], {
   StateSpaceModel, {
    False, False, {
     False, False}}, {$CellContext`stname1, $CellContext`stname2, \
$CellContext`stname3}, {{Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$, 
      Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$, 
      Control`CommonDump`$DUMMY$}}, Identity, Automatic, 1, -3, 3, 1, {}, {
    False, False}, False, Automatic, None, Automatic}, {}},
  "StateSpaceModelFull",
  BaseStyle->{NumberMarks -> False},
  DisplayFunction->(TagBox[
    SubsuperscriptBox[
     RowBox[{"(", 
       GridBox[{{#, #2, #3, #4}, {#5, #6, #7, #8}, {#9, #10, #11, #12}}, 
        AllowedDimensions -> {4, 3}, AutoDelete -> False, 
        AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
        BaseStyle -> {Deployed -> False}, GridBoxItemStyle -> {}, 
        GridBoxDividers -> {"Rows" -> {False, False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}, 
          "Columns" -> {False, False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}}, 
        GridBoxBackground -> {"Rows" -> {{
             GrayLevel[1], 
             RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #13, 
     ButtonBox[
      GraphicsBox[{
        RGBColor[0.8, 0.85, 0.85], 
        EdgeForm[
         RGBColor[0.6, 0.7, 0.7]], 
        RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
        InsetBox[
         StyleBox[
         "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
          GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
          FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
      ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
        ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
      None], MultilineFunction -> None], 
    EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
          FrontEnd`Value[
           FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
      True}]]& ),
  InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{1, 3}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{5, 7}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{9, 11}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{4, 4}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{8, 8}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{12, 12}, ","], "}"}], "}"}], "}"}], ",", 
     "SamplingPeriod", "->", 
     RowBox[{#13}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
  Tooltip->StateSpaceModel]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356474752`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[1]=",
 CellID->382905221,ExpressionUUID->"0af014f0-ff8b-42f3-baf9-9a6fd1b54dda"],

Cell[BoxData["True"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356474752`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[1]=",
 CellID->1627042935,ExpressionUUID->"efcd8cee-a49b-4df3-a8c5-c1fac1f70ce3"],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "9c815922-1e56-4446-a305-74671798df0c"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356474752`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->1861298717,ExpressionUUID->"2f364320-4811-40f6-beee-c0d06af05c0f"],

Cell["An uncontrollable system with non-distinct eigenvalues:", "ExampleText",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356474752`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->453250770,ExpressionUUID->"aeaa3e29-1b83-4084-b911-891dc70b894a"],

Cell[BoxData[{
 RowBox[{"StateSpaceModel", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        SubscriptBox["\[Lambda]", "1"], ",", "1", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        SubscriptBox["\[Lambda]", "1"], ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", 
        SubscriptBox["\[Lambda]", "3"]}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       SubscriptBox["b", "1"], "}"}], ",", 
      RowBox[{"{", "0", "}"}], ",", 
      RowBox[{"{", 
       SubscriptBox["b", "3"], "}"}]}], "}"}]}], "}"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ControllableModelQ", "[", "%", "]"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356474752`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[1]:=",
 CellID->1388128175,ExpressionUUID->"d3d3b506-dcbd-45c4-aec1-4b6b7a07c108"],

Cell[BoxData[
 TemplateBox[{
   SubscriptBox["\[Lambda]", "1"], "1", "0", 
   SubscriptBox["b", "1"], "0", 
   SubscriptBox["\[Lambda]", "1"], "0", "0", "0", "0", 
   SubscriptBox["\[Lambda]", "3"], 
   SubscriptBox["b", "3"], 
   InterpretationBox["\[InvisibleSpace]", None], {
   StateSpaceModel, {
    False, False, {
     False, False}}, {$CellContext`stname1, $CellContext`stname2, \
$CellContext`stname3}, {{Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$, 
      Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$, 
      Control`CommonDump`$DUMMY$}}, Identity, Automatic, 1, -3, 3, 1, {}, {
    False, False}, False, Automatic, None, Automatic}, {}},
  "StateSpaceModelFull",
  BaseStyle->{NumberMarks -> False},
  DisplayFunction->(TagBox[
    SubsuperscriptBox[
     RowBox[{"(", 
       GridBox[{{#, #2, #3, #4}, {#5, #6, #7, #8}, {#9, #10, #11, #12}}, 
        AllowedDimensions -> {4, 3}, AutoDelete -> False, 
        AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
        BaseStyle -> {Deployed -> False}, GridBoxItemStyle -> {}, 
        GridBoxDividers -> {"Rows" -> {False, False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}, 
          "Columns" -> {False, False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}}, 
        GridBoxBackground -> {"Rows" -> {{
             GrayLevel[1], 
             RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #13, 
     ButtonBox[
      GraphicsBox[{
        RGBColor[0.8, 0.85, 0.85], 
        EdgeForm[
         RGBColor[0.6, 0.7, 0.7]], 
        RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
        InsetBox[
         StyleBox[
         "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
          GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
          FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
      ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
        ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
      None], MultilineFunction -> None], 
    EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
          FrontEnd`Value[
           FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
      True}]]& ),
  InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{1, 3}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{5, 7}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{9, 11}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{4, 4}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{8, 8}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{12, 12}, ","], "}"}], "}"}], "}"}], ",", 
     "SamplingPeriod", "->", 
     RowBox[{#13}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
  Tooltip->StateSpaceModel]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235648473*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[1]=",
 CellID->1801331294,ExpressionUUID->"4dca77d9-05c0-4093-9af7-2da7dc00a77c"],

Cell[BoxData["False"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235648473*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[1]=",
 CellID->1898086499,ExpressionUUID->"0f332e8a-4eeb-469f-bb14-fb6f84cf012a"],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "cb9b02b9-611f-4389-a8e1-f55f0ef28b2c"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235648473*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->1973276483,ExpressionUUID->"a80d0941-c738-4eb5-bf5c-5f0f6d33966e"],

Cell["An observable system:", "ExampleText",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235648473*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->1267889160,ExpressionUUID->"da87e154-ec17-41ac-b7ee-4eece99efc7e"],

Cell[BoxData[{
 RowBox[{"StateSpaceModel", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"DiagonalMatrix", "[", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["\[Lambda]", "1"], ",", 
       SubscriptBox["\[Lambda]", "2"], ",", 
       SubscriptBox["\[Lambda]", "3"]}], "}"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       SubscriptBox["b", "1"], "}"}], ",", 
      RowBox[{"{", 
       SubscriptBox["b", "2"], "}"}], ",", 
      RowBox[{"{", 
       SubscriptBox["b", "3"], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["c", "1"], ",", 
       SubscriptBox["c", "2"], ",", 
       SubscriptBox["c", "3"]}], "}"}], "}"}]}], "}"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ObservableModelQ", "[", "%", "]"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235648473*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[1]:=",
 CellID->2080366586,ExpressionUUID->"d62ea117-cdd4-4773-9c18-8970c1c7abf8"],

Cell[BoxData[
 TemplateBox[{
   SubscriptBox["\[Lambda]", "1"], "0", "0", 
   SubscriptBox["b", "1"], "0", 
   SubscriptBox["\[Lambda]", "2"], "0", 
   SubscriptBox["b", "2"], "0", "0", 
   SubscriptBox["\[Lambda]", "3"], 
   SubscriptBox["b", "3"], 
   SubscriptBox["c", "1"], 
   SubscriptBox["c", "2"], 
   SubscriptBox["c", "3"], "0", 
   InterpretationBox["\[InvisibleSpace]", None], {
   StateSpaceModel, {
    False, False, {
     False, False}}, {$CellContext`stname1, $CellContext`stname2, \
$CellContext`stname3}, {{Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$, 
      Control`CommonDump`$DUMMY$}}, Identity, Automatic, 1, 1, 3, 1, {}, {
    False, False}, False, Automatic, None, Automatic}, {}},
  "StateSpaceModelFull",
  BaseStyle->{NumberMarks -> False},
  DisplayFunction->(TagBox[
    SubsuperscriptBox[
     RowBox[{"(", 
       GridBox[{{#, #2, #3, #4}, {#5, #6, #7, #8}, {#9, #10, #11, #12}, {#13, \
#14, #15, #16}}, AllowedDimensions -> {4, 4}, AutoDelete -> False, 
        AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
        BaseStyle -> {Deployed -> False}, GridBoxItemStyle -> {}, 
        GridBoxDividers -> {"Rows" -> {False, False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}, 
          "Columns" -> {False, False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}}, 
        GridBoxBackground -> {"Rows" -> {{
             GrayLevel[1], 
             RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #17, 
     ButtonBox[
      GraphicsBox[{
        RGBColor[0.8, 0.85, 0.85], 
        EdgeForm[
         RGBColor[0.6, 0.7, 0.7]], 
        RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
        InsetBox[
         StyleBox[
         "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
          GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
          FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
      ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
        ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
      None], MultilineFunction -> None], 
    EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
          FrontEnd`Value[
           FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
      True}]]& ),
  InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{1, 3}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{5, 7}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{9, 11}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{4, 4}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{8, 8}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{12, 12}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{13, 15}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{16, 16}, ","], "}"}], "}"}], "}"}], ",", 
     "SamplingPeriod", "->", 
     RowBox[{#17}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
  Tooltip->StateSpaceModel]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235648473*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[1]=",
 CellID->270212508,ExpressionUUID->"80163e13-adf4-4b39-bd8b-7e3a9b33ca8d"],

Cell[BoxData["True"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356494703`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[1]=",
 CellID->1681192198,ExpressionUUID->"59ea33eb-95e0-4ef9-a428-e9c7c7b10c87"],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "637bbd0e-0c14-4774-ba03-6161b5b8b89f"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356494703`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->1070115370,ExpressionUUID->"b7bb5479-cb33-453c-bd33-cb98819bc7f5"],

Cell["An unobservable system:", "ExampleText",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356494703`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->253479965,ExpressionUUID->"830cbdf0-d972-4d02-aece-ae7f772d52f7"],

Cell[BoxData[{
 RowBox[{"StateSpaceModel", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"DiagonalMatrix", "[", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["\[Lambda]", "1"], ",", 
       SubscriptBox["\[Lambda]", "2"], ",", 
       SubscriptBox["\[Lambda]", "3"]}], "}"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       SubscriptBox["b", "1"], "}"}], ",", 
      RowBox[{"{", 
       SubscriptBox["b", "2"], "}"}], ",", 
      RowBox[{"{", 
       SubscriptBox["b", "3"], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["c", "1"], ",", 
       SubscriptBox["c", "2"], ",", "0"}], "}"}], "}"}]}], "}"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ObservableModelQ", "[", "%", "]"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356494703`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[1]:=",
 CellID->1777699754,ExpressionUUID->"b5dc4254-f948-4b78-b01f-779705e56b9e"],

Cell[BoxData[
 TemplateBox[{
   SubscriptBox["\[Lambda]", "1"], "0", "0", 
   SubscriptBox["b", "1"], "0", 
   SubscriptBox["\[Lambda]", "2"], "0", 
   SubscriptBox["b", "2"], "0", "0", 
   SubscriptBox["\[Lambda]", "3"], 
   SubscriptBox["b", "3"], 
   SubscriptBox["c", "1"], 
   SubscriptBox["c", "2"], "0", "0", 
   InterpretationBox["\[InvisibleSpace]", None], {
   StateSpaceModel, {
    False, False, {
     False, False}}, {$CellContext`stname1, $CellContext`stname2, \
$CellContext`stname3}, {{Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$, 
      Control`CommonDump`$DUMMY$}}, Identity, Automatic, 1, 1, 3, 1, {}, {
    False, False}, False, Automatic, None, Automatic}, {}},
  "StateSpaceModelFull",
  BaseStyle->{NumberMarks -> False},
  DisplayFunction->(TagBox[
    SubsuperscriptBox[
     RowBox[{"(", 
       GridBox[{{#, #2, #3, #4}, {#5, #6, #7, #8}, {#9, #10, #11, #12}, {#13, \
#14, #15, #16}}, AllowedDimensions -> {4, 4}, AutoDelete -> False, 
        AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
        BaseStyle -> {Deployed -> False}, GridBoxItemStyle -> {}, 
        GridBoxDividers -> {"Rows" -> {False, False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}, 
          "Columns" -> {False, False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}}, 
        GridBoxBackground -> {"Rows" -> {{
             GrayLevel[1], 
             RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #17, 
     ButtonBox[
      GraphicsBox[{
        RGBColor[0.8, 0.85, 0.85], 
        EdgeForm[
         RGBColor[0.6, 0.7, 0.7]], 
        RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
        InsetBox[
         StyleBox[
         "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
          GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
          FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
      ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
        ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
      None], MultilineFunction -> None], 
    EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
          FrontEnd`Value[
           FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
      True}]]& ),
  InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{1, 3}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{5, 7}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{9, 11}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{4, 4}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{8, 8}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{12, 12}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{13, 15}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{16, 16}, ","], "}"}], "}"}], "}"}], ",", 
     "SamplingPeriod", "->", 
     RowBox[{#17}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
  Tooltip->StateSpaceModel]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356494703`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[1]=",
 CellID->1354928207,ExpressionUUID->"86b3706a-ec45-4fa6-9f62-7c1161a5f287"],

Cell[BoxData["False"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235650468*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[1]=",
 CellID->361782261,ExpressionUUID->"4fd186d3-e10c-4a62-8f87-0f111785ab40"],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "0e0db07f-270f-42cf-a7f6-c3bcef25589e"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235650468*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->831508477,ExpressionUUID->"d11d9bf4-091a-4079-9e86-b4898f47a924"],

Cell["An observable system with non-distinct eigenvalues:", "ExampleText",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235650468*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->1486881910,ExpressionUUID->"816d15ea-829b-49d8-b0ec-d74181d34c59"],

Cell[BoxData[{
 RowBox[{"StateSpaceModel", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        SubscriptBox["\[Lambda]", "1"], ",", "1", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        SubscriptBox["\[Lambda]", "1"], ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", 
        SubscriptBox["\[Lambda]", "3"]}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       SubscriptBox["b", "1"], "}"}], ",", 
      RowBox[{"{", 
       SubscriptBox["b", "2"], "}"}], ",", 
      RowBox[{"{", 
       SubscriptBox["b", "3"], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["c", "1"], ",", "0", ",", 
       SubscriptBox["c", "3"]}], "}"}], "}"}]}], "}"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ObservableModelQ", "[", "%", "]"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235650468*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[1]:=",
 CellID->1904544878,ExpressionUUID->"d91e2ce7-d6df-482b-a29b-449b459995ce"],

Cell[BoxData[
 TemplateBox[{
   SubscriptBox["\[Lambda]", "1"], "1", "0", 
   SubscriptBox["b", "1"], "0", 
   SubscriptBox["\[Lambda]", "1"], "0", 
   SubscriptBox["b", "2"], "0", "0", 
   SubscriptBox["\[Lambda]", "3"], 
   SubscriptBox["b", "3"], 
   SubscriptBox["c", "1"], "0", 
   SubscriptBox["c", "3"], "0", 
   InterpretationBox["\[InvisibleSpace]", None], {
   StateSpaceModel, {
    False, False, {
     False, False}}, {$CellContext`stname1, $CellContext`stname2, \
$CellContext`stname3}, {{Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$, 
      Control`CommonDump`$DUMMY$}}, Identity, Automatic, 1, 1, 3, 1, {}, {
    False, False}, False, Automatic, None, Automatic}, {}},
  "StateSpaceModelFull",
  BaseStyle->{NumberMarks -> False},
  DisplayFunction->(TagBox[
    SubsuperscriptBox[
     RowBox[{"(", 
       GridBox[{{#, #2, #3, #4}, {#5, #6, #7, #8}, {#9, #10, #11, #12}, {#13, \
#14, #15, #16}}, AllowedDimensions -> {4, 4}, AutoDelete -> False, 
        AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
        BaseStyle -> {Deployed -> False}, GridBoxItemStyle -> {}, 
        GridBoxDividers -> {"Rows" -> {False, False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}, 
          "Columns" -> {False, False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}}, 
        GridBoxBackground -> {"Rows" -> {{
             GrayLevel[1], 
             RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #17, 
     ButtonBox[
      GraphicsBox[{
        RGBColor[0.8, 0.85, 0.85], 
        EdgeForm[
         RGBColor[0.6, 0.7, 0.7]], 
        RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
        InsetBox[
         StyleBox[
         "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
          GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
          FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
      ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
        ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
      None], MultilineFunction -> None], 
    EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
          FrontEnd`Value[
           FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
      True}]]& ),
  InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{1, 3}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{5, 7}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{9, 11}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{4, 4}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{8, 8}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{12, 12}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{13, 15}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{16, 16}, ","], "}"}], "}"}], "}"}], ",", 
     "SamplingPeriod", "->", 
     RowBox[{#17}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
  Tooltip->StateSpaceModel]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.769807235650468*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[1]=",
 CellID->948255970,ExpressionUUID->"e3c8c350-2b12-4589-941b-53c3a9e4e03d"],

Cell[BoxData["True"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356514645`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[1]=",
 CellID->861943403,ExpressionUUID->"6638c65f-43ba-445a-8165-05f6b1030b90"],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "769dd721-6bc0-4895-9ebe-0b8031ef951e"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356514645`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->378150932,ExpressionUUID->"b9b98358-92f4-4ca3-8478-29841bab5006"],

Cell["An unobservable system with non-distinct eigenvalues:", "ExampleText",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356514645`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->1178602651,ExpressionUUID->"9ea57b9b-4626-4676-9f59-98a9a73eb4ff"],

Cell[BoxData[{
 RowBox[{"StateSpaceModel", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        SubscriptBox["\[Lambda]", "1"], ",", "1", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        SubscriptBox["\[Lambda]", "1"], ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", 
        SubscriptBox["\[Lambda]", "3"]}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       SubscriptBox["b", "1"], "}"}], ",", 
      RowBox[{"{", 
       SubscriptBox["b", "2"], "}"}], ",", 
      RowBox[{"{", 
       SubscriptBox["b", "3"], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       SubscriptBox["c", "2"], ",", 
       SubscriptBox["c", "3"]}], "}"}], "}"}]}], "}"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ObservableModelQ", "[", "%", "]"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356514645`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[1]:=",
 CellID->1697096009,ExpressionUUID->"06a64f05-2dc0-4c61-a037-825c92ad9758"],

Cell[BoxData[
 TemplateBox[{
   SubscriptBox["\[Lambda]", "1"], "1", "0", 
   SubscriptBox["b", "1"], "0", 
   SubscriptBox["\[Lambda]", "1"], "0", 
   SubscriptBox["b", "2"], "0", "0", 
   SubscriptBox["\[Lambda]", "3"], 
   SubscriptBox["b", "3"], "0", 
   SubscriptBox["c", "2"], 
   SubscriptBox["c", "3"], "0", 
   InterpretationBox["\[InvisibleSpace]", None], {
   StateSpaceModel, {
    False, False, {
     False, False}}, {$CellContext`stname1, $CellContext`stname2, \
$CellContext`stname3}, {{Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$, 
      Control`CommonDump`$DUMMY$}}, Identity, Automatic, 1, 1, 3, 1, {}, {
    False, False}, False, Automatic, None, Automatic}, {}},
  "StateSpaceModelFull",
  BaseStyle->{NumberMarks -> False},
  DisplayFunction->(TagBox[
    SubsuperscriptBox[
     RowBox[{"(", 
       GridBox[{{#, #2, #3, #4}, {#5, #6, #7, #8}, {#9, #10, #11, #12}, {#13, \
#14, #15, #16}}, AllowedDimensions -> {4, 4}, AutoDelete -> False, 
        AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
        BaseStyle -> {Deployed -> False}, GridBoxItemStyle -> {}, 
        GridBoxDividers -> {"Rows" -> {False, False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}, 
          "Columns" -> {False, False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}}, 
        GridBoxBackground -> {"Rows" -> {{
             GrayLevel[1], 
             RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #17, 
     ButtonBox[
      GraphicsBox[{
        RGBColor[0.8, 0.85, 0.85], 
        EdgeForm[
         RGBColor[0.6, 0.7, 0.7]], 
        RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
        InsetBox[
         StyleBox[
         "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
          GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
          FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
      ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
        ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
      None], MultilineFunction -> None], 
    EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
          FrontEnd`Value[
           FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
      True}]]& ),
  InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{1, 3}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{5, 7}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{9, 11}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{4, 4}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{8, 8}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{12, 12}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{13, 15}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{16, 16}, ","], "}"}], "}"}], "}"}], ",", 
     "SamplingPeriod", "->", 
     RowBox[{#17}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
  Tooltip->StateSpaceModel]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356514645`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[1]=",
 CellID->1905575206,ExpressionUUID->"0bf597ef-fc84-4cdb-908f-08bb6795151b"],

Cell[BoxData["False"], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356514645`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[1]=",
 CellID->1578859531,ExpressionUUID->"53da4ff3-7482-4393-b829-5d384fb47d0a"],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "532595b6-bd4a-414e-b551-1be71044a6a9"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356524644`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->45179716,ExpressionUUID->"f0dea1cc-6517-47d5-814a-7c88d3bff897"],

Cell["Obtain the transfer function representation:", "ExampleText",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356524644`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->1760938087,ExpressionUUID->"37f0aa94-66cb-44f1-a093-7dce600e81a3"],

Cell[BoxData[
 RowBox[{"TransferFunctionModel", "[", 
  RowBox[{"StateSpaceModel", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", "a", "}"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", "b", "}"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", "c", "}"}], "}"}]}], "}"}], "]"}], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356524644`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[1]:=",
 CellID->726167026,ExpressionUUID->"acf5f81c-14a5-4bce-bed0-cde107957532"],

Cell[BoxData[
 InterpretationBox[
  TemplateBox[{
    RowBox[{"-", 
      FractionBox[
       RowBox[{"b", " ", "c"}], 
       RowBox[{"a", "-", "\[FormalS]"}]]}], 
    InterpretationBox["\[InvisibleSpace]", None], {
    TransferFunctionModel, {
     False, False, {False, False}}, $Failed, {{Control`CommonDump`$DUMMY$}, {
      Control`CommonDump`$DUMMY$}}, InterpretationBox[#, 
      TransferFunctionModel[{{{(-$CellContext`b) $CellContext`c}}, \
-\[FormalS] + $CellContext`a}, \[FormalS]], AutoDelete -> True, Editable -> 
      True, BaseStyle -> "TransferFunctionModelMinimal"]& , \[FormalS], 1, 1, 
     Control`CountStates[
      TransferFunctionModel[{{{(-$CellContext`b) $CellContext`c}}, \
-\[FormalS] + $CellContext`a}, \[FormalS]]], 1, {}, {False, False}, False, 
     Automatic, None, Automatic}, {}},
   "TransferFunctionModelFull",
   BaseStyle->{NumberMarks -> False},
   DisplayFunction->(TagBox[
     SubsuperscriptBox[
      RowBox[{"(", 
        GridBox[{{#}}, AllowedDimensions -> {1, 1}, AutoDelete -> False, 
         AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
         BaseStyle -> {Deployed -> False}, GridBoxItemStyle -> {}, 
         GridBoxDividers -> {
          "Rows" -> {False, {False}, False}, 
           "Columns" -> {False, {False}, False}}, 
         GridBoxBackground -> {"Rows" -> {{
              GrayLevel[1], 
              RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #2, 
      ButtonBox[
       GraphicsBox[{
         RGBColor[0.8, 0.85, 0.85], 
         EdgeForm[
          RGBColor[0.6, 0.7, 0.7]], 
         RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
         InsetBox[
          StyleBox[
          "\[ScriptCapitalT]", Control`NonlinearModelsDump`LineColor -> 
           GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
           GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
           GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
           FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
       ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
         ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
       None], MultilineFunction -> None], 
     EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
           FrontEnd`Value[
            FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
       True}]]& ),
   InterpretationFunction->(
    RowBox[{"TransferFunctionModel", "[", "Unevaluated", "[", 
      RowBox[{"{", 
        RowBox[{"{", 
          TemplateSlotSequence[{1, 1}, ","], "}"}], "}"}], "]", ",", 
      "\[FormalS]", ",", "SamplingPeriod", "->", 
      RowBox[{#2}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
   Tooltip->TransferFunctionModel],
  TransferFunctionModel[{{{(-$CellContext`b) $CellContext`c}}, -\[FormalS] + \
$CellContext`a}, \[FormalS]],
  AutoDelete->True,
  BaseStyle->"TransferFunctionModelMinimal",
  Editable->True]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356524644`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[1]=",
 CellID->1584195185,ExpressionUUID->"d35091d1-9028-42b8-a99b-8b98a3a6ca13"],

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "c6a46f7e-79da-42ae-9ced-5de209d40c1c"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356524644`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->298238997,ExpressionUUID->"6a39899f-5eb2-4c17-b22c-e216ff6bcf15"],

Cell["\<\
The state-space model of an improper transfer function is singular:\
\>", "ExampleText",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356524644`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellID->772088093,ExpressionUUID->"baac78dd-3c52-4cc0-a313-febec1e160f5"],

Cell[BoxData[
 RowBox[{"StateSpaceModel", "[", 
  InterpretationBox[
   TemplateBox[{
     FractionBox[
      RowBox[{
        RowBox[{"(", 
          RowBox[{
            RowBox[{"-", "2"}], "+", "s"}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
           RowBox[{"4", "+", "s"}], ")"}], "2"]}], 
      RowBox[{"1", "+", "s"}]], 
     InterpretationBox["\[InvisibleSpace]", None], {
     TransferFunctionModel, {
      False, False, {False, False}}, $Failed, {{Control`CommonDump`$DUMMY$}, {
       Control`CommonDump`$DUMMY$}}, InterpretationBox[#, 
       TransferFunctionModel[{{{(-2 + $CellContext`s) (
             4 + $CellContext`s)^2}}, 1 + $CellContext`s}, $CellContext`s], 
       AutoDelete -> True, Editable -> True, BaseStyle -> 
       "TransferFunctionModelMinimal"]& , $CellContext`s, 1, 1, 
      Control`CountStates[
       TransferFunctionModel[{{{(-2 + $CellContext`s) (
             4 + $CellContext`s)^2}}, 1 + $CellContext`s}, $CellContext`s]], 
      1, {}, {False, False}, False, Automatic, None, Automatic}, {}},
    "TransferFunctionModelFull",
    BaseStyle->{NumberMarks -> False},
    DisplayFunction->(TagBox[
      SubsuperscriptBox[
       RowBox[{"(", 
         GridBox[{{#}}, AllowedDimensions -> {1, 1}, AutoDelete -> False, 
          AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
          BaseStyle -> {Deployed -> False}, GridBoxItemStyle -> {}, 
          GridBoxDividers -> {
           "Rows" -> {False, {False}, False}, 
            "Columns" -> {False, {False}, False}}, 
          GridBoxBackground -> {"Rows" -> {{
               GrayLevel[1], 
               RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #2, 
       ButtonBox[
        GraphicsBox[{
          RGBColor[0.8, 0.85, 0.85], 
          EdgeForm[
           RGBColor[0.6, 0.7, 0.7]], 
          RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
          InsetBox[
           StyleBox[
           "\[ScriptCapitalT]", Control`NonlinearModelsDump`LineColor -> 
            GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
            GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
            GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
            FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
        ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
          ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
        None], MultilineFunction -> None], 
      EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
            FrontEnd`Value[
             FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
        True}]]& ),
    InterpretationFunction->(
     RowBox[{"TransferFunctionModel", "[", "Unevaluated", "[", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{1, 1}, ","], "}"}], "}"}], "]", ",", "s", 
       ",", "SamplingPeriod", "->", 
       RowBox[{#2}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
    Tooltip->TransferFunctionModel],
   TransferFunctionModel[{{{(-2 + $CellContext`s) (4 + $CellContext`s)^2}}, 
     1 + $CellContext`s}, $CellContext`s],
   AutoDelete->True,
   BaseStyle->"TransferFunctionModelMinimal",
   Editable->True], "]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356534615`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 FontWeight->"Plain",
 CellLabel->"In[1]:=",
 CellID->594712846,ExpressionUUID->"bc448d9c-bcb8-4b20-9b3b-9c47ff1e389c"],

Cell[BoxData[
 TemplateBox[{"1", "0", "0", "0", 
   RowBox[{"-", "1"}], "0", "0", "0", "1", "0", "0", "1", "0", "0", "1", "0", 
   "0", "0", "0", "0", "0", "1", "0", "0", "1", "0", "0", "0", "0", "0", "0", 
   "0", "0", "0", "1", "1", 
   RowBox[{"-", "27"}], 
   RowBox[{"-", "1"}], 
   RowBox[{"-", "5"}], "5", "0", 
   InterpretationBox["\[InvisibleSpace]", None], {
   StateSpaceModel, {
    False, False, {
     False, False}}, {$CellContext`stname1, $CellContext`stname2, \
$CellContext`stname3, $CellContext`stname4}, {{Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$}, {
     Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$, 
      Control`CommonDump`$DUMMY$, Control`CommonDump`$DUMMY$}}, Identity, 
    Automatic, 1, 1, 4, 1, {}, {False, False}, True, Automatic, None, 
    Automatic}, {}},
  "StateSpaceModelFull",
  BaseStyle->{NumberMarks -> False},
  DisplayFunction->(TagBox[
    SubsuperscriptBox[
     RowBox[{"(", 
       GridBox[{{#, #2, #3, #4, #5, #6, #7, #8, #9}, {#10, #11, #12, #13, \
#14, #15, #16, #17, #18}, {#19, #20, #21, #22, #23, #24, #25, #26, #27}, \
{#28, #29, #30, #31, #32, #33, #34, #35, #36}, {
         "", "", "", "", #37, #38, #39, #40, #41}}, 
        AllowedDimensions -> {9, 5}, AutoDelete -> False, 
        AllowScriptLevelChange -> False, ColumnAlignments -> {Center}, 
        BaseStyle -> {Deployed -> False}, GridBoxItemStyle -> {}, 
        GridBoxDividers -> {"Rows" -> {False, False, False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}, 
          "Columns" -> {False, False, False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], False, False, False, 
            Directive[
             GrayLevel[0], 
             GrayLevel[0.6]], {False}, False}}, 
        GridBoxBackground -> {"Rows" -> {{
             GrayLevel[1], 
             RGBColor[0.8, 0.9, 0.9]}}}], ")"}], #42, 
     ButtonBox[
      GraphicsBox[{
        RGBColor[0.8, 0.85, 0.85], 
        EdgeForm[
         RGBColor[0.6, 0.7, 0.7]], 
        RectangleBox[{0, 0}, RoundingRadius -> Offset[2.5]], 
        InsetBox[
         StyleBox[
         "\[ScriptCapitalS]", Control`NonlinearModelsDump`LineColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`FrontFaceColor -> 
          GrayLevel[0], Control`NonlinearModelsDump`BackFaceColor -> 
          GrayLevel[0], GraphicsColor -> GrayLevel[0], FontSize -> 12, 
          FontColor -> GrayLevel[0]], {0.5, 0.5}]}, ImageSize -> 20], 
      ButtonFunction :> Control`Typesetting`SystemsModelTypesetToggle[
        ButtonNotebook[], FE`CMObj], Evaluator -> Automatic, Appearance -> 
      None], MultilineFunction -> None], 
    EventHandlerTag[{"MouseEntered" :> {FE`CMObj = MathLink`CallFrontEnd[
          FrontEnd`Value[
           FEPrivate`Self[]]]}, PassEventsDown -> True, PassEventsUp -> 
      True}]]& ),
  InterpretationFunction->(RowBox[{"StateSpaceModel", "[", 
     RowBox[{"{", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{5, 8}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{14, 17}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{23, 26}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{32, 35}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{9, 9}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{18, 18}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{27, 27}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{36, 36}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{37, 40}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{41, 41}, ","], "}"}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{"{", 
           TemplateSlotSequence[{1, 4}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{10, 13}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{19, 22}, ","], "}"}], ",", 
         RowBox[{"{", 
           TemplateSlotSequence[{28, 31}, ","], "}"}], "}"}], "}"}], ",", 
     "SamplingPeriod", "->", 
     RowBox[{#42}], ",", "SystemsModelLabels", "->", "None", "]"}]& ),
  Tooltip->StateSpaceModel]], "Output",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.7698072356534615`*^9},
 FontFamily->"Times New Roman",
 FontSize->9,
 CellLabel->"Out[1]=",
 CellID->1066218789,ExpressionUUID->"5f347280-30d4-4917-8837-ea2e1589d548"]
}, Closed]]
},
WindowSize->{1344, 695},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
TaggingRules->{
 "Openers" -> {
   "PrimaryExamplesSection" -> Closed, 
    "ExampleSection" -> {
     "0" -> Closed, "1" -> Closed, "2" -> Closed, "3" -> Closed, "4" -> 
      Closed, "5" -> Closed}, 
    "ExampleSubsection" -> {
     "6" -> Closed, "7" -> Closed, "8" -> Closed, "9" -> Closed, "10" -> 
      Closed, "12" -> Closed, "13" -> Closed, "14" -> Closed, "15" -> Closed},
     "NotesSection" -> Open}},
Magnification:>1.85 Inherited,
FrontEndVersion->"12.3 for Microsoft Windows (64-bit) (July 9, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"46e5a407-6723-4ec5-b241-56f1951c0650"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "PrimaryExamplesSection"->{
  Cell[2105118, 39921, 1545, 40, 34, "PrimaryExamplesSection",ExpressionUUID->"b8c67d5e-2539-4ebc-b2b8-e2e17abb7f16",
   CellGroupingRules->{"GroupTogetherGrouping", 10000.},
   CellTags->"PrimaryExamplesSection",
   CellID->682806395]},
 "RasterizedOutput"->{
  Cell[2431441, 48437, 7567, 133, 286, "Output",ExpressionUUID->"5e0290b4-02a3-48ba-85f3-e5260760a1f4",
   CellGroupingRules->{"GroupTogetherGrouping", 10000.},
   CellTags->"RasterizedOutput",
   CellID->1523568013]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"PrimaryExamplesSection", 2638152, 53591},
 {"RasterizedOutput", 2638413, 53596}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 10101, 322, 696, "Input",ExpressionUUID->"e5175111-b4f6-43af-98c2-4b9e07d7670b"],
Cell[CellGroupData[{
Cell[10684, 346, 885, 26, 99, "Input",ExpressionUUID->"1c6c3068-55dd-4196-98b5-cebfed487cb7",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[11572, 374, 1917, 44, 155, "Input",ExpressionUUID->"7cc81b72-fddc-4cc9-9cb6-cc24cb0a6074",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]],
Cell[13504, 421, 1655, 47, 128, "Output",ExpressionUUID->"46273c7b-d007-4816-bfd3-6f547a18318c"],
Cell[15162, 470, 1658, 47, 128, "Output",ExpressionUUID->"6336fc61-d06e-4155-a317-e4bc2e19162c"],
Cell[16823, 519, 226, 5, 62, "Input",ExpressionUUID->"a8f98229-57c0-456a-b0af-dd112daa74d5"],
Cell[CellGroupData[{
Cell[17074, 528, 2327, 57, 128, "Output",ExpressionUUID->"1cb8c47c-e995-4781-97b9-f0ef14aec284",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[19404, 587, 1558, 30, 65, "Input",ExpressionUUID->"042ae2f9-face-43d8-9363-10ea66c5413c",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]],
Cell[20977, 620, 1646, 40, 54, "Output",ExpressionUUID->"5fe5f463-b4a2-4f01-9034-270dd16ff11f"],
Cell[CellGroupData[{
Cell[22648, 664, 1360, 34, 67, "Input",ExpressionUUID->"28b700f1-9e8d-440d-b689-f6bc26f9f499",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[24011, 700, 439, 9, 63, "Input",ExpressionUUID->"ec172ce2-2b5c-4e90-805b-1beaa4d98c72",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[24453, 711, 1991, 47, 118, "Output",ExpressionUUID->"48d012ab-d4fd-428b-8415-46d15ca18826",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[26481, 763, 1453, 34, 158, "Input",ExpressionUUID->"11d48c8b-afcf-4d87-aca5-57f97d976ae3"],
Cell[27937, 799, 3842, 94, 188, "Output",ExpressionUUID->"9e140e29-03cc-458e-aaca-7bd7a8455ed1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31816, 898, 1463, 36, 104, "Input",ExpressionUUID->"9cc320ad-e126-4757-a32b-5d74622ee67e",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[33282, 936, 2084, 52, 178, "Input",ExpressionUUID->"b1d4feab-3bd2-4ebb-b1a9-00caa40d6878",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]],
Cell[35381, 991, 4424, 112, 188, "Output",ExpressionUUID->"eadaec26-6c03-4a43-82dc-2ac1af2dd9e2"],
Cell[CellGroupData[{
Cell[39830, 1107, 2397, 67, 179, "Input",ExpressionUUID->"3c719bd5-1aa6-4481-a9b0-1ab5801171db"],
Cell[42230, 1176, 1360, 33, 188, "Output",ExpressionUUID->"97bfffa1-4886-4398-a9e9-9bf6e6feda45"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43627, 1214, 449, 12, 48, "Input",ExpressionUUID->"4a99c67a-9426-40a6-b29e-f9e600e2a014"],
Cell[44079, 1228, 2082, 63, 52, "Output",ExpressionUUID->"9229b6cc-c64f-439c-8a0e-7c906ac72568"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46198, 1296, 380, 10, 63, "Input",ExpressionUUID->"9e64d1da-7e48-4194-92cb-015a1df9f6c1"],
Cell[46581, 1308, 1504, 41, 194, "Output",ExpressionUUID->"d1adcbff-08c3-43cd-b82b-cedda25f94a9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48122, 1354, 1669, 49, 145, "Input",ExpressionUUID->"cd0e738a-b744-4cb9-abc2-c308aa075c5e"],
Cell[49794, 1405, 4426, 132, 194, "Output",ExpressionUUID->"24a6072b-8a6b-4c1a-8f28-f72305cbcdea"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54257, 1542, 508, 15, 66, "Input",ExpressionUUID->"1dddfb8d-2d99-4ee9-a4b4-c78d8406d66b"],
Cell[54768, 1559, 3358, 103, 188, "Output",ExpressionUUID->"8e81ab53-ac89-4381-b768-1660a995fa30"]
}, Open  ]],
Cell[58141, 1665, 10123, 276, 859, "Text",ExpressionUUID->"1dbd2348-29d6-436d-a2bc-ccceb257c5f8"],
Cell[68267, 1943, 596, 16, 48, "Input",ExpressionUUID->"571463b3-11f4-4e14-ab00-a991f074569d"],
Cell[68866, 1961, 801, 20, 63, "Input",ExpressionUUID->"40c8c312-a0d3-476a-a403-7ae87033f4a8"],
Cell[69670, 1983, 11260, 299, 1044, "Input",ExpressionUUID->"75dceaa4-49b7-4f03-89a4-6a4aeb4d571c"],
Cell[CellGroupData[{
Cell[80955, 2286, 317, 7, 63, "Input",ExpressionUUID->"914c1752-c4d2-4a13-8390-90b658af601b"],
Cell[81275, 2295, 9722, 246, 594, "Output",ExpressionUUID->"c260e1dd-d1fa-4566-a2c0-14a0d0fae0fb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[91034, 2546, 1894, 44, 111, "Input",ExpressionUUID->"f250e479-9ca0-4c62-81a9-e019afc18d56"],
Cell[92931, 2592, 10810, 302, 304, "Output",ExpressionUUID->"cf2f89dd-cccd-4025-b268-12ca461b2a7b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[103778, 2899, 1016, 19, 87, "Input",ExpressionUUID->"8d3b9bab-5b7c-4304-9bd9-29c2e0417cfa"],
Cell[104797, 2920, 13187, 341, 594, "Output",ExpressionUUID->"1f9b305b-61ff-4b67-b792-89964ac4083e"]
}, Open  ]],
Cell[117999, 3264, 962050, 15799, 624, "Text",ExpressionUUID->"04558071-56dd-45f2-a2d5-45b6609e036d"],
Cell[1080052, 19065, 278, 4, 47, "Text",ExpressionUUID->"d4b1b2b1-66be-4fdb-9f4f-a9e96a1114cf"],
Cell[1080333, 19071, 1471, 49, 67, "Text",ExpressionUUID->"2eeced54-6417-487d-9b7e-7a2eb1134e8a"],
Cell[1081807, 19122, 230, 4, 47, "Text",ExpressionUUID->"943dc5b9-7b3f-4a21-bf89-e51d4ba0eecd"],
Cell[CellGroupData[{
Cell[1082062, 19130, 5126, 118, 207, "Input",ExpressionUUID->"8503d0de-11f3-4ebe-bd77-d93198b04e3b"],
Cell[1087191, 19250, 10758, 288, 570, "Output",ExpressionUUID->"b2ed09af-64d3-46e5-a784-e6353e5c3d9a"]
}, Open  ]],
Cell[1097964, 19541, 272, 4, 47, "Text",ExpressionUUID->"a544770f-1b5d-4340-ad10-e26d1fa7b501"],
Cell[1098239, 19547, 3205, 94, 84, "Input",ExpressionUUID->"f05b552d-69f7-49f5-82da-f928a8edb6e8"],
Cell[1101447, 19643, 5543, 118, 124, "Input",ExpressionUUID->"87914a47-1d6f-46df-b8bf-7076f5c5d19e"],
Cell[1106993, 19763, 200, 3, 47, "Text",ExpressionUUID->"2520c04a-8067-4484-9d24-b9c08d3ef948"],
Cell[1107196, 19768, 1994, 57, 97, "Input",ExpressionUUID->"786af2af-83d8-4fc4-a6ba-5f1b3f632cbe"],
Cell[1109193, 19827, 2181, 35, 69, "Input",ExpressionUUID->"76d5acec-655d-406d-b358-090e72acfc1c"],
Cell[1111377, 19864, 319, 5, 47, "Text",ExpressionUUID->"fdd4efd2-59fd-4083-812d-1f18d54ce6a5"],
Cell[1111699, 19871, 1896, 43, 117, "Input",ExpressionUUID->"504543cc-0992-4a74-b455-f582b1af8eaa"],
Cell[1113598, 19916, 1221, 27, 48, "Input",ExpressionUUID->"1434bd8b-1d0e-4638-81ed-c7c417bb40cf"],
Cell[1114822, 19945, 1425, 27, 77, "Text",ExpressionUUID->"0007194e-a84e-47ef-843a-e005d9dfad5f"],
Cell[1116250, 19974, 578, 15, 47, "Text",ExpressionUUID->"319ee5e9-4128-4262-9cad-5a989e259c55"],
Cell[1116831, 19991, 1038, 27, 84, "Text",ExpressionUUID->"5367d3d2-38fa-4760-bd61-65e0e83faaef"],
Cell[1117872, 20020, 5388, 134, 214, "Input",ExpressionUUID->"38cff7bc-ed03-47fc-8886-162bcef5af6b"],
Cell[CellGroupData[{
Cell[1123285, 20158, 1334, 25, 69, "Input",ExpressionUUID->"b83e2358-46f6-42fe-a7cb-f327c395714e"],
Cell[1124622, 20185, 426, 10, 50, "Output",ExpressionUUID->"e0dc3857-3d17-4441-8efd-9ad2e9d1a605"],
Cell[1125051, 20197, 353, 8, 50, "Output",ExpressionUUID->"ca5135a6-b06e-4964-8b8f-7f9d522c917c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1125441, 20210, 2213, 45, 76, "Input",ExpressionUUID->"7e069b4c-be08-4269-abf9-1f4a62e6d554"],
Cell[1127657, 20257, 2859, 65, 99, "Output",ExpressionUUID->"dbc84a15-7b5c-48f2-b57f-9d86014336e6"],
Cell[1130519, 20324, 1745, 39, 50, "Output",ExpressionUUID->"c1f32cc4-1331-4bae-8192-fe0f945c15e1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1132301, 20368, 1018, 19, 116, "Input",ExpressionUUID->"deb0b6c8-a763-4c04-aafb-d2825a0bcbb0"],
Cell[1133322, 20389, 1613, 35, 326, "Output",ExpressionUUID->"8c8d9f2c-85b2-4dcb-bad1-649e37bd02f9"],
Cell[1134938, 20426, 1115, 33, 326, "Output",ExpressionUUID->"edc62cfd-68e8-43c8-a504-08a095d8aab0"]
}, Open  ]],
Cell[1136068, 20462, 345, 5, 47, "Text",ExpressionUUID->"b79b7d55-48d6-415e-a9d0-6b9dd3286963"],
Cell[1136416, 20469, 1014, 22, 71, "Input",ExpressionUUID->"c3fb5f96-0e8b-40a6-a107-5e2bc40449b1"],
Cell[CellGroupData[{
Cell[1137455, 20495, 1193, 28, 80, "Input",ExpressionUUID->"96a63257-9be7-4a9f-96ee-4c58e9f06637"],
Cell[1138651, 20525, 778, 21, 52, "Output",ExpressionUUID->"a52b98fd-b105-451b-8c71-68fe53a60b17"],
Cell[1139432, 20548, 602, 16, 50, "Output",ExpressionUUID->"fa331afe-2d5b-4e8b-a959-1cd6f1c871c2"]
}, Open  ]],
Cell[1140049, 20567, 437, 6, 47, "Text",ExpressionUUID->"7b22c3fd-b3ca-4a21-97b8-eddbe1dcc4be"],
Cell[1140489, 20575, 1254, 33, 91, "Input",ExpressionUUID->"cc11e3c2-ce82-4c74-9fa8-d37ed71b7891"],
Cell[1141746, 20610, 433, 6, 47, "Text",ExpressionUUID->"0edf0482-26b3-4e5c-9bc9-9e72b223d662"],
Cell[CellGroupData[{
Cell[1142204, 20620, 656, 18, 94, "Input",ExpressionUUID->"5210cdc9-403c-466b-b171-385f014b6981"],
Cell[1142863, 20640, 1501, 49, 326, "Output",ExpressionUUID->"fc42e98f-fb53-416b-9997-24cf40ce38a6"]
}, Open  ]],
Cell[1144379, 20692, 461, 7, 47, "Text",ExpressionUUID->"b9d02f44-0797-415d-aaa7-402f2a31930d"],
Cell[1144843, 20701, 936, 26, 109, "Input",ExpressionUUID->"2bdea0fb-f3a7-4101-8ce6-eb24ffd3e494"],
Cell[CellGroupData[{
Cell[1145804, 20731, 608, 17, 66, "Input",ExpressionUUID->"7ec0d838-e3f3-4f9c-8206-bc9e01a8438f"],
Cell[1146415, 20750, 2642, 68, 572, "Output",ExpressionUUID->"eb9571fe-4f5c-487e-8394-75a02f90e48f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1149094, 20823, 11354, 348, 670, "Input",ExpressionUUID->"5f0fb54e-fe39-4bdf-99c4-5303d8a16f7a"],
Cell[1160451, 21173, 5606, 154, 343, "Output",ExpressionUUID->"81a06d98-312e-4f83-9ab8-4e4e523eec11"]
}, Open  ]],
Cell[1166072, 21330, 260, 4, 47, "Text",ExpressionUUID->"fc70a002-12e6-46e3-9300-42823e9fa4a2"],
Cell[CellGroupData[{
Cell[1166357, 21338, 2838, 84, 190, "Input",ExpressionUUID->"dd113f17-8e85-44fd-924e-22df4628eb30"],
Cell[1169198, 21424, 2693, 74, 114, "Output",ExpressionUUID->"2a494a47-0ae1-40f2-b0ba-2c94a9b009ec"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1171928, 21503, 4228, 128, 362, "Input",ExpressionUUID->"32d07137-949e-45d3-b77b-4b14606ed9b7"],
Cell[1176159, 21633, 25359, 468, 98, "Output",ExpressionUUID->"47fb9109-1f23-4522-b2ed-93d862db30c4"],
Cell[1201521, 22103, 25319, 466, 98, "Output",ExpressionUUID->"916cc017-05ca-4796-8350-b54b4656a02d"],
Cell[1226843, 22571, 25485, 470, 98, "Output",ExpressionUUID->"a1761f0f-0a55-4dbf-8479-1e312181c4d7"],
Cell[1252331, 23043, 25535, 472, 98, "Output",ExpressionUUID->"94fce80d-cb59-471b-8104-08d65a257b9f"]
}, Open  ]],
Cell[1277881, 23518, 2268, 60, 204, "Input",ExpressionUUID->"6f690c63-d985-4b4e-a8bb-3387fc571254"],
Cell[CellGroupData[{
Cell[1280174, 23582, 1486, 44, 45, "Input",ExpressionUUID->"a28ff1cf-92bd-4ddd-8fcc-172a691aa7f1",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[1281663, 23628, 1883, 51, 200, "Input",ExpressionUUID->"c4e42ed7-b345-4978-8fbc-a35c04b0744a",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]],
Cell[1283561, 23682, 353, 10, 459, "Text",ExpressionUUID->"9bd3c8f6-6cb7-4080-8e9e-7f9fd26f0266"],
Cell[1283917, 23694, 230, 4, 47, "Text",ExpressionUUID->"12e66ebc-667b-40e7-acab-b8b5cf49061f"],
Cell[CellGroupData[{
Cell[1284172, 23702, 4843, 149, 318, "Input",ExpressionUUID->"c9c1079c-37dd-4bae-823b-439303105a32"],
Cell[1289018, 23853, 1042, 29, 75, "Output",ExpressionUUID->"0770231b-e8fb-4db5-a7a6-1cfc8e8ab410"],
Cell[1290063, 23884, 836, 23, 79, "Output",ExpressionUUID->"18910a2b-8aef-4deb-8000-ad61a791b9d1"],
Cell[1290902, 23909, 1700, 49, 78, "Output",ExpressionUUID->"4448fc6c-ba09-4f1e-9bef-5aa202db1964"],
Cell[1292605, 23960, 1737, 49, 75, "Output",ExpressionUUID->"9dee8b8f-c720-458e-b12b-be9a2e9d2d4b"],
Cell[1294345, 24011, 2419, 69, 96, "Output",ExpressionUUID->"2eda44c7-a86a-4fb8-821d-16dd18eb82cf"],
Cell[1296767, 24082, 2197, 61, 96, "Output",ExpressionUUID->"eb59b5ed-704b-430e-9a05-871cc3e8a508"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1299001, 24148, 1276, 33, 109, "Input",ExpressionUUID->"569c3dd4-2b6e-4002-8695-33650a725588"],
Cell[1300280, 24183, 1247, 36, 81, "Output",ExpressionUUID->"8fd16fc5-a74f-46cd-b39b-731431c01fb4"],
Cell[1301530, 24221, 1134, 33, 84, "Output",ExpressionUUID->"8a232acc-db74-49fb-8b19-bc9f20406c10"]
}, Open  ]],
Cell[1302679, 24257, 272, 4, 47, "Text",ExpressionUUID->"0b64aa3e-97b6-4e12-a90d-2103851e0a5e"],
Cell[1302954, 24263, 200, 3, 47, "Text",ExpressionUUID->"d547c320-0f6a-4a70-b6ec-bcb1e5c03463"],
Cell[CellGroupData[{
Cell[1303179, 24270, 1042, 27, 69, "Input",ExpressionUUID->"50515d2a-e8c4-4782-8e7e-70abed0f38b5"],
Cell[1304224, 24299, 542, 14, 53, "Output",ExpressionUUID->"0c1ee1af-c569-4c99-8298-01c7460ccfd7"],
Cell[1304769, 24315, 4834, 131, 166, "Output",ExpressionUUID->"db885556-040b-4724-ac31-8f0fb4ac7b30"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1309640, 24451, 341, 7, 108, "Input",ExpressionUUID->"51315cb9-bace-4dce-85d7-c43df8b3e518"],
Cell[1309984, 24460, 1220, 36, 144, "Output",ExpressionUUID->"3d8e443f-5adb-443a-bfe8-b362a23c7708"],
Cell[1311207, 24498, 5743, 148, 210, "Output",ExpressionUUID->"124bbced-e695-4ecb-aaef-93eee0705d86"]
}, Open  ]],
Cell[1316965, 24649, 319, 5, 47, "Text",ExpressionUUID->"1ebe0c3d-1d2d-4e69-bf2a-118377149879"],
Cell[CellGroupData[{
Cell[1317309, 24658, 1375, 30, 66, "Input",ExpressionUUID->"5fd84eb7-a77f-4777-b8cd-2c471d0a1820"],
Cell[1318687, 24690, 17088, 433, 463, "Output",ExpressionUUID->"7c4784c8-1fd1-4fc8-842f-9f5d357ae930"]
}, Open  ]],
Cell[1335790, 25126, 1275, 24, 51, "Text",ExpressionUUID->"511ef579-a7c4-4a4b-8be1-25c56af13f84"],
Cell[CellGroupData[{
Cell[1337090, 25154, 3069, 92, 104, "Input",ExpressionUUID->"accc0980-255b-45fc-92b6-db185396ec3b"],
Cell[1340162, 25248, 10473, 289, 363, "Output",ExpressionUUID->"69f8fe9b-1881-40f6-bd4f-436f629f6843"],
Cell[1350638, 25539, 848, 26, 85, "Output",ExpressionUUID->"29d7d8d4-88d1-4992-b03c-2a08f820fae1"]
}, Open  ]],
Cell[1351501, 25568, 578, 15, 47, "Text",ExpressionUUID->"c774a369-ebc8-45d4-a2d7-0954741235f8"],
Cell[1352082, 25585, 2319, 59, 101, "Input",ExpressionUUID->"e9d6153e-54d3-401b-ba91-b57f0b1a86c1"],
Cell[1354404, 25646, 345, 5, 47, "Text",ExpressionUUID->"532a6f97-5bc2-4389-b629-866e26454a14"],
Cell[1354752, 25653, 963, 21, 71, "Input",ExpressionUUID->"bf90181f-3d12-4fb0-b83c-eae1352e5ae0"],
Cell[1355718, 25676, 1234, 32, 98, "Input",ExpressionUUID->"ab2529eb-69ee-456b-ab3a-e1f06d6f5a70"],
Cell[1356955, 25710, 437, 6, 47, "Text",ExpressionUUID->"a6e96f52-ff73-4299-8601-6d6397bf9a2b"],
Cell[1357395, 25718, 1059, 28, 45, "Input",ExpressionUUID->"6a8d3619-83b4-4924-bae0-5b56443e7d9d"],
Cell[1358457, 25748, 433, 6, 47, "Text",ExpressionUUID->"95d440b3-04ae-4753-932d-e2a17583bdf4"],
Cell[CellGroupData[{
Cell[1358915, 25758, 656, 18, 94, "Input",ExpressionUUID->"8c0d5041-12e1-4208-be20-bf51e83f52a2"],
Cell[1359574, 25778, 1420, 39, 144, "Output",ExpressionUUID->"5b45cb12-5d61-437e-a292-39f8de23bc19"]
}, Open  ]],
Cell[1361009, 25820, 461, 7, 47, "Text",ExpressionUUID->"2c040413-7675-4e6d-9764-f42fbeb4edf6"],
Cell[1361473, 25829, 936, 26, 109, "Input",ExpressionUUID->"a780e525-4f9b-4de1-951f-bacff8782c53"],
Cell[CellGroupData[{
Cell[1362434, 25859, 608, 17, 66, "Input",ExpressionUUID->"458769ac-5471-4355-9c11-0839821ad4cb"],
Cell[1363045, 25878, 4349, 107, 250, "Output",ExpressionUUID->"d28fe784-a605-481a-84f9-c3e0b7486cce"]
}, Open  ]],
Cell[1367409, 25988, 4758, 140, 238, "Input",ExpressionUUID->"d9fca96e-31a4-427d-b648-d1f6ba98c2e3"],
Cell[1372170, 26130, 260, 4, 47, "Text",ExpressionUUID->"478d493c-d4ab-4f27-9c91-a2e0e6fe62bf"],
Cell[CellGroupData[{
Cell[1372455, 26138, 2838, 84, 190, "Input",ExpressionUUID->"3d17efae-cb86-4545-981b-dab2dfd91a6e"],
Cell[1375296, 26224, 2884, 76, 114, "Output",ExpressionUUID->"0fb5f04b-2c24-4ebb-aee9-39fbff3ee34d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1378217, 26305, 4412, 131, 362, "Input",ExpressionUUID->"7e98ee72-31a1-47ec-be95-98acd4cc44ba"],
Cell[1382632, 26438, 26605, 490, 98, "Output",ExpressionUUID->"bf708622-b866-4c97-b5cf-369dc0aa0849"],
Cell[1409240, 26930, 26603, 488, 98, "Output",ExpressionUUID->"45915616-f04a-4df2-968c-c3c78b81b951"],
Cell[1435846, 27420, 26761, 494, 98, "Output",ExpressionUUID->"6794f030-c428-4add-af03-7d4dc760d8f9"],
Cell[1462610, 27916, 26783, 494, 98, "Output",ExpressionUUID->"fae85fdd-e022-4e01-897b-5beef12162c5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1489430, 28415, 2552, 69, 220, "Input",ExpressionUUID->"5faa0983-4ffc-4477-a4a9-de65646bd850"],
Cell[1491985, 28486, 67947, 1134, 448, "Output",ExpressionUUID->"0396d3d9-52e3-4dc8-ac67-d1cad44a7b0c"],
Cell[1559935, 29622, 66352, 1108, 439, "Output",ExpressionUUID->"26894ca4-818b-421e-9d5f-76ec4a171db7"],
Cell[1626290, 30732, 71144, 1187, 430, "Output",ExpressionUUID->"bf3cc282-7b80-4d2c-ba6d-72bac1806806"],
Cell[1697437, 31921, 70826, 1181, 425, "Output",ExpressionUUID->"b300e451-b569-473e-a596-3541da72e3f5"]
}, Open  ]],
Cell[1768278, 33105, 6572, 186, 443, "Input",ExpressionUUID->"31431368-a613-4e17-9c11-14dde2f6b917"],
Cell[CellGroupData[{
Cell[1774875, 33295, 5804, 133, 227, "Input",ExpressionUUID->"035d5455-1afa-4cfa-b6ee-a6b9687a259f"],
Cell[1780682, 33430, 4699, 130, 162, "Output",ExpressionUUID->"f3b56d83-e0e9-4b47-ba30-c3801b597dae"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1785418, 33565, 222, 4, 45, "Input",ExpressionUUID->"224a0ebc-db0a-469b-bbc7-c51c8f6ea41b"],
Cell[1785643, 33571, 4748, 129, 162, "Output",ExpressionUUID->"6627f7fa-dfaf-4ed4-9a00-f08a614f9adc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1790428, 33705, 365, 11, 63, "Input",ExpressionUUID->"fc1472ea-8e41-4bdc-af47-fc93cf5eb1f0"],
Cell[1790796, 33718, 525, 12, 49, "Message",ExpressionUUID->"e97b4611-9fc5-4006-88a8-3c069fc0e94e"],
Cell[1791324, 33732, 205, 5, 50, "Output",ExpressionUUID->"b34bf070-c5a3-4883-91f9-3bcd44164964"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1791566, 33742, 283, 7, 63, "Input",ExpressionUUID->"52e3c5b4-a527-4e7b-b0ae-fc91fde54817"],
Cell[1791852, 33751, 8276, 233, 333, "Output",ExpressionUUID->"0d170882-d39c-45d5-8e72-cbe731d732b9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1800165, 33989, 287, 7, 45, "Input",ExpressionUUID->"2bf4181b-6703-405f-8454-3cac8d65d419"],
Cell[1800455, 33998, 4918, 133, 198, "Output",ExpressionUUID->"c922f8b5-6aaa-4696-9e6c-cfaf14526cda"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1805410, 34136, 6628, 186, 348, "Input",ExpressionUUID->"cab3e9d0-f254-41eb-a088-b68280b3aab6"],
Cell[1812041, 34324, 455, 12, 49, "Message",ExpressionUUID->"6d21381d-9af6-41eb-b42a-921da26eed72"],
Cell[1812499, 34338, 457, 12, 49, "Message",ExpressionUUID->"e1f59e31-0c11-47d9-af73-c9ff856871c0"],
Cell[1812959, 34352, 489, 12, 49, "Message",ExpressionUUID->"fd75b96d-29cc-419d-959e-7646911aa93c"],
Cell[1813451, 34366, 502, 12, 49, "Message",ExpressionUUID->"5899bda2-79e1-4229-83b5-bb1a5c5a6e38"],
Cell[1813956, 34380, 1932, 31, 75, "Message",ExpressionUUID->"6e51af46-2656-451d-8d47-3330dc1d69bd"],
Cell[1815891, 34413, 4850, 141, 462, "Output",ExpressionUUID->"63f3a50a-9743-4bdd-8022-1464b742bb21"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1820778, 34559, 2233, 58, 106, "Input",ExpressionUUID->"24084de6-3b12-400f-89e4-f077d4505e03"],
Cell[1823014, 34619, 608, 15, 49, "Message",ExpressionUUID->"c2502403-bad3-4a20-9845-cf1f41e823e4"],
Cell[1823625, 34636, 608, 15, 49, "Message",ExpressionUUID->"85163e67-6f5c-420d-b007-b2efc586d8d3"],
Cell[1824236, 34653, 642, 15, 49, "Message",ExpressionUUID->"7546e494-8f50-4fc0-88a2-cd891224c864"],
Cell[1824881, 34670, 655, 15, 49, "Message",ExpressionUUID->"bac75b5b-35ae-45ec-9e27-1a3ede3aeb2e"],
Cell[1825539, 34687, 1443, 26, 85, "Message",ExpressionUUID->"4b9d1c8e-8342-4e90-9328-9871f17007c3"],
Cell[1826985, 34715, 2823, 65, 91, "Output",ExpressionUUID->"e491efb2-0f78-4b8b-bde5-d616e1aad5d4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1829845, 34785, 1486, 44, 45, "Input",ExpressionUUID->"7b0414bf-af83-43ed-8c25-13908c59bdcc",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[1831334, 34831, 1883, 51, 200, "Input",ExpressionUUID->"cf0223ad-e4b0-4c47-8e53-d453978dc3e3",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[1833220, 34884, 2167, 66, 190, "Output",ExpressionUUID->"c41a81ae-ed2b-4445-8848-a58e5b31f9ab",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[1835390, 34952, 192636, 3171, 606, 155187, 2554, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"1c254890-57ba-40cf-a9cc-940cf39a7bf8",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Open  ]],
Cell[2028041, 38126, 178, 3, 47, "Text",ExpressionUUID->"38f4788e-7d0f-422e-8b90-94050a49d17b"],
Cell[CellGroupData[{
Cell[2028244, 38133, 414, 12, 43, "Input",ExpressionUUID->"d806c2db-c6c2-4dbb-b8e6-8869e44d1305"],
Cell[2028661, 38147, 361, 10, 50, "Output",ExpressionUUID->"2fea991e-a8c2-4897-81ae-05f14083b808"]
}, Open  ]],
Cell[2029037, 38160, 1381, 40, 93, "Input",ExpressionUUID->"108a7e70-5fec-4cb1-8d7c-7db5c9a1185b"],
Cell[2030421, 38202, 237, 5, 47, "Text",ExpressionUUID->"7eaef80f-95b7-4431-b760-460612b47299"],
Cell[CellGroupData[{
Cell[2030683, 38211, 991, 27, 62, "Input",ExpressionUUID->"9ec8f40f-4a8f-4a6f-8daf-214dc98533af"],
Cell[2031677, 38240, 1119, 29, 188, "Output",ExpressionUUID->"8782c3c7-230f-4d43-979f-6889ba86d8c6"]
}, Open  ]],
Cell[2032811, 38272, 243, 5, 47, "Text",ExpressionUUID->"32a0d065-7e7e-450a-96ee-b0107db5a224"],
Cell[CellGroupData[{
Cell[2033079, 38281, 646, 22, 62, "Input",ExpressionUUID->"a68e1a79-797a-4b49-ade9-69a7a98572aa"],
Cell[2033728, 38305, 982, 27, 188, "Output",ExpressionUUID->"3b565a35-5909-47b2-83fb-3bf8cd57b909"]
}, Open  ]],
Cell[2034725, 38335, 593, 18, 45, "Input",ExpressionUUID->"3e2b0c18-99c2-4932-831c-f3609c096f70"],
Cell[CellGroupData[{
Cell[2035343, 38357, 1894, 42, 72, "ObjectNameGrid",ExpressionUUID->"222c6289-9a5e-43fb-82da-a8958bd5196c",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[2037240, 38401, 6176, 172, 468, "Usage",ExpressionUUID->"69324f4a-b42c-498f-ab77-22a27c2760f5",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->555892555],
Cell[2043419, 38575, 597, 16, 57, "Notes",ExpressionUUID->"1cefdfb0-66d1-4001-a363-8dc2287a9f8f",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->297346508],
Cell[2044019, 38593, 616, 16, 57, "Notes",ExpressionUUID->"72c7c26c-f058-4d10-97a1-0612555dfaef",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->10639350],
Cell[2044638, 38611, 2071, 62, 80, "Notes",ExpressionUUID->"259e4a68-0180-44ce-8c6f-457c7e727bd5",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->138973872],
Cell[2046712, 38675, 2465, 74, 84, "Notes",ExpressionUUID->"3019cb44-b5bc-4f49-a5fb-40b447896fc8",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->773022565],
Cell[2049180, 38751, 338, 8, 49, "Notes",ExpressionUUID->"64824876-e3ac-4df6-9d51-a05d1d222e82",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->19376661],
Cell[2049521, 38761, 3030, 82, 80, "2ColumnTableMod",ExpressionUUID->"abda6060-ab28-42ce-9f8a-f7b9c7ad71b8",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->64914368],
Cell[2052554, 38845, 2702, 87, 55, "Notes",ExpressionUUID->"8f90bc67-67ee-4ae1-bd54-1755536ec113",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->103490879],
Cell[2055259, 38934, 277, 5, 49, "Notes",ExpressionUUID->"2f916f6e-ef60-4475-b2f5-fb3b1d312582",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->323769202],
Cell[2055539, 38941, 4866, 130, 140, "2ColumnTableMod",ExpressionUUID->"62573f1c-d02e-4966-900d-8837b659a151",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->658783933],
Cell[2060408, 39073, 619, 18, 57, "Notes",ExpressionUUID->"3dafe634-7e55-446c-974b-70b76e80efe5",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->5191429],
Cell[2061030, 39093, 1617, 39, 110, "2ColumnTableMod",ExpressionUUID->"bf449ddb-ca1c-4926-a2e0-25a297f08f48",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->723005164],
Cell[2062650, 39134, 490, 12, 52, "Notes",ExpressionUUID->"d09067ed-8cb4-400d-84ed-4f864fee6b67",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->257574754],
Cell[2063143, 39148, 769, 23, 61, "Notes",ExpressionUUID->"80108cbe-ef0f-46c8-9a57-be3ce71666f7",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->258661957],
Cell[2063915, 39173, 271, 5, 49, "Notes",ExpressionUUID->"307910ad-d6a5-478a-b7d3-2c75156feb34",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->418426427],
Cell[2064189, 39180, 2562, 67, 140, "3ColumnTableMod",ExpressionUUID->"bf0bb76d-db90-4ffc-9805-55ab1b20d440",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->155227],
Cell[2066754, 39249, 38133, 664, 35, "NotesThumbnails",ExpressionUUID->"29d87a81-df6d-4297-bb39-21796de37669",
 CellOpen->Dynamic[
   FEPrivate`Switch[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "Openers", "NotesSection"}], True, False, Open, False, 
    Blank[], True]],
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[2104890, 39915, 225, 4, 33, "PageDelimiter",ExpressionUUID->"427d2305-0936-4dad-be4a-a35f6a44b0f2",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[2105118, 39921, 1545, 40, 34, "PrimaryExamplesSection",ExpressionUUID->"b8c67d5e-2539-4ebc-b2b8-e2e17abb7f16",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellTags->"PrimaryExamplesSection",
 CellID->682806395],
Cell[2106666, 39963, 1562, 41, 34, "ExampleSection",ExpressionUUID->"ae2941ec-8f87-45ff-8352-7fd5c77d5a37",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1921954844],
Cell[2108231, 40006, 279, 5, 33, "ExampleText",ExpressionUUID->"54eb4d24-0bd0-492a-9e29-f75e50dc3a1a",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->2085944325],
Cell[2108513, 40013, 543, 16, 63, "Input",ExpressionUUID->"33607b65-2da2-41f9-ae2f-586d888a4b1a",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->486079657],
Cell[2109059, 40031, 3003, 68, 90, "Output",ExpressionUUID->"e5139874-f3f7-4c4a-b771-86c376129d2e",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->385599460],
Cell[2112065, 40101, 387, 9, 35, "ExampleDelimiter",ExpressionUUID->"82d5c299-cd3e-4023-89af-f89d305574bd",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->520956051],
Cell[2112455, 40112, 302, 6, 33, "ExampleText",ExpressionUUID->"669185c4-4bdf-4de5-bc65-7eb52350b84a",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->61334184],
Cell[2112760, 40120, 954, 31, 67, "Input",ExpressionUUID->"fb7d1d7a-a598-4004-8678-4936122eaddf",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->393017972],
Cell[2113717, 40153, 3484, 83, 119, "Output",ExpressionUUID->"ee382a79-592e-405b-b5af-08bda0211b05",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->166643240],
Cell[2117204, 40238, 387, 9, 35, "ExampleDelimiter",ExpressionUUID->"f9221f4a-e2c7-4bf6-a6e5-7da5db325bb2",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->417520338],
Cell[2117594, 40249, 295, 5, 33, "ExampleText",ExpressionUUID->"463b4430-7390-4c8a-a504-9b47ad5db9c9",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->495761131],
Cell[2117892, 40256, 3495, 78, 102, "Input",ExpressionUUID->"a3955abc-f058-4f67-a749-afc504ff4a0f",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->174471257],
Cell[2121390, 40336, 3365, 76, 109, "Output",ExpressionUUID->"30b9a1fd-8e6f-4a44-8899-50397f92a4ac",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->426513459],
Cell[2124758, 40414, 385, 9, 35, "ExampleDelimiter",ExpressionUUID->"7af4c5ea-4784-4ae8-a699-bac151ff6f86",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->627941619],
Cell[2125146, 40425, 471, 12, 35, "ExampleText",ExpressionUUID->"03b8e5a1-cf37-45ae-91d9-26341784e8eb",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->2051678803],
Cell[2125620, 40439, 915, 26, 67, "Input",ExpressionUUID->"ed158929-a068-4fb8-9d45-478a3ed13cec",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->420722142],
Cell[2126538, 40467, 3642, 83, 142, "Output",ExpressionUUID->"d02c88ee-1def-4522-ac1f-9bbcb725025b",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->111291727],
Cell[2130183, 40552, 388, 9, 35, "ExampleDelimiter",ExpressionUUID->"cf5446ba-ff79-4879-b8e3-99c7b54a4de9",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1022647295],
Cell[2130574, 40563, 283, 5, 33, "ExampleText",ExpressionUUID->"c1a9f274-3d4d-497a-845c-0739e308443f",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1321460124],
Cell[2130860, 40570, 2456, 78, 108, "Input",ExpressionUUID->"d1accca9-b8b9-4571-8287-3f7d78ec8462",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->504426794],
Cell[2133319, 40650, 5683, 141, 219, "Output",ExpressionUUID->"b3bd95a4-9783-4f0d-b9da-99654c59838a",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1306127674],
Cell[2139005, 40793, 1556, 41, 34, "ExampleSection",ExpressionUUID->"2861292b-9f74-4034-aa65-2894310ce075",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1293636265],
Cell[2140564, 40836, 1568, 41, 34, "ExampleSubsection",ExpressionUUID->"650a0b54-46c5-4abe-bf76-0a731f8285d8",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->94416814],
Cell[2142135, 40879, 265, 5, 33, "ExampleText",ExpressionUUID->"447f728a-95ca-414f-a099-61460149313d",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->660884066],
Cell[2142403, 40886, 843, 27, 63, "Input",ExpressionUUID->"8e3c52d3-c016-4d87-82b6-cf497cba9aee",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->693074978],
Cell[2143249, 40915, 3339, 77, 109, "Output",ExpressionUUID->"7db1f106-2451-45a6-a8d7-08caaa13e549",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1977590935],
Cell[2146591, 40994, 386, 9, 35, "ExampleDelimiter",ExpressionUUID->"50eccab6-3cd1-46c4-bddf-a73b3c93fc08",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1208288280],
Cell[2146980, 41005, 264, 5, 33, "ExampleText",ExpressionUUID->"32bf335b-3ed0-4225-becf-5e8b75b585e4",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1338942319],
Cell[2147247, 41012, 1221, 36, 63, "Input",ExpressionUUID->"52fc1f78-cea8-46cb-bc58-bfda68f4af53",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->122418520],
Cell[2148471, 41050, 4049, 92, 155, "Output",ExpressionUUID->"c32feb07-676b-4958-97a9-04fb9c0ca20a",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->948921576],
Cell[2152523, 41144, 386, 9, 35, "ExampleDelimiter",ExpressionUUID->"6f1310c8-02c7-4846-bc4c-321305a60a3a",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1364097055],
Cell[2152912, 41155, 266, 5, 33, "ExampleText",ExpressionUUID->"2d4ea7e8-3444-4e4c-a65d-438471f0b71e",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->748526813],
Cell[2153181, 41162, 1141, 36, 63, "Input",ExpressionUUID->"b6873b5c-d8e7-418f-9e26-e4d614d54e6e",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->530941965],
Cell[2154325, 41200, 3818, 89, 132, "Output",ExpressionUUID->"76c9300f-13a1-4feb-97b4-09a35817b2cc",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1383073658],
Cell[2158146, 41291, 388, 9, 35, "ExampleDelimiter",ExpressionUUID->"5180e9d4-41cf-47ed-b5f6-6de922d28d96",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1976859856],
Cell[2158537, 41302, 270, 5, 33, "ExampleText",ExpressionUUID->"ec55bf15-faaa-46c2-b3b3-c909457581f1",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1596082668],
Cell[2158810, 41309, 1523, 47, 63, "Input",ExpressionUUID->"81b3a670-c74a-4602-ad0b-e093193901df",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1143166399],
Cell[2160336, 41358, 4405, 102, 178, "Output",ExpressionUUID->"2e0436c6-5b54-481f-a65e-a21b647c7513",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1744611339],
Cell[2164744, 41462, 385, 9, 35, "ExampleDelimiter",ExpressionUUID->"db2371bd-c450-48db-bf86-96729c9866ad",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->244560855],
Cell[2165132, 41473, 285, 5, 33, "ExampleText",ExpressionUUID->"9418d874-2f96-4524-9331-9bb6a13059a0",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1528588449],
Cell[2165420, 41480, 782, 25, 63, "Input",ExpressionUUID->"cadcca99-b3ff-404a-94ea-83d64d3b17a6",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->639193282],
Cell[2166205, 41507, 3339, 77, 109, "Output",ExpressionUUID->"c66bf9fe-43ee-43c9-aa16-62b38aef6043",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1506561959],
Cell[2169547, 41586, 385, 9, 35, "ExampleDelimiter",ExpressionUUID->"8a3d57b6-73d1-4afb-a300-c7b96e0c08eb",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->878452994],
Cell[2169935, 41597, 261, 5, 33, "ExampleText",ExpressionUUID->"308774e3-4818-474c-9ac8-0d8fb0dbf584",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->209397033],
Cell[2170199, 41604, 842, 27, 63, "Input",ExpressionUUID->"eb065a5c-0938-4f25-8903-2ce534759f6e",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1757719845],
Cell[2171044, 41633, 3339, 77, 109, "Output",ExpressionUUID->"be468b9d-cd0c-4877-bd6d-d06e0805c57e",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1691133722],
Cell[2174386, 41712, 385, 9, 35, "ExampleDelimiter",ExpressionUUID->"a2075b86-a153-44c8-b02c-ef4d5c18de7a",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->3752570],
Cell[2174774, 41723, 285, 5, 33, "ExampleText",ExpressionUUID->"446b30ec-1ba0-48cc-aea4-b1810e474926",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->2072743235],
Cell[2175062, 41730, 1078, 36, 63, "Input",ExpressionUUID->"fc52db7b-f9d1-468c-b71a-f357a38504f7",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->115829011],
Cell[2176143, 41768, 3554, 83, 109, "Output",ExpressionUUID->"c4b8b60d-3ed4-4191-8b43-38cd07a69115",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->528710895],
Cell[2179700, 41853, 387, 9, 35, "ExampleDelimiter",ExpressionUUID->"a1c84dd9-d3ee-4aab-9a14-123a3bf662b0",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->792418227],
Cell[2180090, 41864, 266, 5, 33, "ExampleText",ExpressionUUID->"3100e6a6-5eeb-4de2-9240-6ef7ca7de0b3",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1855231343],
Cell[2180359, 41871, 1273, 36, 63, "Input",ExpressionUUID->"b25479f5-996a-4d32-a84e-07fbd4c20bd0",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1558111008],
Cell[2181635, 41909, 4028, 91, 155, "Output",ExpressionUUID->"c08c0e39-7586-47b1-8241-fcf8934033a9",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1493561588],
Cell[2185666, 42002, 388, 9, 35, "ExampleDelimiter",ExpressionUUID->"96e81f69-d886-4fef-b495-d532bb39c1a3",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1117809630],
Cell[2186057, 42013, 261, 5, 33, "ExampleText",ExpressionUUID->"a9ba4651-9cbc-4802-bed2-85ea97a0d54a",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1627046142],
Cell[2186321, 42020, 1016, 33, 72, "Input",ExpressionUUID->"06dbf9d9-0dbb-4747-9f10-3be5f9ac092f",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->462713994],
Cell[2187340, 42055, 3562, 86, 165, "Output",ExpressionUUID->"f116e55b-bc53-4376-8c5d-151effef84d4",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1591532223],
Cell[2190905, 42143, 386, 9, 35, "ExampleDelimiter",ExpressionUUID->"5bc08025-e860-4304-9914-05118df30db9",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1562377104],
Cell[2191294, 42154, 287, 5, 33, "ExampleText",ExpressionUUID->"130b42ac-261e-4d38-9f15-0a2e0cbd43a7",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1589435059],
Cell[2191584, 42161, 684, 21, 89, "Input",ExpressionUUID->"858ab552-fac1-4c16-86fe-39ad2e782e7c",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1085951580],
Cell[2192271, 42184, 3738, 85, 132, "Output",ExpressionUUID->"c3eb291f-3ff1-4f1d-8a85-1ce4078d7e2d",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->798856211],
Cell[2196012, 42271, 388, 9, 35, "ExampleDelimiter",ExpressionUUID->"7e76e3df-7e4f-496d-8931-dc834d2de002",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1028923341],
Cell[2196403, 42282, 273, 5, 33, "ExampleText",ExpressionUUID->"47c3ce4d-e5fa-4d7e-90df-b381e13d9fc3",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1576266543],
Cell[2196679, 42289, 552, 15, 89, "Input",ExpressionUUID->"fbed14cb-6e53-4878-90f5-743cbfa127ff",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->953518809],
Cell[2197234, 42306, 3407, 80, 163, "Output",ExpressionUUID->"9e1559c8-1681-415e-9b75-7e94c72dacec",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->84547526],
Cell[2200644, 42388, 388, 9, 35, "ExampleDelimiter",ExpressionUUID->"4f0ac4ab-3c85-4216-808b-33a77a901e36",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1816279043],
Cell[2201035, 42399, 562, 16, 41, "ExampleText",ExpressionUUID->"4adfbaad-d0d4-4669-812f-b8e0cc1e8e96",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1869317243],
Cell[2201600, 42417, 3464, 79, 137, "Input",ExpressionUUID->"d0a2e150-b21c-442c-9a27-d2e72dc4955d",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1464038860],
Cell[2205067, 42498, 4065, 97, 109, "Output",ExpressionUUID->"9945edb9-b05a-4bc0-aec2-c002f9df551a",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1026642840],
Cell[2209135, 42597, 598, 16, 41, "ExampleText",ExpressionUUID->"800d2716-6b1a-48f8-b5ad-4ac421546fa1",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1156001141],
Cell[2209736, 42615, 3792, 90, 137, "Input",ExpressionUUID->"a252c851-ea5c-45ed-bad9-a44c46fc19a9",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->601416328],
Cell[2213531, 42707, 4065, 97, 109, "Output",ExpressionUUID->"59f889eb-dade-445a-bef0-da6248628ca1",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1902591882],
Cell[2217599, 42806, 388, 9, 35, "ExampleDelimiter",ExpressionUUID->"57633a66-0a17-4b41-a04e-128240a85025",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->2076631138],
Cell[2217990, 42817, 572, 17, 41, "ExampleText",ExpressionUUID->"aa8eb59e-39fe-4533-a8c7-305abe737a6d",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1035305322],
Cell[2218565, 42836, 3102, 72, 102, "Input",ExpressionUUID->"7b0de277-1c3b-41a4-b076-60648eb19c16",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1663740016],
Cell[2221670, 42910, 3556, 84, 90, "Output",ExpressionUUID->"770954c8-ebd9-4cb0-8e96-a5a219d24ea5",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->830256944],
Cell[2225229, 42996, 388, 9, 35, "ExampleDelimiter",ExpressionUUID->"6471a29f-7607-42cb-b065-b87faf203964",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1886833373],
Cell[2225620, 43007, 283, 5, 33, "ExampleText",ExpressionUUID->"23759ecd-6b69-45ec-a64f-5d6e848112bc",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->117484762],
Cell[2225906, 43014, 1277, 40, 72, "Input",ExpressionUUID->"3d671c9d-3bf1-4184-817b-c455545d7ce4",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->242856398],
Cell[2227186, 43056, 4818, 113, 155, "Output",ExpressionUUID->"1f954e33-c25c-4c14-941c-71803267ae3d",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->441381384],
Cell[2232007, 43171, 387, 9, 35, "ExampleDelimiter",ExpressionUUID->"29ce693d-0290-4dad-8005-41a922048ba3",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->784009079],
Cell[2232397, 43182, 283, 5, 33, "ExampleText",ExpressionUUID->"346f52dd-9372-4e43-84b9-bbf4c29b79e7",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1586232711],
Cell[2232683, 43189, 1467, 47, 67, "Input",ExpressionUUID->"565f9429-b631-4b26-9bec-672e73003096",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->951179919],
Cell[2234153, 43238, 4762, 118, 166, "Output",ExpressionUUID->"f0ccd126-bf0a-4f7c-9d6e-75c64c8104b0",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->2102235106],
Cell[2238918, 43358, 385, 9, 35, "ExampleDelimiter",ExpressionUUID->"9ebe8393-c32d-47fd-8b79-e5d5e22da9b4",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->921993031],
Cell[2239306, 43369, 282, 5, 33, "ExampleText",ExpressionUUID->"41bd9319-d495-481f-9fbb-92c6014dec43",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->2107011538],
Cell[2239591, 43376, 1718, 55, 67, "Input",ExpressionUUID->"567631cd-f23e-410a-865a-8f839d2e3e39",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->2031547046],
Cell[2241312, 43433, 5084, 129, 226, "Output",ExpressionUUID->"07b3c9db-913a-410a-abd7-8df8fbc452ea",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1620039243],
Cell[2246399, 43564, 386, 9, 35, "ExampleDelimiter",ExpressionUUID->"efe0c69e-6f4a-4efc-82d4-53c0066a0ac8",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->2012015259],
Cell[2246788, 43575, 537, 16, 41, "ExampleText",ExpressionUUID->"14b5c47a-231e-4add-8cff-4482c0e51c40",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1662952351],
Cell[2247328, 43593, 1027, 31, 63, "Input",ExpressionUUID->"19fe9162-755e-4a54-9d8d-6f8e2f9c2b1e",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1608540980],
Cell[2248358, 43626, 1263, 41, 50, "Output",ExpressionUUID->"1a8a03aa-d7e5-41cd-95bd-6ccda0e1f6d9",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1566265941],
Cell[2249624, 43669, 1574, 41, 34, "ExampleSubsection",ExpressionUUID->"39800183-3946-4327-ba6c-13eb2cd01a5e",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1856019],
Cell[2251201, 43712, 261, 5, 33, "ExampleText",ExpressionUUID->"e3473fe7-973e-40f0-8b8c-73967d2e6832",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->147265615],
Cell[2251465, 43719, 663, 20, 63, "Input",ExpressionUUID->"78d83359-b2e4-4173-ae53-78c213809e0c",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->430914994],
Cell[2252131, 43741, 3205, 74, 90, "Output",ExpressionUUID->"5f076012-ec12-4a61-ab93-47dc2bc90f0e",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->367861177],
Cell[2255339, 43817, 385, 9, 35, "ExampleDelimiter",ExpressionUUID->"24c065b9-5b6e-48ee-b551-3ff407852360",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->162151084],
Cell[2255727, 43828, 270, 5, 33, "ExampleText",ExpressionUUID->"4229b372-d166-403c-bf71-cd89ccc4b990",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->265097545],
Cell[2256000, 43835, 988, 32, 63, "Input",ExpressionUUID->"9c2a86d6-8058-402f-9de7-dc13b5f56d28",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->376782480],
Cell[2256991, 43869, 3655, 84, 109, "Output",ExpressionUUID->"36ef84be-622e-48a6-96ee-9a282b0fbbde",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1002564418],
Cell[2260649, 43955, 387, 9, 35, "ExampleDelimiter",ExpressionUUID->"60314572-335a-48f3-a88d-442dbaba586e",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->149707020],
Cell[2261039, 43966, 573, 16, 41, "ExampleText",ExpressionUUID->"d10e1f4e-a6ee-457f-ab37-75657174feeb",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->299839651],
Cell[2261615, 43984, 931, 30, 63, "Input",ExpressionUUID->"4cf70f61-3ba7-4034-9c83-d0ec3c56c2fa",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->113566029],
Cell[2262549, 44016, 3945, 92, 132, "Output",ExpressionUUID->"c9b4b43c-d998-4074-8d17-7b3c62320072",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->31698500],
Cell[2266497, 44110, 386, 9, 35, "ExampleDelimiter",ExpressionUUID->"8e09e82d-f6e5-4ba0-a968-45179ed1abbc",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->23811874],
Cell[2266886, 44121, 310, 7, 33, "ExampleText",ExpressionUUID->"a40c2a5b-82db-414e-a000-aa83d010eaad",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->88679416],
Cell[2267199, 44130, 922, 30, 76, "Input",ExpressionUUID->"a5991ca7-e867-4d11-b241-932ece7d6747",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->362544317],
Cell[2268124, 44162, 296, 5, 33, "ExampleText",ExpressionUUID->"67f04aba-963d-4937-afdf-67d1ff23e884",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->181870821],
Cell[2268423, 44169, 721, 21, 66, "Input",ExpressionUUID->"bedbde55-c32e-4083-b768-6dc92ca75e13",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->219205162],
Cell[2269147, 44192, 4710, 118, 109, "Output",ExpressionUUID->"d4841ee8-ade6-4010-b3b8-f38b40f47b83",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->656269415],
Cell[2273860, 44312, 385, 9, 35, "ExampleDelimiter",ExpressionUUID->"5bed56f0-1989-4583-bf78-42ae76e162b3",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->554429818],
Cell[2274248, 44323, 303, 6, 33, "ExampleText",ExpressionUUID->"c36d2f5e-9837-4dfd-bb4b-0e255a494f50",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->200033880],
Cell[2274554, 44331, 983, 30, 63, "Input",ExpressionUUID->"dc87a965-e16e-49e8-b423-072d5636e2dd",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->106392111],
Cell[2275540, 44363, 4496, 109, 109, "Output",ExpressionUUID->"c33bb5c5-8e8f-4ddd-b224-a184347c5836",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->590793466],
Cell[2280039, 44474, 385, 9, 35, "ExampleDelimiter",ExpressionUUID->"ad1b4652-e9fe-4757-90d5-222434acb7c0",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->593538090],
Cell[2280427, 44485, 293, 5, 33, "ExampleText",ExpressionUUID->"0ef8ee33-5c28-45ff-a841-a619103df214",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->76032227],
Cell[2280723, 44492, 714, 22, 63, "Input",ExpressionUUID->"f734aaf4-b0a3-4247-abe6-d59bf63275b5",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->707123906],
Cell[2281440, 44516, 3249, 76, 112, "Output",ExpressionUUID->"69c062a9-3985-49b3-b406-a6e5489480fc",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1647280779],
Cell[2284692, 44594, 387, 9, 35, "ExampleDelimiter",ExpressionUUID->"c8d37bd7-0580-4d8e-9b8c-99b23ccc2fd7",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->502028135],
Cell[2285082, 44605, 560, 16, 41, "ExampleText",ExpressionUUID->"6627af05-30a8-4699-b704-fff9ab1429dc",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->73225341],
Cell[2285645, 44623, 2540, 64, 120, "Input",ExpressionUUID->"e8db4877-b45d-4e61-a19b-95e48e09e414",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->182535632],
Cell[2288188, 44689, 3610, 104, 79, "Output",ExpressionUUID->"1f379c07-7160-48a0-920f-b5a549f31dd5",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->258582481],
Cell[2291801, 44795, 384, 9, 35, "ExampleDelimiter",ExpressionUUID->"85a60d36-8d43-4e94-a7da-7207bad86f88",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->81540820],
Cell[2292188, 44806, 319, 7, 33, "ExampleText",ExpressionUUID->"1c293dfd-9882-4deb-b514-aedab0741e62",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->622759200],
Cell[2292510, 44815, 2473, 60, 119, "Input",ExpressionUUID->"a08603ae-5adb-4eec-9a78-bec0f27eb47c",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->23816840],
Cell[2294986, 44877, 3627, 89, 180, "Output",ExpressionUUID->"9fb587fd-36c9-4c59-a203-ff829a149351",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1295603320],
Cell[2298616, 44968, 1576, 41, 34, "ExampleSubsection",ExpressionUUID->"6fad13f1-f69a-435b-bed6-ed67b2f5b7e1",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->512438765],
Cell[2300195, 45011, 266, 5, 33, "ExampleText",ExpressionUUID->"b8247dce-f0e2-493f-8dd8-6e64dfa014d2",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->331053409],
Cell[2300464, 45018, 740, 22, 63, "Input",ExpressionUUID->"8da37b50-2d15-4a0e-bc5f-e4363757bd64",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->26452440],
Cell[2301207, 45042, 3272, 76, 91, "Output",ExpressionUUID->"22efda3b-459b-4fbf-82e1-94cc87552b08",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->50987315],
Cell[2304482, 45120, 387, 9, 35, "ExampleDelimiter",ExpressionUUID->"ba7726f8-3a3b-4130-9470-ff5271253687",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->456509550],
Cell[2304872, 45131, 274, 5, 33, "ExampleText",ExpressionUUID->"8e471244-159b-4d90-a8ee-d155c882002e",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->265969797],
Cell[2305149, 45138, 1301, 38, 109, "Input",ExpressionUUID->"660fbcce-c922-4228-925e-ef02fb1273c8",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->146475568],
Cell[2306453, 45178, 3492, 82, 161, "Output",ExpressionUUID->"616ddda2-e447-408d-b7af-c259142ac181",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1430185694],
Cell[2309948, 45262, 387, 9, 35, "ExampleDelimiter",ExpressionUUID->"d8a8e7f5-e144-405a-bf21-eec226fe3d43",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->238973469],
Cell[2310338, 45273, 299, 5, 33, "ExampleText",ExpressionUUID->"cc9154d3-3f99-4963-a9d0-6c9d52e31fda",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->602932673],
Cell[2310640, 45280, 671, 19, 65, "Input",ExpressionUUID->"9f574953-75c4-407b-adad-48208a988f86",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->127658992],
Cell[2311314, 45301, 3009, 68, 90, "Output",ExpressionUUID->"de59a27c-a8b6-4e4d-8263-144001a3b1cf",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1766861892],
Cell[2314326, 45371, 386, 9, 35, "ExampleDelimiter",ExpressionUUID->"28f2c53a-e727-4f7a-bd14-9080d86bb0ee",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->36463491],
Cell[2314715, 45382, 321, 7, 33, "ExampleText",ExpressionUUID->"795cc60a-1714-4975-87da-72fc59ac8e12",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->260209879],
Cell[2315039, 45391, 799, 24, 63, "Input",ExpressionUUID->"c30e3d77-4461-4090-94b0-fcc5648d401a",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->581062211],
Cell[2315841, 45417, 3641, 87, 91, "Output",ExpressionUUID->"3002165e-7782-4bc5-a2c6-929d16e7e86b",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->489905173],
Cell[2319485, 45506, 387, 9, 35, "ExampleDelimiter",ExpressionUUID->"13622d5e-9fd9-4935-9607-d46f762374a3",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->511440417],
Cell[2319875, 45517, 316, 7, 33, "ExampleText",ExpressionUUID->"d42ca54a-fbfd-4ae6-8b6b-f0af754e20bb",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->8676627],
Cell[2320194, 45526, 1137, 37, 48, "Input",ExpressionUUID->"5f1f25c2-947f-42fc-811b-059445248802",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->200734343],
Cell[2321334, 45565, 658, 19, 66, "Input",ExpressionUUID->"a56006c1-c344-4135-af59-bd1577339e9b",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->957058090],
Cell[2321995, 45586, 4613, 112, 112, "Output",ExpressionUUID->"8e0725c2-d7e2-4b00-84e4-5353faed3fbe",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->486255250],
Cell[2326611, 45700, 386, 9, 35, "ExampleDelimiter",ExpressionUUID->"4a49bc83-6e68-49c0-8591-33f4015a7bb9",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1232338442],
Cell[2327000, 45711, 1576, 41, 34, "ExampleSection",ExpressionUUID->"9c20e1b9-a846-408a-ac02-39e0d11d72f0",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1020263627],
Cell[2328579, 45754, 343, 8, 33, "ExampleText",ExpressionUUID->"6b3b96c8-9170-4ee4-b17f-870fdb7fbb34",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->2058982188],
Cell[2328925, 45764, 1062, 34, 67, "Input",ExpressionUUID->"454a544e-9e2f-4968-9318-52d564979b23",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->762145958],
Cell[2329990, 45800, 315, 8, 50, "Output",ExpressionUUID->"2206835c-6f5d-47b9-ad66-7af03ac55c54",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1876401093],
Cell[2330308, 45810, 385, 9, 35, "ExampleDelimiter",ExpressionUUID->"32438890-403f-4cb4-b1c3-d21cf4ebd655",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->981001665],
Cell[2330696, 45821, 318, 7, 33, "ExampleText",ExpressionUUID->"6e38d705-f3b4-493c-b47a-fc9e606e4821",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1463025636],
Cell[2331017, 45830, 956, 30, 67, "Input",ExpressionUUID->"0e143b57-3f67-4bca-bbd3-67a9dd510238",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->384106102],
Cell[2331976, 45862, 570, 18, 50, "Output",ExpressionUUID->"ba9ffd32-6ef9-4617-9cbf-b14186d01023",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->611232449],
Cell[2332549, 45882, 1534, 40, 34, "ExampleSection",ExpressionUUID->"1d1321bf-b59e-404d-a1eb-d04b42e7894e",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[2334086, 45924, 1570, 41, 34, "ExampleSubsection",ExpressionUUID->"5fb59861-35bc-4ffd-8584-88b7c01deed9",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->514689934],
Cell[2335659, 45967, 266, 5, 33, "ExampleText",ExpressionUUID->"3b302388-5e22-4acf-ae26-78207e58b395",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->2065624319],
Cell[2335928, 45974, 806, 26, 63, "Input",ExpressionUUID->"a06da1a0-5229-4309-86fa-8a9c25bd2ef7",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->727292031],
Cell[2336737, 46002, 3360, 78, 109, "Output",ExpressionUUID->"70e8c884-301c-4cac-8d2a-d815c130cefe",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1216166758],
Cell[2340100, 46082, 386, 9, 35, "ExampleDelimiter",ExpressionUUID->"72656881-3910-49f7-b9ab-cc7c39c28b87",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->2076264805],
Cell[2340489, 46093, 286, 5, 33, "ExampleText",ExpressionUUID->"c2723837-fb27-4339-98b5-7d7a7a9b404e",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->197334624],
Cell[2340778, 46100, 890, 28, 63, "Input",ExpressionUUID->"8560912d-3631-46cc-a727-680aa345d9f0",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->888274600],
Cell[2341671, 46130, 3315, 77, 109, "Output",ExpressionUUID->"7955efe5-a658-4354-8090-037aa69ceeb4",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->774308147],
Cell[2344989, 46209, 388, 9, 35, "ExampleDelimiter",ExpressionUUID->"07a0f198-50fd-4f36-a1d6-4d12c9601770",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1320797532],
Cell[2345380, 46220, 802, 24, 41, "ExampleText",ExpressionUUID->"dbbeab13-2b8b-4340-8bed-1318c3917e7a",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->710096095],
Cell[2346185, 46246, 906, 28, 63, "Input",ExpressionUUID->"9191db61-7152-482c-a042-aef0df9b7fa1",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1018442286],
Cell[2347094, 46276, 3362, 78, 109, "Output",ExpressionUUID->"fae13cc8-d8cb-409b-9037-74387ddcdf3c",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->2142358943],
Cell[2350459, 46356, 387, 9, 35, "ExampleDelimiter",ExpressionUUID->"4e904f8e-f11b-4b91-9d2c-26b7609efd4e",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->105661285],
Cell[2350849, 46367, 268, 5, 33, "ExampleText",ExpressionUUID->"61d45922-ddc4-4068-ac1f-c99ac7ae2b45",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->377859079],
Cell[2351120, 46374, 887, 27, 63, "Input",ExpressionUUID->"af628a6e-c8e9-4ebf-86f7-02fd1cd21c5b",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->2027724573],
Cell[2352010, 46403, 3282, 75, 109, "Output",ExpressionUUID->"e1969f25-3d43-40be-925d-be8507334a79",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1655605875],
Cell[2355295, 46480, 267, 5, 33, "ExampleText",ExpressionUUID->"6a09fe56-a0e0-4c8b-afbf-88e8722282a5",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->293298898],
Cell[2355565, 46487, 346, 9, 43, "Input",ExpressionUUID->"6a77f095-1992-4bb9-bac1-6c11323e3e3d",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1291828322],
Cell[2355914, 46498, 3284, 75, 109, "Output",ExpressionUUID->"ee19928f-205b-420d-ba73-133d1e43de14",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->793450985],
Cell[2359201, 46575, 1580, 41, 34, "ExampleSubsection",ExpressionUUID->"41464721-fc60-4031-969c-64e7a15e941f",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->568658042],
Cell[2360784, 46618, 276, 5, 33, "ExampleText",ExpressionUUID->"66451ebb-a18b-4621-9312-8af70dbf0d08",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->2110182641],
Cell[2361063, 46625, 3542, 78, 84, "Input",ExpressionUUID->"780d566f-15b2-4e01-bdd3-9fae0e3b84eb",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->376335830],
Cell[2364608, 46705, 360, 9, 63, "Input",ExpressionUUID->"0166161b-a4c7-40d3-ad47-25e6f6f04823",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1133482744],
Cell[2364971, 46716, 3673, 84, 132, "Output",ExpressionUUID->"17ebb053-1e1b-473e-a350-1e5a4c114bcc",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1279701943],
Cell[2368647, 46802, 273, 5, 33, "ExampleText",ExpressionUUID->"d81cd1cb-0818-49bd-ae10-248fd5ce2557",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->147217082],
Cell[2368923, 46809, 470, 13, 63, "Input",ExpressionUUID->"b2e708a8-5869-44ee-ab6b-aad490e47b63",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1454324516],
Cell[2369396, 46824, 3670, 84, 132, "Output",ExpressionUUID->"93c920b6-4b09-4ff4-899a-c75b430874cc",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->139011346],
Cell[2373069, 46910, 260, 5, 33, "ExampleText",ExpressionUUID->"2a712cba-363f-49e7-9006-07c07059da6e",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1517279418],
Cell[2373332, 46917, 433, 12, 63, "Input",ExpressionUUID->"cdb4d19e-da71-483f-882a-6de4eeedcdcb",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1694353848],
Cell[2373768, 46931, 4407, 99, 132, "Output",ExpressionUUID->"fdd91a08-6d4a-4b33-9bd8-0b9757f191cf",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->2103770286],
Cell[2378178, 47032, 387, 9, 35, "ExampleDelimiter",ExpressionUUID->"1d3352cc-9fdc-48c0-a7d2-96bb0fea9f08",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->638375429],
Cell[2378568, 47043, 285, 5, 33, "ExampleText",ExpressionUUID->"3a60432e-d60a-4ace-b988-0b2cfb7408cc",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->347534791],
Cell[2378856, 47050, 4299, 92, 89, "Input",ExpressionUUID->"3c5eb940-4d9e-4b2d-a8af-6e71cb58d801",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1178917060],
Cell[2383158, 47144, 358, 9, 63, "Input",ExpressionUUID->"09e7fc4d-7496-4dff-84b9-50de88aa0d2f",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->2066998792],
Cell[2383519, 47155, 3857, 92, 132, "Output",ExpressionUUID->"6c13c595-4c3b-4568-8919-7669fe4274ae",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->358396716],
Cell[2387379, 47249, 467, 13, 63, "Input",ExpressionUUID->"cdd0aa25-7ebd-4f78-a9ee-e6f9dd95848d",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->442176480],
Cell[2387849, 47264, 3857, 92, 132, "Output",ExpressionUUID->"b10ca9fa-deb8-4fc1-8140-b00a21d5c7b6",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->645135267],
Cell[2391709, 47358, 890, 25, 63, "Input",ExpressionUUID->"d76de0e7-450f-435e-bd84-e92c4fa0bac9",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1497125294],
Cell[2392602, 47385, 4090, 93, 132, "Output",ExpressionUUID->"aa3256fc-d0a2-4e4a-b87a-874b9a60087e",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->159624581],
Cell[2396695, 47480, 384, 9, 35, "ExampleDelimiter",ExpressionUUID->"e01f327a-29b9-448a-bef7-b37df23cf86e",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->17891657],
Cell[2397082, 47491, 1576, 41, 34, "ExampleSubsection",ExpressionUUID->"bf9b5cfb-fd99-462c-8638-3803bea77921",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1044654864],
Cell[2398661, 47534, 280, 5, 33, "ExampleText",ExpressionUUID->"28b6d5b6-1661-48fb-993c-0403df3cf7a8",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1835485023],
Cell[2398944, 47541, 2001, 59, 131, "Input",ExpressionUUID->"87aafa58-8451-4546-98f8-557763d79e7b",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->394192406],
Cell[2400948, 47602, 6388, 146, 226, "Output",ExpressionUUID->"68f34b36-907e-4973-a2f0-3ea0db5f1238",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->200912670],
Cell[2407339, 47750, 1558, 41, 34, "ExampleSection",ExpressionUUID->"057b0088-6558-4a2d-9dc6-9efea3510888",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->258228157],
Cell[2408900, 47793, 1572, 41, 34, "ExampleSubsection",ExpressionUUID->"b7dc38ef-3cf7-40f6-989a-1aa1a5b8b67b",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->264468543],
Cell[2410475, 47836, 344, 8, 33, "ExampleText",ExpressionUUID->"8495a909-1a4b-4ab5-88f9-86b97f2e2efb",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->397636833],
Cell[2410822, 47846, 2214, 74, 83, "Input",ExpressionUUID->"88f7883f-b6f6-4255-9ede-08731e2120bc",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->65471712],
Cell[2413039, 47922, 276, 5, 33, "ExampleText",ExpressionUUID->"a0b9ea67-05fd-421b-ae98-f3a31520d08e",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->291788353],
Cell[2413318, 47929, 1185, 37, 67, "Input",ExpressionUUID->"4ce94c34-9b0f-426e-b4a4-c4ad83ef21b4",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->86474325],
Cell[2414506, 47968, 6628, 180, 219, "Output",ExpressionUUID->"24747a31-ea39-4956-a5c0-283599a7bd06",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->401954372],
Cell[2421137, 48150, 282, 5, 33, "ExampleText",ExpressionUUID->"dfb42d36-1bd6-4fb1-a0e1-9e5ae2b422f9",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->171149838],
Cell[2421422, 48157, 568, 16, 63, "Input",ExpressionUUID->"aea2e378-d7c2-49c8-9ce5-dac5c8ee4d16",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->419547885],
Cell[2421993, 48175, 6909, 186, 221, "Output",ExpressionUUID->"c4c59203-7220-461b-a377-1a28d19667fb",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1811060389],
Cell[2428905, 48363, 320, 7, 33, "ExampleText",ExpressionUUID->"a491c0d6-e03a-403f-bc70-66bb07da109d",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->146513102],
Cell[2429228, 48372, 1740, 49, 97, "Input",ExpressionUUID->"68e07cae-0aef-4d79-961c-d2ae115c74e4",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->197633641],
Cell[2430971, 48423, 467, 12, 63, "Input",ExpressionUUID->"922093a8-548f-45df-90da-f70501fcf687",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->327235981],
Cell[2431441, 48437, 7567, 133, 286, "Output",ExpressionUUID->"5e0290b4-02a3-48ba-85f3-e5260760a1f4",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellTags->"RasterizedOutput",
 CellID->1523568013],
Cell[2439011, 48572, 1576, 41, 34, "ExampleSubsection",ExpressionUUID->"732573c7-3008-484e-8616-3b014a068dec",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->48480253],
Cell[2440590, 48615, 302, 6, 33, "ExampleText",ExpressionUUID->"046bbd2c-945b-4fd7-80ec-9de94c712c85",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->918396903],
Cell[2440895, 48623, 713, 22, 69, "Input",ExpressionUUID->"ce973efd-b0a4-4fe9-800c-2c8feec117e0",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->439758476],
Cell[2441611, 48647, 858, 27, 63, "Input",ExpressionUUID->"091ed9a6-af7c-4295-8cac-c279404183fe",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->925370588],
Cell[2442472, 48676, 4148, 101, 136, "Output",ExpressionUUID->"4d374f51-45b4-496b-a477-b59d8a7e2fe7",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->418662081],
Cell[2446623, 48779, 299, 6, 33, "ExampleText",ExpressionUUID->"c97df1c2-59c8-462c-9aa2-cadf87c4d290",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->450865748],
Cell[2446925, 48787, 1261, 39, 98, "Input",ExpressionUUID->"467d692b-062c-49d4-a8e0-d487ec04ab80",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->88888377],
Cell[2448189, 48828, 829, 24, 66, "Input",ExpressionUUID->"6307d0ed-d0be-472b-956a-fab074b57214",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->115780778],
Cell[2449021, 48854, 6379, 159, 182, "Output",ExpressionUUID->"25768071-fb70-492c-8649-945de3b96762",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1297167795],
Cell[2455403, 49015, 269, 5, 33, "ExampleText",ExpressionUUID->"f3ca5365-b744-4348-9e7a-bb5f6350ada6",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->37693977],
Cell[2455675, 49022, 368, 9, 62, "Input",ExpressionUUID->"4d560e04-ed8e-4818-91c4-75614850715f",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->552253779],
Cell[2456046, 49033, 565, 17, 91, "Output",ExpressionUUID->"155eba71-d426-49d0-b3d7-61612547c476",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->245146221],
Cell[2456614, 49052, 366, 9, 62, "Input",ExpressionUUID->"f4cd2df7-4ba8-4102-8793-5b458169a76a",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->8307132],
Cell[2456983, 49063, 1046, 31, 102, "Output",ExpressionUUID->"47257465-cbf9-4407-8619-5192f9379505",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1298901401],
Cell[2458032, 49096, 350, 9, 63, "Input",ExpressionUUID->"fcd3ccfa-d09a-47d2-a882-c3ed9de6c9fe",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->259733622],
Cell[2458385, 49107, 317, 8, 50, "Output",ExpressionUUID->"d962f51d-1522-4a62-9d4e-16c15288db98",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1464574852],
Cell[2458705, 49117, 387, 9, 35, "ExampleDelimiter",ExpressionUUID->"822e9f4f-2e1e-4cb7-bba5-bf1dfde04a2a",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->172558114],
Cell[2459095, 49128, 298, 5, 33, "ExampleText",ExpressionUUID->"95af268b-1816-4e36-97a1-17cc549057ea",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->107757680],
Cell[2459396, 49135, 13096, 236, 214, "Picture",ExpressionUUID->"41486864-e2ce-4322-9a64-04d62cfdd09f",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1897036801],
Cell[2472495, 49373, 2098, 67, 76, "Input",ExpressionUUID->"d4ea09dc-9426-45f3-8dba-4b5de63e42a1",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->365254080],
Cell[2474596, 49442, 317, 7, 33, "ExampleText",ExpressionUUID->"4d33f731-07b2-4163-9586-e2fdf07fcb62",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->60159605],
Cell[2474916, 49451, 1029, 29, 67, "Input",ExpressionUUID->"ffd27cc7-fe5d-4d27-930b-54ae0603c2aa",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->19927795],
Cell[2475948, 49482, 8376, 209, 267, "Output",ExpressionUUID->"82877899-d3de-41e2-b3e1-8dc4e0692cce",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1293182556],
Cell[2484327, 49693, 1576, 41, 34, "ExampleSubsection",ExpressionUUID->"c40a3ffb-fdbf-48d1-b6f1-ab7f189bb250",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->74149643],
Cell[2485906, 49736, 280, 5, 33, "ExampleText",ExpressionUUID->"d281c0e1-c3be-4d69-9cb5-63ea615d08ea",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->937682655],
Cell[2486189, 49743, 2255, 67, 108, "Input",ExpressionUUID->"01cc003e-2cda-4f45-8487-c76bb0786d30",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->342301562],
Cell[2488447, 49812, 5593, 133, 230, "Output",ExpressionUUID->"1e36e475-5b29-45df-a05e-55850bf2a34c",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->2004443316],
Cell[2494043, 49947, 387, 9, 35, "ExampleDelimiter",ExpressionUUID->"9860bc4e-7c79-4573-80f6-cec7956d8d1c",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->132740086],
Cell[2494433, 49958, 319, 7, 33, "ExampleText",ExpressionUUID->"9e2525fb-4190-421f-94ec-54da82e43953",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->146416294],
Cell[2494755, 49967, 1144, 36, 63, "Input",ExpressionUUID->"2c784ffb-393f-40ee-9ec0-f3292abd5122",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->226853304],
Cell[2495902, 50005, 4124, 100, 135, "Output",ExpressionUUID->"085b9bb4-d97a-44a1-8999-1d80c4d4f788",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->526119804],
Cell[2500029, 50107, 387, 9, 35, "ExampleDelimiter",ExpressionUUID->"43c6bd75-2a07-4a95-9d47-3024086bc7f6",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->605128462],
Cell[2500419, 50118, 305, 6, 33, "ExampleText",ExpressionUUID->"b2cbcf03-28f3-482e-9cdb-f2d219e5f60e",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->602204204],
Cell[2500727, 50126, 1749, 54, 45, "Input",ExpressionUUID->"3d7330d0-93c8-4663-8dcb-e118a03a0015",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->743195659],
Cell[2502479, 50182, 797, 23, 63, "Input",ExpressionUUID->"3982dd7f-76f9-4007-bab2-7f2da7458bbb",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->763010187],
Cell[2503279, 50207, 5815, 141, 230, "Output",ExpressionUUID->"0305acb0-8f9a-4615-85f2-57d5ce4a5e21",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->679627351],
Cell[2509097, 50350, 387, 9, 35, "ExampleDelimiter",ExpressionUUID->"22875434-2557-4c2b-9606-06e1f2ac0820",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->166941181],
Cell[2509487, 50361, 347, 8, 33, "ExampleText",ExpressionUUID->"f773d9c2-99e8-451b-b68a-2f9765167135",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->555800297],
Cell[2509837, 50371, 1237, 37, 64, "Input",ExpressionUUID->"9efc0c40-ac23-4fa5-9ed5-0ee4b75900f5",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->674081182],
Cell[2511077, 50410, 4285, 104, 135, "Output",ExpressionUUID->"738c5dfc-dc21-44e9-9b72-cd193d2a88a5",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1099810733],
Cell[2515365, 50516, 1573, 41, 34, "ExampleSection",ExpressionUUID->"276bfb20-d798-4a21-823c-61aba153f5b0",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->2123667759],
Cell[2516941, 50559, 387, 9, 35, "ExampleDelimiter",ExpressionUUID->"89673e7c-af9e-44ce-ab79-e7f7a6a53396",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->197152038],
Cell[2517331, 50570, 300, 6, 33, "ExampleText",ExpressionUUID->"a31e7b98-e8b4-4a8e-b041-09ea903cdaa2",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->617935138],
Cell[2517634, 50578, 1346, 42, 109, "Input",ExpressionUUID->"6cceb454-0f50-4990-85d3-be19dcdff88b",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->404947474],
Cell[2518983, 50622, 6969, 154, 109, "Output",ExpressionUUID->"7441c68c-3bb7-49ff-9039-7cb42858ea59",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1468366160],
Cell[2525955, 50778, 312, 7, 33, "ExampleText",ExpressionUUID->"546af5a0-5982-4cda-888c-1bff6c364bc5",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->868307797],
Cell[2526270, 50787, 393, 10, 62, "Input",ExpressionUUID->"deb53bc5-ced1-4cc6-9f03-4bde6636026f",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1188140101],
Cell[2526666, 50799, 7352, 155, 93, "Output",ExpressionUUID->"5f5dee30-05bc-4715-989f-4c85992d293f",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->2095463443],
Cell[2534021, 50956, 388, 9, 35, "ExampleDelimiter",ExpressionUUID->"18f103aa-7fdf-4017-b2a1-33910c0807c4",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1910698109],
Cell[2534412, 50967, 324, 7, 33, "ExampleText",ExpressionUUID->"4bb97a6c-0386-457e-bd7b-f41ca452a50d",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1590533474],
Cell[2534739, 50976, 4954, 111, 98, "Input",ExpressionUUID->"31458bf1-115d-4b68-b7ac-69374660326a",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1409860290],
Cell[2539696, 51089, 777, 22, 90, "Input",ExpressionUUID->"e6650709-138f-4e0d-a352-a8af05962260",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->365775997],
Cell[2540476, 51113, 8631, 208, 148, "Output",ExpressionUUID->"54d08ef6-7b71-4977-afac-3158233f831a",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1869759348],
Cell[2549110, 51323, 278, 5, 33, "ExampleText",ExpressionUUID->"2c1996b7-6046-4e56-a141-a23736c95ac3",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->270827651],
Cell[2549391, 51330, 719, 22, 65, "Input",ExpressionUUID->"39fe4c0c-fcbd-46a3-980a-0b89705b88d3",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->843952863],
Cell[2550113, 51354, 8631, 208, 148, "Output",ExpressionUUID->"c0417d2b-7995-41ad-9ffe-5701a43610d9",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->2138740476],
Cell[2558747, 51564, 388, 9, 35, "ExampleDelimiter",ExpressionUUID->"8270aaa9-592d-4edb-8612-5212115ccc11",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1690321792],
Cell[2559138, 51575, 293, 5, 33, "ExampleText",ExpressionUUID->"8723d8bd-caab-4a45-85d5-f250076c6efd",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->177191981],
Cell[2559434, 51582, 1380, 43, 109, "Input",ExpressionUUID->"fea3e0d6-904a-4c5e-8635-6d77fd590633",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1653289925],
Cell[2560817, 51627, 6935, 152, 109, "Output",ExpressionUUID->"785905e6-226f-4c99-a778-5ae064c31dba",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1229896646],
Cell[2567755, 51781, 491, 13, 63, "Input",ExpressionUUID->"45217328-1024-4a23-a864-803612ca20c5",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->448737276],
Cell[2568249, 51796, 896, 21, 50, "Output",ExpressionUUID->"937470e7-ec01-442f-bf6b-eae5a050cccf",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1342826947],
Cell[2569148, 51819, 386, 9, 35, "ExampleDelimiter",ExpressionUUID->"bc91e332-17de-4909-8595-ab39919648b7",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1825210859],
Cell[2569537, 51830, 338, 8, 33, "ExampleText",ExpressionUUID->"bd5c6aa7-084f-4587-a9ea-4ba0574dc57e",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->253626326],
Cell[2569878, 51840, 902, 28, 63, "Input",ExpressionUUID->"dafeefbc-4b9e-43a9-b98b-3ee7032cd14b",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->2090105434],
Cell[2570783, 51870, 4493, 113, 132, "Output",ExpressionUUID->"a46aab77-5f7a-432d-bb31-ae3b2b4952a2",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->986851906],
Cell[2575279, 51985, 483, 14, 63, "Input",ExpressionUUID->"4b6b2e12-0993-4cca-9c0d-921e988a99c3",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->544686488],
Cell[2575765, 52001, 1413, 42, 118, "Output",ExpressionUUID->"5d4706aa-29cc-4fcb-a911-ef13b509d759",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1003778361],
Cell[2577181, 52045, 685, 20, 63, "Input",ExpressionUUID->"d4ac6d07-29e7-444f-99f6-4076ce2c981f",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->42217064],
Cell[2577869, 52067, 504, 14, 50, "Output",ExpressionUUID->"9cd8fc2b-1c6e-49af-9fa3-ff2bc91af877",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->2018866142],
Cell[2578376, 52083, 388, 9, 35, "ExampleDelimiter",ExpressionUUID->"fe7f5bd7-7b9b-42de-8e3b-adeef06dccd6",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1662493465],
Cell[2578767, 52094, 266, 5, 33, "ExampleText",ExpressionUUID->"c109cf1d-5ee8-4963-812b-b7de8c601b12",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1273759421],
Cell[2579036, 52101, 892, 26, 113, "Input",ExpressionUUID->"906265a8-e034-4423-9e42-e0162e1b3c3d",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1957595451],
Cell[2579931, 52129, 3582, 82, 117, "Output",ExpressionUUID->"48e00f1c-48dd-414f-af7c-4c90086fd25f",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->841625994],
Cell[2583516, 52213, 275, 6, 50, "Output",ExpressionUUID->"570d85cb-9ac7-434c-980e-d0cdba21e96b",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1880782016],
Cell[2583794, 52221, 388, 9, 35, "ExampleDelimiter",ExpressionUUID->"65183680-ede8-4001-a87a-3bf3d3516425",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->2032382482],
Cell[2584185, 52232, 268, 5, 33, "ExampleText",ExpressionUUID->"dfb0f0e9-85ac-4836-9982-371772bc5661",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->377485792],
Cell[2584456, 52239, 859, 24, 113, "Input",ExpressionUUID->"e8949414-4afe-45c2-a85a-c47659fa9cb5",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->737012906],
Cell[2585318, 52265, 3558, 81, 117, "Output",ExpressionUUID->"ff530bce-6e65-4ca3-8620-fc289f562cb6",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1491542719],
Cell[2588879, 52348, 273, 6, 50, "Output",ExpressionUUID->"9eead547-d115-4f98-a796-3d3bbfc3daf5",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->781866802],
Cell[2589155, 52356, 386, 9, 35, "ExampleDelimiter",ExpressionUUID->"0b37b156-de94-46c2-9795-c15933b44df2",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1215872446],
Cell[2589544, 52367, 293, 5, 33, "ExampleText",ExpressionUUID->"b7ec7528-afea-439a-845b-31a7c16114c8",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->644304660],
Cell[2589840, 52374, 1015, 30, 113, "Input",ExpressionUUID->"4bb18385-3912-497d-ac71-fa3b93442593",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->661195481],
Cell[2590858, 52406, 3559, 81, 117, "Output",ExpressionUUID->"0af014f0-ff8b-42f3-baf9-9a6fd1b54dda",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->382905221],
Cell[2594420, 52489, 275, 6, 50, "Output",ExpressionUUID->"efcd8cee-a49b-4df3-a8c5-c1fac1f70ce3",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1627042935],
Cell[2594698, 52497, 388, 9, 35, "ExampleDelimiter",ExpressionUUID->"2f364320-4811-40f6-beee-c0d06af05c0f",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1861298717],
Cell[2595089, 52508, 298, 5, 33, "ExampleText",ExpressionUUID->"aeaa3e29-1b83-4084-b911-891dc70b894a",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->453250770],
Cell[2595390, 52515, 1018, 30, 113, "Input",ExpressionUUID->"d3d3b506-dcbd-45c4-aec1-4b6b7a07c108",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1388128175],
Cell[2596411, 52547, 3558, 81, 117, "Output",ExpressionUUID->"4dca77d9-05c0-4093-9af7-2da7dc00a77c",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1801331294],
Cell[2599972, 52630, 274, 6, 50, "Output",ExpressionUUID->"0f332e8a-4eeb-469f-bb14-fb6f84cf012a",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1898086499],
Cell[2600249, 52638, 386, 9, 35, "ExampleDelimiter",ExpressionUUID->"a80d0941-c738-4eb5-bf5c-5f0f6d33966e",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1973276483],
Cell[2600638, 52649, 263, 5, 33, "ExampleText",ExpressionUUID->"da87e154-ec17-41ac-b7ee-4eece99efc7e",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1267889160],
Cell[2600904, 52656, 1067, 32, 113, "Input",ExpressionUUID->"d62ea117-cdd4-4773-9c18-8970c1c7abf8",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->2080366586],
Cell[2601974, 52690, 3844, 90, 146, "Output",ExpressionUUID->"80163e13-adf4-4b39-bd8b-7e3a9b33ca8d",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->270212508],
Cell[2605821, 52782, 275, 6, 50, "Output",ExpressionUUID->"59ea33eb-95e0-4ef9-a428-e9c7c7b10c87",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1681192198],
Cell[2606099, 52790, 388, 9, 35, "ExampleDelimiter",ExpressionUUID->"b7bb5479-cb33-453c-bd33-cb98819bc7f5",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1070115370],
Cell[2606490, 52801, 266, 5, 33, "ExampleText",ExpressionUUID->"830cbdf0-d972-4d02-aece-ae7f772d52f7",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->253479965],
Cell[2606759, 52808, 1042, 31, 113, "Input",ExpressionUUID->"b5dc4254-f948-4b78-b01f-779705e56b9e",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1777699754],
Cell[2607804, 52841, 3824, 89, 145, "Output",ExpressionUUID->"86b3706a-ec45-4fa6-9f62-7c1161a5f287",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1354928207],
Cell[2611631, 52932, 273, 6, 50, "Output",ExpressionUUID->"4fd186d3-e10c-4a62-8f87-0f111785ab40",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->361782261],
Cell[2611907, 52940, 385, 9, 35, "ExampleDelimiter",ExpressionUUID->"d11d9bf4-091a-4079-9e86-b4898f47a924",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->831508477],
Cell[2612295, 52951, 293, 5, 33, "ExampleText",ExpressionUUID->"816d15ea-829b-49d8-b0ec-d74181d34c59",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1486881910],
Cell[2612591, 52958, 1193, 36, 113, "Input",ExpressionUUID->"d91e2ce7-d6df-482b-a29b-449b459995ce",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1904544878],
Cell[2613787, 52996, 3821, 89, 146, "Output",ExpressionUUID->"e3c8c350-2b12-4589-941b-53c3a9e4e03d",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->948255970],
Cell[2617611, 53087, 274, 6, 50, "Output",ExpressionUUID->"6638c65f-43ba-445a-8165-05f6b1030b90",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->861943403],
Cell[2617888, 53095, 387, 9, 35, "ExampleDelimiter",ExpressionUUID->"b9b98358-92f4-4ca3-8478-29841bab5006",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->378150932],
Cell[2618278, 53106, 297, 5, 33, "ExampleText",ExpressionUUID->"9ea57b9b-4626-4676-9f59-98a9a73eb4ff",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1178602651],
Cell[2618578, 53113, 1195, 36, 113, "Input",ExpressionUUID->"06a64f05-2dc0-4c61-a037-825c92ad9758",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1697096009],
Cell[2619776, 53151, 3824, 89, 146, "Output",ExpressionUUID->"0bf597ef-fc84-4cdb-908f-08bb6795151b",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1905575206],
Cell[2623603, 53242, 276, 6, 50, "Output",ExpressionUUID->"53da4ff3-7482-4393-b829-5d384fb47d0a",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1578859531],
Cell[2623882, 53250, 386, 9, 35, "ExampleDelimiter",ExpressionUUID->"f0dea1cc-6517-47d5-814a-7c88d3bff897",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->45179716],
Cell[2624271, 53261, 288, 5, 33, "ExampleText",ExpressionUUID->"37f0aa94-66cb-44f1-a093-7dce600e81a3",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1760938087],
Cell[2624562, 53268, 599, 17, 63, "Input",ExpressionUUID->"acf5f81c-14a5-4bce-bed0-cde107957532",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->726167026],
Cell[2625164, 53287, 3219, 70, 92, "Output",ExpressionUUID->"d35091d1-9028-42b8-a99b-8b98a3a6ca13",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1584195185],
Cell[2628386, 53359, 387, 9, 35, "ExampleDelimiter",ExpressionUUID->"6a39899f-5eb2-4c17-b22c-e216ff6bcf15",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->298238997],
Cell[2628776, 53370, 318, 7, 33, "ExampleText",ExpressionUUID->"baac78dd-3c52-4cc0-a313-febec1e160f5",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->772088093],
Cell[2629097, 53379, 3534, 78, 106, "Input",ExpressionUUID->"bc448d9c-bcb8-4b20-9b3b-9c47ff1e389c",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->594712846],
Cell[2632634, 53459, 4696, 107, 155, "Output",ExpressionUUID->"5f347280-30d4-4917-8837-ea2e1589d548",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->1066218789]
}, Closed]]
}
]
*)

